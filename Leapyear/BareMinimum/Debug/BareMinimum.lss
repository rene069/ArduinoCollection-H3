
BareMinimum.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000de  00800200  0000a048  0000a0dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000a048  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000283  008002de  008002de  0000a1ba  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000a1ba  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000a1ec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000011b8  00000000  00000000  0000a22c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0002107d  00000000  00000000  0000b3e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00004869  00000000  00000000  0002c461  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000c317  00000000  00000000  00030cca  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00004c34  00000000  00000000  0003cfe4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00007330  00000000  00000000  00041c18  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000efe9  00000000  00000000  00048f48  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00001230  00000000  00000000  00057f31  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	8a c7       	rjmp	.+3860   	; 0xf16 <__dtors_end>
       2:	00 00       	nop
       4:	b9 c7       	rjmp	.+3954   	; 0xf78 <__bad_interrupt>
       6:	00 00       	nop
       8:	b7 c7       	rjmp	.+3950   	; 0xf78 <__bad_interrupt>
       a:	00 00       	nop
       c:	b5 c7       	rjmp	.+3946   	; 0xf78 <__bad_interrupt>
       e:	00 00       	nop
      10:	b3 c7       	rjmp	.+3942   	; 0xf78 <__bad_interrupt>
      12:	00 00       	nop
      14:	b1 c7       	rjmp	.+3938   	; 0xf78 <__bad_interrupt>
      16:	00 00       	nop
      18:	af c7       	rjmp	.+3934   	; 0xf78 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	ad c7       	rjmp	.+3930   	; 0xf78 <__bad_interrupt>
      1e:	00 00       	nop
      20:	ab c7       	rjmp	.+3926   	; 0xf78 <__bad_interrupt>
      22:	00 00       	nop
      24:	a9 c7       	rjmp	.+3922   	; 0xf78 <__bad_interrupt>
      26:	00 00       	nop
      28:	a7 c7       	rjmp	.+3918   	; 0xf78 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	a5 c7       	rjmp	.+3914   	; 0xf78 <__bad_interrupt>
      2e:	00 00       	nop
      30:	a3 c7       	rjmp	.+3910   	; 0xf78 <__bad_interrupt>
      32:	00 00       	nop
      34:	a1 c7       	rjmp	.+3906   	; 0xf78 <__bad_interrupt>
      36:	00 00       	nop
      38:	9f c7       	rjmp	.+3902   	; 0xf78 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	9d c7       	rjmp	.+3898   	; 0xf78 <__bad_interrupt>
      3e:	00 00       	nop
      40:	9b c7       	rjmp	.+3894   	; 0xf78 <__bad_interrupt>
      42:	00 00       	nop
      44:	0c 94 31 42 	jmp	0x8462	; 0x8462 <__vector_17>
      48:	97 c7       	rjmp	.+3886   	; 0xf78 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	95 c7       	rjmp	.+3882   	; 0xf78 <__bad_interrupt>
      4e:	00 00       	nop
      50:	93 c7       	rjmp	.+3878   	; 0xf78 <__bad_interrupt>
      52:	00 00       	nop
      54:	91 c7       	rjmp	.+3874   	; 0xf78 <__bad_interrupt>
      56:	00 00       	nop
      58:	8f c7       	rjmp	.+3870   	; 0xf78 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	0c 94 38 4a 	jmp	0x9470	; 0x9470 <__vector_23>
      60:	8b c7       	rjmp	.+3862   	; 0xf78 <__bad_interrupt>
      62:	00 00       	nop
      64:	0c 94 47 48 	jmp	0x908e	; 0x908e <__vector_25>
      68:	0c 94 7d 48 	jmp	0x90fa	; 0x90fa <__vector_26>
      6c:	85 c7       	rjmp	.+3850   	; 0xf78 <__bad_interrupt>
      6e:	00 00       	nop
      70:	83 c7       	rjmp	.+3846   	; 0xf78 <__bad_interrupt>
      72:	00 00       	nop
      74:	81 c7       	rjmp	.+3842   	; 0xf78 <__bad_interrupt>
      76:	00 00       	nop
      78:	7f c7       	rjmp	.+3838   	; 0xf78 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	7d c7       	rjmp	.+3834   	; 0xf78 <__bad_interrupt>
      7e:	00 00       	nop
      80:	0c 94 68 42 	jmp	0x84d0	; 0x84d0 <__vector_32>
      84:	79 c7       	rjmp	.+3826   	; 0xf78 <__bad_interrupt>
      86:	00 00       	nop
      88:	77 c7       	rjmp	.+3822   	; 0xf78 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	75 c7       	rjmp	.+3818   	; 0xf78 <__bad_interrupt>
      8e:	00 00       	nop
      90:	73 c7       	rjmp	.+3814   	; 0xf78 <__bad_interrupt>
      92:	00 00       	nop
      94:	71 c7       	rjmp	.+3810   	; 0xf78 <__bad_interrupt>
      96:	00 00       	nop
      98:	6f c7       	rjmp	.+3806   	; 0xf78 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	0c 94 a7 1e 	jmp	0x3d4e	; 0x3d4e <__vector_39>
      a0:	6b c7       	rjmp	.+3798   	; 0xf78 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	69 c7       	rjmp	.+3794   	; 0xf78 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	0c 94 9f 42 	jmp	0x853e	; 0x853e <__vector_42>
      ac:	65 c7       	rjmp	.+3786   	; 0xf78 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	63 c7       	rjmp	.+3782   	; 0xf78 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	61 c7       	rjmp	.+3778   	; 0xf78 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	5f c7       	rjmp	.+3774   	; 0xf78 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	0c 94 d6 42 	jmp	0x85ac	; 0x85ac <__vector_47>
      c0:	5b c7       	rjmp	.+3766   	; 0xf78 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	59 c7       	rjmp	.+3762   	; 0xf78 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	57 c7       	rjmp	.+3758   	; 0xf78 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	55 c7       	rjmp	.+3754   	; 0xf78 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	53 c7       	rjmp	.+3750   	; 0xf78 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	51 c7       	rjmp	.+3746   	; 0xf78 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	4f c7       	rjmp	.+3742   	; 0xf78 <__bad_interrupt>
      da:	00 00       	nop
      dc:	4d c7       	rjmp	.+3738   	; 0xf78 <__bad_interrupt>
      de:	00 00       	nop
      e0:	4b c7       	rjmp	.+3734   	; 0xf78 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	cf 15       	cp	r28, r15
      e6:	f3 15       	cp	r31, r3
      e8:	f3 15       	cp	r31, r3
      ea:	f0 15       	cp	r31, r0
      ec:	f3 15       	cp	r31, r3
      ee:	cc 15       	cp	r28, r12
      f0:	f3 15       	cp	r31, r3
      f2:	f3 15       	cp	r31, r3
      f4:	f3 15       	cp	r31, r3
      f6:	b5 15       	cp	r27, r5
      f8:	f3 15       	cp	r31, r3
      fa:	f3 15       	cp	r31, r3
      fc:	db 15       	cp	r29, r11
      fe:	ed 15       	cp	r30, r13
     100:	ea 15       	cp	r30, r10
     102:	f3 15       	cp	r31, r3
     104:	f3 15       	cp	r31, r3
     106:	f3 15       	cp	r31, r3
     108:	e7 15       	cp	r30, r7
     10a:	d7 1f       	adc	r29, r23
     10c:	dc 1f       	adc	r29, r28
     10e:	dc 1f       	adc	r29, r28
     110:	dc 1f       	adc	r29, r28
     112:	dc 1f       	adc	r29, r28
     114:	dc 1f       	adc	r29, r28
     116:	dc 1f       	adc	r29, r28
     118:	dc 1f       	adc	r29, r28
     11a:	dd 1e       	adc	r13, r29
     11c:	dc 1f       	adc	r29, r28
     11e:	dc 1f       	adc	r29, r28
     120:	dc 1f       	adc	r29, r28
     122:	dc 1f       	adc	r29, r28
     124:	dc 1f       	adc	r29, r28
     126:	dc 1f       	adc	r29, r28
     128:	dc 1f       	adc	r29, r28
     12a:	dd 1e       	adc	r13, r29
     12c:	dc 1f       	adc	r29, r28
     12e:	dc 1f       	adc	r29, r28
     130:	dc 1f       	adc	r29, r28
     132:	dc 1f       	adc	r29, r28
     134:	dc 1f       	adc	r29, r28
     136:	dc 1f       	adc	r29, r28
     138:	dc 1f       	adc	r29, r28
     13a:	e6 1e       	adc	r14, r22
     13c:	dc 1f       	adc	r29, r28
     13e:	dc 1f       	adc	r29, r28
     140:	dc 1f       	adc	r29, r28
     142:	dc 1f       	adc	r29, r28
     144:	dc 1f       	adc	r29, r28
     146:	dc 1f       	adc	r29, r28
     148:	dc 1f       	adc	r29, r28
     14a:	10 1f       	adc	r17, r16
     14c:	dc 1f       	adc	r29, r28
     14e:	dc 1f       	adc	r29, r28
     150:	dc 1f       	adc	r29, r28
     152:	dc 1f       	adc	r29, r28
     154:	dc 1f       	adc	r29, r28
     156:	dc 1f       	adc	r29, r28
     158:	dc 1f       	adc	r29, r28
     15a:	e6 1e       	adc	r14, r22
     15c:	dc 1f       	adc	r29, r28
     15e:	dc 1f       	adc	r29, r28
     160:	dc 1f       	adc	r29, r28
     162:	dc 1f       	adc	r29, r28
     164:	dc 1f       	adc	r29, r28
     166:	dc 1f       	adc	r29, r28
     168:	dc 1f       	adc	r29, r28
     16a:	15 1f       	adc	r17, r21
     16c:	dc 1f       	adc	r29, r28
     16e:	dc 1f       	adc	r29, r28
     170:	dc 1f       	adc	r29, r28
     172:	dc 1f       	adc	r29, r28
     174:	dc 1f       	adc	r29, r28
     176:	dc 1f       	adc	r29, r28
     178:	dc 1f       	adc	r29, r28
     17a:	1a 1f       	adc	r17, r26
     17c:	dc 1f       	adc	r29, r28
     17e:	dc 1f       	adc	r29, r28
     180:	dc 1f       	adc	r29, r28
     182:	dc 1f       	adc	r29, r28
     184:	dc 1f       	adc	r29, r28
     186:	dc 1f       	adc	r29, r28
     188:	dc 1f       	adc	r29, r28
     18a:	2f 1f       	adc	r18, r31
     18c:	dc 1f       	adc	r29, r28
     18e:	dc 1f       	adc	r29, r28
     190:	dc 1f       	adc	r29, r28
     192:	dc 1f       	adc	r29, r28
     194:	dc 1f       	adc	r29, r28
     196:	dc 1f       	adc	r29, r28
     198:	dc 1f       	adc	r29, r28
     19a:	5c 1f       	adc	r21, r28
     19c:	dc 1f       	adc	r29, r28
     19e:	dc 1f       	adc	r29, r28
     1a0:	dc 1f       	adc	r29, r28
     1a2:	dc 1f       	adc	r29, r28
     1a4:	dc 1f       	adc	r29, r28
     1a6:	dc 1f       	adc	r29, r28
     1a8:	dc 1f       	adc	r29, r28
     1aa:	1f 1f       	adc	r17, r31
     1ac:	dc 1f       	adc	r29, r28
     1ae:	dc 1f       	adc	r29, r28
     1b0:	dc 1f       	adc	r29, r28
     1b2:	dc 1f       	adc	r29, r28
     1b4:	dc 1f       	adc	r29, r28
     1b6:	dc 1f       	adc	r29, r28
     1b8:	dc 1f       	adc	r29, r28
     1ba:	3b 1f       	adc	r19, r27
     1bc:	dc 1f       	adc	r29, r28
     1be:	dc 1f       	adc	r29, r28
     1c0:	dc 1f       	adc	r29, r28
     1c2:	dc 1f       	adc	r29, r28
     1c4:	dc 1f       	adc	r29, r28
     1c6:	dc 1f       	adc	r29, r28
     1c8:	dc 1f       	adc	r29, r28
     1ca:	5e 1f       	adc	r21, r30
     1cc:	dc 1f       	adc	r29, r28
     1ce:	dc 1f       	adc	r29, r28
     1d0:	dc 1f       	adc	r29, r28
     1d2:	dc 1f       	adc	r29, r28
     1d4:	dc 1f       	adc	r29, r28
     1d6:	dc 1f       	adc	r29, r28
     1d8:	dc 1f       	adc	r29, r28
     1da:	5e 1f       	adc	r21, r30
     1dc:	dc 1f       	adc	r29, r28
     1de:	dc 1f       	adc	r29, r28
     1e0:	dc 1f       	adc	r29, r28
     1e2:	dc 1f       	adc	r29, r28
     1e4:	dc 1f       	adc	r29, r28
     1e6:	dc 1f       	adc	r29, r28
     1e8:	dc 1f       	adc	r29, r28
     1ea:	5e 1f       	adc	r21, r30
     1ec:	dc 1f       	adc	r29, r28
     1ee:	dc 1f       	adc	r29, r28
     1f0:	dc 1f       	adc	r29, r28
     1f2:	dc 1f       	adc	r29, r28
     1f4:	dc 1f       	adc	r29, r28
     1f6:	dc 1f       	adc	r29, r28
     1f8:	dc 1f       	adc	r29, r28
     1fa:	5e 1f       	adc	r21, r30
     1fc:	dc 1f       	adc	r29, r28
     1fe:	dc 1f       	adc	r29, r28
     200:	dc 1f       	adc	r29, r28
     202:	dc 1f       	adc	r29, r28
     204:	dc 1f       	adc	r29, r28
     206:	dc 1f       	adc	r29, r28
     208:	dc 1f       	adc	r29, r28
     20a:	66 1f       	adc	r22, r22
     20c:	dc 1f       	adc	r29, r28
     20e:	dc 1f       	adc	r29, r28
     210:	dc 1f       	adc	r29, r28
     212:	dc 1f       	adc	r29, r28
     214:	dc 1f       	adc	r29, r28
     216:	dc 1f       	adc	r29, r28
     218:	dc 1f       	adc	r29, r28
     21a:	9d 1f       	adc	r25, r29
     21c:	dc 1f       	adc	r29, r28
     21e:	dc 1f       	adc	r29, r28
     220:	dc 1f       	adc	r29, r28
     222:	dc 1f       	adc	r29, r28
     224:	dc 1f       	adc	r29, r28
     226:	dc 1f       	adc	r29, r28
     228:	dc 1f       	adc	r29, r28
     22a:	66 1f       	adc	r22, r22
     22c:	dc 1f       	adc	r29, r28
     22e:	dc 1f       	adc	r29, r28
     230:	dc 1f       	adc	r29, r28
     232:	dc 1f       	adc	r29, r28
     234:	dc 1f       	adc	r29, r28
     236:	dc 1f       	adc	r29, r28
     238:	dc 1f       	adc	r29, r28
     23a:	9d 1f       	adc	r25, r29
     23c:	dc 1f       	adc	r29, r28
     23e:	dc 1f       	adc	r29, r28
     240:	dc 1f       	adc	r29, r28
     242:	dc 1f       	adc	r29, r28
     244:	dc 1f       	adc	r29, r28
     246:	dc 1f       	adc	r29, r28
     248:	dc 1f       	adc	r29, r28
     24a:	80 1f       	adc	r24, r16
     24c:	dc 1f       	adc	r29, r28
     24e:	dc 1f       	adc	r29, r28
     250:	dc 1f       	adc	r29, r28
     252:	dc 1f       	adc	r29, r28
     254:	dc 1f       	adc	r29, r28
     256:	dc 1f       	adc	r29, r28
     258:	dc 1f       	adc	r29, r28
     25a:	a0 1f       	adc	r26, r16
     25c:	dc 1f       	adc	r29, r28
     25e:	dc 1f       	adc	r29, r28
     260:	dc 1f       	adc	r29, r28
     262:	dc 1f       	adc	r29, r28
     264:	dc 1f       	adc	r29, r28
     266:	dc 1f       	adc	r29, r28
     268:	dc 1f       	adc	r29, r28
     26a:	a0 1f       	adc	r26, r16
     26c:	dc 1f       	adc	r29, r28
     26e:	dc 1f       	adc	r29, r28
     270:	dc 1f       	adc	r29, r28
     272:	dc 1f       	adc	r29, r28
     274:	dc 1f       	adc	r29, r28
     276:	dc 1f       	adc	r29, r28
     278:	dc 1f       	adc	r29, r28
     27a:	b6 1f       	adc	r27, r22
     27c:	dc 1f       	adc	r29, r28
     27e:	dc 1f       	adc	r29, r28
     280:	dc 1f       	adc	r29, r28
     282:	dc 1f       	adc	r29, r28
     284:	dc 1f       	adc	r29, r28
     286:	dc 1f       	adc	r29, r28
     288:	dc 1f       	adc	r29, r28
     28a:	d2 1f       	adc	r29, r18
     28c:	dc 1f       	adc	r29, r28
     28e:	dc 1f       	adc	r29, r28
     290:	dc 1f       	adc	r29, r28
     292:	dc 1f       	adc	r29, r28
     294:	dc 1f       	adc	r29, r28
     296:	dc 1f       	adc	r29, r28
     298:	dc 1f       	adc	r29, r28
     29a:	d2 1f       	adc	r29, r18
     29c:	dc 1f       	adc	r29, r28
     29e:	dc 1f       	adc	r29, r28
     2a0:	dc 1f       	adc	r29, r28
     2a2:	dc 1f       	adc	r29, r28
     2a4:	dc 1f       	adc	r29, r28
     2a6:	dc 1f       	adc	r29, r28
     2a8:	dc 1f       	adc	r29, r28
     2aa:	dc 1f       	adc	r29, r28
     2ac:	dc 1f       	adc	r29, r28
     2ae:	dc 1f       	adc	r29, r28
     2b0:	dc 1f       	adc	r29, r28
     2b2:	dc 1f       	adc	r29, r28
     2b4:	dc 1f       	adc	r29, r28
     2b6:	dc 1f       	adc	r29, r28
     2b8:	dc 1f       	adc	r29, r28
     2ba:	dc 1f       	adc	r29, r28
     2bc:	dc 1f       	adc	r29, r28
     2be:	dc 1f       	adc	r29, r28
     2c0:	dc 1f       	adc	r29, r28
     2c2:	dc 1f       	adc	r29, r28
     2c4:	dc 1f       	adc	r29, r28
     2c6:	dc 1f       	adc	r29, r28
     2c8:	dc 1f       	adc	r29, r28
     2ca:	dc 1f       	adc	r29, r28
     2cc:	dc 1f       	adc	r29, r28
     2ce:	dc 1f       	adc	r29, r28
     2d0:	dc 1f       	adc	r29, r28
     2d2:	dc 1f       	adc	r29, r28
     2d4:	dc 1f       	adc	r29, r28
     2d6:	dc 1f       	adc	r29, r28
     2d8:	dc 1f       	adc	r29, r28
     2da:	dc 1f       	adc	r29, r28
     2dc:	dc 1f       	adc	r29, r28
     2de:	dc 1f       	adc	r29, r28
     2e0:	dc 1f       	adc	r29, r28
     2e2:	dc 1f       	adc	r29, r28
     2e4:	dc 1f       	adc	r29, r28
     2e6:	dc 1f       	adc	r29, r28
     2e8:	dc 1f       	adc	r29, r28
     2ea:	dc 1f       	adc	r29, r28
     2ec:	dc 1f       	adc	r29, r28
     2ee:	dc 1f       	adc	r29, r28
     2f0:	dc 1f       	adc	r29, r28
     2f2:	dc 1f       	adc	r29, r28
     2f4:	dc 1f       	adc	r29, r28
     2f6:	dc 1f       	adc	r29, r28
     2f8:	dc 1f       	adc	r29, r28
     2fa:	db 1f       	adc	r29, r27
     2fc:	07 63       	ori	r16, 0x37	; 55
     2fe:	42 36       	cpi	r20, 0x62	; 98
     300:	b7 9b       	sbis	0x16, 7	; 22
     302:	d8 a7       	std	Y+40, r29	; 0x28
     304:	1a 39       	cpi	r17, 0x9A	; 154
     306:	68 56       	subi	r22, 0x68	; 104
     308:	18 ae       	std	Y+56, r1	; 0x38
     30a:	ba ab       	std	Y+50, r27	; 0x32
     30c:	55 8c       	ldd	r5, Z+29	; 0x1d
     30e:	1d 3c       	cpi	r17, 0xCD	; 205
     310:	b7 cc       	rjmp	.-1682   	; 0xfffffc80 <__eeprom_end+0xff7efc80>
     312:	57 63       	ori	r21, 0x37	; 55
     314:	bd 6d       	ori	r27, 0xDD	; 221
     316:	ed fd       	.word	0xfded	; ????
     318:	75 3e       	cpi	r23, 0xE5	; 229
     31a:	f6 17       	cp	r31, r22
     31c:	72 31       	cpi	r23, 0x12	; 18
     31e:	bf 00       	.word	0x00bf	; ????
     320:	00 00       	nop
     322:	80 3f       	cpi	r24, 0xF0	; 240
     324:	08 00       	.word	0x0008	; ????
     326:	00 00       	nop
     328:	be 92       	st	-X, r11
     32a:	24 49       	sbci	r18, 0x94	; 148
     32c:	12 3e       	cpi	r17, 0xE2	; 226
     32e:	ab aa       	std	Y+51, r10	; 0x33
     330:	aa 2a       	or	r10, r26
     332:	be cd       	rjmp	.-1156   	; 0xfffffeb0 <__eeprom_end+0xff7efeb0>
     334:	cc cc       	rjmp	.-1640   	; 0xfffffcce <__eeprom_end+0xff7efcce>
     336:	4c 3e       	cpi	r20, 0xEC	; 236
     338:	00 00       	nop
     33a:	00 80       	ld	r0, Z
     33c:	be ab       	std	Y+54, r27	; 0x36
     33e:	aa aa       	std	Y+50, r10	; 0x32
     340:	aa 3e       	cpi	r26, 0xEA	; 234
     342:	00 00       	nop
     344:	00 00       	nop
     346:	bf 00       	.word	0x00bf	; ????
     348:	00 00       	nop
     34a:	80 3f       	cpi	r24, 0xF0	; 240
     34c:	00 00       	nop
     34e:	00 00       	nop
     350:	00 08       	sbc	r0, r0
     352:	41 78       	andi	r20, 0x81	; 129
     354:	d3 bb       	out	0x13, r29	; 19
     356:	43 87       	std	Z+11, r20	; 0x0b
     358:	d1 13       	cpse	r29, r17
     35a:	3d 19       	sub	r19, r13
     35c:	0e 3c       	cpi	r16, 0xCE	; 206
     35e:	c3 bd       	out	0x23, r28	; 35
     360:	42 82       	std	Z+2, r4	; 0x02
     362:	ad 2b       	or	r26, r29
     364:	3e 68       	ori	r19, 0x8E	; 142
     366:	ec 82       	std	Y+4, r14	; 0x04
     368:	76 be       	out	0x36, r7	; 54
     36a:	d9 8f       	std	Y+25, r29	; 0x19
     36c:	e1 a9       	ldd	r30, Z+49	; 0x31
     36e:	3e 4c       	sbci	r19, 0xCE	; 206
     370:	80 ef       	ldi	r24, 0xF0	; 240
     372:	ff be       	out	0x3f, r15	; 63
     374:	01 c4       	rjmp	.+2050   	; 0xb78 <_ZL12splash1_data+0x252>
     376:	ff 7f       	andi	r31, 0xFF	; 255
     378:	3f 00       	.word	0x003f	; ????
     37a:	00 00       	nop
     37c:	00 00       	nop
     37e:	73 4b       	sbci	r23, 0xB3	; 179
     380:	76 4b       	sbci	r23, 0xB6	; 182
     382:	65 4b       	sbci	r22, 0xB5	; 181
     384:	69 4b       	sbci	r22, 0xB9	; 185
     386:	6f 4b       	sbci	r22, 0xBF	; 191
     388:	ad 4b       	sbci	r26, 0xBD	; 189
     38a:	7a 4b       	sbci	r23, 0xBA	; 186
     38c:	7e 4b       	sbci	r23, 0xBE	; 190
     38e:	84 4b       	sbci	r24, 0xB4	; 180
     390:	88 4b       	sbci	r24, 0xB8	; 184
     392:	8c 4b       	sbci	r24, 0xBC	; 188
     394:	92 4b       	sbci	r25, 0xB2	; 178
     396:	96 4b       	sbci	r25, 0xB6	; 182
     398:	9a 4b       	sbci	r25, 0xBA	; 186
     39a:	ad 4b       	sbci	r26, 0xBD	; 189
     39c:	a0 4b       	sbci	r26, 0xB0	; 176
     39e:	a4 4b       	sbci	r26, 0xB4	; 180
     3a0:	a8 4b       	sbci	r26, 0xB8	; 184

000003a2 <__trampolines_end>:
     3a2:	44 48       	sbci	r20, 0x84	; 132
     3a4:	54 78       	andi	r21, 0x84	; 132
     3a6:	78 20       	and	r7, r8
     3a8:	74 65       	ori	r23, 0x54	; 84
     3aa:	73 74       	andi	r23, 0x43	; 67
     3ac:	21 00       	.word	0x0021	; ????

000003ae <_ZZ5setupE3__c_0>:
     3ae:	53 53 44 31 33 30 36 20 61 6c 6c 6f 63 61 74 69     SSD1306 allocati
     3be:	6f 6e 20 66 61 69 6c 65 64 00                       on failed.

000003c8 <_ZZ4loopE3__c>:
     3c8:	46 61 69 6c 65 64 20 74 6f 20 72 65 61 64 20 66     Failed to read f
     3d8:	72 6f 6d 20 44 48 54 20 73 65 6e 73 6f 72 21 00     rom DHT sensor!.

000003e8 <_ZZ4loopE3__c_0>:
     3e8:	48 75 6d 69 64 69 74 79 3a 20 00                    Humidity: .

000003f3 <_ZZ4loopE3__c_1>:
     3f3:	54 65 6d 70 65 72 61 74 75 72 65 3a 20 00           Temperature: .

00000401 <_ZZ4loopE3__c_2>:
     401:	48 65 61 74 20 69 6e 64 65 78 3a 20 00              Heat index: .

0000040e <_ZL9daysArray>:
     40e:	1f 1c 1f 1e 1f 1e 1f 1f 1e 1f 1e 1f                 ............

0000041a <_ZL8dowArray>:
     41a:	00 03 02 05 00 03 05 01 04 06 02 04                 ............

00000426 <_ZL4font>:
     426:	00 00 00 00 00 3e 5b 4f 5b 3e 3e 6b 4f 6b 3e 1c     .....>[O[>>kOk>.
     436:	3e 7c 3e 1c 18 3c 7e 3c 18 1c 57 7d 57 1c 1c 5e     >|>..<~<..W}W..^
     446:	7f 5e 1c 00 18 3c 18 00 ff e7 c3 e7 ff 00 18 24     .^...<.........$
     456:	18 00 ff e7 db e7 ff 30 48 3a 06 0e 26 29 79 29     .......0H:..&)y)
     466:	26 40 7f 05 05 07 40 7f 05 25 3f 5a 3c e7 3c 5a     &@....@..%?Z<.<Z
     476:	7f 3e 1c 1c 08 08 1c 1c 3e 7f 14 22 7f 22 14 5f     .>......>.."."._
     486:	5f 00 5f 5f 06 09 7f 01 7f 00 66 89 95 6a 60 60     _.__......f..j``
     496:	60 60 60 94 a2 ff a2 94 08 04 7e 04 08 10 20 7e     ```.......~... ~
     4a6:	20 10 08 08 2a 1c 08 08 1c 2a 08 08 1e 10 10 10      ...*....*......
     4b6:	10 0c 1e 0c 1e 0c 30 38 3e 38 30 06 0e 3e 0e 06     ......08>80..>..
     4c6:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
     4d6:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
     4e6:	56 20 50 00 08 07 03 00 00 1c 22 41 00 00 41 22     V P......."A..A"
     4f6:	1c 00 2a 1c 7f 1c 2a 08 08 3e 08 08 00 80 70 30     ..*...*..>....p0
     506:	00 08 08 08 08 08 00 00 60 60 00 20 10 08 04 02     ........``. ....
     516:	3e 51 49 45 3e 00 42 7f 40 00 72 49 49 49 46 21     >QIE>.B.@.rIIIF!
     526:	41 49 4d 33 18 14 12 7f 10 27 45 45 45 39 3c 4a     AIM3.....'EEE9<J
     536:	49 49 31 41 21 11 09 07 36 49 49 49 36 46 49 49     II1A!...6III6FII
     546:	29 1e 00 00 14 00 00 00 40 34 00 00 00 08 14 22     ).......@4....."
     556:	41 14 14 14 14 14 00 41 22 14 08 02 01 59 09 06     A......A"....Y..
     566:	3e 41 5d 59 4e 7c 12 11 12 7c 7f 49 49 49 36 3e     >A]YN|...|.III6>
     576:	41 41 41 22 7f 41 41 41 3e 7f 49 49 49 41 7f 09     AAA".AAA>.IIIA..
     586:	09 09 01 3e 41 41 51 73 7f 08 08 08 7f 00 41 7f     ...>AAQs......A.
     596:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     5a6:	40 7f 02 1c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     5b6:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 26     .....>AQ!^...)F&
     5c6:	49 49 49 32 03 01 7f 01 03 3f 40 40 40 3f 1f 20     III2.....?@@@?. 
     5d6:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 03 04 78     @ .?@8@?c...c..x
     5e6:	04 03 61 59 49 4d 43 00 7f 41 41 41 02 04 08 10     ..aYIMC..AAA....
     5f6:	20 00 41 41 41 7f 04 02 01 02 04 40 40 40 40 40      .AAA......@@@@@
     606:	00 03 07 08 00 20 54 54 78 40 7f 28 44 44 38 38     ..... TTx@.(DD88
     616:	44 44 44 28 38 44 44 28 7f 38 54 54 54 18 00 08     DDD(8DD(.8TTT...
     626:	7e 09 02 18 a4 a4 9c 78 7f 08 04 04 78 00 44 7d     ~......x....x.D}
     636:	40 00 20 40 40 3d 00 7f 10 28 44 00 00 41 7f 40     @. @@=...(D..A.@
     646:	00 7c 04 78 04 78 7c 08 04 04 78 38 44 44 44 38     .|.x.x|...x8DDD8
     656:	fc 18 24 24 18 18 24 24 18 fc 7c 08 04 04 08 48     ..$$..$$..|....H
     666:	54 54 54 24 04 04 3f 44 24 3c 40 40 20 7c 1c 20     TTT$..?D$<@@ |. 
     676:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 4c 90 90     @ .<@0@<D(.(DL..
     686:	90 7c 44 64 54 4c 44 00 08 36 41 00 00 00 77 00     .|DdTLD..6A...w.
     696:	00 00 41 36 08 00 02 01 02 04 02 3c 26 23 26 3c     ..A6.......<&#&<
     6a6:	1e a1 a1 61 12 3a 40 40 20 7a 38 54 54 55 59 21     ...a.:@@ z8TTUY!
     6b6:	55 55 79 41 22 54 54 78 42 21 55 54 78 40 20 54     UUyA"TTxB!UTx@ T
     6c6:	55 79 40 0c 1e 52 72 12 39 55 55 55 59 39 54 54     Uy@..Rr.9UUUY9TT
     6d6:	54 59 39 55 54 54 58 00 00 45 7c 41 00 02 45 7d     TY9UTTX..E|A..E}
     6e6:	42 00 01 45 7c 40 7d 12 11 12 7d f0 28 25 28 f0     B..E|@}...}.(%(.
     6f6:	7c 54 55 45 00 20 54 54 7c 54 7c 0a 09 7f 49 32     |TUE. TT|T|...I2
     706:	49 49 49 32 3a 44 44 44 3a 32 4a 48 48 30 3a 41     III2:DDD:2JHH0:A
     716:	41 21 7a 3a 42 40 20 78 00 9d a0 a0 7d 3d 42 42     A!z:B@ x....}=BB
     726:	42 3d 3d 40 40 40 3d 3c 24 ff 24 24 48 7e 49 43     B==@@@=<$.$$H~IC
     736:	66 2b 2f fc 2f 2b ff 09 29 f6 20 c0 88 7e 09 03     f+/./+..). ..~..
     746:	20 54 54 79 41 00 00 44 7d 41 30 48 48 4a 32 38      TTyA..D}A0HHJ28
     756:	40 40 22 7a 00 7a 0a 0a 72 7d 0d 19 31 7d 26 29     @@"z.z..r}..1}&)
     766:	29 2f 28 26 29 29 29 26 30 48 4d 40 20 38 08 08     )/(&)))&0HM@ 8..
     776:	08 08 08 08 08 08 38 2f 10 c8 ac ba 2f 10 28 34     ......8/..../.(4
     786:	fa 00 00 7b 00 00 08 14 2a 14 22 22 14 2a 14 08     ...{....*."".*..
     796:	55 00 55 00 55 aa 55 aa 55 aa ff 55 ff 55 ff 00     U.U.U.U.U..U.U..
     7a6:	00 00 ff 00 10 10 10 ff 00 14 14 14 ff 00 10 10     ................
     7b6:	ff 00 ff 10 10 f0 10 f0 14 14 14 fc 00 14 14 f7     ................
     7c6:	00 ff 00 00 ff 00 ff 14 14 f4 04 fc 14 14 17 10     ................
     7d6:	1f 10 10 1f 10 1f 14 14 14 1f 00 10 10 10 f0 00     ................
     7e6:	00 00 00 1f 10 10 10 10 1f 10 10 10 10 f0 10 00     ................
     7f6:	00 00 ff 10 10 10 10 10 10 10 10 10 ff 10 00 00     ................
     806:	00 ff 14 00 00 ff 00 ff 00 00 1f 10 17 00 00 fc     ................
     816:	04 f4 14 14 17 10 17 14 14 f4 04 f4 00 00 ff 00     ................
     826:	f7 14 14 14 14 14 14 14 f7 00 f7 14 14 14 17 14     ................
     836:	10 10 1f 10 1f 14 14 14 f4 14 10 10 f0 10 f0 00     ................
     846:	00 1f 10 1f 00 00 00 1f 14 00 00 00 fc 14 00 00     ................
     856:	f0 10 f0 10 10 ff 10 ff 14 14 14 ff 14 10 10 10     ................
     866:	1f 00 00 00 00 f0 10 ff ff ff ff ff f0 f0 f0 f0     ................
     876:	f0 ff ff ff 00 00 00 00 00 ff ff 0f 0f 0f 0f 0f     ................
     886:	38 44 44 38 44 fc 4a 4a 4a 34 7e 02 02 06 06 02     8DD8D.JJJ4~.....
     896:	7e 02 7e 02 63 55 49 41 63 38 44 44 3c 04 40 7e     ~.~.cUIAc8DD<.@~
     8a6:	20 1e 20 06 02 7e 02 02 99 a5 e7 a5 99 1c 2a 49      . ..~........*I
     8b6:	2a 1c 4c 72 01 72 4c 30 4a 4d 4d 30 30 48 78 48     *.Lr.rL0JMM00HxH
     8c6:	30 bc 62 5a 46 3d 3e 49 49 49 00 7e 01 01 01 7e     0.bZF=>III.~...~
     8d6:	2a 2a 2a 2a 2a 44 44 5f 44 44 40 51 4a 44 40 40     *****DD_DD@QJD@@
     8e6:	44 4a 51 40 00 00 ff 01 03 e0 80 ff 00 00 08 08     DJQ@............
     8f6:	6b 6b 08 36 12 36 24 36 06 0f 09 0f 06 00 00 18     kk.6.6$6........
     906:	18 00 00 00 10 10 00 30 40 ff 01 01 00 1f 01 01     .......0@.......
     916:	1e 00 19 1d 17 12 00 3c 3c 3c 3c 00 00 00 00 00     .......<<<<.....

00000926 <_ZL12splash1_data>:
     926:	00 00 00 00 00 01 80 00 00 00 00 00 00 00 00 00     ................
     936:	03 80 00 00 00 00 00 00 00 00 00 07 c0 00 00 00     ................
     946:	00 00 00 00 00 00 07 c0 00 00 00 00 00 00 00 00     ................
     956:	00 0f c0 00 00 00 00 00 00 00 00 00 1f e0 00 00     ................
     966:	00 00 00 00 00 00 00 1f e0 00 00 00 00 00 00 00     ................
     976:	00 00 3f e0 00 00 00 00 00 00 00 00 00 3f f0 00     ..?..........?..
	...
     98e:	7f f0 00 00 00 00 00 00 00 1f f8 7f f0 00 00 00     ................
     99e:	00 00 00 00 3f fe 7f f0 00 00 00 00 00 00 00 3f     ....?..........?
     9ae:	ff 7f f0 00 00 00 00 00 00 00 1f ff fb e0 00 00     ................
     9be:	00 00 00 00 00 0f ff f9 ff c0 00 00 00 00 00 00     ................
     9ce:	0f ff f9 ff f8 00 00 00 00 00 00 07 ff f1 ff ff     ................
     9de:	00 00 00 00 00 00 03 fc 73 ff ff 80 00 00 00 00     ........s.......
     9ee:	00 01 fe 3f ff ff 80 00 00 00 00 00 00 ff 1e 0f     ...?............
     9fe:	ff 00 00 00 00 00 00 00 7f fe 1f fc 00 00 00 00     ................
     a0e:	00 00 00 3f ff ff f8 00 00 00 00 00 00 00 0f df     ...?............
     a1e:	ff e0 00 00 00 00 00 00 00 1f 19 ff c0 00 00 00     ................
     a2e:	00 00 00 00 3f 3c ff 00 00 00 00 00 00 00 00 7e     ....?<.........~
     a3e:	7c f8 00 00 00 00 00 00 00 00 7f fe 7c 00 00 00     |...........|...
     a4e:	00 00 00 00 00 ff ff fc 00 00 00 00 00 00 00 00     ................
     a5e:	ff ff fe 00 00 00 00 00 00 00 00 ff ff fe 00 00     ................
     a6e:	00 00 00 00 00 01 ff ef fe 00 00 00 00 00 00 00     ................
     a7e:	01 ff cf fe 00 00 00 00 00 00 00 03 ff 07 fe 00     ................
     a8e:	00 00 00 00 00 00 03 fc 07 fe 00 00 00 00 00 00     ................
     a9e:	00 03 f0 03 fe 00 00 00 00 00 00 00 01 80 00 fe     ................
	...
     ab6:	00 00 7e 00 00 00 00 00 00 00 00 00 00 3e 00 00     ..~..........>..
	...
     ace:	0c 00 00 00 00 00 00 07 80 00 fc 00 00 03 c0 00     ................
     ade:	00 00 07 80 01 fc 00 00 03 c0 00 00 00 07 80 01     ................
     aee:	fc 00 00 03 c0 00 00 00 07 80 01 e0 00 00 00 1e     ................
     afe:	00 00 00 07 80 01 e0 00 00 00 1e 00 7f e3 f7 9f     ................
     b0e:	f9 fd e7 78 7b df c0 ff f7 ff bf fd fd ff 78 7b     ...x{.........x{
     b1e:	df c0 ff f7 ff bf fd fd ff 78 7b df c0 f0 f7 87     .........x{.....
     b2e:	bc 3d e1 ff 78 7b de 00 f0 f7 87 bc 3d e1 f0 78     .=..x{......=..x
     b3e:	7b de 00 00 f7 87 80 3d e1 e0 78 7b de 00 7f f7     {......=..x{....
     b4e:	87 9f fd e1 e0 78 7b de 00 ff f7 87 bf fd e1 e0     .....x{.........
     b5e:	78 7b de 00 f0 f7 87 bc 3d e1 e0 78 7b de 00 f0     x{......=..x{...
     b6e:	f7 87 bc 3d e1 e0 78 7b de 00 f0 f7 87 bc 3d e1     ...=..x{......=.
     b7e:	e0 78 7b de 00 ff f7 ff bf fd e1 e0 7f fb df c0     .x{.............
     b8e:	ff f7 ff bf fd e1 e0 7f fb df c0 7c f3 f3 9f 3d     ...........|...=
     b9e:	e1 e0 3e 7b cf c0 00 00 00 00 00 00 00 00 00 00     ..>{............
     bae:	00 ff ff ff ff ff ff ff ff ff ff c0 ff ff ff ff     ................
     bbe:	fd 68 db 11 1a 31 c0 ff ff ff ff fd 2b 5a fb 6a     .h...1......+Z.j
     bce:	ef c0 ff ff ff ff fd 4b 5b 3b 1a 33 c0 ff ff ff     .......K[;.3....
     bde:	ff fd 6b 5b db 6a fd c0                             ..k[.j..

00000be6 <_ZL12splash2_data>:
     be6:	00 00 60 00 00 00 00 00 00 00 00 00 00 00 00 00     ..`.............
     bf6:	00 e0 00 00 00 00 00 00 00 00 00 00 00 00 00 01     ................
     c06:	e0 00 00 00 00 00 00 00 00 00 00 00 00 00 01 f0     ................
	...
     c22:	00 03 f0 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     c32:	07 f0 00 00 00 00 00 00 00 00 00 00 00 00 00 07     ................
     c42:	f8 00 00 00 00 00 00 00 00 00 00 00 00 00 0f f8     ................
     c52:	00 00 00 03 c0 00 7e 00 00 01 e0 00 7f 0f f8 00     ......~.........
     c62:	00 00 03 c0 00 fe 00 00 01 e0 00 ff ef f8 00 00     ................
     c72:	00 03 c0 00 fe 00 00 01 e0 00 ff ff f8 00 00 00     ................
     c82:	03 c0 00 f0 00 00 00 0f 00 7f fe 7f c0 00 00 03     ................
     c92:	c0 00 f0 00 00 00 0f 00 3f fe 7f f8 3f f1 fb cf     ........?...?...
     ca2:	fc fe f3 bc 3d ef e0 1f fe 7f ff 7f fb ff df fe     ....=...........
     cb2:	fe ff bc 3d ef e0 1f c6 ff ff 7f fb ff df fe fe     ...=............
     cc2:	ff bc 3d ef e0 0f e3 c7 fe 78 7b c3 de 1e f0 ff     ..=......x{.....
     cd2:	bc 3d ef 00 07 ff 87 fc 78 7b c3 de 1e f0 f8 3c     .=......x{.....<
     ce2:	3d ef 00 01 ff ff f0 00 7b c3 c0 1e f0 f0 3c 3d     =.......{.....<=
     cf2:	ef 00 01 f3 7f e0 3f fb c3 cf fe f0 f0 3c 3d ef     ......?......<=.
     d02:	00 03 e3 3f 80 7f fb c3 df fe f0 f0 3c 3d ef 00     ...?........<=..
     d12:	07 e7 3c 00 78 7b c3 de 1e f0 f0 3c 3d ef 00 07     ..<.x{.....<=...
     d22:	ff be 00 78 7b c3 de 1e f0 f0 3c 3d ef 00 07 ff     ...x{.....<=....
     d32:	fe 00 78 7b c3 de 1e f0 f0 3c 3d ef 00 0f ff fe     ..x{.....<=.....
     d42:	00 7f fb ff df fe f0 f0 3f fd ef e0 0f ff ff 00     ........?.......
     d52:	7f fb ff df fe f0 f0 3f fd ef e0 0f f9 ff 00 3e     .......?.......>
     d62:	79 f9 cf 9e f0 f0 1f 3d e7 e0 1f f1 ff 00 00 00     y......=........
	...
     d7a:	00 1f 80 ff 00 7f ff ff ff ff ff ff ff ff ff e0     ................
     d8a:	1c 00 7f 00 7f ff ff ff fe b4 6d 88 8d 18 e0 00     ..........m.....
     d9a:	00 1f 00 7f ff ff ff fe 95 ad 7d b5 77 e0 00 00     ..........}.w...
     daa:	0f 00 7f ff ff ff fe a5 ad 9d 8d 19 e0 00 00 06     ................
     dba:	00 7f ff ff ff fe b5 ad ed b5 7e e0                 ..........~.

00000dc6 <_ZZN16Adafruit_SSD13065beginEhhbbE5init1>:
     dc6:	ae d5 80 a8                                         ....

00000dca <_ZZN16Adafruit_SSD13065beginEhhbbE5init2>:
     dca:	d3 00 40 8d                                         ..@.

00000dce <_ZZN16Adafruit_SSD13065beginEhhbbE5init3>:
     dce:	20 00 a1 c8                                          ...

00000dd2 <_ZZN16Adafruit_SSD13065beginEhhbbE5init5>:
     dd2:	db 40 a4 a6 2e af                                   .@....

00000dd8 <_ZZN16Adafruit_SSD130621drawFastVLineInternalEiiijE7premask>:
     dd8:	00 80 c0 e0 f0 f8 fc fe                             ........

00000de0 <_ZZN16Adafruit_SSD130621drawFastVLineInternalEiiijE8postmask>:
     de0:	00 01 03 07 0f 1f 3f 7f                             ......?.

00000de8 <_ZZN16Adafruit_SSD13067displayEvE6dlist1>:
     de8:	22 00 ff 21 00                                      "..!.

00000ded <digital_pin_to_timer_PGM>:
     ded:	00 00 0a 0b 02 09 0c 0d 0e 08 07 03 04 01 00 00     ................
	...
     e19:	12 11 10 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

00000e33 <digital_pin_to_bit_mask_PGM>:
     e33:	01 02 10 20 20 08 08 10 20 40 10 20 40 80 02 01     ...  ... @. @...
     e43:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 80 40     ........... @..@
     e53:	20 10 08 04 02 01 80 04 02 01 80 40 20 10 08 04      ..........@ ...
     e63:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 01 02     ........... @...
     e73:	04 08 10 20 40 80                                   ... @.

00000e79 <digital_pin_to_port_PGM>:
     e79:	05 05 05 05 07 05 08 08 08 08 02 02 02 02 0a 0a     ................
     e89:	08 08 04 04 04 04 01 01 01 01 01 01 01 01 03 03     ................
     e99:	03 03 03 03 03 03 04 07 07 07 0c 0c 0c 0c 0c 0c     ................
     ea9:	0c 0c 02 02 02 02 06 06 06 06 06 06 06 06 0b 0b     ................
     eb9:	0b 0b 0b 0b 0b 0b                                   ......

00000ebf <port_to_input_PGM>:
     ebf:	00 00 20 00 23 00 26 00 29 00 2c 00 2f 00 32 00     .. .#.&.).,./.2.
     ecf:	00 01 00 00 03 01 06 01 09 01                       ..........

00000ed9 <port_to_output_PGM>:
     ed9:	00 00 22 00 25 00 28 00 2b 00 2e 00 31 00 34 00     ..".%.(.+...1.4.
     ee9:	02 01 00 00 05 01 08 01 0b 01                       ..........

00000ef3 <port_to_mode_PGM>:
     ef3:	00 00 21 00 24 00 27 00 2a 00 2d 00 30 00 33 00     ..!.$.'.*.-.0.3.
     f03:	01 01 00 00 04 01 07 01 0a 01 00                    ...........

00000f0e <__ctors_start>:
     f0e:	51 0b       	sbc	r21, r17
     f10:	51 23       	and	r21, r17
     f12:	af 48       	sbci	r26, 0x8F	; 143

00000f14 <__ctors_end>:
     f14:	5d 0b       	sbc	r21, r29

00000f16 <__dtors_end>:
     f16:	11 24       	eor	r1, r1
     f18:	1f be       	out	0x3f, r1	; 63
     f1a:	cf ef       	ldi	r28, 0xFF	; 255
     f1c:	d1 e2       	ldi	r29, 0x21	; 33
     f1e:	de bf       	out	0x3e, r29	; 62
     f20:	cd bf       	out	0x3d, r28	; 61
     f22:	00 e0       	ldi	r16, 0x00	; 0
     f24:	0c bf       	out	0x3c, r16	; 60

00000f26 <__do_copy_data>:
     f26:	12 e0       	ldi	r17, 0x02	; 2
     f28:	a0 e0       	ldi	r26, 0x00	; 0
     f2a:	b2 e0       	ldi	r27, 0x02	; 2
     f2c:	e8 e4       	ldi	r30, 0x48	; 72
     f2e:	f0 ea       	ldi	r31, 0xA0	; 160
     f30:	00 e0       	ldi	r16, 0x00	; 0
     f32:	0b bf       	out	0x3b, r16	; 59
     f34:	02 c0       	rjmp	.+4      	; 0xf3a <__do_copy_data+0x14>
     f36:	07 90       	elpm	r0, Z+
     f38:	0d 92       	st	X+, r0
     f3a:	ae 3d       	cpi	r26, 0xDE	; 222
     f3c:	b1 07       	cpc	r27, r17
     f3e:	d9 f7       	brne	.-10     	; 0xf36 <__do_copy_data+0x10>

00000f40 <__do_clear_bss>:
     f40:	25 e0       	ldi	r18, 0x05	; 5
     f42:	ae ed       	ldi	r26, 0xDE	; 222
     f44:	b2 e0       	ldi	r27, 0x02	; 2
     f46:	01 c0       	rjmp	.+2      	; 0xf4a <.do_clear_bss_start>

00000f48 <.do_clear_bss_loop>:
     f48:	1d 92       	st	X+, r1

00000f4a <.do_clear_bss_start>:
     f4a:	a1 36       	cpi	r26, 0x61	; 97
     f4c:	b2 07       	cpc	r27, r18
     f4e:	e1 f7       	brne	.-8      	; 0xf48 <.do_clear_bss_loop>

00000f50 <__do_global_ctors>:
     f50:	17 e0       	ldi	r17, 0x07	; 7
     f52:	ca e8       	ldi	r28, 0x8A	; 138
     f54:	d7 e0       	ldi	r29, 0x07	; 7
     f56:	00 e0       	ldi	r16, 0x00	; 0
     f58:	06 c0       	rjmp	.+12     	; 0xf66 <__do_global_ctors+0x16>
     f5a:	21 97       	sbiw	r28, 0x01	; 1
     f5c:	01 09       	sbc	r16, r1
     f5e:	80 2f       	mov	r24, r16
     f60:	fe 01       	movw	r30, r28
     f62:	0e 94 99 4d 	call	0x9b32	; 0x9b32 <__tablejump2__>
     f66:	c7 38       	cpi	r28, 0x87	; 135
     f68:	d1 07       	cpc	r29, r17
     f6a:	80 e0       	ldi	r24, 0x00	; 0
     f6c:	08 07       	cpc	r16, r24
     f6e:	a9 f7       	brne	.-22     	; 0xf5a <__do_global_ctors+0xa>
     f70:	0e 94 de 48 	call	0x91bc	; 0x91bc <main>
     f74:	0c 94 13 50 	jmp	0xa026	; 0xa026 <__do_global_dtors>

00000f78 <__bad_interrupt>:
     f78:	43 c8       	rjmp	.-3962   	; 0x0 <__vectors>

00000f7a <_ZN6StringpLERKS_>:
	unsigned char concat(double num);
	unsigned char concat(const __FlashStringHelper * str);

	// if there's not enough memory for the concatenated value, the string
	// will be left unchanged (but this isn't signalled in any way)
	String & operator += (const String &rhs)	{concat(rhs); return (*this);}
     f7a:	cf 93       	push	r28
     f7c:	df 93       	push	r29
     f7e:	00 d0       	rcall	.+0      	; 0xf80 <_ZN6StringpLERKS_+0x6>
     f80:	1f 92       	push	r1
     f82:	cd b7       	in	r28, 0x3d	; 61
     f84:	de b7       	in	r29, 0x3e	; 62
     f86:	9a 83       	std	Y+2, r25	; 0x02
     f88:	89 83       	std	Y+1, r24	; 0x01
     f8a:	7c 83       	std	Y+4, r23	; 0x04
     f8c:	6b 83       	std	Y+3, r22	; 0x03
     f8e:	2b 81       	ldd	r18, Y+3	; 0x03
     f90:	3c 81       	ldd	r19, Y+4	; 0x04
     f92:	89 81       	ldd	r24, Y+1	; 0x01
     f94:	9a 81       	ldd	r25, Y+2	; 0x02
     f96:	b9 01       	movw	r22, r18
     f98:	0e 94 60 4d 	call	0x9ac0	; 0x9ac0 <_ZN6String6concatERKS_>
     f9c:	89 81       	ldd	r24, Y+1	; 0x01
     f9e:	9a 81       	ldd	r25, Y+2	; 0x02
     fa0:	0f 90       	pop	r0
     fa2:	0f 90       	pop	r0
     fa4:	0f 90       	pop	r0
     fa6:	0f 90       	pop	r0
     fa8:	df 91       	pop	r29
     faa:	cf 91       	pop	r28
     fac:	08 95       	ret

00000fae <_ZN15StringSumHelperC1Ec>:
class StringSumHelper : public String
{
public:
	StringSumHelper(const String &s) : String(s) {}
	StringSumHelper(const char *p) : String(p) {}
	StringSumHelper(char c) : String(c) {}
     fae:	cf 93       	push	r28
     fb0:	df 93       	push	r29
     fb2:	00 d0       	rcall	.+0      	; 0xfb4 <_ZN15StringSumHelperC1Ec+0x6>
     fb4:	cd b7       	in	r28, 0x3d	; 61
     fb6:	de b7       	in	r29, 0x3e	; 62
     fb8:	9a 83       	std	Y+2, r25	; 0x02
     fba:	89 83       	std	Y+1, r24	; 0x01
     fbc:	6b 83       	std	Y+3, r22	; 0x03
     fbe:	89 81       	ldd	r24, Y+1	; 0x01
     fc0:	9a 81       	ldd	r25, Y+2	; 0x02
     fc2:	6b 81       	ldd	r22, Y+3	; 0x03
     fc4:	0e 94 f2 4c 	call	0x99e4	; 0x99e4 <_ZN6StringC1Ec>
     fc8:	00 00       	nop
     fca:	0f 90       	pop	r0
     fcc:	0f 90       	pop	r0
     fce:	0f 90       	pop	r0
     fd0:	df 91       	pop	r29
     fd2:	cf 91       	pop	r28
     fd4:	08 95       	ret

00000fd6 <_ZN14HardwareSerial5beginEm>:
  public:
    inline HardwareSerial(
      volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,
      volatile uint8_t *ucsra, volatile uint8_t *ucsrb,
      volatile uint8_t *ucsrc, volatile uint8_t *udr);
    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }
     fd6:	cf 93       	push	r28
     fd8:	df 93       	push	r29
     fda:	00 d0       	rcall	.+0      	; 0xfdc <_ZN14HardwareSerial5beginEm+0x6>
     fdc:	00 d0       	rcall	.+0      	; 0xfde <_ZN14HardwareSerial5beginEm+0x8>
     fde:	cd b7       	in	r28, 0x3d	; 61
     fe0:	de b7       	in	r29, 0x3e	; 62
     fe2:	9a 83       	std	Y+2, r25	; 0x02
     fe4:	89 83       	std	Y+1, r24	; 0x01
     fe6:	4b 83       	std	Y+3, r20	; 0x03
     fe8:	5c 83       	std	Y+4, r21	; 0x04
     fea:	6d 83       	std	Y+5, r22	; 0x05
     fec:	7e 83       	std	Y+6, r23	; 0x06
     fee:	8b 81       	ldd	r24, Y+3	; 0x03
     ff0:	9c 81       	ldd	r25, Y+4	; 0x04
     ff2:	ad 81       	ldd	r26, Y+5	; 0x05
     ff4:	be 81       	ldd	r27, Y+6	; 0x06
     ff6:	e9 81       	ldd	r30, Y+1	; 0x01
     ff8:	fa 81       	ldd	r31, Y+2	; 0x02
     ffa:	26 e0       	ldi	r18, 0x06	; 6
     ffc:	ac 01       	movw	r20, r24
     ffe:	bd 01       	movw	r22, r26
    1000:	cf 01       	movw	r24, r30
    1002:	0e 94 e4 47 	call	0x8fc8	; 0x8fc8 <_ZN14HardwareSerial5beginEmh>
    1006:	00 00       	nop
    1008:	26 96       	adiw	r28, 0x06	; 6
    100a:	0f b6       	in	r0, 0x3f	; 63
    100c:	f8 94       	cli
    100e:	de bf       	out	0x3e, r29	; 62
    1010:	0f be       	out	0x3f, r0	; 63
    1012:	cd bf       	out	0x3d, r28	; 61
    1014:	df 91       	pop	r29
    1016:	cf 91       	pop	r28
    1018:	08 95       	ret

0000101a <_ZN12Adafruit_GFX9setCursorEii>:
    @brief  Set text cursor location
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    101a:	cf 93       	push	r28
    101c:	df 93       	push	r29
    101e:	00 d0       	rcall	.+0      	; 0x1020 <_ZN12Adafruit_GFX9setCursorEii+0x6>
    1020:	00 d0       	rcall	.+0      	; 0x1022 <_ZN12Adafruit_GFX9setCursorEii+0x8>
    1022:	cd b7       	in	r28, 0x3d	; 61
    1024:	de b7       	in	r29, 0x3e	; 62
    1026:	9a 83       	std	Y+2, r25	; 0x02
    1028:	89 83       	std	Y+1, r24	; 0x01
    102a:	7c 83       	std	Y+4, r23	; 0x04
    102c:	6b 83       	std	Y+3, r22	; 0x03
    102e:	5e 83       	std	Y+6, r21	; 0x06
    1030:	4d 83       	std	Y+5, r20	; 0x05
    cursor_x = x;
    1032:	89 81       	ldd	r24, Y+1	; 0x01
    1034:	9a 81       	ldd	r25, Y+2	; 0x02
    1036:	2b 81       	ldd	r18, Y+3	; 0x03
    1038:	3c 81       	ldd	r19, Y+4	; 0x04
    103a:	fc 01       	movw	r30, r24
    103c:	35 87       	std	Z+13, r19	; 0x0d
    103e:	24 87       	std	Z+12, r18	; 0x0c
    cursor_y = y;
    1040:	89 81       	ldd	r24, Y+1	; 0x01
    1042:	9a 81       	ldd	r25, Y+2	; 0x02
    1044:	2d 81       	ldd	r18, Y+5	; 0x05
    1046:	3e 81       	ldd	r19, Y+6	; 0x06
    1048:	fc 01       	movw	r30, r24
    104a:	37 87       	std	Z+15, r19	; 0x0f
    104c:	26 87       	std	Z+14, r18	; 0x0e
  }
    104e:	00 00       	nop
    1050:	26 96       	adiw	r28, 0x06	; 6
    1052:	0f b6       	in	r0, 0x3f	; 63
    1054:	f8 94       	cli
    1056:	de bf       	out	0x3e, r29	; 62
    1058:	0f be       	out	0x3f, r0	; 63
    105a:	cd bf       	out	0x3d, r28	; 61
    105c:	df 91       	pop	r29
    105e:	cf 91       	pop	r28
    1060:	08 95       	ret

00001062 <_ZN12Adafruit_GFX12setTextColorEj>:
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    1062:	cf 93       	push	r28
    1064:	df 93       	push	r29
    1066:	00 d0       	rcall	.+0      	; 0x1068 <_ZN12Adafruit_GFX12setTextColorEj+0x6>
    1068:	1f 92       	push	r1
    106a:	cd b7       	in	r28, 0x3d	; 61
    106c:	de b7       	in	r29, 0x3e	; 62
    106e:	9a 83       	std	Y+2, r25	; 0x02
    1070:	89 83       	std	Y+1, r24	; 0x01
    1072:	7c 83       	std	Y+4, r23	; 0x04
    1074:	6b 83       	std	Y+3, r22	; 0x03
    1076:	89 81       	ldd	r24, Y+1	; 0x01
    1078:	9a 81       	ldd	r25, Y+2	; 0x02
    107a:	2b 81       	ldd	r18, Y+3	; 0x03
    107c:	3c 81       	ldd	r19, Y+4	; 0x04
    107e:	fc 01       	movw	r30, r24
    1080:	33 8b       	std	Z+19, r19	; 0x13
    1082:	22 8b       	std	Z+18, r18	; 0x12
    1084:	89 81       	ldd	r24, Y+1	; 0x01
    1086:	9a 81       	ldd	r25, Y+2	; 0x02
    1088:	fc 01       	movw	r30, r24
    108a:	22 89       	ldd	r18, Z+18	; 0x12
    108c:	33 89       	ldd	r19, Z+19	; 0x13
    108e:	89 81       	ldd	r24, Y+1	; 0x01
    1090:	9a 81       	ldd	r25, Y+2	; 0x02
    1092:	fc 01       	movw	r30, r24
    1094:	31 8b       	std	Z+17, r19	; 0x11
    1096:	20 8b       	std	Z+16, r18	; 0x10
    1098:	00 00       	nop
    109a:	0f 90       	pop	r0
    109c:	0f 90       	pop	r0
    109e:	0f 90       	pop	r0
    10a0:	0f 90       	pop	r0
    10a2:	df 91       	pop	r29
    10a4:	cf 91       	pop	r28
    10a6:	08 95       	ret

000010a8 <setup>:

bool switched = false;
const long tempinterval = 10000;
unsigned long previousMillis = 0;

void setup() {
    10a8:	0f 93       	push	r16
    10aa:	cf 93       	push	r28
    10ac:	df 93       	push	r29
    10ae:	cd b7       	in	r28, 0x3d	; 61
    10b0:	de b7       	in	r29, 0x3e	; 62
	Serial.begin(9600);
    10b2:	40 e8       	ldi	r20, 0x80	; 128
    10b4:	55 e2       	ldi	r21, 0x25	; 37
    10b6:	60 e0       	ldi	r22, 0x00	; 0
    10b8:	70 e0       	ldi	r23, 0x00	; 0
    10ba:	87 eb       	ldi	r24, 0xB7	; 183
    10bc:	94 e0       	ldi	r25, 0x04	; 4
    10be:	8b df       	rcall	.-234    	; 0xfd6 <_ZN14HardwareSerial5beginEm>
	Serial.println(F("DHTxx test!"));
    10c0:	82 ea       	ldi	r24, 0xA2	; 162
    10c2:	93 e0       	ldi	r25, 0x03	; 3
    10c4:	bc 01       	movw	r22, r24
    10c6:	87 eb       	ldi	r24, 0xB7	; 183
    10c8:	94 e0       	ldi	r25, 0x04	; 4
    10ca:	0e 94 66 49 	call	0x92cc	; 0x92cc <_ZN5Print7printlnEPK19__FlashStringHelper>

	// Initialize DS3231
	Serial.println("Initialize DS3231");;
    10ce:	67 e0       	ldi	r22, 0x07	; 7
    10d0:	72 e0       	ldi	r23, 0x02	; 2
    10d2:	87 eb       	ldi	r24, 0xB7	; 183
    10d4:	94 e0       	ldi	r25, 0x04	; 4
    10d6:	0e 94 86 49 	call	0x930c	; 0x930c <_ZN5Print7printlnEPKc>
	clock.begin();
    10da:	84 e2       	ldi	r24, 0x24	; 36
    10dc:	93 e0       	ldi	r25, 0x03	; 3
    10de:	0e 94 b5 14 	call	0x296a	; 0x296a <_ZN6DS32315beginEv>

	// Set sketch compiling time
	clock.setDateTime(__DATE__, __TIME__);
    10e2:	49 e1       	ldi	r20, 0x19	; 25
    10e4:	52 e0       	ldi	r21, 0x02	; 2
    10e6:	62 e2       	ldi	r22, 0x22	; 34
    10e8:	72 e0       	ldi	r23, 0x02	; 2
    10ea:	84 e2       	ldi	r24, 0x24	; 36
    10ec:	93 e0       	ldi	r25, 0x03	; 3
    10ee:	0e 94 7a 15 	call	0x2af4	; 0x2af4 <_ZN6DS323111setDateTimeEPKcS1_>

	if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C))
    10f2:	01 e0       	ldi	r16, 0x01	; 1
    10f4:	21 e0       	ldi	r18, 0x01	; 1
    10f6:	4c e3       	ldi	r20, 0x3C	; 60
    10f8:	62 e0       	ldi	r22, 0x02	; 2
    10fa:	8e ed       	ldi	r24, 0xDE	; 222
    10fc:	92 e0       	ldi	r25, 0x02	; 2
    10fe:	0e 94 03 34 	call	0x6806	; 0x6806 <_ZN16Adafruit_SSD13065beginEhhbb>
    1102:	98 2f       	mov	r25, r24
    1104:	81 e0       	ldi	r24, 0x01	; 1
    1106:	89 27       	eor	r24, r25
    1108:	88 23       	and	r24, r24
    110a:	41 f0       	breq	.+16     	; 0x111c <setup+0x74>
	{ // Address for 128x64
		Serial.println(F("SSD1306 allocation failed"));
    110c:	8e ea       	ldi	r24, 0xAE	; 174
    110e:	93 e0       	ldi	r25, 0x03	; 3
    1110:	bc 01       	movw	r22, r24
    1112:	87 eb       	ldi	r24, 0xB7	; 183
    1114:	94 e0       	ldi	r25, 0x04	; 4
    1116:	0e 94 66 49 	call	0x92cc	; 0x92cc <_ZN5Print7printlnEPK19__FlashStringHelper>
		for(;;); // Don't proceed, loop forever
    111a:	ff cf       	rjmp	.-2      	; 0x111a <setup+0x72>
	}
	dht.begin();
    111c:	67 e3       	ldi	r22, 0x37	; 55
    111e:	8c e3       	ldi	r24, 0x3C	; 60
    1120:	93 e0       	ldi	r25, 0x03	; 3
    1122:	45 d3       	rcall	.+1674   	; 0x17ae <_ZN3DHT5beginEh>
}
    1124:	00 00       	nop
    1126:	df 91       	pop	r29
    1128:	cf 91       	pop	r28
    112a:	0f 91       	pop	r16
    112c:	08 95       	ret

0000112e <loop>:

void loop() {
    112e:	af 92       	push	r10
    1130:	bf 92       	push	r11
    1132:	cf 92       	push	r12
    1134:	df 92       	push	r13
    1136:	ef 92       	push	r14
    1138:	ff 92       	push	r15
    113a:	0f 93       	push	r16
    113c:	1f 93       	push	r17
    113e:	cf 93       	push	r28
    1140:	df 93       	push	r29
    1142:	cd b7       	in	r28, 0x3d	; 61
    1144:	de b7       	in	r29, 0x3e	; 62
    1146:	ea 97       	sbiw	r28, 0x3a	; 58
    1148:	0f b6       	in	r0, 0x3f	; 63
    114a:	f8 94       	cli
    114c:	de bf       	out	0x3e, r29	; 62
    114e:	0f be       	out	0x3f, r0	; 63
    1150:	cd bf       	out	0x3d, r28	; 61
	display.clearDisplay();
    1152:	8e ed       	ldi	r24, 0xDE	; 222
    1154:	92 e0       	ldi	r25, 0x02	; 2
    1156:	0e 94 53 39 	call	0x72a6	; 0x72a6 <_ZN16Adafruit_SSD130612clearDisplayEv>
	display.setTextSize(1); // Normal 1:1 pixel scale
    115a:	61 e0       	ldi	r22, 0x01	; 1
    115c:	8e ed       	ldi	r24, 0xDE	; 222
    115e:	92 e0       	ldi	r25, 0x02	; 2
    1160:	0e 94 e2 2f 	call	0x5fc4	; 0x5fc4 <_ZN12Adafruit_GFX11setTextSizeEh>
	display.setTextColor(WHITE); // Draw white text
    1164:	61 e0       	ldi	r22, 0x01	; 1
    1166:	70 e0       	ldi	r23, 0x00	; 0
    1168:	8e ed       	ldi	r24, 0xDE	; 222
    116a:	92 e0       	ldi	r25, 0x02	; 2
    116c:	7a df       	rcall	.-268    	; 0x1062 <_ZN12Adafruit_GFX12setTextColorEj>
	display.setCursor(0,0); // Start at top-left corner
    116e:	40 e0       	ldi	r20, 0x00	; 0
    1170:	50 e0       	ldi	r21, 0x00	; 0
    1172:	60 e0       	ldi	r22, 0x00	; 0
    1174:	70 e0       	ldi	r23, 0x00	; 0
    1176:	8e ed       	ldi	r24, 0xDE	; 222
    1178:	92 e0       	ldi	r25, 0x02	; 2
    117a:	4f df       	rcall	.-354    	; 0x101a <_ZN12Adafruit_GFX9setCursorEii>
	
	unsigned long currentMillis = millis();
    117c:	0e 94 82 4a 	call	0x9504	; 0x9504 <millis>
    1180:	dc 01       	movw	r26, r24
    1182:	cb 01       	movw	r24, r22
    1184:	89 83       	std	Y+1, r24	; 0x01
    1186:	9a 83       	std	Y+2, r25	; 0x02
    1188:	ab 83       	std	Y+3, r26	; 0x03
    118a:	bc 83       	std	Y+4, r27	; 0x04
	// Wait a few seconds between measurements.
	if (currentMillis - previousMillis >= tempinterval){
    118c:	80 91 50 03 	lds	r24, 0x0350	; 0x800350 <previousMillis>
    1190:	90 91 51 03 	lds	r25, 0x0351	; 0x800351 <previousMillis+0x1>
    1194:	a0 91 52 03 	lds	r26, 0x0352	; 0x800352 <previousMillis+0x2>
    1198:	b0 91 53 03 	lds	r27, 0x0353	; 0x800353 <previousMillis+0x3>
    119c:	29 81       	ldd	r18, Y+1	; 0x01
    119e:	3a 81       	ldd	r19, Y+2	; 0x02
    11a0:	4b 81       	ldd	r20, Y+3	; 0x03
    11a2:	5c 81       	ldd	r21, Y+4	; 0x04
    11a4:	79 01       	movw	r14, r18
    11a6:	8a 01       	movw	r16, r20
    11a8:	e8 1a       	sub	r14, r24
    11aa:	f9 0a       	sbc	r15, r25
    11ac:	0a 0b       	sbc	r16, r26
    11ae:	1b 0b       	sbc	r17, r27
    11b0:	d8 01       	movw	r26, r16
    11b2:	c7 01       	movw	r24, r14
    11b4:	80 31       	cpi	r24, 0x10	; 16
    11b6:	97 42       	sbci	r25, 0x27	; 39
    11b8:	a1 05       	cpc	r26, r1
    11ba:	b1 05       	cpc	r27, r1
    11bc:	90 f0       	brcs	.+36     	; 0x11e2 <loop+0xb4>
		previousMillis = currentMillis;
    11be:	89 81       	ldd	r24, Y+1	; 0x01
    11c0:	9a 81       	ldd	r25, Y+2	; 0x02
    11c2:	ab 81       	ldd	r26, Y+3	; 0x03
    11c4:	bc 81       	ldd	r27, Y+4	; 0x04
    11c6:	80 93 50 03 	sts	0x0350, r24	; 0x800350 <previousMillis>
    11ca:	90 93 51 03 	sts	0x0351, r25	; 0x800351 <previousMillis+0x1>
    11ce:	a0 93 52 03 	sts	0x0352, r26	; 0x800352 <previousMillis+0x2>
    11d2:	b0 93 53 03 	sts	0x0353, r27	; 0x800353 <previousMillis+0x3>
		switched = !switched;
    11d6:	90 91 4f 03 	lds	r25, 0x034F	; 0x80034f <switched>
    11da:	81 e0       	ldi	r24, 0x01	; 1
    11dc:	89 27       	eor	r24, r25
    11de:	80 93 4f 03 	sts	0x034F, r24	; 0x80034f <switched>
	}
	
	if (switched)
    11e2:	80 91 4f 03 	lds	r24, 0x034F	; 0x80034f <switched>
    11e6:	88 23       	and	r24, r24
    11e8:	09 f4       	brne	.+2      	; 0x11ec <loop+0xbe>
    11ea:	c9 c0       	rjmp	.+402    	; 0x137e <loop+0x250>
	{
		
		int h = dht.readHumidity();
    11ec:	60 e0       	ldi	r22, 0x00	; 0
    11ee:	8c e3       	ldi	r24, 0x3C	; 60
    11f0:	93 e0       	ldi	r25, 0x03	; 3
    11f2:	c1 d4       	rcall	.+2434   	; 0x1b76 <_ZN3DHT12readHumidityEb>
    11f4:	dc 01       	movw	r26, r24
    11f6:	cb 01       	movw	r24, r22
    11f8:	bc 01       	movw	r22, r24
    11fa:	cd 01       	movw	r24, r26
    11fc:	0e 94 de 43 	call	0x87bc	; 0x87bc <__fixsfsi>
    1200:	dc 01       	movw	r26, r24
    1202:	cb 01       	movw	r24, r22
    1204:	9e 83       	std	Y+6, r25	; 0x06
    1206:	8d 83       	std	Y+5, r24	; 0x05
		
		int t = dht.readTemperature();
    1208:	40 e0       	ldi	r20, 0x00	; 0
    120a:	60 e0       	ldi	r22, 0x00	; 0
    120c:	8c e3       	ldi	r24, 0x3C	; 60
    120e:	93 e0       	ldi	r25, 0x03	; 3
    1210:	f8 d2       	rcall	.+1520   	; 0x1802 <_ZN3DHT15readTemperatureEbb>
    1212:	dc 01       	movw	r26, r24
    1214:	cb 01       	movw	r24, r22
    1216:	bc 01       	movw	r22, r24
    1218:	cd 01       	movw	r24, r26
    121a:	0e 94 de 43 	call	0x87bc	; 0x87bc <__fixsfsi>
    121e:	dc 01       	movw	r26, r24
    1220:	cb 01       	movw	r24, r22
    1222:	98 87       	std	Y+8, r25	; 0x08
    1224:	8f 83       	std	Y+7, r24	; 0x07

		// Check if any reads failed and exit early (to try again).
		if (isnan(h) || isnan(t)) {
    1226:	8d 81       	ldd	r24, Y+5	; 0x05
    1228:	9e 81       	ldd	r25, Y+6	; 0x06
    122a:	09 2e       	mov	r0, r25
    122c:	00 0c       	add	r0, r0
    122e:	aa 0b       	sbc	r26, r26
    1230:	bb 0b       	sbc	r27, r27
    1232:	bc 01       	movw	r22, r24
    1234:	cd 01       	movw	r24, r26
    1236:	0e 94 11 44 	call	0x8822	; 0x8822 <__floatsisf>
    123a:	dc 01       	movw	r26, r24
    123c:	cb 01       	movw	r24, r22
    123e:	9c 01       	movw	r18, r24
    1240:	ad 01       	movw	r20, r26
    1242:	bc 01       	movw	r22, r24
    1244:	cd 01       	movw	r24, r26
    1246:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <__unordsf2>
    124a:	88 23       	and	r24, r24
    124c:	a1 f4       	brne	.+40     	; 0x1276 <loop+0x148>
    124e:	8f 81       	ldd	r24, Y+7	; 0x07
    1250:	98 85       	ldd	r25, Y+8	; 0x08
    1252:	09 2e       	mov	r0, r25
    1254:	00 0c       	add	r0, r0
    1256:	aa 0b       	sbc	r26, r26
    1258:	bb 0b       	sbc	r27, r27
    125a:	bc 01       	movw	r22, r24
    125c:	cd 01       	movw	r24, r26
    125e:	0e 94 11 44 	call	0x8822	; 0x8822 <__floatsisf>
    1262:	dc 01       	movw	r26, r24
    1264:	cb 01       	movw	r24, r22
    1266:	9c 01       	movw	r18, r24
    1268:	ad 01       	movw	r20, r26
    126a:	bc 01       	movw	r22, r24
    126c:	cd 01       	movw	r24, r26
    126e:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <__unordsf2>
    1272:	88 23       	and	r24, r24
    1274:	11 f0       	breq	.+4      	; 0x127a <loop+0x14c>
    1276:	81 e0       	ldi	r24, 0x01	; 1
    1278:	01 c0       	rjmp	.+2      	; 0x127c <loop+0x14e>
    127a:	80 e0       	ldi	r24, 0x00	; 0
    127c:	88 23       	and	r24, r24
    127e:	41 f0       	breq	.+16     	; 0x1290 <loop+0x162>
			Serial.println(F("Failed to read from DHT sensor!"));
    1280:	88 ec       	ldi	r24, 0xC8	; 200
    1282:	93 e0       	ldi	r25, 0x03	; 3
    1284:	bc 01       	movw	r22, r24
    1286:	87 eb       	ldi	r24, 0xB7	; 183
    1288:	94 e0       	ldi	r25, 0x04	; 4
    128a:	0e 94 66 49 	call	0x92cc	; 0x92cc <_ZN5Print7printlnEPK19__FlashStringHelper>
			return;
    128e:	2a c1       	rjmp	.+596    	; 0x14e4 <loop+0x3b6>
		}

		// Compute heat index in Celsius (isFahreheit = false)
		int hic = dht.computeHeatIndex(t, h, false);
    1290:	8d 81       	ldd	r24, Y+5	; 0x05
    1292:	9e 81       	ldd	r25, Y+6	; 0x06
    1294:	09 2e       	mov	r0, r25
    1296:	00 0c       	add	r0, r0
    1298:	aa 0b       	sbc	r26, r26
    129a:	bb 0b       	sbc	r27, r27
    129c:	bc 01       	movw	r22, r24
    129e:	cd 01       	movw	r24, r26
    12a0:	0e 94 11 44 	call	0x8822	; 0x8822 <__floatsisf>
    12a4:	5b 01       	movw	r10, r22
    12a6:	6c 01       	movw	r12, r24
    12a8:	8f 81       	ldd	r24, Y+7	; 0x07
    12aa:	98 85       	ldd	r25, Y+8	; 0x08
    12ac:	09 2e       	mov	r0, r25
    12ae:	00 0c       	add	r0, r0
    12b0:	aa 0b       	sbc	r26, r26
    12b2:	bb 0b       	sbc	r27, r27
    12b4:	bc 01       	movw	r22, r24
    12b6:	cd 01       	movw	r24, r26
    12b8:	0e 94 11 44 	call	0x8822	; 0x8822 <__floatsisf>
    12bc:	dc 01       	movw	r26, r24
    12be:	cb 01       	movw	r24, r22
    12c0:	e1 2c       	mov	r14, r1
    12c2:	96 01       	movw	r18, r12
    12c4:	85 01       	movw	r16, r10
    12c6:	ac 01       	movw	r20, r24
    12c8:	bd 01       	movw	r22, r26
    12ca:	8c e3       	ldi	r24, 0x3C	; 60
    12cc:	93 e0       	ldi	r25, 0x03	; 3
    12ce:	fd d4       	rcall	.+2554   	; 0x1cca <_ZN3DHT16computeHeatIndexEffb>
    12d0:	dc 01       	movw	r26, r24
    12d2:	cb 01       	movw	r24, r22
    12d4:	bc 01       	movw	r22, r24
    12d6:	cd 01       	movw	r24, r26
    12d8:	0e 94 de 43 	call	0x87bc	; 0x87bc <__fixsfsi>
    12dc:	dc 01       	movw	r26, r24
    12de:	cb 01       	movw	r24, r22
    12e0:	9a 87       	std	Y+10, r25	; 0x0a
    12e2:	89 87       	std	Y+9, r24	; 0x09

		display.print(F("Humidity: "));
    12e4:	88 ee       	ldi	r24, 0xE8	; 232
    12e6:	93 e0       	ldi	r25, 0x03	; 3
    12e8:	bc 01       	movw	r22, r24
    12ea:	8e ed       	ldi	r24, 0xDE	; 222
    12ec:	92 e0       	ldi	r25, 0x02	; 2
    12ee:	0e 94 29 49 	call	0x9252	; 0x9252 <_ZN5Print5printEPK19__FlashStringHelper>
		display.print(h);
    12f2:	8d 81       	ldd	r24, Y+5	; 0x05
    12f4:	9e 81       	ldd	r25, Y+6	; 0x06
    12f6:	4a e0       	ldi	r20, 0x0A	; 10
    12f8:	50 e0       	ldi	r21, 0x00	; 0
    12fa:	bc 01       	movw	r22, r24
    12fc:	8e ed       	ldi	r24, 0xDE	; 222
    12fe:	92 e0       	ldi	r25, 0x02	; 2
    1300:	0e 94 32 4a 	call	0x9464	; 0x9464 <_ZN5Print5printEii>
		display.println("%");
    1304:	6e e2       	ldi	r22, 0x2E	; 46
    1306:	72 e0       	ldi	r23, 0x02	; 2
    1308:	8e ed       	ldi	r24, 0xDE	; 222
    130a:	92 e0       	ldi	r25, 0x02	; 2
    130c:	0e 94 86 49 	call	0x930c	; 0x930c <_ZN5Print7printlnEPKc>
		display.print(F("Temperature: "));
    1310:	83 ef       	ldi	r24, 0xF3	; 243
    1312:	93 e0       	ldi	r25, 0x03	; 3
    1314:	bc 01       	movw	r22, r24
    1316:	8e ed       	ldi	r24, 0xDE	; 222
    1318:	92 e0       	ldi	r25, 0x02	; 2
    131a:	0e 94 29 49 	call	0x9252	; 0x9252 <_ZN5Print5printEPK19__FlashStringHelper>
		display.print(t);
    131e:	8f 81       	ldd	r24, Y+7	; 0x07
    1320:	98 85       	ldd	r25, Y+8	; 0x08
    1322:	4a e0       	ldi	r20, 0x0A	; 10
    1324:	50 e0       	ldi	r21, 0x00	; 0
    1326:	bc 01       	movw	r22, r24
    1328:	8e ed       	ldi	r24, 0xDE	; 222
    132a:	92 e0       	ldi	r25, 0x02	; 2
    132c:	0e 94 32 4a 	call	0x9464	; 0x9464 <_ZN5Print5printEii>
		display.write(grad);
    1330:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <grad>
    1334:	68 2f       	mov	r22, r24
    1336:	8e ed       	ldi	r24, 0xDE	; 222
    1338:	92 e0       	ldi	r25, 0x02	; 2
    133a:	0e 94 ca 2d 	call	0x5b94	; 0x5b94 <_ZN12Adafruit_GFX5writeEh>
		display.println();
    133e:	8e ed       	ldi	r24, 0xDE	; 222
    1340:	92 e0       	ldi	r25, 0x02	; 2
    1342:	0e 94 63 49 	call	0x92c6	; 0x92c6 <_ZN5Print7printlnEv>
		display.print(F("Heat index: "));
    1346:	81 e0       	ldi	r24, 0x01	; 1
    1348:	94 e0       	ldi	r25, 0x04	; 4
    134a:	bc 01       	movw	r22, r24
    134c:	8e ed       	ldi	r24, 0xDE	; 222
    134e:	92 e0       	ldi	r25, 0x02	; 2
    1350:	0e 94 29 49 	call	0x9252	; 0x9252 <_ZN5Print5printEPK19__FlashStringHelper>
		display.print(hic);
    1354:	89 85       	ldd	r24, Y+9	; 0x09
    1356:	9a 85       	ldd	r25, Y+10	; 0x0a
    1358:	4a e0       	ldi	r20, 0x0A	; 10
    135a:	50 e0       	ldi	r21, 0x00	; 0
    135c:	bc 01       	movw	r22, r24
    135e:	8e ed       	ldi	r24, 0xDE	; 222
    1360:	92 e0       	ldi	r25, 0x02	; 2
    1362:	0e 94 32 4a 	call	0x9464	; 0x9464 <_ZN5Print5printEii>
		display.println(grad);
    1366:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <grad>
    136a:	68 2f       	mov	r22, r24
    136c:	8e ed       	ldi	r24, 0xDE	; 222
    136e:	92 e0       	ldi	r25, 0x02	; 2
    1370:	0e 94 96 49 	call	0x932c	; 0x932c <_ZN5Print7printlnEc>
		
		display.display();
    1374:	8e ed       	ldi	r24, 0xDE	; 222
    1376:	92 e0       	ldi	r25, 0x02	; 2
    1378:	0e 94 b1 3d 	call	0x7b62	; 0x7b62 <_ZN16Adafruit_SSD13067displayEv>
    137c:	b3 c0       	rjmp	.+358    	; 0x14e4 <loop+0x3b6>
	}
	else
	{
		dt = clock.getDateTime();
    137e:	ce 01       	movw	r24, r28
    1380:	8f 96       	adiw	r24, 0x2f	; 47
    1382:	64 e2       	ldi	r22, 0x24	; 36
    1384:	73 e0       	ldi	r23, 0x03	; 3
    1386:	0e 94 32 16 	call	0x2c64	; 0x2c64 <_ZN6DS323111getDateTimeEv>
    138a:	8c e0       	ldi	r24, 0x0C	; 12
    138c:	fe 01       	movw	r30, r28
    138e:	bf 96       	adiw	r30, 0x2f	; 47
    1390:	a0 e3       	ldi	r26, 0x30	; 48
    1392:	b3 e0       	ldi	r27, 0x03	; 3
    1394:	01 90       	ld	r0, Z+
    1396:	0d 92       	st	X+, r0
    1398:	8a 95       	dec	r24
    139a:	e1 f7       	brne	.-8      	; 0x1394 <loop+0x266>
		display.clearDisplay();
    139c:	8e ed       	ldi	r24, 0xDE	; 222
    139e:	92 e0       	ldi	r25, 0x02	; 2
    13a0:	0e 94 53 39 	call	0x72a6	; 0x72a6 <_ZN16Adafruit_SSD130612clearDisplayEv>
		// For leading zero look to DS3231_dateformat example
		
		display.setTextSize(2);
    13a4:	62 e0       	ldi	r22, 0x02	; 2
    13a6:	8e ed       	ldi	r24, 0xDE	; 222
    13a8:	92 e0       	ldi	r25, 0x02	; 2
    13aa:	0e 94 e2 2f 	call	0x5fc4	; 0x5fc4 <_ZN12Adafruit_GFX11setTextSizeEh>
		display.setTextColor(WHITE);
    13ae:	61 e0       	ldi	r22, 0x01	; 1
    13b0:	70 e0       	ldi	r23, 0x00	; 0
    13b2:	8e ed       	ldi	r24, 0xDE	; 222
    13b4:	92 e0       	ldi	r25, 0x02	; 2
    13b6:	55 de       	rcall	.-854    	; 0x1062 <_ZN12Adafruit_GFX12setTextColorEj>
		display.setCursor(0,0);
    13b8:	40 e0       	ldi	r20, 0x00	; 0
    13ba:	50 e0       	ldi	r21, 0x00	; 0
    13bc:	60 e0       	ldi	r22, 0x00	; 0
    13be:	70 e0       	ldi	r23, 0x00	; 0
    13c0:	8e ed       	ldi	r24, 0xDE	; 222
    13c2:	92 e0       	ldi	r25, 0x02	; 2
    13c4:	2a de       	rcall	.-940    	; 0x101a <_ZN12Adafruit_GFX9setCursorEii>
		
		display.print(addZero(dt.hour));display.print(":");
    13c6:	80 91 34 03 	lds	r24, 0x0334	; 0x800334 <dt+0x4>
    13ca:	28 2f       	mov	r18, r24
    13cc:	30 e0       	ldi	r19, 0x00	; 0
    13ce:	ce 01       	movw	r24, r28
    13d0:	89 96       	adiw	r24, 0x29	; 41
    13d2:	b9 01       	movw	r22, r18
    13d4:	aa d0       	rcall	.+340    	; 0x152a <_Z7addZeroi>
    13d6:	ce 01       	movw	r24, r28
    13d8:	89 96       	adiw	r24, 0x29	; 41
    13da:	bc 01       	movw	r22, r24
    13dc:	8e ed       	ldi	r24, 0xDE	; 222
    13de:	92 e0       	ldi	r25, 0x02	; 2
    13e0:	0e 94 4d 49 	call	0x929a	; 0x929a <_ZN5Print5printERK6String>
    13e4:	ce 01       	movw	r24, r28
    13e6:	89 96       	adiw	r24, 0x29	; 41
    13e8:	0e 94 19 4c 	call	0x9832	; 0x9832 <_ZN6StringD1Ev>
    13ec:	60 e3       	ldi	r22, 0x30	; 48
    13ee:	72 e0       	ldi	r23, 0x02	; 2
    13f0:	8e ed       	ldi	r24, 0xDE	; 222
    13f2:	92 e0       	ldi	r25, 0x02	; 2
    13f4:	0e 94 5b 49 	call	0x92b6	; 0x92b6 <_ZN5Print5printEPKc>
		display.print(addZero(dt.minute));display.print(":");
    13f8:	80 91 35 03 	lds	r24, 0x0335	; 0x800335 <dt+0x5>
    13fc:	28 2f       	mov	r18, r24
    13fe:	30 e0       	ldi	r19, 0x00	; 0
    1400:	ce 01       	movw	r24, r28
    1402:	83 96       	adiw	r24, 0x23	; 35
    1404:	b9 01       	movw	r22, r18
    1406:	91 d0       	rcall	.+290    	; 0x152a <_Z7addZeroi>
    1408:	ce 01       	movw	r24, r28
    140a:	83 96       	adiw	r24, 0x23	; 35
    140c:	bc 01       	movw	r22, r24
    140e:	8e ed       	ldi	r24, 0xDE	; 222
    1410:	92 e0       	ldi	r25, 0x02	; 2
    1412:	0e 94 4d 49 	call	0x929a	; 0x929a <_ZN5Print5printERK6String>
    1416:	ce 01       	movw	r24, r28
    1418:	83 96       	adiw	r24, 0x23	; 35
    141a:	0e 94 19 4c 	call	0x9832	; 0x9832 <_ZN6StringD1Ev>
    141e:	60 e3       	ldi	r22, 0x30	; 48
    1420:	72 e0       	ldi	r23, 0x02	; 2
    1422:	8e ed       	ldi	r24, 0xDE	; 222
    1424:	92 e0       	ldi	r25, 0x02	; 2
    1426:	0e 94 5b 49 	call	0x92b6	; 0x92b6 <_ZN5Print5printEPKc>
		display.println(addZero(dt.second));
    142a:	80 91 36 03 	lds	r24, 0x0336	; 0x800336 <dt+0x6>
    142e:	28 2f       	mov	r18, r24
    1430:	30 e0       	ldi	r19, 0x00	; 0
    1432:	ce 01       	movw	r24, r28
    1434:	4d 96       	adiw	r24, 0x1d	; 29
    1436:	b9 01       	movw	r22, r18
    1438:	78 d0       	rcall	.+240    	; 0x152a <_Z7addZeroi>
    143a:	ce 01       	movw	r24, r28
    143c:	4d 96       	adiw	r24, 0x1d	; 29
    143e:	bc 01       	movw	r22, r24
    1440:	8e ed       	ldi	r24, 0xDE	; 222
    1442:	92 e0       	ldi	r25, 0x02	; 2
    1444:	0e 94 76 49 	call	0x92ec	; 0x92ec <_ZN5Print7printlnERK6String>
    1448:	ce 01       	movw	r24, r28
    144a:	4d 96       	adiw	r24, 0x1d	; 29
    144c:	0e 94 19 4c 	call	0x9832	; 0x9832 <_ZN6StringD1Ev>
		
		display.print(addZero(dt.day));display.print("/");
    1450:	80 91 33 03 	lds	r24, 0x0333	; 0x800333 <dt+0x3>
    1454:	28 2f       	mov	r18, r24
    1456:	30 e0       	ldi	r19, 0x00	; 0
    1458:	ce 01       	movw	r24, r28
    145a:	47 96       	adiw	r24, 0x17	; 23
    145c:	b9 01       	movw	r22, r18
    145e:	65 d0       	rcall	.+202    	; 0x152a <_Z7addZeroi>
    1460:	ce 01       	movw	r24, r28
    1462:	47 96       	adiw	r24, 0x17	; 23
    1464:	bc 01       	movw	r22, r24
    1466:	8e ed       	ldi	r24, 0xDE	; 222
    1468:	92 e0       	ldi	r25, 0x02	; 2
    146a:	0e 94 4d 49 	call	0x929a	; 0x929a <_ZN5Print5printERK6String>
    146e:	ce 01       	movw	r24, r28
    1470:	47 96       	adiw	r24, 0x17	; 23
    1472:	0e 94 19 4c 	call	0x9832	; 0x9832 <_ZN6StringD1Ev>
    1476:	62 e3       	ldi	r22, 0x32	; 50
    1478:	72 e0       	ldi	r23, 0x02	; 2
    147a:	8e ed       	ldi	r24, 0xDE	; 222
    147c:	92 e0       	ldi	r25, 0x02	; 2
    147e:	0e 94 5b 49 	call	0x92b6	; 0x92b6 <_ZN5Print5printEPKc>
		display.print(addZero(dt.month));display.print("/");
    1482:	80 91 32 03 	lds	r24, 0x0332	; 0x800332 <dt+0x2>
    1486:	28 2f       	mov	r18, r24
    1488:	30 e0       	ldi	r19, 0x00	; 0
    148a:	ce 01       	movw	r24, r28
    148c:	41 96       	adiw	r24, 0x11	; 17
    148e:	b9 01       	movw	r22, r18
    1490:	4c d0       	rcall	.+152    	; 0x152a <_Z7addZeroi>
    1492:	ce 01       	movw	r24, r28
    1494:	41 96       	adiw	r24, 0x11	; 17
    1496:	bc 01       	movw	r22, r24
    1498:	8e ed       	ldi	r24, 0xDE	; 222
    149a:	92 e0       	ldi	r25, 0x02	; 2
    149c:	0e 94 4d 49 	call	0x929a	; 0x929a <_ZN5Print5printERK6String>
    14a0:	ce 01       	movw	r24, r28
    14a2:	41 96       	adiw	r24, 0x11	; 17
    14a4:	0e 94 19 4c 	call	0x9832	; 0x9832 <_ZN6StringD1Ev>
    14a8:	62 e3       	ldi	r22, 0x32	; 50
    14aa:	72 e0       	ldi	r23, 0x02	; 2
    14ac:	8e ed       	ldi	r24, 0xDE	; 222
    14ae:	92 e0       	ldi	r25, 0x02	; 2
    14b0:	0e 94 5b 49 	call	0x92b6	; 0x92b6 <_ZN5Print5printEPKc>
		display.print(addZero(dt.year));
    14b4:	80 91 30 03 	lds	r24, 0x0330	; 0x800330 <dt>
    14b8:	90 91 31 03 	lds	r25, 0x0331	; 0x800331 <dt+0x1>
    14bc:	9c 01       	movw	r18, r24
    14be:	ce 01       	movw	r24, r28
    14c0:	0b 96       	adiw	r24, 0x0b	; 11
    14c2:	b9 01       	movw	r22, r18
    14c4:	32 d0       	rcall	.+100    	; 0x152a <_Z7addZeroi>
    14c6:	ce 01       	movw	r24, r28
    14c8:	0b 96       	adiw	r24, 0x0b	; 11
    14ca:	bc 01       	movw	r22, r24
    14cc:	8e ed       	ldi	r24, 0xDE	; 222
    14ce:	92 e0       	ldi	r25, 0x02	; 2
    14d0:	0e 94 4d 49 	call	0x929a	; 0x929a <_ZN5Print5printERK6String>
    14d4:	ce 01       	movw	r24, r28
    14d6:	0b 96       	adiw	r24, 0x0b	; 11
    14d8:	0e 94 19 4c 	call	0x9832	; 0x9832 <_ZN6StringD1Ev>
    14dc:	8e ed       	ldi	r24, 0xDE	; 222

		display.display();
    14de:	92 e0       	ldi	r25, 0x02	; 2
    14e0:	0e 94 b1 3d 	call	0x7b62	; 0x7b62 <_ZN16Adafruit_SSD13067displayEv>
    14e4:	ea 96       	adiw	r28, 0x3a	; 58
	}
	
}
    14e6:	0f b6       	in	r0, 0x3f	; 63
    14e8:	f8 94       	cli
    14ea:	de bf       	out	0x3e, r29	; 62
    14ec:	0f be       	out	0x3f, r0	; 63
    14ee:	cd bf       	out	0x3d, r28	; 61
    14f0:	df 91       	pop	r29
    14f2:	cf 91       	pop	r28
    14f4:	1f 91       	pop	r17
    14f6:	0f 91       	pop	r16
    14f8:	ff 90       	pop	r15
    14fa:	ef 90       	pop	r14
    14fc:	df 90       	pop	r13
    14fe:	cf 90       	pop	r12
    1500:	bf 90       	pop	r11
    1502:	af 90       	pop	r10
    1504:	08 95       	ret

00001506 <_ZN15StringSumHelperD1Ev>:
    1506:	cf 93       	push	r28
       #if __cplusplus >= 201103L || defined(__GXX_EXPERIMENTAL_CXX0X__)
	void move(String &rhs);
	#endif
};

class StringSumHelper : public String
    1508:	df 93       	push	r29
    150a:	1f 92       	push	r1
    150c:	1f 92       	push	r1
    150e:	cd b7       	in	r28, 0x3d	; 61
    1510:	de b7       	in	r29, 0x3e	; 62
    1512:	9a 83       	std	Y+2, r25	; 0x02
    1514:	89 83       	std	Y+1, r24	; 0x01
    1516:	89 81       	ldd	r24, Y+1	; 0x01
    1518:	9a 81       	ldd	r25, Y+2	; 0x02
    151a:	0e 94 19 4c 	call	0x9832	; 0x9832 <_ZN6StringD1Ev>
    151e:	00 00       	nop
    1520:	0f 90       	pop	r0
    1522:	0f 90       	pop	r0
    1524:	df 91       	pop	r29
    1526:	cf 91       	pop	r28
    1528:	08 95       	ret

0000152a <_Z7addZeroi>:

String addZero(int time)
{
    152a:	cf 93       	push	r28
    152c:	df 93       	push	r29
    152e:	cd b7       	in	r28, 0x3d	; 61
    1530:	de b7       	in	r29, 0x3e	; 62
    1532:	66 97       	sbiw	r28, 0x16	; 22
    1534:	0f b6       	in	r0, 0x3f	; 63
    1536:	f8 94       	cli
    1538:	de bf       	out	0x3e, r29	; 62
    153a:	0f be       	out	0x3f, r0	; 63
    153c:	cd bf       	out	0x3d, r28	; 61
    153e:	9c 8b       	std	Y+20, r25	; 0x14
    1540:	8b 8b       	std	Y+19, r24	; 0x13
    1542:	7e 8b       	std	Y+22, r23	; 0x16
    1544:	6d 8b       	std	Y+21, r22	; 0x15
	String ZeroRet;
    1546:	8b 89       	ldd	r24, Y+19	; 0x13
    1548:	9c 89       	ldd	r25, Y+20	; 0x14
    154a:	64 e3       	ldi	r22, 0x34	; 52
    154c:	72 e0       	ldi	r23, 0x02	; 2
    154e:	0e 94 83 4c 	call	0x9906	; 0x9906 <_ZN6StringC1EPKc>
	if (time <= 9)
    1552:	8d 89       	ldd	r24, Y+21	; 0x15
    1554:	9e 89       	ldd	r25, Y+22	; 0x16
    1556:	0a 97       	sbiw	r24, 0x0a	; 10
    1558:	0c f5       	brge	.+66     	; 0x159c <_Z7addZeroi+0x72>
	{
		ZeroRet += '0' +  (String)time;
    155a:	2d 89       	ldd	r18, Y+21	; 0x15
    155c:	3e 89       	ldd	r19, Y+22	; 0x16
    155e:	ce 01       	movw	r24, r28
    1560:	0d 96       	adiw	r24, 0x0d	; 13
    1562:	4a e0       	ldi	r20, 0x0A	; 10
    1564:	b9 01       	movw	r22, r18
    1566:	0e 94 0a 4d 	call	0x9a14	; 0x9a14 <_ZN6StringC1Eih>
    156a:	ce 01       	movw	r24, r28
    156c:	07 96       	adiw	r24, 0x07	; 7
    156e:	60 e3       	ldi	r22, 0x30	; 48
    1570:	1e dd       	rcall	.-1476   	; 0xfae <_ZN15StringSumHelperC1Ec>
    1572:	9e 01       	movw	r18, r28
    1574:	23 5f       	subi	r18, 0xF3	; 243
    1576:	3f 4f       	sbci	r19, 0xFF	; 255
    1578:	ce 01       	movw	r24, r28
    157a:	07 96       	adiw	r24, 0x07	; 7
    157c:	b9 01       	movw	r22, r18
    157e:	0e 94 66 4d 	call	0x9acc	; 0x9acc <_ZplRK15StringSumHelperRK6String>
    1582:	9c 01       	movw	r18, r24
    1584:	8b 89       	ldd	r24, Y+19	; 0x13
    1586:	9c 89       	ldd	r25, Y+20	; 0x14
    1588:	b9 01       	movw	r22, r18
    158a:	f7 dc       	rcall	.-1554   	; 0xf7a <_ZN6StringpLERKS_>
    158c:	ce 01       	movw	r24, r28
    158e:	07 96       	adiw	r24, 0x07	; 7
    1590:	ba df       	rcall	.-140    	; 0x1506 <_ZN15StringSumHelperD1Ev>
    1592:	ce 01       	movw	r24, r28
    1594:	0d 96       	adiw	r24, 0x0d	; 13
    1596:	0e 94 19 4c 	call	0x9832	; 0x9832 <_ZN6StringD1Ev>
	else
	{
		ZeroRet = (String)time;
	}
	
	return ZeroRet;
    159a:	14 c0       	rjmp	.+40     	; 0x15c4 <_Z7addZeroi+0x9a>
	{
		ZeroRet += '0' +  (String)time;
	}
	else
	{
		ZeroRet = (String)time;
    159c:	8d 89       	ldd	r24, Y+21	; 0x15
    159e:	9e 89       	ldd	r25, Y+22	; 0x16
    15a0:	4a e0       	ldi	r20, 0x0A	; 10
    15a2:	bc 01       	movw	r22, r24
    15a4:	ce 01       	movw	r24, r28
    15a6:	01 96       	adiw	r24, 0x01	; 1
    15a8:	0e 94 0a 4d 	call	0x9a14	; 0x9a14 <_ZN6StringC1Eih>
    15ac:	8b 89       	ldd	r24, Y+19	; 0x13
    15ae:	9c 89       	ldd	r25, Y+20	; 0x14
    15b0:	9e 01       	movw	r18, r28
    15b2:	2f 5f       	subi	r18, 0xFF	; 255
    15b4:	3f 4f       	sbci	r19, 0xFF	; 255
    15b6:	b9 01       	movw	r22, r18
    15b8:	0e 94 d2 4c 	call	0x99a4	; 0x99a4 <_ZN6StringaSEOS_>
    15bc:	ce 01       	movw	r24, r28
    15be:	01 96       	adiw	r24, 0x01	; 1
    15c0:	0e 94 19 4c 	call	0x9832	; 0x9832 <_ZN6StringD1Ev>
	}
	
	return ZeroRet;
    15c4:	00 00       	nop
    15c6:	8b 89       	ldd	r24, Y+19	; 0x13
    15c8:	9c 89       	ldd	r25, Y+20	; 0x14
    15ca:	66 96       	adiw	r28, 0x16	; 22
    15cc:	0f b6       	in	r0, 0x3f	; 63
    15ce:	f8 94       	cli
    15d0:	de bf       	out	0x3e, r29	; 62
    15d2:	0f be       	out	0x3f, r0	; 63
    15d4:	cd bf       	out	0x3d, r28	; 61
    15d6:	df 91       	pop	r29
    15d8:	cf 91       	pop	r28
    15da:	08 95       	ret

000015dc <_Z41__static_initialization_and_destruction_0ii>:
    15dc:	8f 92       	push	r8
    15de:	9f 92       	push	r9
    15e0:	af 92       	push	r10
    15e2:	bf 92       	push	r11
    15e4:	cf 92       	push	r12
    15e6:	df 92       	push	r13
    15e8:	ef 92       	push	r14
    15ea:	ff 92       	push	r15
    15ec:	0f 93       	push	r16
    15ee:	cf 93       	push	r28
    15f0:	df 93       	push	r29
    15f2:	00 d0       	rcall	.+0      	; 0x15f4 <_Z41__static_initialization_and_destruction_0ii+0x18>
    15f4:	1f 92       	push	r1
    15f6:	cd b7       	in	r28, 0x3d	; 61
    15f8:	de b7       	in	r29, 0x3e	; 62
    15fa:	9a 83       	std	Y+2, r25	; 0x02
    15fc:	89 83       	std	Y+1, r24	; 0x01
    15fe:	7c 83       	std	Y+4, r23	; 0x04
    1600:	6b 83       	std	Y+3, r22	; 0x03
    1602:	89 81       	ldd	r24, Y+1	; 0x01
    1604:	9a 81       	ldd	r25, Y+2	; 0x02
    1606:	01 97       	sbiw	r24, 0x01	; 1
    1608:	59 f5       	brne	.+86     	; 0x1660 <_Z41__static_initialization_and_destruction_0ii+0x84>
    160a:	8b 81       	ldd	r24, Y+3	; 0x03
    160c:	9c 81       	ldd	r25, Y+4	; 0x04
    160e:	01 96       	adiw	r24, 0x01	; 1
    1610:	39 f5       	brne	.+78     	; 0x1660 <_Z41__static_initialization_and_destruction_0ii+0x84>
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
#define OLED_RESET 4 // Reset pin # (or -1 if sharing Arduino reset pin)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
    1612:	0f 2e       	mov	r0, r31
    1614:	f0 ea       	ldi	r31, 0xA0	; 160
    1616:	8f 2e       	mov	r8, r31
    1618:	f6 e8       	ldi	r31, 0x86	; 134
    161a:	9f 2e       	mov	r9, r31
    161c:	aa 24       	eor	r10, r10
    161e:	a3 94       	inc	r10
    1620:	b1 2c       	mov	r11, r1
    1622:	f0 2d       	mov	r31, r0
    1624:	0f 2e       	mov	r0, r31
    1626:	f0 e8       	ldi	r31, 0x80	; 128
    1628:	cf 2e       	mov	r12, r31
    162a:	fa e1       	ldi	r31, 0x1A	; 26
    162c:	df 2e       	mov	r13, r31
    162e:	f6 e0       	ldi	r31, 0x06	; 6
    1630:	ef 2e       	mov	r14, r31
    1632:	f1 2c       	mov	r15, r1
    1634:	f0 2d       	mov	r31, r0
    1636:	04 e0       	ldi	r16, 0x04	; 4
    1638:	22 e1       	ldi	r18, 0x12	; 18
    163a:	34 e0       	ldi	r19, 0x04	; 4
    163c:	40 e4       	ldi	r20, 0x40	; 64
    163e:	60 e8       	ldi	r22, 0x80	; 128
    1640:	8e ed       	ldi	r24, 0xDE	; 222
    1642:	92 e0       	ldi	r25, 0x02	; 2
    1644:	0e 94 13 31 	call	0x6226	; 0x6226 <_ZN16Adafruit_SSD1306C1EhhP7TwoWireamm>

String addZero(int time);

String Datetime;
    1648:	64 e3       	ldi	r22, 0x34	; 52
    164a:	72 e0       	ldi	r23, 0x02	; 2
    164c:	8e e1       	ldi	r24, 0x1E	; 30
    164e:	93 e0       	ldi	r25, 0x03	; 3
    1650:	0e 94 83 4c 	call	0x9906	; 0x9906 <_ZN6StringC1EPKc>
#define DHTPIN 8
char grad = 0xF7;

#define DHTTYPE DHT11   // DHT 11

DHT dht(DHTPIN, DHTTYPE);
    1654:	26 e0       	ldi	r18, 0x06	; 6
    1656:	4b e0       	ldi	r20, 0x0B	; 11
    1658:	68 e0       	ldi	r22, 0x08	; 8
    165a:	8c e3       	ldi	r24, 0x3C	; 60
    165c:	93 e0       	ldi	r25, 0x03	; 3
    165e:	57 d0       	rcall	.+174    	; 0x170e <_ZN3DHTC1Ehhh>
    1660:	89 81       	ldd	r24, Y+1	; 0x01
    1662:	9a 81       	ldd	r25, Y+2	; 0x02
    1664:	89 2b       	or	r24, r25
    1666:	61 f4       	brne	.+24     	; 0x1680 <_Z41__static_initialization_and_destruction_0ii+0xa4>
    1668:	8b 81       	ldd	r24, Y+3	; 0x03
    166a:	9c 81       	ldd	r25, Y+4	; 0x04
    166c:	01 96       	adiw	r24, 0x01	; 1
    166e:	41 f4       	brne	.+16     	; 0x1680 <_Z41__static_initialization_and_destruction_0ii+0xa4>
#define OLED_RESET 4 // Reset pin # (or -1 if sharing Arduino reset pin)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

String addZero(int time);

String Datetime;
    1670:	8e e1       	ldi	r24, 0x1E	; 30
    1672:	93 e0       	ldi	r25, 0x03	; 3
    1674:	0e 94 19 4c 	call	0x9832	; 0x9832 <_ZN6StringD1Ev>
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
#define OLED_RESET 4 // Reset pin # (or -1 if sharing Arduino reset pin)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
    1678:	8e ed       	ldi	r24, 0xDE	; 222
    167a:	92 e0       	ldi	r25, 0x02	; 2
    167c:	0e 94 a5 31 	call	0x634a	; 0x634a <_ZN16Adafruit_SSD1306D1Ev>
	{
		ZeroRet = (String)time;
	}
	
	return ZeroRet;
    1680:	00 00       	nop
    1682:	0f 90       	pop	r0
    1684:	0f 90       	pop	r0
    1686:	0f 90       	pop	r0
    1688:	0f 90       	pop	r0
    168a:	df 91       	pop	r29
    168c:	cf 91       	pop	r28
    168e:	0f 91       	pop	r16
    1690:	ff 90       	pop	r15
    1692:	ef 90       	pop	r14
    1694:	df 90       	pop	r13
    1696:	cf 90       	pop	r12
    1698:	bf 90       	pop	r11
    169a:	af 90       	pop	r10
    169c:	9f 90       	pop	r9
    169e:	8f 90       	pop	r8
    16a0:	08 95       	ret

000016a2 <_GLOBAL__sub_I_display>:
    16a2:	cf 93       	push	r28
    16a4:	df 93       	push	r29
    16a6:	cd b7       	in	r28, 0x3d	; 61
    16a8:	de b7       	in	r29, 0x3e	; 62
    16aa:	6f ef       	ldi	r22, 0xFF	; 255
    16ac:	7f ef       	ldi	r23, 0xFF	; 255
    16ae:	81 e0       	ldi	r24, 0x01	; 1
    16b0:	90 e0       	ldi	r25, 0x00	; 0
    16b2:	94 df       	rcall	.-216    	; 0x15dc <_Z41__static_initialization_and_destruction_0ii>
    16b4:	df 91       	pop	r29
    16b6:	cf 91       	pop	r28
    16b8:	08 95       	ret

000016ba <_GLOBAL__sub_D_display>:
    16ba:	cf 93       	push	r28
    16bc:	df 93       	push	r29
    16be:	cd b7       	in	r28, 0x3d	; 61
    16c0:	de b7       	in	r29, 0x3e	; 62
    16c2:	6f ef       	ldi	r22, 0xFF	; 255
    16c4:	7f ef       	ldi	r23, 0xFF	; 255
    16c6:	80 e0       	ldi	r24, 0x00	; 0
    16c8:	90 e0       	ldi	r25, 0x00	; 0
    16ca:	88 df       	rcall	.-240    	; 0x15dc <_Z41__static_initialization_and_destruction_0ii>
    16cc:	df 91       	pop	r29
    16ce:	cf 91       	pop	r28
    16d0:	08 95       	ret

000016d2 <_ZN13InterruptLockC1Ev>:
 */
float DHT::computeHeatIndex(bool isFahrenheit) {
  float hi = computeHeatIndex(readTemperature(isFahrenheit), readHumidity(),
                              isFahrenheit);
  return hi;
}
    16d2:	cf 93       	push	r28
    16d4:	df 93       	push	r29
    16d6:	1f 92       	push	r1
    16d8:	1f 92       	push	r1
    16da:	cd b7       	in	r28, 0x3d	; 61
    16dc:	de b7       	in	r29, 0x3e	; 62
    16de:	9a 83       	std	Y+2, r25	; 0x02
    16e0:	89 83       	std	Y+1, r24	; 0x01
    16e2:	f8 94       	cli
    16e4:	00 00       	nop
    16e6:	0f 90       	pop	r0
    16e8:	0f 90       	pop	r0
    16ea:	df 91       	pop	r29
    16ec:	cf 91       	pop	r28
    16ee:	08 95       	ret

000016f0 <_ZN13InterruptLockD1Ev>:
    16f0:	cf 93       	push	r28
    16f2:	df 93       	push	r29
    16f4:	1f 92       	push	r1
    16f6:	1f 92       	push	r1
    16f8:	cd b7       	in	r28, 0x3d	; 61
    16fa:	de b7       	in	r29, 0x3e	; 62
    16fc:	9a 83       	std	Y+2, r25	; 0x02
    16fe:	89 83       	std	Y+1, r24	; 0x01
    1700:	78 94       	sei
    1702:	00 00       	nop
    1704:	0f 90       	pop	r0
    1706:	0f 90       	pop	r0
    1708:	df 91       	pop	r29
    170a:	cf 91       	pop	r28
    170c:	08 95       	ret

0000170e <_ZN3DHTC1Ehhh>:
    170e:	cf 93       	push	r28
    1710:	df 93       	push	r29
    1712:	cd b7       	in	r28, 0x3d	; 61
    1714:	de b7       	in	r29, 0x3e	; 62
    1716:	2b 97       	sbiw	r28, 0x0b	; 11
    1718:	0f b6       	in	r0, 0x3f	; 63
    171a:	f8 94       	cli
    171c:	de bf       	out	0x3e, r29	; 62
    171e:	0f be       	out	0x3f, r0	; 63
    1720:	cd bf       	out	0x3d, r28	; 61
    1722:	98 87       	std	Y+8, r25	; 0x08
    1724:	8f 83       	std	Y+7, r24	; 0x07
    1726:	69 87       	std	Y+9, r22	; 0x09
    1728:	4a 87       	std	Y+10, r20	; 0x0a
    172a:	2b 87       	std	Y+11, r18	; 0x0b
    172c:	8f 81       	ldd	r24, Y+7	; 0x07
    172e:	98 85       	ldd	r25, Y+8	; 0x08
    1730:	29 85       	ldd	r18, Y+9	; 0x09
    1732:	fc 01       	movw	r30, r24
    1734:	25 83       	std	Z+5, r18	; 0x05
    1736:	8f 81       	ldd	r24, Y+7	; 0x07
    1738:	98 85       	ldd	r25, Y+8	; 0x08
    173a:	2a 85       	ldd	r18, Y+10	; 0x0a
    173c:	fc 01       	movw	r30, r24
    173e:	26 83       	std	Z+6, r18	; 0x06
    1740:	89 85       	ldd	r24, Y+9	; 0x09
    1742:	88 2f       	mov	r24, r24
    1744:	90 e0       	ldi	r25, 0x00	; 0
    1746:	8d 5c       	subi	r24, 0xCD	; 205
    1748:	91 4f       	sbci	r25, 0xF1	; 241
    174a:	9a 83       	std	Y+2, r25	; 0x02
    174c:	89 83       	std	Y+1, r24	; 0x01
    174e:	89 81       	ldd	r24, Y+1	; 0x01
    1750:	9a 81       	ldd	r25, Y+2	; 0x02
    1752:	fc 01       	movw	r30, r24
    1754:	84 91       	lpm	r24, Z
    1756:	8b 83       	std	Y+3, r24	; 0x03
    1758:	8f 81       	ldd	r24, Y+7	; 0x07
    175a:	98 85       	ldd	r25, Y+8	; 0x08
    175c:	2b 81       	ldd	r18, Y+3	; 0x03
    175e:	fc 01       	movw	r30, r24
    1760:	27 83       	std	Z+7, r18	; 0x07
    1762:	89 85       	ldd	r24, Y+9	; 0x09
    1764:	88 2f       	mov	r24, r24
    1766:	90 e0       	ldi	r25, 0x00	; 0
    1768:	87 58       	subi	r24, 0x87	; 135
    176a:	91 4f       	sbci	r25, 0xF1	; 241
    176c:	9d 83       	std	Y+5, r25	; 0x05
    176e:	8c 83       	std	Y+4, r24	; 0x04
    1770:	8c 81       	ldd	r24, Y+4	; 0x04
    1772:	9d 81       	ldd	r25, Y+5	; 0x05
    1774:	fc 01       	movw	r30, r24
    1776:	84 91       	lpm	r24, Z
    1778:	8e 83       	std	Y+6, r24	; 0x06
    177a:	8f 81       	ldd	r24, Y+7	; 0x07
    177c:	98 85       	ldd	r25, Y+8	; 0x08
    177e:	2e 81       	ldd	r18, Y+6	; 0x06
    1780:	fc 01       	movw	r30, r24
    1782:	20 87       	std	Z+8, r18	; 0x08
    1784:	2f 81       	ldd	r18, Y+7	; 0x07
    1786:	38 85       	ldd	r19, Y+8	; 0x08
    1788:	80 e8       	ldi	r24, 0x80	; 128
    178a:	9e e3       	ldi	r25, 0x3E	; 62
    178c:	a0 e0       	ldi	r26, 0x00	; 0
    178e:	b0 e0       	ldi	r27, 0x00	; 0
    1790:	f9 01       	movw	r30, r18
    1792:	85 87       	std	Z+13, r24	; 0x0d
    1794:	96 87       	std	Z+14, r25	; 0x0e
    1796:	a7 87       	std	Z+15, r26	; 0x0f
    1798:	b0 8b       	std	Z+16, r27	; 0x10
    179a:	00 00       	nop
    179c:	2b 96       	adiw	r28, 0x0b	; 11
    179e:	0f b6       	in	r0, 0x3f	; 63
    17a0:	f8 94       	cli
    17a2:	de bf       	out	0x3e, r29	; 62
    17a4:	0f be       	out	0x3f, r0	; 63
    17a6:	cd bf       	out	0x3d, r28	; 61
    17a8:	df 91       	pop	r29
    17aa:	cf 91       	pop	r28
    17ac:	08 95       	ret

000017ae <_ZN3DHT5beginEh>:
    17ae:	cf 93       	push	r28
    17b0:	df 93       	push	r29
    17b2:	00 d0       	rcall	.+0      	; 0x17b4 <_ZN3DHT5beginEh+0x6>
    17b4:	cd b7       	in	r28, 0x3d	; 61
    17b6:	de b7       	in	r29, 0x3e	; 62
    17b8:	9a 83       	std	Y+2, r25	; 0x02
    17ba:	89 83       	std	Y+1, r24	; 0x01
    17bc:	6b 83       	std	Y+3, r22	; 0x03
    17be:	89 81       	ldd	r24, Y+1	; 0x01
    17c0:	9a 81       	ldd	r25, Y+2	; 0x02
    17c2:	fc 01       	movw	r30, r24
    17c4:	85 81       	ldd	r24, Z+5	; 0x05
    17c6:	62 e0       	ldi	r22, 0x02	; 2
    17c8:	0e 94 ae 4b 	call	0x975c	; 0x975c <pinMode>
    17cc:	0e 94 82 4a 	call	0x9504	; 0x9504 <millis>
    17d0:	dc 01       	movw	r26, r24
    17d2:	cb 01       	movw	r24, r22
    17d4:	80 5d       	subi	r24, 0xD0	; 208
    17d6:	97 40       	sbci	r25, 0x07	; 7
    17d8:	a1 09       	sbc	r26, r1
    17da:	b1 09       	sbc	r27, r1
    17dc:	29 81       	ldd	r18, Y+1	; 0x01
    17de:	3a 81       	ldd	r19, Y+2	; 0x02
    17e0:	f9 01       	movw	r30, r18
    17e2:	81 87       	std	Z+9, r24	; 0x09
    17e4:	92 87       	std	Z+10, r25	; 0x0a
    17e6:	a3 87       	std	Z+11, r26	; 0x0b
    17e8:	b4 87       	std	Z+12, r27	; 0x0c
    17ea:	89 81       	ldd	r24, Y+1	; 0x01
    17ec:	9a 81       	ldd	r25, Y+2	; 0x02
    17ee:	2b 81       	ldd	r18, Y+3	; 0x03
    17f0:	fc 01       	movw	r30, r24
    17f2:	22 8b       	std	Z+18, r18	; 0x12
    17f4:	00 00       	nop
    17f6:	0f 90       	pop	r0
    17f8:	0f 90       	pop	r0
    17fa:	0f 90       	pop	r0
    17fc:	df 91       	pop	r29
    17fe:	cf 91       	pop	r28
    1800:	08 95       	ret

00001802 <_ZN3DHT15readTemperatureEbb>:
    1802:	cf 93       	push	r28
    1804:	df 93       	push	r29
    1806:	cd b7       	in	r28, 0x3d	; 61
    1808:	de b7       	in	r29, 0x3e	; 62
    180a:	28 97       	sbiw	r28, 0x08	; 8
    180c:	0f b6       	in	r0, 0x3f	; 63
    180e:	f8 94       	cli
    1810:	de bf       	out	0x3e, r29	; 62
    1812:	0f be       	out	0x3f, r0	; 63
    1814:	cd bf       	out	0x3d, r28	; 61
    1816:	9e 83       	std	Y+6, r25	; 0x06
    1818:	8d 83       	std	Y+5, r24	; 0x05
    181a:	6f 83       	std	Y+7, r22	; 0x07
    181c:	48 87       	std	Y+8, r20	; 0x08
    181e:	80 e0       	ldi	r24, 0x00	; 0
    1820:	90 e0       	ldi	r25, 0x00	; 0
    1822:	a0 ec       	ldi	r26, 0xC0	; 192
    1824:	bf e7       	ldi	r27, 0x7F	; 127
    1826:	89 83       	std	Y+1, r24	; 0x01
    1828:	9a 83       	std	Y+2, r25	; 0x02
    182a:	ab 83       	std	Y+3, r26	; 0x03
    182c:	bc 83       	std	Y+4, r27	; 0x04
    182e:	8d 81       	ldd	r24, Y+5	; 0x05
    1830:	9e 81       	ldd	r25, Y+6	; 0x06
    1832:	68 85       	ldd	r22, Y+8	; 0x08
    1834:	49 d5       	rcall	.+2706   	; 0x22c8 <_ZN3DHT4readEb>
    1836:	88 23       	and	r24, r24
    1838:	09 f4       	brne	.+2      	; 0x183c <_ZN3DHT15readTemperatureEbb+0x3a>
    183a:	34 c1       	rjmp	.+616    	; 0x1aa4 <_ZN3DHT15readTemperatureEbb+0x2a2>
    183c:	8d 81       	ldd	r24, Y+5	; 0x05
    183e:	9e 81       	ldd	r25, Y+6	; 0x06
    1840:	fc 01       	movw	r30, r24
    1842:	86 81       	ldd	r24, Z+6	; 0x06
    1844:	88 2f       	mov	r24, r24
    1846:	90 e0       	ldi	r25, 0x00	; 0
    1848:	8c 30       	cpi	r24, 0x0C	; 12
    184a:	91 05       	cpc	r25, r1
    184c:	09 f4       	brne	.+2      	; 0x1850 <_ZN3DHT15readTemperatureEbb+0x4e>
    184e:	72 c0       	rjmp	.+228    	; 0x1934 <_ZN3DHT15readTemperatureEbb+0x132>
    1850:	8d 30       	cpi	r24, 0x0D	; 13
    1852:	91 05       	cpc	r25, r1
    1854:	1c f4       	brge	.+6      	; 0x185c <_ZN3DHT15readTemperatureEbb+0x5a>
    1856:	0b 97       	sbiw	r24, 0x0b	; 11
    1858:	31 f0       	breq	.+12     	; 0x1866 <_ZN3DHT15readTemperatureEbb+0x64>
    185a:	24 c1       	rjmp	.+584    	; 0x1aa4 <_ZN3DHT15readTemperatureEbb+0x2a2>
    185c:	45 97       	sbiw	r24, 0x15	; 21
    185e:	02 97       	sbiw	r24, 0x02	; 2
    1860:	08 f0       	brcs	.+2      	; 0x1864 <_ZN3DHT15readTemperatureEbb+0x62>
    1862:	20 c1       	rjmp	.+576    	; 0x1aa4 <_ZN3DHT15readTemperatureEbb+0x2a2>
    1864:	c7 c0       	rjmp	.+398    	; 0x19f4 <_ZN3DHT15readTemperatureEbb+0x1f2>
    1866:	8d 81       	ldd	r24, Y+5	; 0x05
    1868:	9e 81       	ldd	r25, Y+6	; 0x06
    186a:	fc 01       	movw	r30, r24
    186c:	82 81       	ldd	r24, Z+2	; 0x02
    186e:	88 2f       	mov	r24, r24
    1870:	90 e0       	ldi	r25, 0x00	; 0
    1872:	a0 e0       	ldi	r26, 0x00	; 0
    1874:	b0 e0       	ldi	r27, 0x00	; 0
    1876:	bc 01       	movw	r22, r24
    1878:	cd 01       	movw	r24, r26
    187a:	0e 94 0f 44 	call	0x881e	; 0x881e <__floatunsisf>
    187e:	dc 01       	movw	r26, r24
    1880:	cb 01       	movw	r24, r22
    1882:	89 83       	std	Y+1, r24	; 0x01
    1884:	9a 83       	std	Y+2, r25	; 0x02
    1886:	ab 83       	std	Y+3, r26	; 0x03
    1888:	bc 83       	std	Y+4, r27	; 0x04
    188a:	8d 81       	ldd	r24, Y+5	; 0x05
    188c:	9e 81       	ldd	r25, Y+6	; 0x06
    188e:	fc 01       	movw	r30, r24
    1890:	83 81       	ldd	r24, Z+3	; 0x03
    1892:	88 23       	and	r24, r24
    1894:	84 f4       	brge	.+32     	; 0x18b6 <_ZN3DHT15readTemperatureEbb+0xb4>
    1896:	29 81       	ldd	r18, Y+1	; 0x01
    1898:	3a 81       	ldd	r19, Y+2	; 0x02
    189a:	4b 81       	ldd	r20, Y+3	; 0x03
    189c:	5c 81       	ldd	r21, Y+4	; 0x04
    189e:	60 e0       	ldi	r22, 0x00	; 0
    18a0:	70 e0       	ldi	r23, 0x00	; 0
    18a2:	80 e8       	ldi	r24, 0x80	; 128
    18a4:	9f eb       	ldi	r25, 0xBF	; 191
    18a6:	0e 94 0d 43 	call	0x861a	; 0x861a <__subsf3>
    18aa:	dc 01       	movw	r26, r24
    18ac:	cb 01       	movw	r24, r22
    18ae:	89 83       	std	Y+1, r24	; 0x01
    18b0:	9a 83       	std	Y+2, r25	; 0x02
    18b2:	ab 83       	std	Y+3, r26	; 0x03
    18b4:	bc 83       	std	Y+4, r27	; 0x04
    18b6:	8d 81       	ldd	r24, Y+5	; 0x05
    18b8:	9e 81       	ldd	r25, Y+6	; 0x06
    18ba:	fc 01       	movw	r30, r24
    18bc:	83 81       	ldd	r24, Z+3	; 0x03
    18be:	88 2f       	mov	r24, r24
    18c0:	90 e0       	ldi	r25, 0x00	; 0
    18c2:	8f 70       	andi	r24, 0x0F	; 15
    18c4:	99 27       	eor	r25, r25
    18c6:	09 2e       	mov	r0, r25
    18c8:	00 0c       	add	r0, r0
    18ca:	aa 0b       	sbc	r26, r26
    18cc:	bb 0b       	sbc	r27, r27
    18ce:	bc 01       	movw	r22, r24
    18d0:	cd 01       	movw	r24, r26
    18d2:	0e 94 11 44 	call	0x8822	; 0x8822 <__floatsisf>
    18d6:	dc 01       	movw	r26, r24
    18d8:	cb 01       	movw	r24, r22
    18da:	2d ec       	ldi	r18, 0xCD	; 205
    18dc:	3c ec       	ldi	r19, 0xCC	; 204
    18de:	4c ec       	ldi	r20, 0xCC	; 204
    18e0:	5d e3       	ldi	r21, 0x3D	; 61
    18e2:	bc 01       	movw	r22, r24
    18e4:	cd 01       	movw	r24, r26
    18e6:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    18ea:	dc 01       	movw	r26, r24
    18ec:	cb 01       	movw	r24, r22
    18ee:	9c 01       	movw	r18, r24
    18f0:	ad 01       	movw	r20, r26
    18f2:	69 81       	ldd	r22, Y+1	; 0x01
    18f4:	7a 81       	ldd	r23, Y+2	; 0x02
    18f6:	8b 81       	ldd	r24, Y+3	; 0x03
    18f8:	9c 81       	ldd	r25, Y+4	; 0x04
    18fa:	0e 94 0e 43 	call	0x861c	; 0x861c <__addsf3>
    18fe:	dc 01       	movw	r26, r24
    1900:	cb 01       	movw	r24, r22
    1902:	89 83       	std	Y+1, r24	; 0x01
    1904:	9a 83       	std	Y+2, r25	; 0x02
    1906:	ab 83       	std	Y+3, r26	; 0x03
    1908:	bc 83       	std	Y+4, r27	; 0x04
    190a:	8f 81       	ldd	r24, Y+7	; 0x07
    190c:	88 23       	and	r24, r24
    190e:	09 f4       	brne	.+2      	; 0x1912 <_ZN3DHT15readTemperatureEbb+0x110>
    1910:	c4 c0       	rjmp	.+392    	; 0x1a9a <_ZN3DHT15readTemperatureEbb+0x298>
    1912:	89 81       	ldd	r24, Y+1	; 0x01
    1914:	9a 81       	ldd	r25, Y+2	; 0x02
    1916:	ab 81       	ldd	r26, Y+3	; 0x03
    1918:	bc 81       	ldd	r27, Y+4	; 0x04
    191a:	2d 81       	ldd	r18, Y+5	; 0x05
    191c:	3e 81       	ldd	r19, Y+6	; 0x06
    191e:	ac 01       	movw	r20, r24
    1920:	bd 01       	movw	r22, r26
    1922:	c9 01       	movw	r24, r18
    1924:	ce d0       	rcall	.+412    	; 0x1ac2 <_ZN3DHT11convertCtoFEf>
    1926:	dc 01       	movw	r26, r24
    1928:	cb 01       	movw	r24, r22
    192a:	89 83       	std	Y+1, r24	; 0x01
    192c:	9a 83       	std	Y+2, r25	; 0x02
    192e:	ab 83       	std	Y+3, r26	; 0x03
    1930:	bc 83       	std	Y+4, r27	; 0x04
    1932:	b3 c0       	rjmp	.+358    	; 0x1a9a <_ZN3DHT15readTemperatureEbb+0x298>
    1934:	8d 81       	ldd	r24, Y+5	; 0x05
    1936:	9e 81       	ldd	r25, Y+6	; 0x06
    1938:	fc 01       	movw	r30, r24
    193a:	82 81       	ldd	r24, Z+2	; 0x02
    193c:	88 2f       	mov	r24, r24
    193e:	90 e0       	ldi	r25, 0x00	; 0
    1940:	a0 e0       	ldi	r26, 0x00	; 0
    1942:	b0 e0       	ldi	r27, 0x00	; 0
    1944:	bc 01       	movw	r22, r24
    1946:	cd 01       	movw	r24, r26
    1948:	0e 94 0f 44 	call	0x881e	; 0x881e <__floatunsisf>
    194c:	dc 01       	movw	r26, r24
    194e:	cb 01       	movw	r24, r22
    1950:	89 83       	std	Y+1, r24	; 0x01
    1952:	9a 83       	std	Y+2, r25	; 0x02
    1954:	ab 83       	std	Y+3, r26	; 0x03
    1956:	bc 83       	std	Y+4, r27	; 0x04
    1958:	8d 81       	ldd	r24, Y+5	; 0x05
    195a:	9e 81       	ldd	r25, Y+6	; 0x06
    195c:	fc 01       	movw	r30, r24
    195e:	83 81       	ldd	r24, Z+3	; 0x03
    1960:	88 2f       	mov	r24, r24
    1962:	90 e0       	ldi	r25, 0x00	; 0
    1964:	8f 70       	andi	r24, 0x0F	; 15
    1966:	99 27       	eor	r25, r25
    1968:	09 2e       	mov	r0, r25
    196a:	00 0c       	add	r0, r0
    196c:	aa 0b       	sbc	r26, r26
    196e:	bb 0b       	sbc	r27, r27
    1970:	bc 01       	movw	r22, r24
    1972:	cd 01       	movw	r24, r26
    1974:	0e 94 11 44 	call	0x8822	; 0x8822 <__floatsisf>
    1978:	dc 01       	movw	r26, r24
    197a:	cb 01       	movw	r24, r22
    197c:	2d ec       	ldi	r18, 0xCD	; 205
    197e:	3c ec       	ldi	r19, 0xCC	; 204
    1980:	4c ec       	ldi	r20, 0xCC	; 204
    1982:	5d e3       	ldi	r21, 0x3D	; 61
    1984:	bc 01       	movw	r22, r24
    1986:	cd 01       	movw	r24, r26
    1988:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    198c:	dc 01       	movw	r26, r24
    198e:	cb 01       	movw	r24, r22
    1990:	9c 01       	movw	r18, r24
    1992:	ad 01       	movw	r20, r26
    1994:	69 81       	ldd	r22, Y+1	; 0x01
    1996:	7a 81       	ldd	r23, Y+2	; 0x02
    1998:	8b 81       	ldd	r24, Y+3	; 0x03
    199a:	9c 81       	ldd	r25, Y+4	; 0x04
    199c:	0e 94 0e 43 	call	0x861c	; 0x861c <__addsf3>
    19a0:	dc 01       	movw	r26, r24
    19a2:	cb 01       	movw	r24, r22
    19a4:	89 83       	std	Y+1, r24	; 0x01
    19a6:	9a 83       	std	Y+2, r25	; 0x02
    19a8:	ab 83       	std	Y+3, r26	; 0x03
    19aa:	bc 83       	std	Y+4, r27	; 0x04
    19ac:	8d 81       	ldd	r24, Y+5	; 0x05
    19ae:	9e 81       	ldd	r25, Y+6	; 0x06
    19b0:	fc 01       	movw	r30, r24
    19b2:	82 81       	ldd	r24, Z+2	; 0x02
    19b4:	88 23       	and	r24, r24
    19b6:	4c f4       	brge	.+18     	; 0x19ca <_ZN3DHT15readTemperatureEbb+0x1c8>
    19b8:	89 81       	ldd	r24, Y+1	; 0x01
    19ba:	9a 81       	ldd	r25, Y+2	; 0x02
    19bc:	ab 81       	ldd	r26, Y+3	; 0x03
    19be:	bc 81       	ldd	r27, Y+4	; 0x04
    19c0:	b0 58       	subi	r27, 0x80	; 128
    19c2:	89 83       	std	Y+1, r24	; 0x01
    19c4:	9a 83       	std	Y+2, r25	; 0x02
    19c6:	ab 83       	std	Y+3, r26	; 0x03
    19c8:	bc 83       	std	Y+4, r27	; 0x04
    19ca:	8f 81       	ldd	r24, Y+7	; 0x07
    19cc:	88 23       	and	r24, r24
    19ce:	09 f4       	brne	.+2      	; 0x19d2 <_ZN3DHT15readTemperatureEbb+0x1d0>
    19d0:	66 c0       	rjmp	.+204    	; 0x1a9e <_ZN3DHT15readTemperatureEbb+0x29c>
    19d2:	89 81       	ldd	r24, Y+1	; 0x01
    19d4:	9a 81       	ldd	r25, Y+2	; 0x02
    19d6:	ab 81       	ldd	r26, Y+3	; 0x03
    19d8:	bc 81       	ldd	r27, Y+4	; 0x04
    19da:	2d 81       	ldd	r18, Y+5	; 0x05
    19dc:	3e 81       	ldd	r19, Y+6	; 0x06
    19de:	ac 01       	movw	r20, r24
    19e0:	bd 01       	movw	r22, r26
    19e2:	c9 01       	movw	r24, r18
    19e4:	6e d0       	rcall	.+220    	; 0x1ac2 <_ZN3DHT11convertCtoFEf>
    19e6:	dc 01       	movw	r26, r24
    19e8:	cb 01       	movw	r24, r22
    19ea:	89 83       	std	Y+1, r24	; 0x01
    19ec:	9a 83       	std	Y+2, r25	; 0x02
    19ee:	ab 83       	std	Y+3, r26	; 0x03
    19f0:	bc 83       	std	Y+4, r27	; 0x04
    19f2:	55 c0       	rjmp	.+170    	; 0x1a9e <_ZN3DHT15readTemperatureEbb+0x29c>
    19f4:	8d 81       	ldd	r24, Y+5	; 0x05
    19f6:	9e 81       	ldd	r25, Y+6	; 0x06
    19f8:	fc 01       	movw	r30, r24
    19fa:	82 81       	ldd	r24, Z+2	; 0x02
    19fc:	88 2f       	mov	r24, r24
    19fe:	90 e0       	ldi	r25, 0x00	; 0
    1a00:	8f 77       	andi	r24, 0x7F	; 127
    1a02:	99 27       	eor	r25, r25
    1a04:	38 2f       	mov	r19, r24
    1a06:	22 27       	eor	r18, r18
    1a08:	8d 81       	ldd	r24, Y+5	; 0x05
    1a0a:	9e 81       	ldd	r25, Y+6	; 0x06
    1a0c:	fc 01       	movw	r30, r24
    1a0e:	83 81       	ldd	r24, Z+3	; 0x03
    1a10:	88 2f       	mov	r24, r24
    1a12:	90 e0       	ldi	r25, 0x00	; 0
    1a14:	82 2b       	or	r24, r18
    1a16:	93 2b       	or	r25, r19
    1a18:	cc 01       	movw	r24, r24
    1a1a:	a0 e0       	ldi	r26, 0x00	; 0
    1a1c:	b0 e0       	ldi	r27, 0x00	; 0
    1a1e:	bc 01       	movw	r22, r24
    1a20:	cd 01       	movw	r24, r26
    1a22:	0e 94 0f 44 	call	0x881e	; 0x881e <__floatunsisf>
    1a26:	dc 01       	movw	r26, r24
    1a28:	cb 01       	movw	r24, r22
    1a2a:	89 83       	std	Y+1, r24	; 0x01
    1a2c:	9a 83       	std	Y+2, r25	; 0x02
    1a2e:	ab 83       	std	Y+3, r26	; 0x03
    1a30:	bc 83       	std	Y+4, r27	; 0x04
    1a32:	2d ec       	ldi	r18, 0xCD	; 205
    1a34:	3c ec       	ldi	r19, 0xCC	; 204
    1a36:	4c ec       	ldi	r20, 0xCC	; 204
    1a38:	5d e3       	ldi	r21, 0x3D	; 61
    1a3a:	69 81       	ldd	r22, Y+1	; 0x01
    1a3c:	7a 81       	ldd	r23, Y+2	; 0x02
    1a3e:	8b 81       	ldd	r24, Y+3	; 0x03
    1a40:	9c 81       	ldd	r25, Y+4	; 0x04
    1a42:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    1a46:	dc 01       	movw	r26, r24
    1a48:	cb 01       	movw	r24, r22
    1a4a:	89 83       	std	Y+1, r24	; 0x01
    1a4c:	9a 83       	std	Y+2, r25	; 0x02
    1a4e:	ab 83       	std	Y+3, r26	; 0x03
    1a50:	bc 83       	std	Y+4, r27	; 0x04
    1a52:	8d 81       	ldd	r24, Y+5	; 0x05
    1a54:	9e 81       	ldd	r25, Y+6	; 0x06
    1a56:	fc 01       	movw	r30, r24
    1a58:	82 81       	ldd	r24, Z+2	; 0x02
    1a5a:	88 23       	and	r24, r24
    1a5c:	4c f4       	brge	.+18     	; 0x1a70 <_ZN3DHT15readTemperatureEbb+0x26e>
    1a5e:	89 81       	ldd	r24, Y+1	; 0x01
    1a60:	9a 81       	ldd	r25, Y+2	; 0x02
    1a62:	ab 81       	ldd	r26, Y+3	; 0x03
    1a64:	bc 81       	ldd	r27, Y+4	; 0x04
    1a66:	b0 58       	subi	r27, 0x80	; 128
    1a68:	89 83       	std	Y+1, r24	; 0x01
    1a6a:	9a 83       	std	Y+2, r25	; 0x02
    1a6c:	ab 83       	std	Y+3, r26	; 0x03
    1a6e:	bc 83       	std	Y+4, r27	; 0x04
    1a70:	8f 81       	ldd	r24, Y+7	; 0x07
    1a72:	88 23       	and	r24, r24
    1a74:	b1 f0       	breq	.+44     	; 0x1aa2 <_ZN3DHT15readTemperatureEbb+0x2a0>
    1a76:	89 81       	ldd	r24, Y+1	; 0x01
    1a78:	9a 81       	ldd	r25, Y+2	; 0x02
    1a7a:	ab 81       	ldd	r26, Y+3	; 0x03
    1a7c:	bc 81       	ldd	r27, Y+4	; 0x04
    1a7e:	2d 81       	ldd	r18, Y+5	; 0x05
    1a80:	3e 81       	ldd	r19, Y+6	; 0x06
    1a82:	ac 01       	movw	r20, r24
    1a84:	bd 01       	movw	r22, r26
    1a86:	c9 01       	movw	r24, r18
    1a88:	1c d0       	rcall	.+56     	; 0x1ac2 <_ZN3DHT11convertCtoFEf>
    1a8a:	dc 01       	movw	r26, r24
    1a8c:	cb 01       	movw	r24, r22
    1a8e:	89 83       	std	Y+1, r24	; 0x01
    1a90:	9a 83       	std	Y+2, r25	; 0x02
    1a92:	ab 83       	std	Y+3, r26	; 0x03
    1a94:	bc 83       	std	Y+4, r27	; 0x04
    1a96:	00 00       	nop
    1a98:	04 c0       	rjmp	.+8      	; 0x1aa2 <_ZN3DHT15readTemperatureEbb+0x2a0>
    1a9a:	00 00       	nop
    1a9c:	03 c0       	rjmp	.+6      	; 0x1aa4 <_ZN3DHT15readTemperatureEbb+0x2a2>
    1a9e:	00 00       	nop
    1aa0:	01 c0       	rjmp	.+2      	; 0x1aa4 <_ZN3DHT15readTemperatureEbb+0x2a2>
    1aa2:	00 00       	nop
    1aa4:	89 81       	ldd	r24, Y+1	; 0x01
    1aa6:	9a 81       	ldd	r25, Y+2	; 0x02
    1aa8:	ab 81       	ldd	r26, Y+3	; 0x03
    1aaa:	bc 81       	ldd	r27, Y+4	; 0x04
    1aac:	bc 01       	movw	r22, r24
    1aae:	cd 01       	movw	r24, r26
    1ab0:	28 96       	adiw	r28, 0x08	; 8
    1ab2:	0f b6       	in	r0, 0x3f	; 63
    1ab4:	f8 94       	cli
    1ab6:	de bf       	out	0x3e, r29	; 62
    1ab8:	0f be       	out	0x3f, r0	; 63
    1aba:	cd bf       	out	0x3d, r28	; 61
    1abc:	df 91       	pop	r29
    1abe:	cf 91       	pop	r28
    1ac0:	08 95       	ret

00001ac2 <_ZN3DHT11convertCtoFEf>:
    1ac2:	cf 93       	push	r28
    1ac4:	df 93       	push	r29
    1ac6:	00 d0       	rcall	.+0      	; 0x1ac8 <_ZN3DHT11convertCtoFEf+0x6>
    1ac8:	00 d0       	rcall	.+0      	; 0x1aca <_ZN3DHT11convertCtoFEf+0x8>
    1aca:	cd b7       	in	r28, 0x3d	; 61
    1acc:	de b7       	in	r29, 0x3e	; 62
    1ace:	9a 83       	std	Y+2, r25	; 0x02
    1ad0:	89 83       	std	Y+1, r24	; 0x01
    1ad2:	4b 83       	std	Y+3, r20	; 0x03
    1ad4:	5c 83       	std	Y+4, r21	; 0x04
    1ad6:	6d 83       	std	Y+5, r22	; 0x05
    1ad8:	7e 83       	std	Y+6, r23	; 0x06
    1ada:	26 e6       	ldi	r18, 0x66	; 102
    1adc:	36 e6       	ldi	r19, 0x66	; 102
    1ade:	46 ee       	ldi	r20, 0xE6	; 230
    1ae0:	5f e3       	ldi	r21, 0x3F	; 63
    1ae2:	6b 81       	ldd	r22, Y+3	; 0x03
    1ae4:	7c 81       	ldd	r23, Y+4	; 0x04
    1ae6:	8d 81       	ldd	r24, Y+5	; 0x05
    1ae8:	9e 81       	ldd	r25, Y+6	; 0x06
    1aea:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    1aee:	dc 01       	movw	r26, r24
    1af0:	cb 01       	movw	r24, r22
    1af2:	20 e0       	ldi	r18, 0x00	; 0
    1af4:	30 e0       	ldi	r19, 0x00	; 0
    1af6:	40 e0       	ldi	r20, 0x00	; 0
    1af8:	52 e4       	ldi	r21, 0x42	; 66
    1afa:	bc 01       	movw	r22, r24
    1afc:	cd 01       	movw	r24, r26
    1afe:	0e 94 0e 43 	call	0x861c	; 0x861c <__addsf3>
    1b02:	dc 01       	movw	r26, r24
    1b04:	cb 01       	movw	r24, r22
    1b06:	bc 01       	movw	r22, r24
    1b08:	cd 01       	movw	r24, r26
    1b0a:	26 96       	adiw	r28, 0x06	; 6
    1b0c:	0f b6       	in	r0, 0x3f	; 63
    1b0e:	f8 94       	cli
    1b10:	de bf       	out	0x3e, r29	; 62
    1b12:	0f be       	out	0x3f, r0	; 63
    1b14:	cd bf       	out	0x3d, r28	; 61
    1b16:	df 91       	pop	r29
    1b18:	cf 91       	pop	r28
    1b1a:	08 95       	ret

00001b1c <_ZN3DHT11convertFtoCEf>:
    1b1c:	cf 93       	push	r28
    1b1e:	df 93       	push	r29
    1b20:	00 d0       	rcall	.+0      	; 0x1b22 <_ZN3DHT11convertFtoCEf+0x6>
    1b22:	00 d0       	rcall	.+0      	; 0x1b24 <_ZN3DHT11convertFtoCEf+0x8>
    1b24:	cd b7       	in	r28, 0x3d	; 61
    1b26:	de b7       	in	r29, 0x3e	; 62
    1b28:	9a 83       	std	Y+2, r25	; 0x02
    1b2a:	89 83       	std	Y+1, r24	; 0x01
    1b2c:	4b 83       	std	Y+3, r20	; 0x03
    1b2e:	5c 83       	std	Y+4, r21	; 0x04
    1b30:	6d 83       	std	Y+5, r22	; 0x05
    1b32:	7e 83       	std	Y+6, r23	; 0x06
    1b34:	20 e0       	ldi	r18, 0x00	; 0
    1b36:	30 e0       	ldi	r19, 0x00	; 0
    1b38:	40 e0       	ldi	r20, 0x00	; 0
    1b3a:	52 e4       	ldi	r21, 0x42	; 66
    1b3c:	6b 81       	ldd	r22, Y+3	; 0x03
    1b3e:	7c 81       	ldd	r23, Y+4	; 0x04
    1b40:	8d 81       	ldd	r24, Y+5	; 0x05
    1b42:	9e 81       	ldd	r25, Y+6	; 0x06
    1b44:	0e 94 0d 43 	call	0x861a	; 0x861a <__subsf3>
    1b48:	dc 01       	movw	r26, r24
    1b4a:	cb 01       	movw	r24, r22
    1b4c:	26 e8       	ldi	r18, 0x86	; 134
    1b4e:	38 e3       	ldi	r19, 0x38	; 56
    1b50:	4e e0       	ldi	r20, 0x0E	; 14
    1b52:	5f e3       	ldi	r21, 0x3F	; 63
    1b54:	bc 01       	movw	r22, r24
    1b56:	cd 01       	movw	r24, r26
    1b58:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    1b5c:	dc 01       	movw	r26, r24
    1b5e:	cb 01       	movw	r24, r22
    1b60:	bc 01       	movw	r22, r24
    1b62:	cd 01       	movw	r24, r26
    1b64:	26 96       	adiw	r28, 0x06	; 6
    1b66:	0f b6       	in	r0, 0x3f	; 63
    1b68:	f8 94       	cli
    1b6a:	de bf       	out	0x3e, r29	; 62
    1b6c:	0f be       	out	0x3f, r0	; 63
    1b6e:	cd bf       	out	0x3d, r28	; 61
    1b70:	df 91       	pop	r29
    1b72:	cf 91       	pop	r28
    1b74:	08 95       	ret

00001b76 <_ZN3DHT12readHumidityEb>:
    1b76:	cf 92       	push	r12
    1b78:	df 92       	push	r13
    1b7a:	ef 92       	push	r14
    1b7c:	ff 92       	push	r15
    1b7e:	cf 93       	push	r28
    1b80:	df 93       	push	r29
    1b82:	cd b7       	in	r28, 0x3d	; 61
    1b84:	de b7       	in	r29, 0x3e	; 62
    1b86:	27 97       	sbiw	r28, 0x07	; 7
    1b88:	0f b6       	in	r0, 0x3f	; 63
    1b8a:	f8 94       	cli
    1b8c:	de bf       	out	0x3e, r29	; 62
    1b8e:	0f be       	out	0x3f, r0	; 63
    1b90:	cd bf       	out	0x3d, r28	; 61
    1b92:	9e 83       	std	Y+6, r25	; 0x06
    1b94:	8d 83       	std	Y+5, r24	; 0x05
    1b96:	6f 83       	std	Y+7, r22	; 0x07
    1b98:	80 e0       	ldi	r24, 0x00	; 0
    1b9a:	90 e0       	ldi	r25, 0x00	; 0
    1b9c:	a0 ec       	ldi	r26, 0xC0	; 192
    1b9e:	bf e7       	ldi	r27, 0x7F	; 127
    1ba0:	89 83       	std	Y+1, r24	; 0x01
    1ba2:	9a 83       	std	Y+2, r25	; 0x02
    1ba4:	ab 83       	std	Y+3, r26	; 0x03
    1ba6:	bc 83       	std	Y+4, r27	; 0x04
    1ba8:	8d 81       	ldd	r24, Y+5	; 0x05
    1baa:	9e 81       	ldd	r25, Y+6	; 0x06
    1bac:	6f 81       	ldd	r22, Y+7	; 0x07
    1bae:	8c d3       	rcall	.+1816   	; 0x22c8 <_ZN3DHT4readEb>
    1bb0:	88 23       	and	r24, r24
    1bb2:	09 f4       	brne	.+2      	; 0x1bb6 <_ZN3DHT12readHumidityEb+0x40>
    1bb4:	77 c0       	rjmp	.+238    	; 0x1ca4 <_ZN3DHT12readHumidityEb+0x12e>
    1bb6:	8d 81       	ldd	r24, Y+5	; 0x05
    1bb8:	9e 81       	ldd	r25, Y+6	; 0x06
    1bba:	fc 01       	movw	r30, r24
    1bbc:	86 81       	ldd	r24, Z+6	; 0x06
    1bbe:	88 2f       	mov	r24, r24
    1bc0:	90 e0       	ldi	r25, 0x00	; 0
    1bc2:	8b 30       	cpi	r24, 0x0B	; 11
    1bc4:	91 05       	cpc	r25, r1
    1bc6:	0c f4       	brge	.+2      	; 0x1bca <_ZN3DHT12readHumidityEb+0x54>
    1bc8:	6d c0       	rjmp	.+218    	; 0x1ca4 <_ZN3DHT12readHumidityEb+0x12e>
    1bca:	8d 30       	cpi	r24, 0x0D	; 13
    1bcc:	91 05       	cpc	r25, r1
    1bce:	2c f0       	brlt	.+10     	; 0x1bda <_ZN3DHT12readHumidityEb+0x64>
    1bd0:	45 97       	sbiw	r24, 0x15	; 21
    1bd2:	02 97       	sbiw	r24, 0x02	; 2
    1bd4:	08 f0       	brcs	.+2      	; 0x1bd8 <_ZN3DHT12readHumidityEb+0x62>
    1bd6:	66 c0       	rjmp	.+204    	; 0x1ca4 <_ZN3DHT12readHumidityEb+0x12e>
    1bd8:	37 c0       	rjmp	.+110    	; 0x1c48 <_ZN3DHT12readHumidityEb+0xd2>
    1bda:	8d 81       	ldd	r24, Y+5	; 0x05
    1bdc:	9e 81       	ldd	r25, Y+6	; 0x06
    1bde:	fc 01       	movw	r30, r24
    1be0:	80 81       	ld	r24, Z
    1be2:	88 2f       	mov	r24, r24
    1be4:	90 e0       	ldi	r25, 0x00	; 0
    1be6:	09 2e       	mov	r0, r25
    1be8:	00 0c       	add	r0, r0
    1bea:	aa 0b       	sbc	r26, r26
    1bec:	bb 0b       	sbc	r27, r27
    1bee:	bc 01       	movw	r22, r24
    1bf0:	cd 01       	movw	r24, r26
    1bf2:	0e 94 11 44 	call	0x8822	; 0x8822 <__floatsisf>
    1bf6:	6b 01       	movw	r12, r22
    1bf8:	7c 01       	movw	r14, r24
    1bfa:	8d 81       	ldd	r24, Y+5	; 0x05
    1bfc:	9e 81       	ldd	r25, Y+6	; 0x06
    1bfe:	fc 01       	movw	r30, r24
    1c00:	81 81       	ldd	r24, Z+1	; 0x01
    1c02:	88 2f       	mov	r24, r24
    1c04:	90 e0       	ldi	r25, 0x00	; 0
    1c06:	09 2e       	mov	r0, r25
    1c08:	00 0c       	add	r0, r0
    1c0a:	aa 0b       	sbc	r26, r26
    1c0c:	bb 0b       	sbc	r27, r27
    1c0e:	bc 01       	movw	r22, r24
    1c10:	cd 01       	movw	r24, r26
    1c12:	0e 94 11 44 	call	0x8822	; 0x8822 <__floatsisf>
    1c16:	dc 01       	movw	r26, r24
    1c18:	cb 01       	movw	r24, r22
    1c1a:	2d ec       	ldi	r18, 0xCD	; 205
    1c1c:	3c ec       	ldi	r19, 0xCC	; 204
    1c1e:	4c ec       	ldi	r20, 0xCC	; 204
    1c20:	5d e3       	ldi	r21, 0x3D	; 61
    1c22:	bc 01       	movw	r22, r24
    1c24:	cd 01       	movw	r24, r26
    1c26:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    1c2a:	dc 01       	movw	r26, r24
    1c2c:	cb 01       	movw	r24, r22
    1c2e:	9c 01       	movw	r18, r24
    1c30:	ad 01       	movw	r20, r26
    1c32:	c7 01       	movw	r24, r14
    1c34:	b6 01       	movw	r22, r12
    1c36:	0e 94 0e 43 	call	0x861c	; 0x861c <__addsf3>
    1c3a:	dc 01       	movw	r26, r24
    1c3c:	cb 01       	movw	r24, r22
    1c3e:	89 83       	std	Y+1, r24	; 0x01
    1c40:	9a 83       	std	Y+2, r25	; 0x02
    1c42:	ab 83       	std	Y+3, r26	; 0x03
    1c44:	bc 83       	std	Y+4, r27	; 0x04
    1c46:	2e c0       	rjmp	.+92     	; 0x1ca4 <_ZN3DHT12readHumidityEb+0x12e>
    1c48:	8d 81       	ldd	r24, Y+5	; 0x05
    1c4a:	9e 81       	ldd	r25, Y+6	; 0x06
    1c4c:	fc 01       	movw	r30, r24
    1c4e:	80 81       	ld	r24, Z
    1c50:	88 2f       	mov	r24, r24
    1c52:	90 e0       	ldi	r25, 0x00	; 0
    1c54:	38 2f       	mov	r19, r24
    1c56:	22 27       	eor	r18, r18
    1c58:	8d 81       	ldd	r24, Y+5	; 0x05
    1c5a:	9e 81       	ldd	r25, Y+6	; 0x06
    1c5c:	fc 01       	movw	r30, r24
    1c5e:	81 81       	ldd	r24, Z+1	; 0x01
    1c60:	88 2f       	mov	r24, r24
    1c62:	90 e0       	ldi	r25, 0x00	; 0
    1c64:	82 2b       	or	r24, r18
    1c66:	93 2b       	or	r25, r19
    1c68:	cc 01       	movw	r24, r24
    1c6a:	a0 e0       	ldi	r26, 0x00	; 0
    1c6c:	b0 e0       	ldi	r27, 0x00	; 0
    1c6e:	bc 01       	movw	r22, r24
    1c70:	cd 01       	movw	r24, r26
    1c72:	0e 94 0f 44 	call	0x881e	; 0x881e <__floatunsisf>
    1c76:	dc 01       	movw	r26, r24
    1c78:	cb 01       	movw	r24, r22
    1c7a:	89 83       	std	Y+1, r24	; 0x01
    1c7c:	9a 83       	std	Y+2, r25	; 0x02
    1c7e:	ab 83       	std	Y+3, r26	; 0x03
    1c80:	bc 83       	std	Y+4, r27	; 0x04
    1c82:	2d ec       	ldi	r18, 0xCD	; 205
    1c84:	3c ec       	ldi	r19, 0xCC	; 204
    1c86:	4c ec       	ldi	r20, 0xCC	; 204
    1c88:	5d e3       	ldi	r21, 0x3D	; 61
    1c8a:	69 81       	ldd	r22, Y+1	; 0x01
    1c8c:	7a 81       	ldd	r23, Y+2	; 0x02
    1c8e:	8b 81       	ldd	r24, Y+3	; 0x03
    1c90:	9c 81       	ldd	r25, Y+4	; 0x04
    1c92:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    1c96:	dc 01       	movw	r26, r24
    1c98:	cb 01       	movw	r24, r22
    1c9a:	89 83       	std	Y+1, r24	; 0x01
    1c9c:	9a 83       	std	Y+2, r25	; 0x02
    1c9e:	ab 83       	std	Y+3, r26	; 0x03
    1ca0:	bc 83       	std	Y+4, r27	; 0x04
    1ca2:	00 00       	nop
    1ca4:	89 81       	ldd	r24, Y+1	; 0x01
    1ca6:	9a 81       	ldd	r25, Y+2	; 0x02
    1ca8:	ab 81       	ldd	r26, Y+3	; 0x03
    1caa:	bc 81       	ldd	r27, Y+4	; 0x04
    1cac:	bc 01       	movw	r22, r24
    1cae:	cd 01       	movw	r24, r26
    1cb0:	27 96       	adiw	r28, 0x07	; 7
    1cb2:	0f b6       	in	r0, 0x3f	; 63
    1cb4:	f8 94       	cli
    1cb6:	de bf       	out	0x3e, r29	; 62
    1cb8:	0f be       	out	0x3f, r0	; 63
    1cba:	cd bf       	out	0x3d, r28	; 61
    1cbc:	df 91       	pop	r29
    1cbe:	cf 91       	pop	r28
    1cc0:	ff 90       	pop	r15
    1cc2:	ef 90       	pop	r14
    1cc4:	df 90       	pop	r13
    1cc6:	cf 90       	pop	r12
    1cc8:	08 95       	ret

00001cca <_ZN3DHT16computeHeatIndexEffb>:
 *  @param  isFahrenheit
 * 					true if fahrenheit, false if celcius
 *	@return float heat index
 */
float DHT::computeHeatIndex(float temperature, float percentHumidity,
                            bool isFahrenheit) {
    1cca:	8f 92       	push	r8
    1ccc:	9f 92       	push	r9
    1cce:	af 92       	push	r10
    1cd0:	bf 92       	push	r11
    1cd2:	cf 92       	push	r12
    1cd4:	df 92       	push	r13
    1cd6:	ef 92       	push	r14
    1cd8:	ff 92       	push	r15
    1cda:	0f 93       	push	r16
    1cdc:	1f 93       	push	r17
    1cde:	cf 93       	push	r28
    1ce0:	df 93       	push	r29
    1ce2:	cd b7       	in	r28, 0x3d	; 61
    1ce4:	de b7       	in	r29, 0x3e	; 62
    1ce6:	2f 97       	sbiw	r28, 0x0f	; 15
    1ce8:	0f b6       	in	r0, 0x3f	; 63
    1cea:	f8 94       	cli
    1cec:	de bf       	out	0x3e, r29	; 62
    1cee:	0f be       	out	0x3f, r0	; 63
    1cf0:	cd bf       	out	0x3d, r28	; 61
    1cf2:	9e 83       	std	Y+6, r25	; 0x06
    1cf4:	8d 83       	std	Y+5, r24	; 0x05
    1cf6:	4f 83       	std	Y+7, r20	; 0x07
    1cf8:	58 87       	std	Y+8, r21	; 0x08
    1cfa:	69 87       	std	Y+9, r22	; 0x09
    1cfc:	7a 87       	std	Y+10, r23	; 0x0a
    1cfe:	0b 87       	std	Y+11, r16	; 0x0b
    1d00:	1c 87       	std	Y+12, r17	; 0x0c
    1d02:	2d 87       	std	Y+13, r18	; 0x0d
    1d04:	3e 87       	std	Y+14, r19	; 0x0e
    1d06:	ef 86       	std	Y+15, r14	; 0x0f
  float hi;

  if (!isFahrenheit)
    1d08:	9f 85       	ldd	r25, Y+15	; 0x0f
    1d0a:	81 e0       	ldi	r24, 0x01	; 1
    1d0c:	89 27       	eor	r24, r25
    1d0e:	88 23       	and	r24, r24
    1d10:	81 f0       	breq	.+32     	; 0x1d32 <_ZN3DHT16computeHeatIndexEffb+0x68>
    temperature = convertCtoF(temperature);
    1d12:	8f 81       	ldd	r24, Y+7	; 0x07
    1d14:	98 85       	ldd	r25, Y+8	; 0x08
    1d16:	a9 85       	ldd	r26, Y+9	; 0x09
    1d18:	ba 85       	ldd	r27, Y+10	; 0x0a
    1d1a:	2d 81       	ldd	r18, Y+5	; 0x05
    1d1c:	3e 81       	ldd	r19, Y+6	; 0x06
    1d1e:	ac 01       	movw	r20, r24
    1d20:	bd 01       	movw	r22, r26
    1d22:	c9 01       	movw	r24, r18
    1d24:	ce de       	rcall	.-612    	; 0x1ac2 <_ZN3DHT11convertCtoFEf>
    1d26:	dc 01       	movw	r26, r24
    1d28:	cb 01       	movw	r24, r22
    1d2a:	8f 83       	std	Y+7, r24	; 0x07
    1d2c:	98 87       	std	Y+8, r25	; 0x08
    1d2e:	a9 87       	std	Y+9, r26	; 0x09
    1d30:	ba 87       	std	Y+10, r27	; 0x0a

  hi = 0.5 * (temperature + 61.0 + ((temperature - 68.0) * 1.2) +
    1d32:	20 e0       	ldi	r18, 0x00	; 0
    1d34:	30 e0       	ldi	r19, 0x00	; 0
    1d36:	44 e7       	ldi	r20, 0x74	; 116
    1d38:	52 e4       	ldi	r21, 0x42	; 66
    1d3a:	6f 81       	ldd	r22, Y+7	; 0x07
    1d3c:	78 85       	ldd	r23, Y+8	; 0x08
    1d3e:	89 85       	ldd	r24, Y+9	; 0x09
    1d40:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d42:	0e 94 0e 43 	call	0x861c	; 0x861c <__addsf3>
    1d46:	dc 01       	movw	r26, r24
    1d48:	cb 01       	movw	r24, r22
    1d4a:	6c 01       	movw	r12, r24
    1d4c:	7d 01       	movw	r14, r26
    1d4e:	20 e0       	ldi	r18, 0x00	; 0
    1d50:	30 e0       	ldi	r19, 0x00	; 0
    1d52:	48 e8       	ldi	r20, 0x88	; 136
    1d54:	52 e4       	ldi	r21, 0x42	; 66
    1d56:	6f 81       	ldd	r22, Y+7	; 0x07
    1d58:	78 85       	ldd	r23, Y+8	; 0x08
    1d5a:	89 85       	ldd	r24, Y+9	; 0x09
    1d5c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d5e:	0e 94 0d 43 	call	0x861a	; 0x861a <__subsf3>
    1d62:	dc 01       	movw	r26, r24
    1d64:	cb 01       	movw	r24, r22
    1d66:	2a e9       	ldi	r18, 0x9A	; 154
    1d68:	39 e9       	ldi	r19, 0x99	; 153
    1d6a:	49 e9       	ldi	r20, 0x99	; 153
    1d6c:	5f e3       	ldi	r21, 0x3F	; 63
    1d6e:	bc 01       	movw	r22, r24
    1d70:	cd 01       	movw	r24, r26
    1d72:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    1d76:	dc 01       	movw	r26, r24
    1d78:	cb 01       	movw	r24, r22
    1d7a:	9c 01       	movw	r18, r24
    1d7c:	ad 01       	movw	r20, r26
    1d7e:	c7 01       	movw	r24, r14
    1d80:	b6 01       	movw	r22, r12
    1d82:	0e 94 0e 43 	call	0x861c	; 0x861c <__addsf3>
    1d86:	dc 01       	movw	r26, r24
    1d88:	cb 01       	movw	r24, r22
    1d8a:	6c 01       	movw	r12, r24
    1d8c:	7d 01       	movw	r14, r26
              (percentHumidity * 0.094));
    1d8e:	22 e1       	ldi	r18, 0x12	; 18
    1d90:	33 e8       	ldi	r19, 0x83	; 131
    1d92:	40 ec       	ldi	r20, 0xC0	; 192
    1d94:	5d e3       	ldi	r21, 0x3D	; 61
    1d96:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d98:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d9a:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d9c:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d9e:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    1da2:	dc 01       	movw	r26, r24
    1da4:	cb 01       	movw	r24, r22
  float hi;

  if (!isFahrenheit)
    temperature = convertCtoF(temperature);

  hi = 0.5 * (temperature + 61.0 + ((temperature - 68.0) * 1.2) +
    1da6:	9c 01       	movw	r18, r24
    1da8:	ad 01       	movw	r20, r26
    1daa:	c7 01       	movw	r24, r14
    1dac:	b6 01       	movw	r22, r12
    1dae:	0e 94 0e 43 	call	0x861c	; 0x861c <__addsf3>
    1db2:	dc 01       	movw	r26, r24
    1db4:	cb 01       	movw	r24, r22
              (percentHumidity * 0.094));
    1db6:	20 e0       	ldi	r18, 0x00	; 0
    1db8:	30 e0       	ldi	r19, 0x00	; 0
    1dba:	40 e0       	ldi	r20, 0x00	; 0
    1dbc:	5f e3       	ldi	r21, 0x3F	; 63
    1dbe:	bc 01       	movw	r22, r24
    1dc0:	cd 01       	movw	r24, r26
    1dc2:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    1dc6:	dc 01       	movw	r26, r24
    1dc8:	cb 01       	movw	r24, r22
    1dca:	89 83       	std	Y+1, r24	; 0x01
    1dcc:	9a 83       	std	Y+2, r25	; 0x02
    1dce:	ab 83       	std	Y+3, r26	; 0x03
    1dd0:	bc 83       	std	Y+4, r27	; 0x04

  if (hi > 79) {
    1dd2:	20 e0       	ldi	r18, 0x00	; 0
    1dd4:	30 e0       	ldi	r19, 0x00	; 0
    1dd6:	4e e9       	ldi	r20, 0x9E	; 158
    1dd8:	52 e4       	ldi	r21, 0x42	; 66
    1dda:	69 81       	ldd	r22, Y+1	; 0x01
    1ddc:	7a 81       	ldd	r23, Y+2	; 0x02
    1dde:	8b 81       	ldd	r24, Y+3	; 0x03
    1de0:	9c 81       	ldd	r25, Y+4	; 0x04
    1de2:	0e 94 c1 44 	call	0x8982	; 0x8982 <__gesf2>
    1de6:	18 16       	cp	r1, r24
    1de8:	0c f0       	brlt	.+2      	; 0x1dec <_ZN3DHT16computeHeatIndexEffb+0x122>
    1dea:	45 c2       	rjmp	.+1162   	; 0x2276 <__stack+0x77>
    hi = -42.379 + 2.04901523 * temperature + 10.14333127 * percentHumidity +
    1dec:	21 e1       	ldi	r18, 0x11	; 17
    1dee:	33 e2       	ldi	r19, 0x23	; 35
    1df0:	43 e0       	ldi	r20, 0x03	; 3
    1df2:	50 e4       	ldi	r21, 0x40	; 64
    1df4:	6f 81       	ldd	r22, Y+7	; 0x07
    1df6:	78 85       	ldd	r23, Y+8	; 0x08
    1df8:	89 85       	ldd	r24, Y+9	; 0x09
    1dfa:	9a 85       	ldd	r25, Y+10	; 0x0a
    1dfc:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    1e00:	dc 01       	movw	r26, r24
    1e02:	cb 01       	movw	r24, r22
    1e04:	29 e1       	ldi	r18, 0x19	; 25
    1e06:	34 e8       	ldi	r19, 0x84	; 132
    1e08:	49 e2       	ldi	r20, 0x29	; 41
    1e0a:	52 e4       	ldi	r21, 0x42	; 66
    1e0c:	bc 01       	movw	r22, r24
    1e0e:	cd 01       	movw	r24, r26
    1e10:	0e 94 0d 43 	call	0x861a	; 0x861a <__subsf3>
    1e14:	dc 01       	movw	r26, r24
    1e16:	cb 01       	movw	r24, r22
    1e18:	6c 01       	movw	r12, r24
    1e1a:	7d 01       	movw	r14, r26
    1e1c:	26 e1       	ldi	r18, 0x16	; 22
    1e1e:	3b e4       	ldi	r19, 0x4B	; 75
    1e20:	42 e2       	ldi	r20, 0x22	; 34
    1e22:	51 e4       	ldi	r21, 0x41	; 65
    1e24:	6b 85       	ldd	r22, Y+11	; 0x0b
    1e26:	7c 85       	ldd	r23, Y+12	; 0x0c
    1e28:	8d 85       	ldd	r24, Y+13	; 0x0d
    1e2a:	9e 85       	ldd	r25, Y+14	; 0x0e
    1e2c:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    1e30:	dc 01       	movw	r26, r24
    1e32:	cb 01       	movw	r24, r22
    1e34:	9c 01       	movw	r18, r24
    1e36:	ad 01       	movw	r20, r26
    1e38:	c7 01       	movw	r24, r14
    1e3a:	b6 01       	movw	r22, r12
    1e3c:	0e 94 0e 43 	call	0x861c	; 0x861c <__addsf3>
    1e40:	dc 01       	movw	r26, r24
    1e42:	cb 01       	movw	r24, r22
    1e44:	6c 01       	movw	r12, r24
    1e46:	7d 01       	movw	r14, r26
         -0.22475541 * temperature * percentHumidity +
    1e48:	28 e4       	ldi	r18, 0x48	; 72
    1e4a:	36 e2       	ldi	r19, 0x26	; 38
    1e4c:	46 e6       	ldi	r20, 0x66	; 102
    1e4e:	5e eb       	ldi	r21, 0xBE	; 190
    1e50:	6f 81       	ldd	r22, Y+7	; 0x07
    1e52:	78 85       	ldd	r23, Y+8	; 0x08
    1e54:	89 85       	ldd	r24, Y+9	; 0x09
    1e56:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e58:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    1e5c:	dc 01       	movw	r26, r24
    1e5e:	cb 01       	movw	r24, r22
    1e60:	2b 85       	ldd	r18, Y+11	; 0x0b
    1e62:	3c 85       	ldd	r19, Y+12	; 0x0c
    1e64:	4d 85       	ldd	r20, Y+13	; 0x0d
    1e66:	5e 85       	ldd	r21, Y+14	; 0x0e
    1e68:	bc 01       	movw	r22, r24
    1e6a:	cd 01       	movw	r24, r26
    1e6c:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    1e70:	dc 01       	movw	r26, r24
    1e72:	cb 01       	movw	r24, r22

  hi = 0.5 * (temperature + 61.0 + ((temperature - 68.0) * 1.2) +
              (percentHumidity * 0.094));

  if (hi > 79) {
    hi = -42.379 + 2.04901523 * temperature + 10.14333127 * percentHumidity +
    1e74:	9c 01       	movw	r18, r24
    1e76:	ad 01       	movw	r20, r26
    1e78:	c7 01       	movw	r24, r14
    1e7a:	b6 01       	movw	r22, r12
    1e7c:	0e 94 0e 43 	call	0x861c	; 0x861c <__addsf3>
    1e80:	dc 01       	movw	r26, r24
    1e82:	cb 01       	movw	r24, r22
    1e84:	6c 01       	movw	r12, r24
    1e86:	7d 01       	movw	r14, r26
         -0.22475541 * temperature * percentHumidity +
         -0.00683783 * pow(temperature, 2) +
    1e88:	8f 81       	ldd	r24, Y+7	; 0x07
    1e8a:	98 85       	ldd	r25, Y+8	; 0x08
    1e8c:	a9 85       	ldd	r26, Y+9	; 0x09
    1e8e:	ba 85       	ldd	r27, Y+10	; 0x0a
    1e90:	20 e0       	ldi	r18, 0x00	; 0
    1e92:	30 e0       	ldi	r19, 0x00	; 0
    1e94:	40 e0       	ldi	r20, 0x00	; 0
    1e96:	50 e4       	ldi	r21, 0x40	; 64
    1e98:	bc 01       	movw	r22, r24
    1e9a:	cd 01       	movw	r24, r26
    1e9c:	0e 94 28 45 	call	0x8a50	; 0x8a50 <pow>
    1ea0:	dc 01       	movw	r26, r24
    1ea2:	cb 01       	movw	r24, r22
    1ea4:	20 ee       	ldi	r18, 0xE0	; 224
    1ea6:	3f e0       	ldi	r19, 0x0F	; 15
    1ea8:	40 ee       	ldi	r20, 0xE0	; 224
    1eaa:	5b eb       	ldi	r21, 0xBB	; 187
    1eac:	bc 01       	movw	r22, r24
    1eae:	cd 01       	movw	r24, r26
    1eb0:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    1eb4:	dc 01       	movw	r26, r24
    1eb6:	cb 01       	movw	r24, r22
  hi = 0.5 * (temperature + 61.0 + ((temperature - 68.0) * 1.2) +
              (percentHumidity * 0.094));

  if (hi > 79) {
    hi = -42.379 + 2.04901523 * temperature + 10.14333127 * percentHumidity +
         -0.22475541 * temperature * percentHumidity +
    1eb8:	9c 01       	movw	r18, r24
    1eba:	ad 01       	movw	r20, r26
    1ebc:	c7 01       	movw	r24, r14
    1ebe:	b6 01       	movw	r22, r12
    1ec0:	0e 94 0e 43 	call	0x861c	; 0x861c <__addsf3>
    1ec4:	dc 01       	movw	r26, r24
    1ec6:	cb 01       	movw	r24, r22
    1ec8:	6c 01       	movw	r12, r24
    1eca:	7d 01       	movw	r14, r26
         -0.00683783 * pow(temperature, 2) +
         -0.05481717 * pow(percentHumidity, 2) +
    1ecc:	8b 85       	ldd	r24, Y+11	; 0x0b
    1ece:	9c 85       	ldd	r25, Y+12	; 0x0c
    1ed0:	ad 85       	ldd	r26, Y+13	; 0x0d
    1ed2:	be 85       	ldd	r27, Y+14	; 0x0e
    1ed4:	20 e0       	ldi	r18, 0x00	; 0
    1ed6:	30 e0       	ldi	r19, 0x00	; 0
    1ed8:	40 e0       	ldi	r20, 0x00	; 0
    1eda:	50 e4       	ldi	r21, 0x40	; 64
    1edc:	bc 01       	movw	r22, r24
    1ede:	cd 01       	movw	r24, r26
    1ee0:	0e 94 28 45 	call	0x8a50	; 0x8a50 <pow>
    1ee4:	dc 01       	movw	r26, r24
    1ee6:	cb 01       	movw	r24, r22
    1ee8:	28 ef       	ldi	r18, 0xF8	; 248
    1eea:	37 e8       	ldi	r19, 0x87	; 135
    1eec:	40 e6       	ldi	r20, 0x60	; 96
    1eee:	5d eb       	ldi	r21, 0xBD	; 189
    1ef0:	bc 01       	movw	r22, r24
    1ef2:	cd 01       	movw	r24, r26
    1ef4:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    1ef8:	dc 01       	movw	r26, r24
    1efa:	cb 01       	movw	r24, r22
              (percentHumidity * 0.094));

  if (hi > 79) {
    hi = -42.379 + 2.04901523 * temperature + 10.14333127 * percentHumidity +
         -0.22475541 * temperature * percentHumidity +
         -0.00683783 * pow(temperature, 2) +
    1efc:	9c 01       	movw	r18, r24
    1efe:	ad 01       	movw	r20, r26
    1f00:	c7 01       	movw	r24, r14
    1f02:	b6 01       	movw	r22, r12
    1f04:	0e 94 0e 43 	call	0x861c	; 0x861c <__addsf3>
    1f08:	dc 01       	movw	r26, r24
    1f0a:	cb 01       	movw	r24, r22
    1f0c:	6c 01       	movw	r12, r24
    1f0e:	7d 01       	movw	r14, r26
         -0.05481717 * pow(percentHumidity, 2) +
         0.00122874 * pow(temperature, 2) * percentHumidity +
    1f10:	8f 81       	ldd	r24, Y+7	; 0x07
    1f12:	98 85       	ldd	r25, Y+8	; 0x08
    1f14:	a9 85       	ldd	r26, Y+9	; 0x09
    1f16:	ba 85       	ldd	r27, Y+10	; 0x0a
    1f18:	20 e0       	ldi	r18, 0x00	; 0
    1f1a:	30 e0       	ldi	r19, 0x00	; 0
    1f1c:	40 e0       	ldi	r20, 0x00	; 0
    1f1e:	50 e4       	ldi	r21, 0x40	; 64
    1f20:	bc 01       	movw	r22, r24
    1f22:	cd 01       	movw	r24, r26
    1f24:	0e 94 28 45 	call	0x8a50	; 0x8a50 <pow>
    1f28:	dc 01       	movw	r26, r24
    1f2a:	cb 01       	movw	r24, r22
    1f2c:	2c ea       	ldi	r18, 0xAC	; 172
    1f2e:	3d e0       	ldi	r19, 0x0D	; 13
    1f30:	41 ea       	ldi	r20, 0xA1	; 161
    1f32:	5a e3       	ldi	r21, 0x3A	; 58
    1f34:	bc 01       	movw	r22, r24
    1f36:	cd 01       	movw	r24, r26
    1f38:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    1f3c:	dc 01       	movw	r26, r24
    1f3e:	cb 01       	movw	r24, r22
    1f40:	2b 85       	ldd	r18, Y+11	; 0x0b
    1f42:	3c 85       	ldd	r19, Y+12	; 0x0c
    1f44:	4d 85       	ldd	r20, Y+13	; 0x0d
    1f46:	5e 85       	ldd	r21, Y+14	; 0x0e
    1f48:	bc 01       	movw	r22, r24
    1f4a:	cd 01       	movw	r24, r26
    1f4c:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    1f50:	dc 01       	movw	r26, r24
    1f52:	cb 01       	movw	r24, r22

  if (hi > 79) {
    hi = -42.379 + 2.04901523 * temperature + 10.14333127 * percentHumidity +
         -0.22475541 * temperature * percentHumidity +
         -0.00683783 * pow(temperature, 2) +
         -0.05481717 * pow(percentHumidity, 2) +
    1f54:	9c 01       	movw	r18, r24
    1f56:	ad 01       	movw	r20, r26
    1f58:	c7 01       	movw	r24, r14
    1f5a:	b6 01       	movw	r22, r12
    1f5c:	0e 94 0e 43 	call	0x861c	; 0x861c <__addsf3>
    1f60:	dc 01       	movw	r26, r24
    1f62:	cb 01       	movw	r24, r22
    1f64:	6c 01       	movw	r12, r24
    1f66:	7d 01       	movw	r14, r26
         0.00122874 * pow(temperature, 2) * percentHumidity +
         0.00085282 * temperature * pow(percentHumidity, 2) +
    1f68:	28 ec       	ldi	r18, 0xC8	; 200
    1f6a:	3f e8       	ldi	r19, 0x8F	; 143
    1f6c:	4f e5       	ldi	r20, 0x5F	; 95
    1f6e:	5a e3       	ldi	r21, 0x3A	; 58
    1f70:	6f 81       	ldd	r22, Y+7	; 0x07
    1f72:	78 85       	ldd	r23, Y+8	; 0x08
    1f74:	89 85       	ldd	r24, Y+9	; 0x09
    1f76:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f78:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    1f7c:	dc 01       	movw	r26, r24
    1f7e:	cb 01       	movw	r24, r22
    1f80:	4c 01       	movw	r8, r24
    1f82:	5d 01       	movw	r10, r26
    1f84:	8b 85       	ldd	r24, Y+11	; 0x0b
    1f86:	9c 85       	ldd	r25, Y+12	; 0x0c
    1f88:	ad 85       	ldd	r26, Y+13	; 0x0d
    1f8a:	be 85       	ldd	r27, Y+14	; 0x0e
    1f8c:	20 e0       	ldi	r18, 0x00	; 0
    1f8e:	30 e0       	ldi	r19, 0x00	; 0
    1f90:	40 e0       	ldi	r20, 0x00	; 0
    1f92:	50 e4       	ldi	r21, 0x40	; 64
    1f94:	bc 01       	movw	r22, r24
    1f96:	cd 01       	movw	r24, r26
    1f98:	0e 94 28 45 	call	0x8a50	; 0x8a50 <pow>
    1f9c:	dc 01       	movw	r26, r24
    1f9e:	cb 01       	movw	r24, r22
    1fa0:	9c 01       	movw	r18, r24
    1fa2:	ad 01       	movw	r20, r26
    1fa4:	c5 01       	movw	r24, r10
    1fa6:	b4 01       	movw	r22, r8
    1fa8:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    1fac:	dc 01       	movw	r26, r24
    1fae:	cb 01       	movw	r24, r22
  if (hi > 79) {
    hi = -42.379 + 2.04901523 * temperature + 10.14333127 * percentHumidity +
         -0.22475541 * temperature * percentHumidity +
         -0.00683783 * pow(temperature, 2) +
         -0.05481717 * pow(percentHumidity, 2) +
         0.00122874 * pow(temperature, 2) * percentHumidity +
    1fb0:	9c 01       	movw	r18, r24
    1fb2:	ad 01       	movw	r20, r26
    1fb4:	c7 01       	movw	r24, r14
    1fb6:	b6 01       	movw	r22, r12
    1fb8:	0e 94 0e 43 	call	0x861c	; 0x861c <__addsf3>
    1fbc:	dc 01       	movw	r26, r24
    1fbe:	cb 01       	movw	r24, r22
    1fc0:	6c 01       	movw	r12, r24
    1fc2:	7d 01       	movw	r14, r26
         0.00085282 * temperature * pow(percentHumidity, 2) +
         -0.00000199 * pow(temperature, 2) * pow(percentHumidity, 2);
    1fc4:	8f 81       	ldd	r24, Y+7	; 0x07
    1fc6:	98 85       	ldd	r25, Y+8	; 0x08
    1fc8:	a9 85       	ldd	r26, Y+9	; 0x09
    1fca:	ba 85       	ldd	r27, Y+10	; 0x0a
    1fcc:	20 e0       	ldi	r18, 0x00	; 0
    1fce:	30 e0       	ldi	r19, 0x00	; 0
    1fd0:	40 e0       	ldi	r20, 0x00	; 0
    1fd2:	50 e4       	ldi	r21, 0x40	; 64
    1fd4:	bc 01       	movw	r22, r24
    1fd6:	cd 01       	movw	r24, r26
    1fd8:	0e 94 28 45 	call	0x8a50	; 0x8a50 <pow>
    1fdc:	dc 01       	movw	r26, r24
    1fde:	cb 01       	movw	r24, r22
    1fe0:	21 ef       	ldi	r18, 0xF1	; 241
    1fe2:	3b e8       	ldi	r19, 0x8B	; 139
    1fe4:	45 e0       	ldi	r20, 0x05	; 5
    1fe6:	56 eb       	ldi	r21, 0xB6	; 182
    1fe8:	bc 01       	movw	r22, r24
    1fea:	cd 01       	movw	r24, r26
    1fec:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    1ff0:	dc 01       	movw	r26, r24
    1ff2:	cb 01       	movw	r24, r22
    1ff4:	4c 01       	movw	r8, r24
    1ff6:	5d 01       	movw	r10, r26
    1ff8:	8b 85       	ldd	r24, Y+11	; 0x0b
    1ffa:	9c 85       	ldd	r25, Y+12	; 0x0c
    1ffc:	ad 85       	ldd	r26, Y+13	; 0x0d
    1ffe:	be 85       	ldd	r27, Y+14	; 0x0e
    2000:	20 e0       	ldi	r18, 0x00	; 0
    2002:	30 e0       	ldi	r19, 0x00	; 0
    2004:	40 e0       	ldi	r20, 0x00	; 0
    2006:	50 e4       	ldi	r21, 0x40	; 64
    2008:	bc 01       	movw	r22, r24
    200a:	cd 01       	movw	r24, r26
    200c:	0e 94 28 45 	call	0x8a50	; 0x8a50 <pow>
    2010:	dc 01       	movw	r26, r24
    2012:	cb 01       	movw	r24, r22
    2014:	9c 01       	movw	r18, r24
    2016:	ad 01       	movw	r20, r26
    2018:	c5 01       	movw	r24, r10
    201a:	b4 01       	movw	r22, r8
    201c:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    2020:	dc 01       	movw	r26, r24
    2022:	cb 01       	movw	r24, r22
    2024:	9c 01       	movw	r18, r24
    2026:	ad 01       	movw	r20, r26
    2028:	c7 01       	movw	r24, r14
    202a:	b6 01       	movw	r22, r12
    202c:	0e 94 0e 43 	call	0x861c	; 0x861c <__addsf3>
    2030:	dc 01       	movw	r26, r24
    2032:	cb 01       	movw	r24, r22
    2034:	89 83       	std	Y+1, r24	; 0x01
    2036:	9a 83       	std	Y+2, r25	; 0x02
    2038:	ab 83       	std	Y+3, r26	; 0x03
    203a:	bc 83       	std	Y+4, r27	; 0x04

    if ((percentHumidity < 13) && (temperature >= 80.0) &&
    203c:	20 e0       	ldi	r18, 0x00	; 0
    203e:	30 e0       	ldi	r19, 0x00	; 0
    2040:	40 e5       	ldi	r20, 0x50	; 80
    2042:	51 e4       	ldi	r21, 0x41	; 65
    2044:	6b 85       	ldd	r22, Y+11	; 0x0b
    2046:	7c 85       	ldd	r23, Y+12	; 0x0c
    2048:	8d 85       	ldd	r24, Y+13	; 0x0d
    204a:	9e 85       	ldd	r25, Y+14	; 0x0e
    204c:	0e 94 72 43 	call	0x86e4	; 0x86e4 <__cmpsf2>
    2050:	88 23       	and	r24, r24
    2052:	0c f0       	brlt	.+2      	; 0x2056 <__DATA_REGION_LENGTH__+0x56>
    2054:	a5 c0       	rjmp	.+330    	; 0x21a0 <__DATA_REGION_LENGTH__+0x1a0>
    2056:	20 e0       	ldi	r18, 0x00	; 0
    2058:	30 e0       	ldi	r19, 0x00	; 0
    205a:	40 ea       	ldi	r20, 0xA0	; 160
    205c:	52 e4       	ldi	r21, 0x42	; 66
    205e:	6f 81       	ldd	r22, Y+7	; 0x07
    2060:	78 85       	ldd	r23, Y+8	; 0x08
    2062:	89 85       	ldd	r24, Y+9	; 0x09
    2064:	9a 85       	ldd	r25, Y+10	; 0x0a
    2066:	0e 94 c1 44 	call	0x8982	; 0x8982 <__gesf2>
    206a:	88 23       	and	r24, r24
    206c:	0c f4       	brge	.+2      	; 0x2070 <__DATA_REGION_LENGTH__+0x70>
    206e:	98 c0       	rjmp	.+304    	; 0x21a0 <__DATA_REGION_LENGTH__+0x1a0>
    2070:	20 e0       	ldi	r18, 0x00	; 0
    2072:	30 e0       	ldi	r19, 0x00	; 0
    2074:	40 ee       	ldi	r20, 0xE0	; 224
    2076:	52 e4       	ldi	r21, 0x42	; 66
    2078:	6f 81       	ldd	r22, Y+7	; 0x07
    207a:	78 85       	ldd	r23, Y+8	; 0x08
    207c:	89 85       	ldd	r24, Y+9	; 0x09
    207e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2080:	0e 94 72 43 	call	0x86e4	; 0x86e4 <__cmpsf2>
    2084:	18 16       	cp	r1, r24
    2086:	0c f4       	brge	.+2      	; 0x208a <__DATA_REGION_LENGTH__+0x8a>
    2088:	8b c0       	rjmp	.+278    	; 0x21a0 <__DATA_REGION_LENGTH__+0x1a0>
        (temperature <= 112.0))
      hi -= ((13.0 - percentHumidity) * 0.25) *
    208a:	2b 85       	ldd	r18, Y+11	; 0x0b
    208c:	3c 85       	ldd	r19, Y+12	; 0x0c
    208e:	4d 85       	ldd	r20, Y+13	; 0x0d
    2090:	5e 85       	ldd	r21, Y+14	; 0x0e
    2092:	60 e0       	ldi	r22, 0x00	; 0
    2094:	70 e0       	ldi	r23, 0x00	; 0
    2096:	80 e5       	ldi	r24, 0x50	; 80
    2098:	91 e4       	ldi	r25, 0x41	; 65
    209a:	0e 94 0d 43 	call	0x861a	; 0x861a <__subsf3>
    209e:	dc 01       	movw	r26, r24
    20a0:	cb 01       	movw	r24, r22
    20a2:	20 e0       	ldi	r18, 0x00	; 0
    20a4:	30 e0       	ldi	r19, 0x00	; 0
    20a6:	40 e8       	ldi	r20, 0x80	; 128
    20a8:	5e e3       	ldi	r21, 0x3E	; 62
    20aa:	bc 01       	movw	r22, r24
    20ac:	cd 01       	movw	r24, r26
    20ae:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    20b2:	dc 01       	movw	r26, r24
    20b4:	cb 01       	movw	r24, r22
    20b6:	6c 01       	movw	r12, r24
    20b8:	7d 01       	movw	r14, r26
            sqrt((17.0 - abs(temperature - 95.0)) * 0.05882);
    20ba:	20 e0       	ldi	r18, 0x00	; 0
    20bc:	30 e0       	ldi	r19, 0x00	; 0
    20be:	4e eb       	ldi	r20, 0xBE	; 190
    20c0:	52 e4       	ldi	r21, 0x42	; 66
    20c2:	6f 81       	ldd	r22, Y+7	; 0x07
    20c4:	78 85       	ldd	r23, Y+8	; 0x08
    20c6:	89 85       	ldd	r24, Y+9	; 0x09
    20c8:	9a 85       	ldd	r25, Y+10	; 0x0a
    20ca:	0e 94 0d 43 	call	0x861a	; 0x861a <__subsf3>
    20ce:	dc 01       	movw	r26, r24
    20d0:	cb 01       	movw	r24, r22
    20d2:	20 e0       	ldi	r18, 0x00	; 0
    20d4:	30 e0       	ldi	r19, 0x00	; 0
    20d6:	a9 01       	movw	r20, r18
    20d8:	bc 01       	movw	r22, r24
    20da:	cd 01       	movw	r24, r26
    20dc:	0e 94 c1 44 	call	0x8982	; 0x8982 <__gesf2>
    20e0:	18 16       	cp	r1, r24
    20e2:	0c f5       	brge	.+66     	; 0x2126 <__DATA_REGION_LENGTH__+0x126>
    20e4:	20 e0       	ldi	r18, 0x00	; 0
    20e6:	30 e0       	ldi	r19, 0x00	; 0
    20e8:	4e eb       	ldi	r20, 0xBE	; 190
    20ea:	52 e4       	ldi	r21, 0x42	; 66
    20ec:	6f 81       	ldd	r22, Y+7	; 0x07
    20ee:	78 85       	ldd	r23, Y+8	; 0x08
    20f0:	89 85       	ldd	r24, Y+9	; 0x09
    20f2:	9a 85       	ldd	r25, Y+10	; 0x0a
    20f4:	0e 94 0d 43 	call	0x861a	; 0x861a <__subsf3>
    20f8:	dc 01       	movw	r26, r24
    20fa:	cb 01       	movw	r24, r22
    20fc:	9c 01       	movw	r18, r24
    20fe:	ad 01       	movw	r20, r26
    2100:	60 e0       	ldi	r22, 0x00	; 0
    2102:	70 e0       	ldi	r23, 0x00	; 0
    2104:	88 e8       	ldi	r24, 0x88	; 136
    2106:	91 e4       	ldi	r25, 0x41	; 65
    2108:	0e 94 0d 43 	call	0x861a	; 0x861a <__subsf3>
    210c:	dc 01       	movw	r26, r24
    210e:	cb 01       	movw	r24, r22
    2110:	2e e3       	ldi	r18, 0x3E	; 62
    2112:	3d ee       	ldi	r19, 0xED	; 237
    2114:	40 e7       	ldi	r20, 0x70	; 112
    2116:	5d e3       	ldi	r21, 0x3D	; 61
    2118:	bc 01       	movw	r22, r24
    211a:	cd 01       	movw	r24, r26
    211c:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    2120:	dc 01       	movw	r26, r24
    2122:	cb 01       	movw	r24, r22
    2124:	20 c0       	rjmp	.+64     	; 0x2166 <__DATA_REGION_LENGTH__+0x166>
    2126:	20 e0       	ldi	r18, 0x00	; 0
    2128:	30 e0       	ldi	r19, 0x00	; 0
    212a:	4e eb       	ldi	r20, 0xBE	; 190
    212c:	52 e4       	ldi	r21, 0x42	; 66
    212e:	6f 81       	ldd	r22, Y+7	; 0x07
    2130:	78 85       	ldd	r23, Y+8	; 0x08
    2132:	89 85       	ldd	r24, Y+9	; 0x09
    2134:	9a 85       	ldd	r25, Y+10	; 0x0a
    2136:	0e 94 0d 43 	call	0x861a	; 0x861a <__subsf3>
    213a:	dc 01       	movw	r26, r24
    213c:	cb 01       	movw	r24, r22
    213e:	20 e0       	ldi	r18, 0x00	; 0
    2140:	30 e0       	ldi	r19, 0x00	; 0
    2142:	48 e8       	ldi	r20, 0x88	; 136
    2144:	51 e4       	ldi	r21, 0x41	; 65
    2146:	bc 01       	movw	r22, r24
    2148:	cd 01       	movw	r24, r26
    214a:	0e 94 0e 43 	call	0x861c	; 0x861c <__addsf3>
    214e:	dc 01       	movw	r26, r24
    2150:	cb 01       	movw	r24, r22
    2152:	2e e3       	ldi	r18, 0x3E	; 62
    2154:	3d ee       	ldi	r19, 0xED	; 237
    2156:	40 e7       	ldi	r20, 0x70	; 112
    2158:	5d e3       	ldi	r21, 0x3D	; 61
    215a:	bc 01       	movw	r22, r24
    215c:	cd 01       	movw	r24, r26
    215e:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    2162:	dc 01       	movw	r26, r24
    2164:	cb 01       	movw	r24, r22
    2166:	bc 01       	movw	r22, r24
    2168:	cd 01       	movw	r24, r26
    216a:	0e 94 78 45 	call	0x8af0	; 0x8af0 <sqrt>
    216e:	dc 01       	movw	r26, r24
    2170:	cb 01       	movw	r24, r22
         0.00085282 * temperature * pow(percentHumidity, 2) +
         -0.00000199 * pow(temperature, 2) * pow(percentHumidity, 2);

    if ((percentHumidity < 13) && (temperature >= 80.0) &&
        (temperature <= 112.0))
      hi -= ((13.0 - percentHumidity) * 0.25) *
    2172:	9c 01       	movw	r18, r24
    2174:	ad 01       	movw	r20, r26
    2176:	c7 01       	movw	r24, r14
    2178:	b6 01       	movw	r22, r12
    217a:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    217e:	dc 01       	movw	r26, r24
    2180:	cb 01       	movw	r24, r22
            sqrt((17.0 - abs(temperature - 95.0)) * 0.05882);
    2182:	9c 01       	movw	r18, r24
    2184:	ad 01       	movw	r20, r26
    2186:	69 81       	ldd	r22, Y+1	; 0x01
    2188:	7a 81       	ldd	r23, Y+2	; 0x02
    218a:	8b 81       	ldd	r24, Y+3	; 0x03
    218c:	9c 81       	ldd	r25, Y+4	; 0x04
    218e:	0e 94 0d 43 	call	0x861a	; 0x861a <__subsf3>
    2192:	dc 01       	movw	r26, r24
    2194:	cb 01       	movw	r24, r22
    2196:	89 83       	std	Y+1, r24	; 0x01
    2198:	9a 83       	std	Y+2, r25	; 0x02
    219a:	ab 83       	std	Y+3, r26	; 0x03
    219c:	bc 83       	std	Y+4, r27	; 0x04
    219e:	6b c0       	rjmp	.+214    	; 0x2276 <__stack+0x77>

    else if ((percentHumidity > 85.0) && (temperature >= 80.0) &&
    21a0:	20 e0       	ldi	r18, 0x00	; 0
    21a2:	30 e0       	ldi	r19, 0x00	; 0
    21a4:	4a ea       	ldi	r20, 0xAA	; 170
    21a6:	52 e4       	ldi	r21, 0x42	; 66
    21a8:	6b 85       	ldd	r22, Y+11	; 0x0b
    21aa:	7c 85       	ldd	r23, Y+12	; 0x0c
    21ac:	8d 85       	ldd	r24, Y+13	; 0x0d
    21ae:	9e 85       	ldd	r25, Y+14	; 0x0e
    21b0:	0e 94 c1 44 	call	0x8982	; 0x8982 <__gesf2>
    21b4:	18 16       	cp	r1, r24
    21b6:	0c f0       	brlt	.+2      	; 0x21ba <__DATA_REGION_LENGTH__+0x1ba>
    21b8:	5e c0       	rjmp	.+188    	; 0x2276 <__stack+0x77>
    21ba:	20 e0       	ldi	r18, 0x00	; 0
    21bc:	30 e0       	ldi	r19, 0x00	; 0
    21be:	40 ea       	ldi	r20, 0xA0	; 160
    21c0:	52 e4       	ldi	r21, 0x42	; 66
    21c2:	6f 81       	ldd	r22, Y+7	; 0x07
    21c4:	78 85       	ldd	r23, Y+8	; 0x08
    21c6:	89 85       	ldd	r24, Y+9	; 0x09
    21c8:	9a 85       	ldd	r25, Y+10	; 0x0a
    21ca:	0e 94 c1 44 	call	0x8982	; 0x8982 <__gesf2>
    21ce:	88 23       	and	r24, r24
    21d0:	0c f4       	brge	.+2      	; 0x21d4 <__DATA_REGION_LENGTH__+0x1d4>
    21d2:	51 c0       	rjmp	.+162    	; 0x2276 <__stack+0x77>
    21d4:	20 e0       	ldi	r18, 0x00	; 0
    21d6:	30 e0       	ldi	r19, 0x00	; 0
    21d8:	4e ea       	ldi	r20, 0xAE	; 174
    21da:	52 e4       	ldi	r21, 0x42	; 66
    21dc:	6f 81       	ldd	r22, Y+7	; 0x07
    21de:	78 85       	ldd	r23, Y+8	; 0x08
    21e0:	89 85       	ldd	r24, Y+9	; 0x09
    21e2:	9a 85       	ldd	r25, Y+10	; 0x0a
    21e4:	0e 94 72 43 	call	0x86e4	; 0x86e4 <__cmpsf2>
    21e8:	18 16       	cp	r1, r24
    21ea:	0c f4       	brge	.+2      	; 0x21ee <__DATA_REGION_LENGTH__+0x1ee>
    21ec:	44 c0       	rjmp	.+136    	; 0x2276 <__stack+0x77>
             (temperature <= 87.0))
      hi += ((percentHumidity - 85.0) * 0.1) * ((87.0 - temperature) * 0.2);
    21ee:	20 e0       	ldi	r18, 0x00	; 0
    21f0:	30 e0       	ldi	r19, 0x00	; 0
    21f2:	4a ea       	ldi	r20, 0xAA	; 170
    21f4:	52 e4       	ldi	r21, 0x42	; 66
    21f6:	6b 85       	ldd	r22, Y+11	; 0x0b
    21f8:	7c 85       	ldd	r23, Y+12	; 0x0c
    21fa:	8d 85       	ldd	r24, Y+13	; 0x0d
    21fc:	9e 85       	ldd	r25, Y+14	; 0x0e
    21fe:	0e 94 0d 43 	call	0x861a	; 0x861a <__subsf3>
    2202:	dc 01       	movw	r26, r24
    2204:	cb 01       	movw	r24, r22
    2206:	2d ec       	ldi	r18, 0xCD	; 205
    2208:	3c ec       	ldi	r19, 0xCC	; 204
    220a:	4c ec       	ldi	r20, 0xCC	; 204
    220c:	5d e3       	ldi	r21, 0x3D	; 61
    220e:	bc 01       	movw	r22, r24
    2210:	cd 01       	movw	r24, r26
    2212:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    2216:	dc 01       	movw	r26, r24
    2218:	cb 01       	movw	r24, r22
    221a:	6c 01       	movw	r12, r24
    221c:	7d 01       	movw	r14, r26
    221e:	2f 81       	ldd	r18, Y+7	; 0x07
    2220:	38 85       	ldd	r19, Y+8	; 0x08
    2222:	49 85       	ldd	r20, Y+9	; 0x09
    2224:	5a 85       	ldd	r21, Y+10	; 0x0a
    2226:	60 e0       	ldi	r22, 0x00	; 0
    2228:	70 e0       	ldi	r23, 0x00	; 0
    222a:	8e ea       	ldi	r24, 0xAE	; 174
    222c:	92 e4       	ldi	r25, 0x42	; 66
    222e:	0e 94 0d 43 	call	0x861a	; 0x861a <__subsf3>
    2232:	dc 01       	movw	r26, r24
    2234:	cb 01       	movw	r24, r22
    2236:	2d ec       	ldi	r18, 0xCD	; 205
    2238:	3c ec       	ldi	r19, 0xCC	; 204
    223a:	4c e4       	ldi	r20, 0x4C	; 76
    223c:	5e e3       	ldi	r21, 0x3E	; 62
    223e:	bc 01       	movw	r22, r24
    2240:	cd 01       	movw	r24, r26
    2242:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    2246:	dc 01       	movw	r26, r24
    2248:	cb 01       	movw	r24, r22
    224a:	9c 01       	movw	r18, r24
    224c:	ad 01       	movw	r20, r26
    224e:	c7 01       	movw	r24, r14
    2250:	b6 01       	movw	r22, r12
    2252:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    2256:	dc 01       	movw	r26, r24
    2258:	cb 01       	movw	r24, r22
    225a:	9c 01       	movw	r18, r24
    225c:	ad 01       	movw	r20, r26
    225e:	69 81       	ldd	r22, Y+1	; 0x01
    2260:	7a 81       	ldd	r23, Y+2	; 0x02
    2262:	8b 81       	ldd	r24, Y+3	; 0x03
    2264:	9c 81       	ldd	r25, Y+4	; 0x04
    2266:	0e 94 0e 43 	call	0x861c	; 0x861c <__addsf3>
    226a:	dc 01       	movw	r26, r24
    226c:	cb 01       	movw	r24, r22
    226e:	89 83       	std	Y+1, r24	; 0x01
    2270:	9a 83       	std	Y+2, r25	; 0x02
    2272:	ab 83       	std	Y+3, r26	; 0x03
    2274:	bc 83       	std	Y+4, r27	; 0x04
  }

  return isFahrenheit ? hi : convertFtoC(hi);
    2276:	8f 85       	ldd	r24, Y+15	; 0x0f
    2278:	88 23       	and	r24, r24
    227a:	29 f0       	breq	.+10     	; 0x2286 <__stack+0x87>
    227c:	89 81       	ldd	r24, Y+1	; 0x01
    227e:	9a 81       	ldd	r25, Y+2	; 0x02
    2280:	ab 81       	ldd	r26, Y+3	; 0x03
    2282:	bc 81       	ldd	r27, Y+4	; 0x04
    2284:	0c c0       	rjmp	.+24     	; 0x229e <__stack+0x9f>
    2286:	89 81       	ldd	r24, Y+1	; 0x01
    2288:	9a 81       	ldd	r25, Y+2	; 0x02
    228a:	ab 81       	ldd	r26, Y+3	; 0x03
    228c:	bc 81       	ldd	r27, Y+4	; 0x04
    228e:	2d 81       	ldd	r18, Y+5	; 0x05
    2290:	3e 81       	ldd	r19, Y+6	; 0x06
    2292:	ac 01       	movw	r20, r24
    2294:	bd 01       	movw	r22, r26
    2296:	c9 01       	movw	r24, r18
    2298:	41 dc       	rcall	.-1918   	; 0x1b1c <_ZN3DHT11convertFtoCEf>
    229a:	dc 01       	movw	r26, r24
    229c:	cb 01       	movw	r24, r22
}
    229e:	bc 01       	movw	r22, r24
    22a0:	cd 01       	movw	r24, r26
    22a2:	2f 96       	adiw	r28, 0x0f	; 15
    22a4:	0f b6       	in	r0, 0x3f	; 63
    22a6:	f8 94       	cli
    22a8:	de bf       	out	0x3e, r29	; 62
    22aa:	0f be       	out	0x3f, r0	; 63
    22ac:	cd bf       	out	0x3d, r28	; 61
    22ae:	df 91       	pop	r29
    22b0:	cf 91       	pop	r28
    22b2:	1f 91       	pop	r17
    22b4:	0f 91       	pop	r16
    22b6:	ff 90       	pop	r15
    22b8:	ef 90       	pop	r14
    22ba:	df 90       	pop	r13
    22bc:	cf 90       	pop	r12
    22be:	bf 90       	pop	r11
    22c0:	af 90       	pop	r10
    22c2:	9f 90       	pop	r9
    22c4:	8f 90       	pop	r8
    22c6:	08 95       	ret

000022c8 <_ZN3DHT4readEb>:
 *seconds.
 *  @param  force
 *          true if using force mode
 *	@return float value
 */
bool DHT::read(bool force) {
    22c8:	af 92       	push	r10
    22ca:	bf 92       	push	r11
    22cc:	cf 92       	push	r12
    22ce:	df 92       	push	r13
    22d0:	ff 92       	push	r15
    22d2:	0f 93       	push	r16
    22d4:	1f 93       	push	r17
    22d6:	cf 93       	push	r28
    22d8:	df 93       	push	r29
    22da:	cd b7       	in	r28, 0x3d	; 61
    22dc:	de b7       	in	r29, 0x3e	; 62
    22de:	c4 55       	subi	r28, 0x54	; 84
    22e0:	d1 40       	sbci	r29, 0x01	; 1
    22e2:	0f b6       	in	r0, 0x3f	; 63
    22e4:	f8 94       	cli
    22e6:	de bf       	out	0x3e, r29	; 62
    22e8:	0f be       	out	0x3f, r0	; 63
    22ea:	cd bf       	out	0x3d, r28	; 61
    22ec:	9e 01       	movw	r18, r28
    22ee:	2e 5a       	subi	r18, 0xAE	; 174
    22f0:	3e 4f       	sbci	r19, 0xFE	; 254
    22f2:	f9 01       	movw	r30, r18
    22f4:	91 83       	std	Z+1, r25	; 0x01
    22f6:	80 83       	st	Z, r24
    22f8:	ce 01       	movw	r24, r28
    22fa:	8c 5a       	subi	r24, 0xAC	; 172
    22fc:	9e 4f       	sbci	r25, 0xFE	; 254
    22fe:	fc 01       	movw	r30, r24
    2300:	60 83       	st	Z, r22
  // Check if sensor was read less than two seconds ago and return early
  // to use last reading.
  uint32_t currenttime = millis();
    2302:	0e 94 82 4a 	call	0x9504	; 0x9504 <millis>
    2306:	dc 01       	movw	r26, r24
    2308:	cb 01       	movw	r24, r22
    230a:	8d 83       	std	Y+5, r24	; 0x05
    230c:	9e 83       	std	Y+6, r25	; 0x06
    230e:	af 83       	std	Y+7, r26	; 0x07
    2310:	b8 87       	std	Y+8, r27	; 0x08
  if (!force && ((currenttime - _lastreadtime) < MIN_INTERVAL)) {
    2312:	ce 01       	movw	r24, r28
    2314:	8c 5a       	subi	r24, 0xAC	; 172
    2316:	9e 4f       	sbci	r25, 0xFE	; 254
    2318:	fc 01       	movw	r30, r24
    231a:	90 81       	ld	r25, Z
    231c:	81 e0       	ldi	r24, 0x01	; 1
    231e:	89 27       	eor	r24, r25
    2320:	88 23       	and	r24, r24
    2322:	29 f1       	breq	.+74     	; 0x236e <_ZN3DHT4readEb+0xa6>
    2324:	ce 01       	movw	r24, r28
    2326:	8e 5a       	subi	r24, 0xAE	; 174
    2328:	9e 4f       	sbci	r25, 0xFE	; 254
    232a:	fc 01       	movw	r30, r24
    232c:	80 81       	ld	r24, Z
    232e:	91 81       	ldd	r25, Z+1	; 0x01
    2330:	fc 01       	movw	r30, r24
    2332:	81 85       	ldd	r24, Z+9	; 0x09
    2334:	92 85       	ldd	r25, Z+10	; 0x0a
    2336:	a3 85       	ldd	r26, Z+11	; 0x0b
    2338:	b4 85       	ldd	r27, Z+12	; 0x0c
    233a:	2d 81       	ldd	r18, Y+5	; 0x05
    233c:	3e 81       	ldd	r19, Y+6	; 0x06
    233e:	4f 81       	ldd	r20, Y+7	; 0x07
    2340:	58 85       	ldd	r21, Y+8	; 0x08
    2342:	59 01       	movw	r10, r18
    2344:	6a 01       	movw	r12, r20
    2346:	a8 1a       	sub	r10, r24
    2348:	b9 0a       	sbc	r11, r25
    234a:	ca 0a       	sbc	r12, r26
    234c:	db 0a       	sbc	r13, r27
    234e:	d6 01       	movw	r26, r12
    2350:	c5 01       	movw	r24, r10
    2352:	80 3d       	cpi	r24, 0xD0	; 208
    2354:	97 40       	sbci	r25, 0x07	; 7
    2356:	a1 05       	cpc	r26, r1
    2358:	b1 05       	cpc	r27, r1
    235a:	48 f4       	brcc	.+18     	; 0x236e <_ZN3DHT4readEb+0xa6>
    return _lastresult; // return last correct measurement
    235c:	ce 01       	movw	r24, r28
    235e:	8e 5a       	subi	r24, 0xAE	; 174
    2360:	9e 4f       	sbci	r25, 0xFE	; 254
    2362:	fc 01       	movw	r30, r24
    2364:	80 81       	ld	r24, Z
    2366:	91 81       	ldd	r25, Z+1	; 0x01
    2368:	fc 01       	movw	r30, r24
    236a:	f1 88       	ldd	r15, Z+17	; 0x11
    236c:	5f c2       	rjmp	.+1214   	; 0x282c <_ZN3DHT4readEb+0x564>
  }
  _lastreadtime = currenttime;
    236e:	ce 01       	movw	r24, r28
    2370:	8e 5a       	subi	r24, 0xAE	; 174
    2372:	9e 4f       	sbci	r25, 0xFE	; 254
    2374:	fc 01       	movw	r30, r24
    2376:	20 81       	ld	r18, Z
    2378:	31 81       	ldd	r19, Z+1	; 0x01
    237a:	8d 81       	ldd	r24, Y+5	; 0x05
    237c:	9e 81       	ldd	r25, Y+6	; 0x06
    237e:	af 81       	ldd	r26, Y+7	; 0x07
    2380:	b8 85       	ldd	r27, Y+8	; 0x08
    2382:	f9 01       	movw	r30, r18
    2384:	81 87       	std	Z+9, r24	; 0x09
    2386:	92 87       	std	Z+10, r25	; 0x0a
    2388:	a3 87       	std	Z+11, r26	; 0x0b
    238a:	b4 87       	std	Z+12, r27	; 0x0c

  // Reset 40 bits of received data to zero.
  data[0] = data[1] = data[2] = data[3] = data[4] = 0;
    238c:	ce 01       	movw	r24, r28
    238e:	8e 5a       	subi	r24, 0xAE	; 174
    2390:	9e 4f       	sbci	r25, 0xFE	; 254
    2392:	fc 01       	movw	r30, r24
    2394:	80 81       	ld	r24, Z
    2396:	91 81       	ldd	r25, Z+1	; 0x01
    2398:	fc 01       	movw	r30, r24
    239a:	14 82       	std	Z+4, r1	; 0x04
    239c:	ce 01       	movw	r24, r28
    239e:	8e 5a       	subi	r24, 0xAE	; 174
    23a0:	9e 4f       	sbci	r25, 0xFE	; 254
    23a2:	fc 01       	movw	r30, r24
    23a4:	80 81       	ld	r24, Z
    23a6:	91 81       	ldd	r25, Z+1	; 0x01
    23a8:	fc 01       	movw	r30, r24
    23aa:	24 81       	ldd	r18, Z+4	; 0x04
    23ac:	ce 01       	movw	r24, r28
    23ae:	8e 5a       	subi	r24, 0xAE	; 174
    23b0:	9e 4f       	sbci	r25, 0xFE	; 254
    23b2:	fc 01       	movw	r30, r24
    23b4:	80 81       	ld	r24, Z
    23b6:	91 81       	ldd	r25, Z+1	; 0x01
    23b8:	fc 01       	movw	r30, r24
    23ba:	23 83       	std	Z+3, r18	; 0x03
    23bc:	ce 01       	movw	r24, r28
    23be:	8e 5a       	subi	r24, 0xAE	; 174
    23c0:	9e 4f       	sbci	r25, 0xFE	; 254
    23c2:	fc 01       	movw	r30, r24
    23c4:	80 81       	ld	r24, Z
    23c6:	91 81       	ldd	r25, Z+1	; 0x01
    23c8:	fc 01       	movw	r30, r24
    23ca:	23 81       	ldd	r18, Z+3	; 0x03
    23cc:	ce 01       	movw	r24, r28
    23ce:	8e 5a       	subi	r24, 0xAE	; 174
    23d0:	9e 4f       	sbci	r25, 0xFE	; 254
    23d2:	fc 01       	movw	r30, r24
    23d4:	80 81       	ld	r24, Z
    23d6:	91 81       	ldd	r25, Z+1	; 0x01
    23d8:	fc 01       	movw	r30, r24
    23da:	22 83       	std	Z+2, r18	; 0x02
    23dc:	ce 01       	movw	r24, r28
    23de:	8e 5a       	subi	r24, 0xAE	; 174
    23e0:	9e 4f       	sbci	r25, 0xFE	; 254
    23e2:	fc 01       	movw	r30, r24
    23e4:	80 81       	ld	r24, Z
    23e6:	91 81       	ldd	r25, Z+1	; 0x01
    23e8:	fc 01       	movw	r30, r24
    23ea:	22 81       	ldd	r18, Z+2	; 0x02
    23ec:	ce 01       	movw	r24, r28
    23ee:	8e 5a       	subi	r24, 0xAE	; 174
    23f0:	9e 4f       	sbci	r25, 0xFE	; 254
    23f2:	fc 01       	movw	r30, r24
    23f4:	80 81       	ld	r24, Z
    23f6:	91 81       	ldd	r25, Z+1	; 0x01
    23f8:	fc 01       	movw	r30, r24
    23fa:	21 83       	std	Z+1, r18	; 0x01
    23fc:	ce 01       	movw	r24, r28
    23fe:	8e 5a       	subi	r24, 0xAE	; 174
    2400:	9e 4f       	sbci	r25, 0xFE	; 254
    2402:	fc 01       	movw	r30, r24
    2404:	80 81       	ld	r24, Z
    2406:	91 81       	ldd	r25, Z+1	; 0x01
    2408:	fc 01       	movw	r30, r24
    240a:	21 81       	ldd	r18, Z+1	; 0x01
    240c:	ce 01       	movw	r24, r28
    240e:	8e 5a       	subi	r24, 0xAE	; 174
    2410:	9e 4f       	sbci	r25, 0xFE	; 254
    2412:	fc 01       	movw	r30, r24
    2414:	80 81       	ld	r24, Z
    2416:	91 81       	ldd	r25, Z+1	; 0x01
    2418:	fc 01       	movw	r30, r24
    241a:	20 83       	st	Z, r18
  // Send start signal.  See DHT datasheet for full signal diagram:
  //   http://www.adafruit.com/datasheets/Digital%20humidity%20and%20temperature%20sensor%20AM2302.pdf

  // Go into high impedence state to let pull-up raise data line level and
  // start the reading process.
  pinMode(_pin, INPUT_PULLUP);
    241c:	ce 01       	movw	r24, r28
    241e:	8e 5a       	subi	r24, 0xAE	; 174
    2420:	9e 4f       	sbci	r25, 0xFE	; 254
    2422:	fc 01       	movw	r30, r24
    2424:	80 81       	ld	r24, Z
    2426:	91 81       	ldd	r25, Z+1	; 0x01
    2428:	fc 01       	movw	r30, r24
    242a:	85 81       	ldd	r24, Z+5	; 0x05
    242c:	62 e0       	ldi	r22, 0x02	; 2
    242e:	0e 94 ae 4b 	call	0x975c	; 0x975c <pinMode>
  delay(1);
    2432:	61 e0       	ldi	r22, 0x01	; 1
    2434:	70 e0       	ldi	r23, 0x00	; 0
    2436:	80 e0       	ldi	r24, 0x00	; 0
    2438:	90 e0       	ldi	r25, 0x00	; 0
    243a:	0e 94 b3 4a 	call	0x9566	; 0x9566 <delay>

  // First set data line low for a period according to sensor type
  pinMode(_pin, OUTPUT);
    243e:	ce 01       	movw	r24, r28
    2440:	8e 5a       	subi	r24, 0xAE	; 174
    2442:	9e 4f       	sbci	r25, 0xFE	; 254
    2444:	fc 01       	movw	r30, r24
    2446:	80 81       	ld	r24, Z
    2448:	91 81       	ldd	r25, Z+1	; 0x01
    244a:	fc 01       	movw	r30, r24
    244c:	85 81       	ldd	r24, Z+5	; 0x05
    244e:	61 e0       	ldi	r22, 0x01	; 1
    2450:	0e 94 ae 4b 	call	0x975c	; 0x975c <pinMode>
  digitalWrite(_pin, LOW);
    2454:	ce 01       	movw	r24, r28
    2456:	8e 5a       	subi	r24, 0xAE	; 174
    2458:	9e 4f       	sbci	r25, 0xFE	; 254
    245a:	fc 01       	movw	r30, r24
    245c:	80 81       	ld	r24, Z
    245e:	91 81       	ldd	r25, Z+1	; 0x01
    2460:	fc 01       	movw	r30, r24
    2462:	85 81       	ldd	r24, Z+5	; 0x05
    2464:	60 e0       	ldi	r22, 0x00	; 0
    2466:	0e 94 ea 4b 	call	0x97d4	; 0x97d4 <digitalWrite>
  switch (_type) {
    246a:	ce 01       	movw	r24, r28
    246c:	8e 5a       	subi	r24, 0xAE	; 174
    246e:	9e 4f       	sbci	r25, 0xFE	; 254
    2470:	fc 01       	movw	r30, r24
    2472:	80 81       	ld	r24, Z
    2474:	91 81       	ldd	r25, Z+1	; 0x01
    2476:	fc 01       	movw	r30, r24
    2478:	86 81       	ldd	r24, Z+6	; 0x06
    247a:	88 2f       	mov	r24, r24
    247c:	90 e0       	ldi	r25, 0x00	; 0
    247e:	45 97       	sbiw	r24, 0x15	; 21
    2480:	02 97       	sbiw	r24, 0x02	; 2
    2482:	28 f4       	brcc	.+10     	; 0x248e <_ZN3DHT4readEb+0x1c6>
  case DHT22:
  case DHT21:
    delayMicroseconds(1100); // data sheet says "at least 1ms"
    2484:	8c e4       	ldi	r24, 0x4C	; 76
    2486:	94 e0       	ldi	r25, 0x04	; 4
    2488:	0e 94 ec 4a 	call	0x95d8	; 0x95d8 <delayMicroseconds>
    break;
    248c:	07 c0       	rjmp	.+14     	; 0x249c <_ZN3DHT4readEb+0x1d4>
  case DHT11:
  default:
    delay(20); // data sheet says at least 18ms, 20ms just to be safe
    248e:	64 e1       	ldi	r22, 0x14	; 20
    2490:	70 e0       	ldi	r23, 0x00	; 0
    2492:	80 e0       	ldi	r24, 0x00	; 0
    2494:	90 e0       	ldi	r25, 0x00	; 0
    2496:	0e 94 b3 4a 	call	0x9566	; 0x9566 <delay>
    break;
    249a:	00 00       	nop
  }

  uint32_t cycles[80];
  {
    // End the start signal by setting data line high for 40 microseconds.
    pinMode(_pin, INPUT_PULLUP);
    249c:	ce 01       	movw	r24, r28
    249e:	8e 5a       	subi	r24, 0xAE	; 174
    24a0:	9e 4f       	sbci	r25, 0xFE	; 254
    24a2:	fc 01       	movw	r30, r24
    24a4:	80 81       	ld	r24, Z
    24a6:	91 81       	ldd	r25, Z+1	; 0x01
    24a8:	fc 01       	movw	r30, r24
    24aa:	85 81       	ldd	r24, Z+5	; 0x05
    24ac:	62 e0       	ldi	r22, 0x02	; 2
    24ae:	0e 94 ae 4b 	call	0x975c	; 0x975c <pinMode>

    // Delay a moment to let sensor pull data line low.
    delayMicroseconds(pullTime);
    24b2:	ce 01       	movw	r24, r28
    24b4:	8e 5a       	subi	r24, 0xAE	; 174
    24b6:	9e 4f       	sbci	r25, 0xFE	; 254
    24b8:	fc 01       	movw	r30, r24
    24ba:	80 81       	ld	r24, Z
    24bc:	91 81       	ldd	r25, Z+1	; 0x01
    24be:	fc 01       	movw	r30, r24
    24c0:	82 89       	ldd	r24, Z+18	; 0x12
    24c2:	88 2f       	mov	r24, r24
    24c4:	90 e0       	ldi	r25, 0x00	; 0
    24c6:	0e 94 ec 4a 	call	0x95d8	; 0x95d8 <delayMicroseconds>

    // Now start reading the data line to get the value from the DHT sensor.

    // Turn off interrupts temporarily because the next sections
    // are timing critical and we don't want any interruptions.
    InterruptLock lock;
    24ca:	ce 01       	movw	r24, r28
    24cc:	8f 5a       	subi	r24, 0xAF	; 175
    24ce:	9e 4f       	sbci	r25, 0xFE	; 254
    24d0:	00 d9       	rcall	.-3584   	; 0x16d2 <_ZN13InterruptLockC1Ev>

    // First expect a low signal for ~80 microseconds followed by a high signal
    // for ~80 microseconds again.
    if (expectPulse(LOW) == TIMEOUT) {
    24d2:	ce 01       	movw	r24, r28
    24d4:	8e 5a       	subi	r24, 0xAE	; 174
    24d6:	9e 4f       	sbci	r25, 0xFE	; 254
    24d8:	fc 01       	movw	r30, r24
    24da:	80 81       	ld	r24, Z
    24dc:	91 81       	ldd	r25, Z+1	; 0x01
    24de:	60 e0       	ldi	r22, 0x00	; 0
    24e0:	b7 d1       	rcall	.+878    	; 0x2850 <_ZN3DHT11expectPulseEb>
    24e2:	dc 01       	movw	r26, r24
    24e4:	cb 01       	movw	r24, r22
    24e6:	21 e0       	ldi	r18, 0x01	; 1
    24e8:	8f 3f       	cpi	r24, 0xFF	; 255
    24ea:	9f 4f       	sbci	r25, 0xFF	; 255
    24ec:	af 4f       	sbci	r26, 0xFF	; 255
    24ee:	bf 4f       	sbci	r27, 0xFF	; 255
    24f0:	09 f0       	breq	.+2      	; 0x24f4 <_ZN3DHT4readEb+0x22c>
    24f2:	20 e0       	ldi	r18, 0x00	; 0
    24f4:	22 23       	and	r18, r18
    24f6:	99 f0       	breq	.+38     	; 0x251e <_ZN3DHT4readEb+0x256>
      DEBUG_PRINTLN(F("DHT timeout waiting for start signal low pulse."));
      _lastresult = false;
    24f8:	ce 01       	movw	r24, r28
    24fa:	8e 5a       	subi	r24, 0xAE	; 174
    24fc:	9e 4f       	sbci	r25, 0xFE	; 254
    24fe:	fc 01       	movw	r30, r24
    2500:	80 81       	ld	r24, Z
    2502:	91 81       	ldd	r25, Z+1	; 0x01
    2504:	fc 01       	movw	r30, r24
    2506:	11 8a       	std	Z+17, r1	; 0x11
      return _lastresult;
    2508:	ce 01       	movw	r24, r28
    250a:	8e 5a       	subi	r24, 0xAE	; 174
    250c:	9e 4f       	sbci	r25, 0xFE	; 254
    250e:	fc 01       	movw	r30, r24
    2510:	80 81       	ld	r24, Z
    2512:	91 81       	ldd	r25, Z+1	; 0x01
    2514:	fc 01       	movw	r30, r24
    2516:	f1 88       	ldd	r15, Z+17	; 0x11
    2518:	00 e0       	ldi	r16, 0x00	; 0
    251a:	10 e0       	ldi	r17, 0x00	; 0
    251c:	72 c0       	rjmp	.+228    	; 0x2602 <_ZN3DHT4readEb+0x33a>
    }
    if (expectPulse(HIGH) == TIMEOUT) {
    251e:	ce 01       	movw	r24, r28
    2520:	8e 5a       	subi	r24, 0xAE	; 174
    2522:	9e 4f       	sbci	r25, 0xFE	; 254
    2524:	fc 01       	movw	r30, r24
    2526:	80 81       	ld	r24, Z
    2528:	91 81       	ldd	r25, Z+1	; 0x01
    252a:	61 e0       	ldi	r22, 0x01	; 1
    252c:	91 d1       	rcall	.+802    	; 0x2850 <_ZN3DHT11expectPulseEb>
    252e:	dc 01       	movw	r26, r24
    2530:	cb 01       	movw	r24, r22
    2532:	21 e0       	ldi	r18, 0x01	; 1
    2534:	8f 3f       	cpi	r24, 0xFF	; 255
    2536:	9f 4f       	sbci	r25, 0xFF	; 255
    2538:	af 4f       	sbci	r26, 0xFF	; 255
    253a:	bf 4f       	sbci	r27, 0xFF	; 255
    253c:	09 f0       	breq	.+2      	; 0x2540 <_ZN3DHT4readEb+0x278>
    253e:	20 e0       	ldi	r18, 0x00	; 0
    2540:	22 23       	and	r18, r18
    2542:	99 f0       	breq	.+38     	; 0x256a <_ZN3DHT4readEb+0x2a2>
      DEBUG_PRINTLN(F("DHT timeout waiting for start signal high pulse."));
      _lastresult = false;
    2544:	ce 01       	movw	r24, r28
    2546:	8e 5a       	subi	r24, 0xAE	; 174
    2548:	9e 4f       	sbci	r25, 0xFE	; 254
    254a:	fc 01       	movw	r30, r24
    254c:	80 81       	ld	r24, Z
    254e:	91 81       	ldd	r25, Z+1	; 0x01
    2550:	fc 01       	movw	r30, r24
    2552:	11 8a       	std	Z+17, r1	; 0x11
      return _lastresult;
    2554:	ce 01       	movw	r24, r28
    2556:	8e 5a       	subi	r24, 0xAE	; 174
    2558:	9e 4f       	sbci	r25, 0xFE	; 254
    255a:	fc 01       	movw	r30, r24
    255c:	80 81       	ld	r24, Z
    255e:	91 81       	ldd	r25, Z+1	; 0x01
    2560:	fc 01       	movw	r30, r24
    2562:	f1 88       	ldd	r15, Z+17	; 0x11
    2564:	00 e0       	ldi	r16, 0x00	; 0
    2566:	10 e0       	ldi	r17, 0x00	; 0
    2568:	4c c0       	rjmp	.+152    	; 0x2602 <_ZN3DHT4readEb+0x33a>
    // then it's a 1.  We measure the cycle count of the initial 50us low pulse
    // and use that to compare to the cycle count of the high pulse to determine
    // if the bit is a 0 (high state cycle count < low state cycle count), or a
    // 1 (high state cycle count > low state cycle count). Note that for speed
    // all the pulses are read into a array and then examined in a later step.
    for (int i = 0; i < 80; i += 2) {
    256a:	1a 82       	std	Y+2, r1	; 0x02
    256c:	19 82       	std	Y+1, r1	; 0x01
    256e:	89 81       	ldd	r24, Y+1	; 0x01
    2570:	9a 81       	ldd	r25, Y+2	; 0x02
    2572:	80 35       	cpi	r24, 0x50	; 80
    2574:	91 05       	cpc	r25, r1
    2576:	0c f0       	brlt	.+2      	; 0x257a <_ZN3DHT4readEb+0x2b2>
    2578:	42 c0       	rjmp	.+132    	; 0x25fe <_ZN3DHT4readEb+0x336>
      cycles[i] = expectPulse(LOW);
    257a:	ce 01       	movw	r24, r28
    257c:	8e 5a       	subi	r24, 0xAE	; 174
    257e:	9e 4f       	sbci	r25, 0xFE	; 254
    2580:	fc 01       	movw	r30, r24
    2582:	80 81       	ld	r24, Z
    2584:	91 81       	ldd	r25, Z+1	; 0x01
    2586:	60 e0       	ldi	r22, 0x00	; 0
    2588:	63 d1       	rcall	.+710    	; 0x2850 <_ZN3DHT11expectPulseEb>
    258a:	dc 01       	movw	r26, r24
    258c:	cb 01       	movw	r24, r22
    258e:	29 81       	ldd	r18, Y+1	; 0x01
    2590:	3a 81       	ldd	r19, Y+2	; 0x02
    2592:	22 0f       	add	r18, r18
    2594:	33 1f       	adc	r19, r19
    2596:	22 0f       	add	r18, r18
    2598:	33 1f       	adc	r19, r19
    259a:	ae 01       	movw	r20, r28
    259c:	4f 5f       	subi	r20, 0xFF	; 255
    259e:	5f 4f       	sbci	r21, 0xFF	; 255
    25a0:	24 0f       	add	r18, r20
    25a2:	35 1f       	adc	r19, r21
    25a4:	20 5f       	subi	r18, 0xF0	; 240
    25a6:	3f 4f       	sbci	r19, 0xFF	; 255
    25a8:	f9 01       	movw	r30, r18
    25aa:	80 83       	st	Z, r24
    25ac:	91 83       	std	Z+1, r25	; 0x01
    25ae:	a2 83       	std	Z+2, r26	; 0x02
    25b0:	b3 83       	std	Z+3, r27	; 0x03
      cycles[i + 1] = expectPulse(HIGH);
    25b2:	89 81       	ldd	r24, Y+1	; 0x01
    25b4:	9a 81       	ldd	r25, Y+2	; 0x02
    25b6:	8c 01       	movw	r16, r24
    25b8:	0f 5f       	subi	r16, 0xFF	; 255
    25ba:	1f 4f       	sbci	r17, 0xFF	; 255
    25bc:	ce 01       	movw	r24, r28
    25be:	8e 5a       	subi	r24, 0xAE	; 174
    25c0:	9e 4f       	sbci	r25, 0xFE	; 254
    25c2:	fc 01       	movw	r30, r24
    25c4:	80 81       	ld	r24, Z
    25c6:	91 81       	ldd	r25, Z+1	; 0x01
    25c8:	61 e0       	ldi	r22, 0x01	; 1
    25ca:	42 d1       	rcall	.+644    	; 0x2850 <_ZN3DHT11expectPulseEb>
    25cc:	dc 01       	movw	r26, r24
    25ce:	cb 01       	movw	r24, r22
    25d0:	98 01       	movw	r18, r16
    25d2:	22 0f       	add	r18, r18
    25d4:	33 1f       	adc	r19, r19
    25d6:	22 0f       	add	r18, r18
    25d8:	33 1f       	adc	r19, r19
    25da:	ae 01       	movw	r20, r28
    25dc:	4f 5f       	subi	r20, 0xFF	; 255
    25de:	5f 4f       	sbci	r21, 0xFF	; 255
    25e0:	24 0f       	add	r18, r20
    25e2:	35 1f       	adc	r19, r21
    25e4:	20 5f       	subi	r18, 0xF0	; 240
    25e6:	3f 4f       	sbci	r19, 0xFF	; 255
    25e8:	f9 01       	movw	r30, r18
    25ea:	80 83       	st	Z, r24
    25ec:	91 83       	std	Z+1, r25	; 0x01
    25ee:	a2 83       	std	Z+2, r26	; 0x02
    25f0:	b3 83       	std	Z+3, r27	; 0x03
    // then it's a 1.  We measure the cycle count of the initial 50us low pulse
    // and use that to compare to the cycle count of the high pulse to determine
    // if the bit is a 0 (high state cycle count < low state cycle count), or a
    // 1 (high state cycle count > low state cycle count). Note that for speed
    // all the pulses are read into a array and then examined in a later step.
    for (int i = 0; i < 80; i += 2) {
    25f2:	89 81       	ldd	r24, Y+1	; 0x01
    25f4:	9a 81       	ldd	r25, Y+2	; 0x02
    25f6:	02 96       	adiw	r24, 0x02	; 2
    25f8:	9a 83       	std	Y+2, r25	; 0x02
    25fa:	89 83       	std	Y+1, r24	; 0x01
    25fc:	b8 cf       	rjmp	.-144    	; 0x256e <_ZN3DHT4readEb+0x2a6>
    25fe:	01 e0       	ldi	r16, 0x01	; 1
    2600:	10 e0       	ldi	r17, 0x00	; 0
    2602:	ce 01       	movw	r24, r28
    2604:	8f 5a       	subi	r24, 0xAF	; 175
    2606:	9e 4f       	sbci	r25, 0xFE	; 254
    2608:	73 d8       	rcall	.-3866   	; 0x16f0 <_ZN13InterruptLockD1Ev>
    260a:	01 30       	cpi	r16, 0x01	; 1
    260c:	11 05       	cpc	r17, r1
    260e:	09 f0       	breq	.+2      	; 0x2612 <_ZN3DHT4readEb+0x34a>
    2610:	0d c1       	rjmp	.+538    	; 0x282c <_ZN3DHT4readEb+0x564>

    // Now start reading the data line to get the value from the DHT sensor.

    // Turn off interrupts temporarily because the next sections
    // are timing critical and we don't want any interruptions.
    InterruptLock lock;
    2612:	00 00       	nop
    }
  } // Timing critical code is now complete.

  // Inspect pulses and determine which ones are 0 (high state cycle count < low
  // state cycle count), or 1 (high state cycle count > low state cycle count).
  for (int i = 0; i < 40; ++i) {
    2614:	1c 82       	std	Y+4, r1	; 0x04
    2616:	1b 82       	std	Y+3, r1	; 0x03
    2618:	8b 81       	ldd	r24, Y+3	; 0x03
    261a:	9c 81       	ldd	r25, Y+4	; 0x04
    261c:	88 97       	sbiw	r24, 0x28	; 40
    261e:	0c f0       	brlt	.+2      	; 0x2622 <_ZN3DHT4readEb+0x35a>
    2620:	a7 c0       	rjmp	.+334    	; 0x2770 <_ZN3DHT4readEb+0x4a8>
    uint32_t lowCycles = cycles[2 * i];
    2622:	8b 81       	ldd	r24, Y+3	; 0x03
    2624:	9c 81       	ldd	r25, Y+4	; 0x04
    2626:	88 0f       	add	r24, r24
    2628:	99 1f       	adc	r25, r25
    262a:	88 0f       	add	r24, r24
    262c:	99 1f       	adc	r25, r25
    262e:	88 0f       	add	r24, r24
    2630:	99 1f       	adc	r25, r25
    2632:	9e 01       	movw	r18, r28
    2634:	2f 5f       	subi	r18, 0xFF	; 255
    2636:	3f 4f       	sbci	r19, 0xFF	; 255
    2638:	82 0f       	add	r24, r18
    263a:	93 1f       	adc	r25, r19
    263c:	40 96       	adiw	r24, 0x10	; 16
    263e:	fc 01       	movw	r30, r24
    2640:	80 81       	ld	r24, Z
    2642:	91 81       	ldd	r25, Z+1	; 0x01
    2644:	a2 81       	ldd	r26, Z+2	; 0x02
    2646:	b3 81       	ldd	r27, Z+3	; 0x03
    2648:	89 87       	std	Y+9, r24	; 0x09
    264a:	9a 87       	std	Y+10, r25	; 0x0a
    264c:	ab 87       	std	Y+11, r26	; 0x0b
    264e:	bc 87       	std	Y+12, r27	; 0x0c
    uint32_t highCycles = cycles[2 * i + 1];
    2650:	8b 81       	ldd	r24, Y+3	; 0x03
    2652:	9c 81       	ldd	r25, Y+4	; 0x04
    2654:	88 0f       	add	r24, r24
    2656:	99 1f       	adc	r25, r25
    2658:	01 96       	adiw	r24, 0x01	; 1
    265a:	88 0f       	add	r24, r24
    265c:	99 1f       	adc	r25, r25
    265e:	88 0f       	add	r24, r24
    2660:	99 1f       	adc	r25, r25
    2662:	9e 01       	movw	r18, r28
    2664:	2f 5f       	subi	r18, 0xFF	; 255
    2666:	3f 4f       	sbci	r19, 0xFF	; 255
    2668:	82 0f       	add	r24, r18
    266a:	93 1f       	adc	r25, r19
    266c:	40 96       	adiw	r24, 0x10	; 16
    266e:	fc 01       	movw	r30, r24
    2670:	80 81       	ld	r24, Z
    2672:	91 81       	ldd	r25, Z+1	; 0x01
    2674:	a2 81       	ldd	r26, Z+2	; 0x02
    2676:	b3 81       	ldd	r27, Z+3	; 0x03
    2678:	8d 87       	std	Y+13, r24	; 0x0d
    267a:	9e 87       	std	Y+14, r25	; 0x0e
    267c:	af 87       	std	Y+15, r26	; 0x0f
    267e:	b8 8b       	std	Y+16, r27	; 0x10
    if ((lowCycles == TIMEOUT) || (highCycles == TIMEOUT)) {
    2680:	89 85       	ldd	r24, Y+9	; 0x09
    2682:	9a 85       	ldd	r25, Y+10	; 0x0a
    2684:	ab 85       	ldd	r26, Y+11	; 0x0b
    2686:	bc 85       	ldd	r27, Y+12	; 0x0c
    2688:	8f 3f       	cpi	r24, 0xFF	; 255
    268a:	9f 4f       	sbci	r25, 0xFF	; 255
    268c:	af 4f       	sbci	r26, 0xFF	; 255
    268e:	bf 4f       	sbci	r27, 0xFF	; 255
    2690:	49 f0       	breq	.+18     	; 0x26a4 <_ZN3DHT4readEb+0x3dc>
    2692:	8d 85       	ldd	r24, Y+13	; 0x0d
    2694:	9e 85       	ldd	r25, Y+14	; 0x0e
    2696:	af 85       	ldd	r26, Y+15	; 0x0f
    2698:	b8 89       	ldd	r27, Y+16	; 0x10
    269a:	8f 3f       	cpi	r24, 0xFF	; 255
    269c:	9f 4f       	sbci	r25, 0xFF	; 255
    269e:	af 4f       	sbci	r26, 0xFF	; 255
    26a0:	bf 4f       	sbci	r27, 0xFF	; 255
    26a2:	89 f4       	brne	.+34     	; 0x26c6 <_ZN3DHT4readEb+0x3fe>
      DEBUG_PRINTLN(F("DHT timeout waiting for pulse."));
      _lastresult = false;
    26a4:	ce 01       	movw	r24, r28
    26a6:	8e 5a       	subi	r24, 0xAE	; 174
    26a8:	9e 4f       	sbci	r25, 0xFE	; 254
    26aa:	fc 01       	movw	r30, r24
    26ac:	80 81       	ld	r24, Z
    26ae:	91 81       	ldd	r25, Z+1	; 0x01
    26b0:	fc 01       	movw	r30, r24
    26b2:	11 8a       	std	Z+17, r1	; 0x11
      return _lastresult;
    26b4:	ce 01       	movw	r24, r28
    26b6:	8e 5a       	subi	r24, 0xAE	; 174
    26b8:	9e 4f       	sbci	r25, 0xFE	; 254
    26ba:	fc 01       	movw	r30, r24
    26bc:	80 81       	ld	r24, Z
    26be:	91 81       	ldd	r25, Z+1	; 0x01
    26c0:	fc 01       	movw	r30, r24
    26c2:	f1 88       	ldd	r15, Z+17	; 0x11
    26c4:	b3 c0       	rjmp	.+358    	; 0x282c <_ZN3DHT4readEb+0x564>
    }
    data[i / 8] <<= 1;
    26c6:	8b 81       	ldd	r24, Y+3	; 0x03
    26c8:	9c 81       	ldd	r25, Y+4	; 0x04
    26ca:	99 23       	and	r25, r25
    26cc:	0c f4       	brge	.+2      	; 0x26d0 <_ZN3DHT4readEb+0x408>
    26ce:	07 96       	adiw	r24, 0x07	; 7
    26d0:	95 95       	asr	r25
    26d2:	87 95       	ror	r24
    26d4:	95 95       	asr	r25
    26d6:	87 95       	ror	r24
    26d8:	95 95       	asr	r25
    26da:	87 95       	ror	r24
    26dc:	9e 01       	movw	r18, r28
    26de:	2e 5a       	subi	r18, 0xAE	; 174
    26e0:	3e 4f       	sbci	r19, 0xFE	; 254
    26e2:	f9 01       	movw	r30, r18
    26e4:	20 81       	ld	r18, Z
    26e6:	31 81       	ldd	r19, Z+1	; 0x01
    26e8:	28 0f       	add	r18, r24
    26ea:	39 1f       	adc	r19, r25
    26ec:	f9 01       	movw	r30, r18
    26ee:	20 81       	ld	r18, Z
    26f0:	42 2f       	mov	r20, r18
    26f2:	44 0f       	add	r20, r20
    26f4:	9e 01       	movw	r18, r28
    26f6:	2e 5a       	subi	r18, 0xAE	; 174
    26f8:	3e 4f       	sbci	r19, 0xFE	; 254
    26fa:	f9 01       	movw	r30, r18
    26fc:	20 81       	ld	r18, Z
    26fe:	31 81       	ldd	r19, Z+1	; 0x01
    2700:	82 0f       	add	r24, r18
    2702:	93 1f       	adc	r25, r19
    2704:	fc 01       	movw	r30, r24
    2706:	40 83       	st	Z, r20
    // Now compare the low and high cycle times to see if the bit is a 0 or 1.
    if (highCycles > lowCycles) {
    2708:	2d 85       	ldd	r18, Y+13	; 0x0d
    270a:	3e 85       	ldd	r19, Y+14	; 0x0e
    270c:	4f 85       	ldd	r20, Y+15	; 0x0f
    270e:	58 89       	ldd	r21, Y+16	; 0x10
    2710:	89 85       	ldd	r24, Y+9	; 0x09
    2712:	9a 85       	ldd	r25, Y+10	; 0x0a
    2714:	ab 85       	ldd	r26, Y+11	; 0x0b
    2716:	bc 85       	ldd	r27, Y+12	; 0x0c
    2718:	82 17       	cp	r24, r18
    271a:	93 07       	cpc	r25, r19
    271c:	a4 07       	cpc	r26, r20
    271e:	b5 07       	cpc	r27, r21
    2720:	08 f5       	brcc	.+66     	; 0x2764 <_ZN3DHT4readEb+0x49c>
      // High cycles are greater than 50us low cycle count, must be a 1.
      data[i / 8] |= 1;
    2722:	8b 81       	ldd	r24, Y+3	; 0x03
    2724:	9c 81       	ldd	r25, Y+4	; 0x04
    2726:	99 23       	and	r25, r25
    2728:	0c f4       	brge	.+2      	; 0x272c <_ZN3DHT4readEb+0x464>
    272a:	07 96       	adiw	r24, 0x07	; 7
    272c:	95 95       	asr	r25
    272e:	87 95       	ror	r24
    2730:	95 95       	asr	r25
    2732:	87 95       	ror	r24
    2734:	95 95       	asr	r25
    2736:	87 95       	ror	r24
    2738:	9e 01       	movw	r18, r28
    273a:	2e 5a       	subi	r18, 0xAE	; 174
    273c:	3e 4f       	sbci	r19, 0xFE	; 254
    273e:	f9 01       	movw	r30, r18
    2740:	20 81       	ld	r18, Z
    2742:	31 81       	ldd	r19, Z+1	; 0x01
    2744:	28 0f       	add	r18, r24
    2746:	39 1f       	adc	r19, r25
    2748:	f9 01       	movw	r30, r18
    274a:	20 81       	ld	r18, Z
    274c:	42 2f       	mov	r20, r18
    274e:	41 60       	ori	r20, 0x01	; 1
    2750:	9e 01       	movw	r18, r28
    2752:	2e 5a       	subi	r18, 0xAE	; 174
    2754:	3e 4f       	sbci	r19, 0xFE	; 254
    2756:	f9 01       	movw	r30, r18
    2758:	20 81       	ld	r18, Z
    275a:	31 81       	ldd	r19, Z+1	; 0x01
    275c:	82 0f       	add	r24, r18
    275e:	93 1f       	adc	r25, r19
    2760:	fc 01       	movw	r30, r24
    2762:	40 83       	st	Z, r20
    }
  } // Timing critical code is now complete.

  // Inspect pulses and determine which ones are 0 (high state cycle count < low
  // state cycle count), or 1 (high state cycle count > low state cycle count).
  for (int i = 0; i < 40; ++i) {
    2764:	8b 81       	ldd	r24, Y+3	; 0x03
    2766:	9c 81       	ldd	r25, Y+4	; 0x04
    2768:	01 96       	adiw	r24, 0x01	; 1
    276a:	9c 83       	std	Y+4, r25	; 0x04
    276c:	8b 83       	std	Y+3, r24	; 0x03
    276e:	54 cf       	rjmp	.-344    	; 0x2618 <_ZN3DHT4readEb+0x350>
  DEBUG_PRINT(data[4], HEX);
  DEBUG_PRINT(F(" =? "));
  DEBUG_PRINTLN((data[0] + data[1] + data[2] + data[3]) & 0xFF, HEX);

  // Check we read 40 bits and that the checksum matches.
  if (data[4] == ((data[0] + data[1] + data[2] + data[3]) & 0xFF)) {
    2770:	ce 01       	movw	r24, r28
    2772:	8e 5a       	subi	r24, 0xAE	; 174
    2774:	9e 4f       	sbci	r25, 0xFE	; 254
    2776:	fc 01       	movw	r30, r24
    2778:	80 81       	ld	r24, Z
    277a:	91 81       	ldd	r25, Z+1	; 0x01
    277c:	fc 01       	movw	r30, r24
    277e:	84 81       	ldd	r24, Z+4	; 0x04
    2780:	28 2f       	mov	r18, r24
    2782:	30 e0       	ldi	r19, 0x00	; 0
    2784:	ce 01       	movw	r24, r28
    2786:	8e 5a       	subi	r24, 0xAE	; 174
    2788:	9e 4f       	sbci	r25, 0xFE	; 254
    278a:	fc 01       	movw	r30, r24
    278c:	80 81       	ld	r24, Z
    278e:	91 81       	ldd	r25, Z+1	; 0x01
    2790:	fc 01       	movw	r30, r24
    2792:	80 81       	ld	r24, Z
    2794:	48 2f       	mov	r20, r24
    2796:	50 e0       	ldi	r21, 0x00	; 0
    2798:	ce 01       	movw	r24, r28
    279a:	8e 5a       	subi	r24, 0xAE	; 174
    279c:	9e 4f       	sbci	r25, 0xFE	; 254
    279e:	fc 01       	movw	r30, r24
    27a0:	80 81       	ld	r24, Z
    27a2:	91 81       	ldd	r25, Z+1	; 0x01
    27a4:	fc 01       	movw	r30, r24
    27a6:	81 81       	ldd	r24, Z+1	; 0x01
    27a8:	88 2f       	mov	r24, r24
    27aa:	90 e0       	ldi	r25, 0x00	; 0
    27ac:	48 0f       	add	r20, r24
    27ae:	59 1f       	adc	r21, r25
    27b0:	ce 01       	movw	r24, r28
    27b2:	8e 5a       	subi	r24, 0xAE	; 174
    27b4:	9e 4f       	sbci	r25, 0xFE	; 254
    27b6:	fc 01       	movw	r30, r24
    27b8:	80 81       	ld	r24, Z
    27ba:	91 81       	ldd	r25, Z+1	; 0x01
    27bc:	fc 01       	movw	r30, r24
    27be:	82 81       	ldd	r24, Z+2	; 0x02
    27c0:	88 2f       	mov	r24, r24
    27c2:	90 e0       	ldi	r25, 0x00	; 0
    27c4:	48 0f       	add	r20, r24
    27c6:	59 1f       	adc	r21, r25
    27c8:	ce 01       	movw	r24, r28
    27ca:	8e 5a       	subi	r24, 0xAE	; 174
    27cc:	9e 4f       	sbci	r25, 0xFE	; 254
    27ce:	fc 01       	movw	r30, r24
    27d0:	80 81       	ld	r24, Z
    27d2:	91 81       	ldd	r25, Z+1	; 0x01
    27d4:	fc 01       	movw	r30, r24
    27d6:	83 81       	ldd	r24, Z+3	; 0x03
    27d8:	88 2f       	mov	r24, r24
    27da:	90 e0       	ldi	r25, 0x00	; 0
    27dc:	84 0f       	add	r24, r20
    27de:	95 1f       	adc	r25, r21
    27e0:	99 27       	eor	r25, r25
    27e2:	28 17       	cp	r18, r24
    27e4:	39 07       	cpc	r19, r25
    27e6:	91 f4       	brne	.+36     	; 0x280c <_ZN3DHT4readEb+0x544>
    _lastresult = true;
    27e8:	ce 01       	movw	r24, r28
    27ea:	8e 5a       	subi	r24, 0xAE	; 174
    27ec:	9e 4f       	sbci	r25, 0xFE	; 254
    27ee:	fc 01       	movw	r30, r24
    27f0:	80 81       	ld	r24, Z
    27f2:	91 81       	ldd	r25, Z+1	; 0x01
    27f4:	21 e0       	ldi	r18, 0x01	; 1
    27f6:	fc 01       	movw	r30, r24
    27f8:	21 8b       	std	Z+17, r18	; 0x11
    return _lastresult;
    27fa:	ce 01       	movw	r24, r28
    27fc:	8e 5a       	subi	r24, 0xAE	; 174
    27fe:	9e 4f       	sbci	r25, 0xFE	; 254
    2800:	fc 01       	movw	r30, r24
    2802:	80 81       	ld	r24, Z
    2804:	91 81       	ldd	r25, Z+1	; 0x01
    2806:	fc 01       	movw	r30, r24
    2808:	f1 88       	ldd	r15, Z+17	; 0x11
    280a:	10 c0       	rjmp	.+32     	; 0x282c <_ZN3DHT4readEb+0x564>
  } else {
    DEBUG_PRINTLN(F("DHT checksum failure!"));
    _lastresult = false;
    280c:	ce 01       	movw	r24, r28
    280e:	8e 5a       	subi	r24, 0xAE	; 174
    2810:	9e 4f       	sbci	r25, 0xFE	; 254
    2812:	fc 01       	movw	r30, r24
    2814:	80 81       	ld	r24, Z
    2816:	91 81       	ldd	r25, Z+1	; 0x01
    2818:	fc 01       	movw	r30, r24
    281a:	11 8a       	std	Z+17, r1	; 0x11
    return _lastresult;
    281c:	ce 01       	movw	r24, r28
    281e:	8e 5a       	subi	r24, 0xAE	; 174
    2820:	9e 4f       	sbci	r25, 0xFE	; 254
    2822:	fc 01       	movw	r30, r24
    2824:	80 81       	ld	r24, Z
    2826:	91 81       	ldd	r25, Z+1	; 0x01
    2828:	fc 01       	movw	r30, r24
    282a:	f1 88       	ldd	r15, Z+17	; 0x11
    282c:	8f 2d       	mov	r24, r15
  }
}
    282e:	cc 5a       	subi	r28, 0xAC	; 172
    2830:	de 4f       	sbci	r29, 0xFE	; 254
    2832:	0f b6       	in	r0, 0x3f	; 63
    2834:	f8 94       	cli
    2836:	de bf       	out	0x3e, r29	; 62
    2838:	0f be       	out	0x3f, r0	; 63
    283a:	cd bf       	out	0x3d, r28	; 61
    283c:	df 91       	pop	r29
    283e:	cf 91       	pop	r28
    2840:	1f 91       	pop	r17
    2842:	0f 91       	pop	r16
    2844:	ff 90       	pop	r15
    2846:	df 90       	pop	r13
    2848:	cf 90       	pop	r12
    284a:	bf 90       	pop	r11
    284c:	af 90       	pop	r10
    284e:	08 95       	ret

00002850 <_ZN3DHT11expectPulseEb>:
// used to compare the relative time of two pulses).  If more than a millisecond
// ellapses without the level changing then the call fails with a 0 response.
// This is adapted from Arduino's pulseInLong function (which is only available
// in the very latest IDE versions):
//   https://github.com/arduino/Arduino/blob/master/hardware/arduino/avr/cores/arduino/wiring_pulse.c
uint32_t DHT::expectPulse(bool level) {
    2850:	cf 93       	push	r28
    2852:	df 93       	push	r29
    2854:	cd b7       	in	r28, 0x3d	; 61
    2856:	de b7       	in	r29, 0x3e	; 62
    2858:	2a 97       	sbiw	r28, 0x0a	; 10
    285a:	0f b6       	in	r0, 0x3f	; 63
    285c:	f8 94       	cli
    285e:	de bf       	out	0x3e, r29	; 62
    2860:	0f be       	out	0x3f, r0	; 63
    2862:	cd bf       	out	0x3d, r28	; 61
    2864:	99 87       	std	Y+9, r25	; 0x09
    2866:	88 87       	std	Y+8, r24	; 0x08
    2868:	6a 87       	std	Y+10, r22	; 0x0a
#if (F_CPU > 16000000L)
  uint32_t count = 0;
#else
  uint16_t count = 0; // To work fast enough on slower AVR boards
    286a:	1a 82       	std	Y+2, r1	; 0x02
    286c:	19 82       	std	Y+1, r1	; 0x01
#endif
// On AVR platforms use direct GPIO port access as it's much faster and better
// for catching pulses that are 10's of microseconds in length:
#ifdef __AVR
  uint8_t portState = level ? _bit : 0;
    286e:	8a 85       	ldd	r24, Y+10	; 0x0a
    2870:	88 23       	and	r24, r24
    2872:	29 f0       	breq	.+10     	; 0x287e <_ZN3DHT11expectPulseEb+0x2e>
    2874:	88 85       	ldd	r24, Y+8	; 0x08
    2876:	99 85       	ldd	r25, Y+9	; 0x09
    2878:	fc 01       	movw	r30, r24
    287a:	87 81       	ldd	r24, Z+7	; 0x07
    287c:	01 c0       	rjmp	.+2      	; 0x2880 <_ZN3DHT11expectPulseEb+0x30>
    287e:	80 e0       	ldi	r24, 0x00	; 0
    2880:	8b 83       	std	Y+3, r24	; 0x03
  while ((*portInputRegister(_port) & _bit) == portState) {
    2882:	88 85       	ldd	r24, Y+8	; 0x08
    2884:	99 85       	ldd	r25, Y+9	; 0x09
    2886:	fc 01       	movw	r30, r24
    2888:	80 85       	ldd	r24, Z+8	; 0x08
    288a:	88 2f       	mov	r24, r24
    288c:	90 e0       	ldi	r25, 0x00	; 0
    288e:	88 0f       	add	r24, r24
    2890:	99 1f       	adc	r25, r25
    2892:	81 54       	subi	r24, 0x41	; 65
    2894:	91 4f       	sbci	r25, 0xF1	; 241
    2896:	9d 83       	std	Y+5, r25	; 0x05
    2898:	8c 83       	std	Y+4, r24	; 0x04
    289a:	8c 81       	ldd	r24, Y+4	; 0x04
    289c:	9d 81       	ldd	r25, Y+5	; 0x05
    289e:	fc 01       	movw	r30, r24
    28a0:	25 91       	lpm	r18, Z+
    28a2:	34 91       	lpm	r19, Z
    28a4:	cf 01       	movw	r24, r30
    28a6:	3f 83       	std	Y+7, r19	; 0x07
    28a8:	2e 83       	std	Y+6, r18	; 0x06
    28aa:	9d 83       	std	Y+5, r25	; 0x05
    28ac:	8c 83       	std	Y+4, r24	; 0x04
    28ae:	8e 81       	ldd	r24, Y+6	; 0x06
    28b0:	9f 81       	ldd	r25, Y+7	; 0x07
    28b2:	fc 01       	movw	r30, r24
    28b4:	20 81       	ld	r18, Z
    28b6:	88 85       	ldd	r24, Y+8	; 0x08
    28b8:	99 85       	ldd	r25, Y+9	; 0x09
    28ba:	fc 01       	movw	r30, r24
    28bc:	87 81       	ldd	r24, Z+7	; 0x07
    28be:	28 23       	and	r18, r24
    28c0:	81 e0       	ldi	r24, 0x01	; 1
    28c2:	9b 81       	ldd	r25, Y+3	; 0x03
    28c4:	29 17       	cp	r18, r25
    28c6:	09 f0       	breq	.+2      	; 0x28ca <_ZN3DHT11expectPulseEb+0x7a>
    28c8:	80 e0       	ldi	r24, 0x00	; 0
    28ca:	88 23       	and	r24, r24
    28cc:	f9 f0       	breq	.+62     	; 0x290c <_ZN3DHT11expectPulseEb+0xbc>
    if (count++ >= _maxcycles) {
    28ce:	89 81       	ldd	r24, Y+1	; 0x01
    28d0:	9a 81       	ldd	r25, Y+2	; 0x02
    28d2:	9c 01       	movw	r18, r24
    28d4:	2f 5f       	subi	r18, 0xFF	; 255
    28d6:	3f 4f       	sbci	r19, 0xFF	; 255
    28d8:	3a 83       	std	Y+2, r19	; 0x02
    28da:	29 83       	std	Y+1, r18	; 0x01
    28dc:	9c 01       	movw	r18, r24
    28de:	40 e0       	ldi	r20, 0x00	; 0
    28e0:	50 e0       	ldi	r21, 0x00	; 0
    28e2:	88 85       	ldd	r24, Y+8	; 0x08
    28e4:	99 85       	ldd	r25, Y+9	; 0x09
    28e6:	fc 01       	movw	r30, r24
    28e8:	85 85       	ldd	r24, Z+13	; 0x0d
    28ea:	96 85       	ldd	r25, Z+14	; 0x0e
    28ec:	a7 85       	ldd	r26, Z+15	; 0x0f
    28ee:	b0 89       	ldd	r27, Z+16	; 0x10
    28f0:	61 e0       	ldi	r22, 0x01	; 1
    28f2:	28 17       	cp	r18, r24
    28f4:	39 07       	cpc	r19, r25
    28f6:	4a 07       	cpc	r20, r26
    28f8:	5b 07       	cpc	r21, r27
    28fa:	08 f4       	brcc	.+2      	; 0x28fe <_ZN3DHT11expectPulseEb+0xae>
    28fc:	60 e0       	ldi	r22, 0x00	; 0
    28fe:	66 23       	and	r22, r22
    2900:	09 f4       	brne	.+2      	; 0x2904 <_ZN3DHT11expectPulseEb+0xb4>
    2902:	bf cf       	rjmp	.-130    	; 0x2882 <_ZN3DHT11expectPulseEb+0x32>
      return TIMEOUT; // Exceeded timeout, fail.
    2904:	8f ef       	ldi	r24, 0xFF	; 255
    2906:	9f ef       	ldi	r25, 0xFF	; 255
    2908:	dc 01       	movw	r26, r24
    290a:	05 c0       	rjmp	.+10     	; 0x2916 <_ZN3DHT11expectPulseEb+0xc6>
      return TIMEOUT; // Exceeded timeout, fail.
    }
  }
#endif

  return count;
    290c:	89 81       	ldd	r24, Y+1	; 0x01
    290e:	9a 81       	ldd	r25, Y+2	; 0x02
    2910:	cc 01       	movw	r24, r24
    2912:	a0 e0       	ldi	r26, 0x00	; 0
    2914:	b0 e0       	ldi	r27, 0x00	; 0
}
    2916:	bc 01       	movw	r22, r24
    2918:	cd 01       	movw	r24, r26
    291a:	2a 96       	adiw	r28, 0x0a	; 10
    291c:	0f b6       	in	r0, 0x3f	; 63
    291e:	f8 94       	cli
    2920:	de bf       	out	0x3e, r29	; 62
    2922:	0f be       	out	0x3f, r0	; 63
    2924:	cd bf       	out	0x3d, r28	; 61
    2926:	df 91       	pop	r29
    2928:	cf 91       	pop	r28
    292a:	08 95       	ret

0000292c <_ZN7TwoWire5writeEi>:
    {
        ++days;
    }

    return days;
}
    292c:	cf 93       	push	r28
    292e:	df 93       	push	r29
    2930:	00 d0       	rcall	.+0      	; 0x2932 <_ZN7TwoWire5writeEi+0x6>
    2932:	1f 92       	push	r1
    2934:	cd b7       	in	r28, 0x3d	; 61
    2936:	de b7       	in	r29, 0x3e	; 62
    2938:	9a 83       	std	Y+2, r25	; 0x02
    293a:	89 83       	std	Y+1, r24	; 0x01
    293c:	7c 83       	std	Y+4, r23	; 0x04
    293e:	6b 83       	std	Y+3, r22	; 0x03
    2940:	89 81       	ldd	r24, Y+1	; 0x01
    2942:	9a 81       	ldd	r25, Y+2	; 0x02
    2944:	fc 01       	movw	r30, r24
    2946:	80 81       	ld	r24, Z
    2948:	91 81       	ldd	r25, Z+1	; 0x01
    294a:	fc 01       	movw	r30, r24
    294c:	20 81       	ld	r18, Z
    294e:	31 81       	ldd	r19, Z+1	; 0x01
    2950:	4b 81       	ldd	r20, Y+3	; 0x03
    2952:	89 81       	ldd	r24, Y+1	; 0x01
    2954:	9a 81       	ldd	r25, Y+2	; 0x02
    2956:	64 2f       	mov	r22, r20
    2958:	f9 01       	movw	r30, r18
    295a:	19 95       	eicall
    295c:	0f 90       	pop	r0
    295e:	0f 90       	pop	r0
    2960:	0f 90       	pop	r0
    2962:	0f 90       	pop	r0
    2964:	df 91       	pop	r29
    2966:	cf 91       	pop	r28
    2968:	08 95       	ret

0000296a <_ZN6DS32315beginEv>:
    296a:	cf 93       	push	r28
    296c:	df 93       	push	r29
    296e:	1f 92       	push	r1
    2970:	1f 92       	push	r1
    2972:	cd b7       	in	r28, 0x3d	; 61
    2974:	de b7       	in	r29, 0x3e	; 62
    2976:	9a 83       	std	Y+2, r25	; 0x02
    2978:	89 83       	std	Y+1, r24	; 0x01
    297a:	82 e1       	ldi	r24, 0x12	; 18
    297c:	94 e0       	ldi	r25, 0x04	; 4
    297e:	0e 94 7f 20 	call	0x40fe	; 0x40fe <_ZN7TwoWire5beginEv>
    2982:	89 81       	ldd	r24, Y+1	; 0x01
    2984:	9a 81       	ldd	r25, Y+2	; 0x02
    2986:	40 e0       	ldi	r20, 0x00	; 0
    2988:	61 e0       	ldi	r22, 0x01	; 1
    298a:	1c d2       	rcall	.+1080   	; 0x2dc4 <_ZN6DS323110setBatteryEbb>
    298c:	89 81       	ldd	r24, Y+1	; 0x01
    298e:	9a 81       	ldd	r25, Y+2	; 0x02
    2990:	20 ed       	ldi	r18, 0xD0	; 208
    2992:	37 e0       	ldi	r19, 0x07	; 7
    2994:	fc 01       	movw	r30, r24
    2996:	31 83       	std	Z+1, r19	; 0x01
    2998:	20 83       	st	Z, r18
    299a:	89 81       	ldd	r24, Y+1	; 0x01
    299c:	9a 81       	ldd	r25, Y+2	; 0x02
    299e:	21 e0       	ldi	r18, 0x01	; 1
    29a0:	fc 01       	movw	r30, r24
    29a2:	22 83       	std	Z+2, r18	; 0x02
    29a4:	89 81       	ldd	r24, Y+1	; 0x01
    29a6:	9a 81       	ldd	r25, Y+2	; 0x02
    29a8:	21 e0       	ldi	r18, 0x01	; 1
    29aa:	fc 01       	movw	r30, r24
    29ac:	23 83       	std	Z+3, r18	; 0x03
    29ae:	89 81       	ldd	r24, Y+1	; 0x01
    29b0:	9a 81       	ldd	r25, Y+2	; 0x02
    29b2:	fc 01       	movw	r30, r24
    29b4:	14 82       	std	Z+4, r1	; 0x04
    29b6:	89 81       	ldd	r24, Y+1	; 0x01
    29b8:	9a 81       	ldd	r25, Y+2	; 0x02
    29ba:	fc 01       	movw	r30, r24
    29bc:	15 82       	std	Z+5, r1	; 0x05
    29be:	89 81       	ldd	r24, Y+1	; 0x01
    29c0:	9a 81       	ldd	r25, Y+2	; 0x02
    29c2:	fc 01       	movw	r30, r24
    29c4:	16 82       	std	Z+6, r1	; 0x06
    29c6:	89 81       	ldd	r24, Y+1	; 0x01
    29c8:	9a 81       	ldd	r25, Y+2	; 0x02
    29ca:	26 e0       	ldi	r18, 0x06	; 6
    29cc:	fc 01       	movw	r30, r24
    29ce:	27 83       	std	Z+7, r18	; 0x07
    29d0:	29 81       	ldd	r18, Y+1	; 0x01
    29d2:	3a 81       	ldd	r19, Y+2	; 0x02
    29d4:	80 e7       	ldi	r24, 0x70	; 112
    29d6:	95 e3       	ldi	r25, 0x35	; 53
    29d8:	ad e6       	ldi	r26, 0x6D	; 109
    29da:	b8 e3       	ldi	r27, 0x38	; 56
    29dc:	f9 01       	movw	r30, r18
    29de:	80 87       	std	Z+8, r24	; 0x08
    29e0:	91 87       	std	Z+9, r25	; 0x09
    29e2:	a2 87       	std	Z+10, r26	; 0x0a
    29e4:	b3 87       	std	Z+11, r27	; 0x0b
    29e6:	81 e0       	ldi	r24, 0x01	; 1
    29e8:	0f 90       	pop	r0
    29ea:	0f 90       	pop	r0
    29ec:	df 91       	pop	r29
    29ee:	cf 91       	pop	r28
    29f0:	08 95       	ret

000029f2 <_ZN6DS323111setDateTimeEjhhhhh>:
    29f2:	cf 92       	push	r12
    29f4:	ef 92       	push	r14
    29f6:	0f 93       	push	r16
    29f8:	cf 93       	push	r28
    29fa:	df 93       	push	r29
    29fc:	cd b7       	in	r28, 0x3d	; 61
    29fe:	de b7       	in	r29, 0x3e	; 62
    2a00:	29 97       	sbiw	r28, 0x09	; 9
    2a02:	0f b6       	in	r0, 0x3f	; 63
    2a04:	f8 94       	cli
    2a06:	de bf       	out	0x3e, r29	; 62
    2a08:	0f be       	out	0x3f, r0	; 63
    2a0a:	cd bf       	out	0x3d, r28	; 61
    2a0c:	9a 83       	std	Y+2, r25	; 0x02
    2a0e:	89 83       	std	Y+1, r24	; 0x01
    2a10:	7c 83       	std	Y+4, r23	; 0x04
    2a12:	6b 83       	std	Y+3, r22	; 0x03
    2a14:	4d 83       	std	Y+5, r20	; 0x05
    2a16:	2e 83       	std	Y+6, r18	; 0x06
    2a18:	0f 83       	std	Y+7, r16	; 0x07
    2a1a:	e8 86       	std	Y+8, r14	; 0x08
    2a1c:	c9 86       	std	Y+9, r12	; 0x09
    2a1e:	68 e6       	ldi	r22, 0x68	; 104
    2a20:	70 e0       	ldi	r23, 0x00	; 0
    2a22:	82 e1       	ldi	r24, 0x12	; 18
    2a24:	94 e0       	ldi	r25, 0x04	; 4
    2a26:	0e 94 89 21 	call	0x4312	; 0x4312 <_ZN7TwoWire17beginTransmissionEi>
    2a2a:	60 e0       	ldi	r22, 0x00	; 0
    2a2c:	70 e0       	ldi	r23, 0x00	; 0
    2a2e:	82 e1       	ldi	r24, 0x12	; 18
    2a30:	94 e0       	ldi	r25, 0x04	; 4
    2a32:	7c df       	rcall	.-264    	; 0x292c <_ZN7TwoWire5writeEi>
    2a34:	89 81       	ldd	r24, Y+1	; 0x01
    2a36:	9a 81       	ldd	r25, Y+2	; 0x02
    2a38:	69 85       	ldd	r22, Y+9	; 0x09
    2a3a:	0f d2       	rcall	.+1054   	; 0x2e5a <_ZN6DS32317dec2bcdEh>
    2a3c:	68 2f       	mov	r22, r24
    2a3e:	82 e1       	ldi	r24, 0x12	; 18
    2a40:	94 e0       	ldi	r25, 0x04	; 4
    2a42:	0e 94 d5 21 	call	0x43aa	; 0x43aa <_ZN7TwoWire5writeEh>
    2a46:	89 81       	ldd	r24, Y+1	; 0x01
    2a48:	9a 81       	ldd	r25, Y+2	; 0x02
    2a4a:	68 85       	ldd	r22, Y+8	; 0x08
    2a4c:	06 d2       	rcall	.+1036   	; 0x2e5a <_ZN6DS32317dec2bcdEh>
    2a4e:	68 2f       	mov	r22, r24
    2a50:	82 e1       	ldi	r24, 0x12	; 18
    2a52:	94 e0       	ldi	r25, 0x04	; 4
    2a54:	0e 94 d5 21 	call	0x43aa	; 0x43aa <_ZN7TwoWire5writeEh>
    2a58:	89 81       	ldd	r24, Y+1	; 0x01
    2a5a:	9a 81       	ldd	r25, Y+2	; 0x02
    2a5c:	6f 81       	ldd	r22, Y+7	; 0x07
    2a5e:	fd d1       	rcall	.+1018   	; 0x2e5a <_ZN6DS32317dec2bcdEh>
    2a60:	68 2f       	mov	r22, r24
    2a62:	82 e1       	ldi	r24, 0x12	; 18
    2a64:	94 e0       	ldi	r25, 0x04	; 4
    2a66:	0e 94 d5 21 	call	0x43aa	; 0x43aa <_ZN7TwoWire5writeEh>
    2a6a:	6b 81       	ldd	r22, Y+3	; 0x03
    2a6c:	7c 81       	ldd	r23, Y+4	; 0x04
    2a6e:	89 81       	ldd	r24, Y+1	; 0x01
    2a70:	9a 81       	ldd	r25, Y+2	; 0x02
    2a72:	2e 81       	ldd	r18, Y+6	; 0x06
    2a74:	4d 81       	ldd	r20, Y+5	; 0x05
    2a76:	95 d3       	rcall	.+1834   	; 0x31a2 <_ZN6DS32313dowEjhh>
    2a78:	28 2f       	mov	r18, r24
    2a7a:	89 81       	ldd	r24, Y+1	; 0x01
    2a7c:	9a 81       	ldd	r25, Y+2	; 0x02
    2a7e:	62 2f       	mov	r22, r18
    2a80:	ec d1       	rcall	.+984    	; 0x2e5a <_ZN6DS32317dec2bcdEh>
    2a82:	68 2f       	mov	r22, r24
    2a84:	82 e1       	ldi	r24, 0x12	; 18
    2a86:	94 e0       	ldi	r25, 0x04	; 4
    2a88:	0e 94 d5 21 	call	0x43aa	; 0x43aa <_ZN7TwoWire5writeEh>
    2a8c:	89 81       	ldd	r24, Y+1	; 0x01
    2a8e:	9a 81       	ldd	r25, Y+2	; 0x02
    2a90:	6e 81       	ldd	r22, Y+6	; 0x06
    2a92:	e3 d1       	rcall	.+966    	; 0x2e5a <_ZN6DS32317dec2bcdEh>
    2a94:	68 2f       	mov	r22, r24
    2a96:	82 e1       	ldi	r24, 0x12	; 18
    2a98:	94 e0       	ldi	r25, 0x04	; 4
    2a9a:	0e 94 d5 21 	call	0x43aa	; 0x43aa <_ZN7TwoWire5writeEh>
    2a9e:	89 81       	ldd	r24, Y+1	; 0x01
    2aa0:	9a 81       	ldd	r25, Y+2	; 0x02
    2aa2:	6d 81       	ldd	r22, Y+5	; 0x05
    2aa4:	da d1       	rcall	.+948    	; 0x2e5a <_ZN6DS32317dec2bcdEh>
    2aa6:	68 2f       	mov	r22, r24
    2aa8:	82 e1       	ldi	r24, 0x12	; 18
    2aaa:	94 e0       	ldi	r25, 0x04	; 4
    2aac:	0e 94 d5 21 	call	0x43aa	; 0x43aa <_ZN7TwoWire5writeEh>
    2ab0:	8b 81       	ldd	r24, Y+3	; 0x03
    2ab2:	20 e3       	ldi	r18, 0x30	; 48
    2ab4:	28 0f       	add	r18, r24
    2ab6:	89 81       	ldd	r24, Y+1	; 0x01
    2ab8:	9a 81       	ldd	r25, Y+2	; 0x02
    2aba:	62 2f       	mov	r22, r18
    2abc:	ce d1       	rcall	.+924    	; 0x2e5a <_ZN6DS32317dec2bcdEh>
    2abe:	68 2f       	mov	r22, r24
    2ac0:	82 e1       	ldi	r24, 0x12	; 18
    2ac2:	94 e0       	ldi	r25, 0x04	; 4
    2ac4:	0e 94 d5 21 	call	0x43aa	; 0x43aa <_ZN7TwoWire5writeEh>
    2ac8:	60 e0       	ldi	r22, 0x00	; 0
    2aca:	70 e0       	ldi	r23, 0x00	; 0
    2acc:	82 e1       	ldi	r24, 0x12	; 18
    2ace:	94 e0       	ldi	r25, 0x04	; 4
    2ad0:	2d df       	rcall	.-422    	; 0x292c <_ZN7TwoWire5writeEi>
    2ad2:	82 e1       	ldi	r24, 0x12	; 18
    2ad4:	94 e0       	ldi	r25, 0x04	; 4
    2ad6:	0e 94 c4 21 	call	0x4388	; 0x4388 <_ZN7TwoWire15endTransmissionEv>
    2ada:	00 00       	nop
    2adc:	29 96       	adiw	r28, 0x09	; 9
    2ade:	0f b6       	in	r0, 0x3f	; 63
    2ae0:	f8 94       	cli
    2ae2:	de bf       	out	0x3e, r29	; 62
    2ae4:	0f be       	out	0x3f, r0	; 63
    2ae6:	cd bf       	out	0x3d, r28	; 61
    2ae8:	df 91       	pop	r29
    2aea:	cf 91       	pop	r28
    2aec:	0f 91       	pop	r16
    2aee:	ef 90       	pop	r14
    2af0:	cf 90       	pop	r12
    2af2:	08 95       	ret

00002af4 <_ZN6DS323111setDateTimeEPKcS1_>:
    2af4:	cf 92       	push	r12
    2af6:	ef 92       	push	r14
    2af8:	0f 93       	push	r16
    2afa:	cf 93       	push	r28
    2afc:	df 93       	push	r29
    2afe:	cd b7       	in	r28, 0x3d	; 61
    2b00:	de b7       	in	r29, 0x3e	; 62
    2b02:	2d 97       	sbiw	r28, 0x0d	; 13
    2b04:	0f b6       	in	r0, 0x3f	; 63
    2b06:	f8 94       	cli
    2b08:	de bf       	out	0x3e, r29	; 62
    2b0a:	0f be       	out	0x3f, r0	; 63
    2b0c:	cd bf       	out	0x3d, r28	; 61
    2b0e:	99 87       	std	Y+9, r25	; 0x09
    2b10:	88 87       	std	Y+8, r24	; 0x08
    2b12:	7b 87       	std	Y+11, r23	; 0x0b
    2b14:	6a 87       	std	Y+10, r22	; 0x0a
    2b16:	5d 87       	std	Y+13, r21	; 0x0d
    2b18:	4c 87       	std	Y+12, r20	; 0x0c
    2b1a:	8a 85       	ldd	r24, Y+10	; 0x0a
    2b1c:	9b 85       	ldd	r25, Y+11	; 0x0b
    2b1e:	9c 01       	movw	r18, r24
    2b20:	27 5f       	subi	r18, 0xF7	; 247
    2b22:	3f 4f       	sbci	r19, 0xFF	; 255
    2b24:	88 85       	ldd	r24, Y+8	; 0x08
    2b26:	99 85       	ldd	r25, Y+9	; 0x09
    2b28:	b9 01       	movw	r22, r18
    2b2a:	03 d3       	rcall	.+1542   	; 0x3132 <_ZN6DS32316conv2dEPKc>
    2b2c:	88 2f       	mov	r24, r24
    2b2e:	90 e0       	ldi	r25, 0x00	; 0
    2b30:	9b 83       	std	Y+3, r25	; 0x03
    2b32:	8a 83       	std	Y+2, r24	; 0x02
    2b34:	8a 85       	ldd	r24, Y+10	; 0x0a
    2b36:	9b 85       	ldd	r25, Y+11	; 0x0b
    2b38:	fc 01       	movw	r30, r24
    2b3a:	80 81       	ld	r24, Z
    2b3c:	88 2f       	mov	r24, r24
    2b3e:	90 e0       	ldi	r25, 0x00	; 0
    2b40:	09 2e       	mov	r0, r25
    2b42:	00 0c       	add	r0, r0
    2b44:	aa 0b       	sbc	r26, r26
    2b46:	bb 0b       	sbc	r27, r27
    2b48:	41 e4       	ldi	r20, 0x41	; 65
    2b4a:	50 e0       	ldi	r21, 0x00	; 0
    2b4c:	22 e1       	ldi	r18, 0x12	; 18
    2b4e:	30 e0       	ldi	r19, 0x00	; 0
    2b50:	84 1b       	sub	r24, r20
    2b52:	95 0b       	sbc	r25, r21
    2b54:	28 17       	cp	r18, r24
    2b56:	39 07       	cpc	r19, r25
    2b58:	08 f4       	brcc	.+2      	; 0x2b5c <_ZN6DS323111setDateTimeEPKcS1_+0x68>
    2b5a:	45 c0       	rjmp	.+138    	; 0x2be6 <_ZN6DS323111setDateTimeEPKcS1_+0xf2>
    2b5c:	fc 01       	movw	r30, r24
    2b5e:	88 27       	eor	r24, r24
    2b60:	ee 58       	subi	r30, 0x8E	; 142
    2b62:	ff 4f       	sbci	r31, 0xFF	; 255
    2b64:	8f 4f       	sbci	r24, 0xFF	; 255
    2b66:	0c 94 99 4d 	jmp	0x9b32	; 0x9b32 <__tablejump2__>
    2b6a:	8a 85       	ldd	r24, Y+10	; 0x0a
    2b6c:	9b 85       	ldd	r25, Y+11	; 0x0b
    2b6e:	01 96       	adiw	r24, 0x01	; 1
    2b70:	fc 01       	movw	r30, r24
    2b72:	80 81       	ld	r24, Z
    2b74:	81 36       	cpi	r24, 0x61	; 97
    2b76:	69 f0       	breq	.+26     	; 0x2b92 <_ZN6DS323111setDateTimeEPKcS1_+0x9e>
    2b78:	8a 85       	ldd	r24, Y+10	; 0x0a
    2b7a:	9b 85       	ldd	r25, Y+11	; 0x0b
    2b7c:	02 96       	adiw	r24, 0x02	; 2
    2b7e:	fc 01       	movw	r30, r24
    2b80:	80 81       	ld	r24, Z
    2b82:	8e 36       	cpi	r24, 0x6E	; 110
    2b84:	11 f4       	brne	.+4      	; 0x2b8a <_ZN6DS323111setDateTimeEPKcS1_+0x96>
    2b86:	86 e0       	ldi	r24, 0x06	; 6
    2b88:	01 c0       	rjmp	.+2      	; 0x2b8c <_ZN6DS323111setDateTimeEPKcS1_+0x98>
    2b8a:	87 e0       	ldi	r24, 0x07	; 7
    2b8c:	89 83       	std	Y+1, r24	; 0x01
    2b8e:	89 81       	ldd	r24, Y+1	; 0x01
    2b90:	01 c0       	rjmp	.+2      	; 0x2b94 <_ZN6DS323111setDateTimeEPKcS1_+0xa0>
    2b92:	81 e0       	ldi	r24, 0x01	; 1
    2b94:	89 83       	std	Y+1, r24	; 0x01
    2b96:	27 c0       	rjmp	.+78     	; 0x2be6 <_ZN6DS323111setDateTimeEPKcS1_+0xf2>
    2b98:	82 e0       	ldi	r24, 0x02	; 2
    2b9a:	89 83       	std	Y+1, r24	; 0x01
    2b9c:	24 c0       	rjmp	.+72     	; 0x2be6 <_ZN6DS323111setDateTimeEPKcS1_+0xf2>
    2b9e:	8a 85       	ldd	r24, Y+10	; 0x0a
    2ba0:	9b 85       	ldd	r25, Y+11	; 0x0b
    2ba2:	02 96       	adiw	r24, 0x02	; 2
    2ba4:	fc 01       	movw	r30, r24
    2ba6:	80 81       	ld	r24, Z
    2ba8:	82 37       	cpi	r24, 0x72	; 114
    2baa:	11 f4       	brne	.+4      	; 0x2bb0 <_ZN6DS323111setDateTimeEPKcS1_+0xbc>
    2bac:	84 e0       	ldi	r24, 0x04	; 4
    2bae:	01 c0       	rjmp	.+2      	; 0x2bb2 <_ZN6DS323111setDateTimeEPKcS1_+0xbe>
    2bb0:	88 e0       	ldi	r24, 0x08	; 8
    2bb2:	89 83       	std	Y+1, r24	; 0x01
    2bb4:	18 c0       	rjmp	.+48     	; 0x2be6 <_ZN6DS323111setDateTimeEPKcS1_+0xf2>
    2bb6:	8a 85       	ldd	r24, Y+10	; 0x0a
    2bb8:	9b 85       	ldd	r25, Y+11	; 0x0b
    2bba:	02 96       	adiw	r24, 0x02	; 2
    2bbc:	fc 01       	movw	r30, r24
    2bbe:	80 81       	ld	r24, Z
    2bc0:	82 37       	cpi	r24, 0x72	; 114
    2bc2:	11 f4       	brne	.+4      	; 0x2bc8 <_ZN6DS323111setDateTimeEPKcS1_+0xd4>
    2bc4:	83 e0       	ldi	r24, 0x03	; 3
    2bc6:	01 c0       	rjmp	.+2      	; 0x2bca <_ZN6DS323111setDateTimeEPKcS1_+0xd6>
    2bc8:	85 e0       	ldi	r24, 0x05	; 5
    2bca:	89 83       	std	Y+1, r24	; 0x01
    2bcc:	0c c0       	rjmp	.+24     	; 0x2be6 <_ZN6DS323111setDateTimeEPKcS1_+0xf2>
    2bce:	89 e0       	ldi	r24, 0x09	; 9
    2bd0:	89 83       	std	Y+1, r24	; 0x01
    2bd2:	09 c0       	rjmp	.+18     	; 0x2be6 <_ZN6DS323111setDateTimeEPKcS1_+0xf2>
    2bd4:	8a e0       	ldi	r24, 0x0A	; 10
    2bd6:	89 83       	std	Y+1, r24	; 0x01
    2bd8:	06 c0       	rjmp	.+12     	; 0x2be6 <_ZN6DS323111setDateTimeEPKcS1_+0xf2>
    2bda:	8b e0       	ldi	r24, 0x0B	; 11
    2bdc:	89 83       	std	Y+1, r24	; 0x01
    2bde:	03 c0       	rjmp	.+6      	; 0x2be6 <_ZN6DS323111setDateTimeEPKcS1_+0xf2>
    2be0:	8c e0       	ldi	r24, 0x0C	; 12
    2be2:	89 83       	std	Y+1, r24	; 0x01
    2be4:	00 00       	nop
    2be6:	8a 85       	ldd	r24, Y+10	; 0x0a
    2be8:	9b 85       	ldd	r25, Y+11	; 0x0b
    2bea:	9c 01       	movw	r18, r24
    2bec:	2c 5f       	subi	r18, 0xFC	; 252
    2bee:	3f 4f       	sbci	r19, 0xFF	; 255
    2bf0:	88 85       	ldd	r24, Y+8	; 0x08
    2bf2:	99 85       	ldd	r25, Y+9	; 0x09
    2bf4:	b9 01       	movw	r22, r18
    2bf6:	9d d2       	rcall	.+1338   	; 0x3132 <_ZN6DS32316conv2dEPKc>
    2bf8:	8c 83       	std	Y+4, r24	; 0x04
    2bfa:	2c 85       	ldd	r18, Y+12	; 0x0c
    2bfc:	3d 85       	ldd	r19, Y+13	; 0x0d
    2bfe:	88 85       	ldd	r24, Y+8	; 0x08
    2c00:	99 85       	ldd	r25, Y+9	; 0x09
    2c02:	b9 01       	movw	r22, r18
    2c04:	96 d2       	rcall	.+1324   	; 0x3132 <_ZN6DS32316conv2dEPKc>
    2c06:	8d 83       	std	Y+5, r24	; 0x05
    2c08:	8c 85       	ldd	r24, Y+12	; 0x0c
    2c0a:	9d 85       	ldd	r25, Y+13	; 0x0d
    2c0c:	9c 01       	movw	r18, r24
    2c0e:	2d 5f       	subi	r18, 0xFD	; 253
    2c10:	3f 4f       	sbci	r19, 0xFF	; 255
    2c12:	88 85       	ldd	r24, Y+8	; 0x08
    2c14:	99 85       	ldd	r25, Y+9	; 0x09
    2c16:	b9 01       	movw	r22, r18
    2c18:	8c d2       	rcall	.+1304   	; 0x3132 <_ZN6DS32316conv2dEPKc>
    2c1a:	8e 83       	std	Y+6, r24	; 0x06
    2c1c:	8c 85       	ldd	r24, Y+12	; 0x0c
    2c1e:	9d 85       	ldd	r25, Y+13	; 0x0d
    2c20:	9c 01       	movw	r18, r24
    2c22:	2a 5f       	subi	r18, 0xFA	; 250
    2c24:	3f 4f       	sbci	r19, 0xFF	; 255
    2c26:	88 85       	ldd	r24, Y+8	; 0x08
    2c28:	99 85       	ldd	r25, Y+9	; 0x09
    2c2a:	b9 01       	movw	r22, r18
    2c2c:	82 d2       	rcall	.+1284   	; 0x3132 <_ZN6DS32316conv2dEPKc>
    2c2e:	8f 83       	std	Y+7, r24	; 0x07
    2c30:	8a 81       	ldd	r24, Y+2	; 0x02
    2c32:	9b 81       	ldd	r25, Y+3	; 0x03
    2c34:	bc 01       	movw	r22, r24
    2c36:	60 53       	subi	r22, 0x30	; 48
    2c38:	78 4f       	sbci	r23, 0xF8	; 248
    2c3a:	88 85       	ldd	r24, Y+8	; 0x08
    2c3c:	99 85       	ldd	r25, Y+9	; 0x09
    2c3e:	cf 80       	ldd	r12, Y+7	; 0x07
    2c40:	ee 80       	ldd	r14, Y+6	; 0x06
    2c42:	0d 81       	ldd	r16, Y+5	; 0x05
    2c44:	2c 81       	ldd	r18, Y+4	; 0x04
    2c46:	49 81       	ldd	r20, Y+1	; 0x01
    2c48:	d4 de       	rcall	.-600    	; 0x29f2 <_ZN6DS323111setDateTimeEjhhhhh>
    2c4a:	00 00       	nop
    2c4c:	2d 96       	adiw	r28, 0x0d	; 13
    2c4e:	0f b6       	in	r0, 0x3f	; 63
    2c50:	f8 94       	cli
    2c52:	de bf       	out	0x3e, r29	; 62
    2c54:	0f be       	out	0x3f, r0	; 63
    2c56:	cd bf       	out	0x3d, r28	; 61
    2c58:	df 91       	pop	r29
    2c5a:	cf 91       	pop	r28
    2c5c:	0f 91       	pop	r16
    2c5e:	ef 90       	pop	r14
    2c60:	cf 90       	pop	r12
    2c62:	08 95       	ret

00002c64 <_ZN6DS323111getDateTimeEv>:
    2c64:	cf 93       	push	r28
    2c66:	df 93       	push	r29
    2c68:	cd b7       	in	r28, 0x3d	; 61
    2c6a:	de b7       	in	r29, 0x3e	; 62
    2c6c:	64 97       	sbiw	r28, 0x14	; 20
    2c6e:	0f b6       	in	r0, 0x3f	; 63
    2c70:	f8 94       	cli
    2c72:	de bf       	out	0x3e, r29	; 62
    2c74:	0f be       	out	0x3f, r0	; 63
    2c76:	cd bf       	out	0x3d, r28	; 61
    2c78:	9a 8b       	std	Y+18, r25	; 0x12
    2c7a:	89 8b       	std	Y+17, r24	; 0x11
    2c7c:	7c 8b       	std	Y+20, r23	; 0x14
    2c7e:	6b 8b       	std	Y+19, r22	; 0x13
    2c80:	68 e6       	ldi	r22, 0x68	; 104
    2c82:	70 e0       	ldi	r23, 0x00	; 0
    2c84:	82 e1       	ldi	r24, 0x12	; 18
    2c86:	94 e0       	ldi	r25, 0x04	; 4
    2c88:	0e 94 89 21 	call	0x4312	; 0x4312 <_ZN7TwoWire17beginTransmissionEi>
    2c8c:	60 e0       	ldi	r22, 0x00	; 0
    2c8e:	70 e0       	ldi	r23, 0x00	; 0
    2c90:	82 e1       	ldi	r24, 0x12	; 18
    2c92:	94 e0       	ldi	r25, 0x04	; 4
    2c94:	4b de       	rcall	.-874    	; 0x292c <_ZN7TwoWire5writeEi>
    2c96:	82 e1       	ldi	r24, 0x12	; 18
    2c98:	94 e0       	ldi	r25, 0x04	; 4
    2c9a:	0e 94 c4 21 	call	0x4388	; 0x4388 <_ZN7TwoWire15endTransmissionEv>
    2c9e:	47 e0       	ldi	r20, 0x07	; 7
    2ca0:	50 e0       	ldi	r21, 0x00	; 0
    2ca2:	68 e6       	ldi	r22, 0x68	; 104
    2ca4:	70 e0       	ldi	r23, 0x00	; 0
    2ca6:	82 e1       	ldi	r24, 0x12	; 18
    2ca8:	94 e0       	ldi	r25, 0x04	; 4
    2caa:	0e 94 54 21 	call	0x42a8	; 0x42a8 <_ZN7TwoWire11requestFromEii>
    2cae:	82 e1       	ldi	r24, 0x12	; 18
    2cb0:	94 e0       	ldi	r25, 0x04	; 4
    2cb2:	0e 94 54 22 	call	0x44a8	; 0x44a8 <_ZN7TwoWire9availableEv>
    2cb6:	21 e0       	ldi	r18, 0x01	; 1
    2cb8:	89 2b       	or	r24, r25
    2cba:	09 f0       	breq	.+2      	; 0x2cbe <_ZN6DS323111getDateTimeEv+0x5a>
    2cbc:	20 e0       	ldi	r18, 0x00	; 0
    2cbe:	22 23       	and	r18, r18
    2cc0:	09 f0       	breq	.+2      	; 0x2cc4 <_ZN6DS323111getDateTimeEv+0x60>
    2cc2:	f5 cf       	rjmp	.-22     	; 0x2cae <_ZN6DS323111getDateTimeEv+0x4a>
    2cc4:	86 e0       	ldi	r24, 0x06	; 6
    2cc6:	90 e0       	ldi	r25, 0x00	; 0
    2cc8:	9a 83       	std	Y+2, r25	; 0x02
    2cca:	89 83       	std	Y+1, r24	; 0x01
    2ccc:	89 81       	ldd	r24, Y+1	; 0x01
    2cce:	9a 81       	ldd	r25, Y+2	; 0x02
    2cd0:	99 23       	and	r25, r25
    2cd2:	f4 f0       	brlt	.+60     	; 0x2d10 <_ZN6DS323111getDateTimeEv+0xac>
    2cd4:	82 e1       	ldi	r24, 0x12	; 18
    2cd6:	94 e0       	ldi	r25, 0x04	; 4
    2cd8:	0e 94 6d 22 	call	0x44da	; 0x44da <_ZN7TwoWire4readEv>
    2cdc:	28 2f       	mov	r18, r24
    2cde:	8b 89       	ldd	r24, Y+19	; 0x13
    2ce0:	9c 89       	ldd	r25, Y+20	; 0x14
    2ce2:	62 2f       	mov	r22, r18
    2ce4:	a1 d0       	rcall	.+322    	; 0x2e28 <_ZN6DS32317bcd2decEh>
    2ce6:	28 2f       	mov	r18, r24
    2ce8:	30 e0       	ldi	r19, 0x00	; 0
    2cea:	89 81       	ldd	r24, Y+1	; 0x01
    2cec:	9a 81       	ldd	r25, Y+2	; 0x02
    2cee:	88 0f       	add	r24, r24
    2cf0:	99 1f       	adc	r25, r25
    2cf2:	ae 01       	movw	r20, r28
    2cf4:	4f 5f       	subi	r20, 0xFF	; 255
    2cf6:	5f 4f       	sbci	r21, 0xFF	; 255
    2cf8:	84 0f       	add	r24, r20
    2cfa:	95 1f       	adc	r25, r21
    2cfc:	02 96       	adiw	r24, 0x02	; 2
    2cfe:	fc 01       	movw	r30, r24
    2d00:	31 83       	std	Z+1, r19	; 0x01
    2d02:	20 83       	st	Z, r18
    2d04:	89 81       	ldd	r24, Y+1	; 0x01
    2d06:	9a 81       	ldd	r25, Y+2	; 0x02
    2d08:	01 97       	sbiw	r24, 0x01	; 1
    2d0a:	9a 83       	std	Y+2, r25	; 0x02
    2d0c:	89 83       	std	Y+1, r24	; 0x01
    2d0e:	de cf       	rjmp	.-68     	; 0x2ccc <_ZN6DS323111getDateTimeEv+0x68>
    2d10:	82 e1       	ldi	r24, 0x12	; 18
    2d12:	94 e0       	ldi	r25, 0x04	; 4
    2d14:	0e 94 c4 21 	call	0x4388	; 0x4388 <_ZN7TwoWire15endTransmissionEv>
    2d18:	8b 81       	ldd	r24, Y+3	; 0x03
    2d1a:	9c 81       	ldd	r25, Y+4	; 0x04
    2d1c:	80 53       	subi	r24, 0x30	; 48
    2d1e:	98 4f       	sbci	r25, 0xF8	; 248
    2d20:	9c 01       	movw	r18, r24
    2d22:	8b 89       	ldd	r24, Y+19	; 0x13
    2d24:	9c 89       	ldd	r25, Y+20	; 0x14
    2d26:	fc 01       	movw	r30, r24
    2d28:	31 83       	std	Z+1, r19	; 0x01
    2d2a:	20 83       	st	Z, r18
    2d2c:	8d 81       	ldd	r24, Y+5	; 0x05
    2d2e:	9e 81       	ldd	r25, Y+6	; 0x06
    2d30:	28 2f       	mov	r18, r24
    2d32:	8b 89       	ldd	r24, Y+19	; 0x13
    2d34:	9c 89       	ldd	r25, Y+20	; 0x14
    2d36:	fc 01       	movw	r30, r24
    2d38:	22 83       	std	Z+2, r18	; 0x02
    2d3a:	8f 81       	ldd	r24, Y+7	; 0x07
    2d3c:	98 85       	ldd	r25, Y+8	; 0x08
    2d3e:	28 2f       	mov	r18, r24
    2d40:	8b 89       	ldd	r24, Y+19	; 0x13
    2d42:	9c 89       	ldd	r25, Y+20	; 0x14
    2d44:	fc 01       	movw	r30, r24
    2d46:	23 83       	std	Z+3, r18	; 0x03
    2d48:	89 85       	ldd	r24, Y+9	; 0x09
    2d4a:	9a 85       	ldd	r25, Y+10	; 0x0a
    2d4c:	28 2f       	mov	r18, r24
    2d4e:	8b 89       	ldd	r24, Y+19	; 0x13
    2d50:	9c 89       	ldd	r25, Y+20	; 0x14
    2d52:	fc 01       	movw	r30, r24
    2d54:	27 83       	std	Z+7, r18	; 0x07
    2d56:	8b 85       	ldd	r24, Y+11	; 0x0b
    2d58:	9c 85       	ldd	r25, Y+12	; 0x0c
    2d5a:	28 2f       	mov	r18, r24
    2d5c:	8b 89       	ldd	r24, Y+19	; 0x13
    2d5e:	9c 89       	ldd	r25, Y+20	; 0x14
    2d60:	fc 01       	movw	r30, r24
    2d62:	24 83       	std	Z+4, r18	; 0x04
    2d64:	8d 85       	ldd	r24, Y+13	; 0x0d
    2d66:	9e 85       	ldd	r25, Y+14	; 0x0e
    2d68:	28 2f       	mov	r18, r24
    2d6a:	8b 89       	ldd	r24, Y+19	; 0x13
    2d6c:	9c 89       	ldd	r25, Y+20	; 0x14
    2d6e:	fc 01       	movw	r30, r24
    2d70:	25 83       	std	Z+5, r18	; 0x05
    2d72:	8f 85       	ldd	r24, Y+15	; 0x0f
    2d74:	98 89       	ldd	r25, Y+16	; 0x10
    2d76:	28 2f       	mov	r18, r24
    2d78:	8b 89       	ldd	r24, Y+19	; 0x13
    2d7a:	9c 89       	ldd	r25, Y+20	; 0x14
    2d7c:	fc 01       	movw	r30, r24
    2d7e:	26 83       	std	Z+6, r18	; 0x06
    2d80:	8b 89       	ldd	r24, Y+19	; 0x13
    2d82:	9c 89       	ldd	r25, Y+20	; 0x14
    2d84:	84 d1       	rcall	.+776    	; 0x308e <_ZN6DS32318unixtimeEv>
    2d86:	dc 01       	movw	r26, r24
    2d88:	cb 01       	movw	r24, r22
    2d8a:	2b 89       	ldd	r18, Y+19	; 0x13
    2d8c:	3c 89       	ldd	r19, Y+20	; 0x14
    2d8e:	f9 01       	movw	r30, r18
    2d90:	80 87       	std	Z+8, r24	; 0x08
    2d92:	91 87       	std	Z+9, r25	; 0x09
    2d94:	a2 87       	std	Z+10, r26	; 0x0a
    2d96:	b3 87       	std	Z+11, r27	; 0x0b
    2d98:	89 89       	ldd	r24, Y+17	; 0x11
    2d9a:	9a 89       	ldd	r25, Y+18	; 0x12
    2d9c:	2b 89       	ldd	r18, Y+19	; 0x13
    2d9e:	3c 89       	ldd	r19, Y+20	; 0x14
    2da0:	4c e0       	ldi	r20, 0x0C	; 12
    2da2:	f9 01       	movw	r30, r18
    2da4:	dc 01       	movw	r26, r24
    2da6:	01 90       	ld	r0, Z+
    2da8:	0d 92       	st	X+, r0
    2daa:	4a 95       	dec	r20
    2dac:	e1 f7       	brne	.-8      	; 0x2da6 <_ZN6DS323111getDateTimeEv+0x142>
    2dae:	89 89       	ldd	r24, Y+17	; 0x11
    2db0:	9a 89       	ldd	r25, Y+18	; 0x12
    2db2:	64 96       	adiw	r28, 0x14	; 20
    2db4:	0f b6       	in	r0, 0x3f	; 63
    2db6:	f8 94       	cli
    2db8:	de bf       	out	0x3e, r29	; 62
    2dba:	0f be       	out	0x3f, r0	; 63
    2dbc:	cd bf       	out	0x3d, r28	; 61
    2dbe:	df 91       	pop	r29
    2dc0:	cf 91       	pop	r28
    2dc2:	08 95       	ret

00002dc4 <_ZN6DS323110setBatteryEbb>:
    2dc4:	cf 93       	push	r28
    2dc6:	df 93       	push	r29
    2dc8:	00 d0       	rcall	.+0      	; 0x2dca <_ZN6DS323110setBatteryEbb+0x6>
    2dca:	1f 92       	push	r1
    2dcc:	1f 92       	push	r1
    2dce:	cd b7       	in	r28, 0x3d	; 61
    2dd0:	de b7       	in	r29, 0x3e	; 62
    2dd2:	9b 83       	std	Y+3, r25	; 0x03
    2dd4:	8a 83       	std	Y+2, r24	; 0x02
    2dd6:	6c 83       	std	Y+4, r22	; 0x04
    2dd8:	4d 83       	std	Y+5, r20	; 0x05
    2dda:	8a 81       	ldd	r24, Y+2	; 0x02
    2ddc:	9b 81       	ldd	r25, Y+3	; 0x03
    2dde:	6e e0       	ldi	r22, 0x0E	; 14
    2de0:	95 d2       	rcall	.+1322   	; 0x330c <_ZN6DS323113readRegister8Eh>
    2de2:	89 83       	std	Y+1, r24	; 0x01
    2de4:	8d 81       	ldd	r24, Y+5	; 0x05
    2de6:	88 23       	and	r24, r24
    2de8:	21 f0       	breq	.+8      	; 0x2df2 <_ZN6DS323110setBatteryEbb+0x2e>
    2dea:	89 81       	ldd	r24, Y+1	; 0x01
    2dec:	80 64       	ori	r24, 0x40	; 64
    2dee:	89 83       	std	Y+1, r24	; 0x01
    2df0:	03 c0       	rjmp	.+6      	; 0x2df8 <_ZN6DS323110setBatteryEbb+0x34>
    2df2:	89 81       	ldd	r24, Y+1	; 0x01
    2df4:	8f 7b       	andi	r24, 0xBF	; 191
    2df6:	89 83       	std	Y+1, r24	; 0x01
    2df8:	8c 81       	ldd	r24, Y+4	; 0x04
    2dfa:	88 23       	and	r24, r24
    2dfc:	21 f0       	breq	.+8      	; 0x2e06 <_ZN6DS323110setBatteryEbb+0x42>
    2dfe:	89 81       	ldd	r24, Y+1	; 0x01
    2e00:	8b 77       	andi	r24, 0x7B	; 123
    2e02:	89 83       	std	Y+1, r24	; 0x01
    2e04:	03 c0       	rjmp	.+6      	; 0x2e0c <_ZN6DS323110setBatteryEbb+0x48>
    2e06:	89 81       	ldd	r24, Y+1	; 0x01
    2e08:	80 68       	ori	r24, 0x80	; 128
    2e0a:	89 83       	std	Y+1, r24	; 0x01
    2e0c:	8a 81       	ldd	r24, Y+2	; 0x02
    2e0e:	9b 81       	ldd	r25, Y+3	; 0x03
    2e10:	49 81       	ldd	r20, Y+1	; 0x01
    2e12:	6e e0       	ldi	r22, 0x0E	; 14
    2e14:	55 d2       	rcall	.+1194   	; 0x32c0 <_ZN6DS323114writeRegister8Ehh>
    2e16:	00 00       	nop
    2e18:	0f 90       	pop	r0
    2e1a:	0f 90       	pop	r0
    2e1c:	0f 90       	pop	r0
    2e1e:	0f 90       	pop	r0
    2e20:	0f 90       	pop	r0
    2e22:	df 91       	pop	r29
    2e24:	cf 91       	pop	r28
    2e26:	08 95       	ret

00002e28 <_ZN6DS32317bcd2decEh>:
    2e28:	cf 93       	push	r28
    2e2a:	df 93       	push	r29
    2e2c:	00 d0       	rcall	.+0      	; 0x2e2e <_ZN6DS32317bcd2decEh+0x6>
    2e2e:	cd b7       	in	r28, 0x3d	; 61
    2e30:	de b7       	in	r29, 0x3e	; 62
    2e32:	9a 83       	std	Y+2, r25	; 0x02
    2e34:	89 83       	std	Y+1, r24	; 0x01
    2e36:	6b 83       	std	Y+3, r22	; 0x03
    2e38:	8b 81       	ldd	r24, Y+3	; 0x03
    2e3a:	82 95       	swap	r24
    2e3c:	8f 70       	andi	r24, 0x0F	; 15
    2e3e:	88 0f       	add	r24, r24
    2e40:	98 2f       	mov	r25, r24
    2e42:	99 0f       	add	r25, r25
    2e44:	99 0f       	add	r25, r25
    2e46:	98 0f       	add	r25, r24
    2e48:	8b 81       	ldd	r24, Y+3	; 0x03
    2e4a:	8f 70       	andi	r24, 0x0F	; 15
    2e4c:	89 0f       	add	r24, r25
    2e4e:	0f 90       	pop	r0
    2e50:	0f 90       	pop	r0
    2e52:	0f 90       	pop	r0
    2e54:	df 91       	pop	r29
    2e56:	cf 91       	pop	r28
    2e58:	08 95       	ret

00002e5a <_ZN6DS32317dec2bcdEh>:
    2e5a:	cf 93       	push	r28
    2e5c:	df 93       	push	r29
    2e5e:	00 d0       	rcall	.+0      	; 0x2e60 <_ZN6DS32317dec2bcdEh+0x6>
    2e60:	cd b7       	in	r28, 0x3d	; 61
    2e62:	de b7       	in	r29, 0x3e	; 62
    2e64:	9a 83       	std	Y+2, r25	; 0x02
    2e66:	89 83       	std	Y+1, r24	; 0x01
    2e68:	6b 83       	std	Y+3, r22	; 0x03
    2e6a:	9b 81       	ldd	r25, Y+3	; 0x03
    2e6c:	8d ec       	ldi	r24, 0xCD	; 205
    2e6e:	98 9f       	mul	r25, r24
    2e70:	81 2d       	mov	r24, r1
    2e72:	11 24       	eor	r1, r1
    2e74:	86 95       	lsr	r24
    2e76:	86 95       	lsr	r24
    2e78:	86 95       	lsr	r24
    2e7a:	28 2f       	mov	r18, r24
    2e7c:	22 95       	swap	r18
    2e7e:	20 7f       	andi	r18, 0xF0	; 240
    2e80:	9b 81       	ldd	r25, Y+3	; 0x03
    2e82:	8d ec       	ldi	r24, 0xCD	; 205
    2e84:	98 9f       	mul	r25, r24
    2e86:	81 2d       	mov	r24, r1
    2e88:	11 24       	eor	r1, r1
    2e8a:	86 95       	lsr	r24
    2e8c:	86 95       	lsr	r24
    2e8e:	86 95       	lsr	r24
    2e90:	88 0f       	add	r24, r24
    2e92:	38 2f       	mov	r19, r24
    2e94:	33 0f       	add	r19, r19
    2e96:	33 0f       	add	r19, r19
    2e98:	83 0f       	add	r24, r19
    2e9a:	39 2f       	mov	r19, r25
    2e9c:	38 1b       	sub	r19, r24
    2e9e:	83 2f       	mov	r24, r19
    2ea0:	82 0f       	add	r24, r18
    2ea2:	0f 90       	pop	r0
    2ea4:	0f 90       	pop	r0
    2ea6:	0f 90       	pop	r0
    2ea8:	df 91       	pop	r29
    2eaa:	cf 91       	pop	r28
    2eac:	08 95       	ret

00002eae <_ZN6DS32319time2longEjhhh>:
    2eae:	0f 93       	push	r16
    2eb0:	cf 93       	push	r28
    2eb2:	df 93       	push	r29
    2eb4:	cd b7       	in	r28, 0x3d	; 61
    2eb6:	de b7       	in	r29, 0x3e	; 62
    2eb8:	27 97       	sbiw	r28, 0x07	; 7
    2eba:	0f b6       	in	r0, 0x3f	; 63
    2ebc:	f8 94       	cli
    2ebe:	de bf       	out	0x3e, r29	; 62
    2ec0:	0f be       	out	0x3f, r0	; 63
    2ec2:	cd bf       	out	0x3d, r28	; 61
    2ec4:	9a 83       	std	Y+2, r25	; 0x02
    2ec6:	89 83       	std	Y+1, r24	; 0x01
    2ec8:	7c 83       	std	Y+4, r23	; 0x04
    2eca:	6b 83       	std	Y+3, r22	; 0x03
    2ecc:	4d 83       	std	Y+5, r20	; 0x05
    2ece:	2e 83       	std	Y+6, r18	; 0x06
    2ed0:	0f 83       	std	Y+7, r16	; 0x07
    2ed2:	8b 81       	ldd	r24, Y+3	; 0x03
    2ed4:	9c 81       	ldd	r25, Y+4	; 0x04
    2ed6:	9c 01       	movw	r18, r24
    2ed8:	40 e0       	ldi	r20, 0x00	; 0
    2eda:	50 e0       	ldi	r21, 0x00	; 0
    2edc:	da 01       	movw	r26, r20
    2ede:	c9 01       	movw	r24, r18
    2ee0:	88 0f       	add	r24, r24
    2ee2:	99 1f       	adc	r25, r25
    2ee4:	aa 1f       	adc	r26, r26
    2ee6:	bb 1f       	adc	r27, r27
    2ee8:	82 0f       	add	r24, r18
    2eea:	93 1f       	adc	r25, r19
    2eec:	a4 1f       	adc	r26, r20
    2eee:	b5 1f       	adc	r27, r21
    2ef0:	88 0f       	add	r24, r24
    2ef2:	99 1f       	adc	r25, r25
    2ef4:	aa 1f       	adc	r26, r26
    2ef6:	bb 1f       	adc	r27, r27
    2ef8:	88 0f       	add	r24, r24
    2efa:	99 1f       	adc	r25, r25
    2efc:	aa 1f       	adc	r26, r26
    2efe:	bb 1f       	adc	r27, r27
    2f00:	88 0f       	add	r24, r24
    2f02:	99 1f       	adc	r25, r25
    2f04:	aa 1f       	adc	r26, r26
    2f06:	bb 1f       	adc	r27, r27
    2f08:	9c 01       	movw	r18, r24
    2f0a:	ad 01       	movw	r20, r26
    2f0c:	8d 81       	ldd	r24, Y+5	; 0x05
    2f0e:	88 2f       	mov	r24, r24
    2f10:	90 e0       	ldi	r25, 0x00	; 0
    2f12:	a0 e0       	ldi	r26, 0x00	; 0
    2f14:	b0 e0       	ldi	r27, 0x00	; 0
    2f16:	28 0f       	add	r18, r24
    2f18:	39 1f       	adc	r19, r25
    2f1a:	4a 1f       	adc	r20, r26
    2f1c:	5b 1f       	adc	r21, r27
    2f1e:	8c e3       	ldi	r24, 0x3C	; 60
    2f20:	90 e0       	ldi	r25, 0x00	; 0
    2f22:	dc 01       	movw	r26, r24
    2f24:	0e 94 b0 4d 	call	0x9b60	; 0x9b60 <__muluhisi3>
    2f28:	9b 01       	movw	r18, r22
    2f2a:	ac 01       	movw	r20, r24
    2f2c:	8e 81       	ldd	r24, Y+6	; 0x06
    2f2e:	88 2f       	mov	r24, r24
    2f30:	90 e0       	ldi	r25, 0x00	; 0
    2f32:	a0 e0       	ldi	r26, 0x00	; 0
    2f34:	b0 e0       	ldi	r27, 0x00	; 0
    2f36:	28 0f       	add	r18, r24
    2f38:	39 1f       	adc	r19, r25
    2f3a:	4a 1f       	adc	r20, r26
    2f3c:	5b 1f       	adc	r21, r27
    2f3e:	8c e3       	ldi	r24, 0x3C	; 60
    2f40:	90 e0       	ldi	r25, 0x00	; 0
    2f42:	dc 01       	movw	r26, r24
    2f44:	0e 94 b0 4d 	call	0x9b60	; 0x9b60 <__muluhisi3>
    2f48:	9b 01       	movw	r18, r22
    2f4a:	ac 01       	movw	r20, r24
    2f4c:	8f 81       	ldd	r24, Y+7	; 0x07
    2f4e:	88 2f       	mov	r24, r24
    2f50:	90 e0       	ldi	r25, 0x00	; 0
    2f52:	a0 e0       	ldi	r26, 0x00	; 0
    2f54:	b0 e0       	ldi	r27, 0x00	; 0
    2f56:	82 0f       	add	r24, r18
    2f58:	93 1f       	adc	r25, r19
    2f5a:	a4 1f       	adc	r26, r20
    2f5c:	b5 1f       	adc	r27, r21
    2f5e:	bc 01       	movw	r22, r24
    2f60:	cd 01       	movw	r24, r26
    2f62:	27 96       	adiw	r28, 0x07	; 7
    2f64:	0f b6       	in	r0, 0x3f	; 63
    2f66:	f8 94       	cli
    2f68:	de bf       	out	0x3e, r29	; 62
    2f6a:	0f be       	out	0x3f, r0	; 63
    2f6c:	cd bf       	out	0x3d, r28	; 61
    2f6e:	df 91       	pop	r29
    2f70:	cf 91       	pop	r28
    2f72:	0f 91       	pop	r16
    2f74:	08 95       	ret

00002f76 <_ZN6DS323110isLeapYearEj>:
    2f76:	cf 93       	push	r28
    2f78:	df 93       	push	r29
    2f7a:	00 d0       	rcall	.+0      	; 0x2f7c <_ZN6DS323110isLeapYearEj+0x6>
    2f7c:	1f 92       	push	r1
    2f7e:	cd b7       	in	r28, 0x3d	; 61
    2f80:	de b7       	in	r29, 0x3e	; 62
    2f82:	9a 83       	std	Y+2, r25	; 0x02
    2f84:	89 83       	std	Y+1, r24	; 0x01
    2f86:	7c 83       	std	Y+4, r23	; 0x04
    2f88:	6b 83       	std	Y+3, r22	; 0x03
    2f8a:	8b 81       	ldd	r24, Y+3	; 0x03
    2f8c:	9c 81       	ldd	r25, Y+4	; 0x04
    2f8e:	83 70       	andi	r24, 0x03	; 3
    2f90:	99 27       	eor	r25, r25
    2f92:	21 e0       	ldi	r18, 0x01	; 1
    2f94:	89 2b       	or	r24, r25
    2f96:	09 f0       	breq	.+2      	; 0x2f9a <_ZN6DS323110isLeapYearEj+0x24>
    2f98:	20 e0       	ldi	r18, 0x00	; 0
    2f9a:	82 2f       	mov	r24, r18
    2f9c:	0f 90       	pop	r0
    2f9e:	0f 90       	pop	r0
    2fa0:	0f 90       	pop	r0
    2fa2:	0f 90       	pop	r0
    2fa4:	df 91       	pop	r29
    2fa6:	cf 91       	pop	r28
    2fa8:	08 95       	ret

00002faa <_ZN6DS32319date2daysEjhh>:

uint16_t DS3231::date2days(uint16_t year, uint8_t month, uint8_t day)
{
    2faa:	cf 93       	push	r28
    2fac:	df 93       	push	r29
    2fae:	cd b7       	in	r28, 0x3d	; 61
    2fb0:	de b7       	in	r29, 0x3e	; 62
    2fb2:	2c 97       	sbiw	r28, 0x0c	; 12
    2fb4:	0f b6       	in	r0, 0x3f	; 63
    2fb6:	f8 94       	cli
    2fb8:	de bf       	out	0x3e, r29	; 62
    2fba:	0f be       	out	0x3f, r0	; 63
    2fbc:	cd bf       	out	0x3d, r28	; 61
    2fbe:	98 87       	std	Y+8, r25	; 0x08
    2fc0:	8f 83       	std	Y+7, r24	; 0x07
    2fc2:	7a 87       	std	Y+10, r23	; 0x0a
    2fc4:	69 87       	std	Y+9, r22	; 0x09
    2fc6:	4b 87       	std	Y+11, r20	; 0x0b
    2fc8:	2c 87       	std	Y+12, r18	; 0x0c
    year = year - 2000;
    2fca:	89 85       	ldd	r24, Y+9	; 0x09
    2fcc:	9a 85       	ldd	r25, Y+10	; 0x0a
    2fce:	80 5d       	subi	r24, 0xD0	; 208
    2fd0:	97 40       	sbci	r25, 0x07	; 7
    2fd2:	9a 87       	std	Y+10, r25	; 0x0a
    2fd4:	89 87       	std	Y+9, r24	; 0x09

    uint16_t days16 = day;
    2fd6:	8c 85       	ldd	r24, Y+12	; 0x0c
    2fd8:	88 2f       	mov	r24, r24
    2fda:	90 e0       	ldi	r25, 0x00	; 0
    2fdc:	9a 83       	std	Y+2, r25	; 0x02
    2fde:	89 83       	std	Y+1, r24	; 0x01

    for (uint8_t i = 1; i < month; ++i)
    2fe0:	81 e0       	ldi	r24, 0x01	; 1
    2fe2:	8b 83       	std	Y+3, r24	; 0x03
    2fe4:	9b 81       	ldd	r25, Y+3	; 0x03
    2fe6:	8b 85       	ldd	r24, Y+11	; 0x0b
    2fe8:	98 17       	cp	r25, r24
    2fea:	d0 f4       	brcc	.+52     	; 0x3020 <_ZN6DS32319date2daysEjhh+0x76>
    {
        days16 += pgm_read_byte(daysArray + i - 1);
    2fec:	8b 81       	ldd	r24, Y+3	; 0x03
    2fee:	88 2f       	mov	r24, r24
    2ff0:	90 e0       	ldi	r25, 0x00	; 0
    2ff2:	01 97       	sbiw	r24, 0x01	; 1
    2ff4:	82 5f       	subi	r24, 0xF2	; 242
    2ff6:	9b 4f       	sbci	r25, 0xFB	; 251
    2ff8:	9d 83       	std	Y+5, r25	; 0x05
    2ffa:	8c 83       	std	Y+4, r24	; 0x04
    2ffc:	8c 81       	ldd	r24, Y+4	; 0x04
    2ffe:	9d 81       	ldd	r25, Y+5	; 0x05
    3000:	fc 01       	movw	r30, r24
    3002:	84 91       	lpm	r24, Z
    3004:	8e 83       	std	Y+6, r24	; 0x06
    3006:	8e 81       	ldd	r24, Y+6	; 0x06
    3008:	88 2f       	mov	r24, r24
    300a:	90 e0       	ldi	r25, 0x00	; 0
    300c:	29 81       	ldd	r18, Y+1	; 0x01
    300e:	3a 81       	ldd	r19, Y+2	; 0x02
    3010:	82 0f       	add	r24, r18
    3012:	93 1f       	adc	r25, r19
    3014:	9a 83       	std	Y+2, r25	; 0x02
    3016:	89 83       	std	Y+1, r24	; 0x01
{
    year = year - 2000;

    uint16_t days16 = day;

    for (uint8_t i = 1; i < month; ++i)
    3018:	8b 81       	ldd	r24, Y+3	; 0x03
    301a:	8f 5f       	subi	r24, 0xFF	; 255
    301c:	8b 83       	std	Y+3, r24	; 0x03
    301e:	e2 cf       	rjmp	.-60     	; 0x2fe4 <_ZN6DS32319date2daysEjhh+0x3a>
    {
        days16 += pgm_read_byte(daysArray + i - 1);
    }

    if ((month == 2) && isLeapYear(year))
    3020:	8b 85       	ldd	r24, Y+11	; 0x0b
    3022:	82 30       	cpi	r24, 0x02	; 2
    3024:	51 f4       	brne	.+20     	; 0x303a <_ZN6DS32319date2daysEjhh+0x90>
    3026:	29 85       	ldd	r18, Y+9	; 0x09
    3028:	3a 85       	ldd	r19, Y+10	; 0x0a
    302a:	8f 81       	ldd	r24, Y+7	; 0x07
    302c:	98 85       	ldd	r25, Y+8	; 0x08
    302e:	b9 01       	movw	r22, r18
    3030:	a2 df       	rcall	.-188    	; 0x2f76 <_ZN6DS323110isLeapYearEj>
    3032:	88 23       	and	r24, r24
    3034:	11 f0       	breq	.+4      	; 0x303a <_ZN6DS32319date2daysEjhh+0x90>
    3036:	81 e0       	ldi	r24, 0x01	; 1
    3038:	01 c0       	rjmp	.+2      	; 0x303c <_ZN6DS32319date2daysEjhh+0x92>
    303a:	80 e0       	ldi	r24, 0x00	; 0
    303c:	88 23       	and	r24, r24
    303e:	29 f0       	breq	.+10     	; 0x304a <_ZN6DS32319date2daysEjhh+0xa0>
    {
        ++days16;
    3040:	89 81       	ldd	r24, Y+1	; 0x01
    3042:	9a 81       	ldd	r25, Y+2	; 0x02
    3044:	01 96       	adiw	r24, 0x01	; 1
    3046:	9a 83       	std	Y+2, r25	; 0x02
    3048:	89 83       	std	Y+1, r24	; 0x01
    }

    return days16 + 365 * year + (year + 3) / 4 - 1;
    304a:	49 85       	ldd	r20, Y+9	; 0x09
    304c:	5a 85       	ldd	r21, Y+10	; 0x0a
    304e:	8d e6       	ldi	r24, 0x6D	; 109
    3050:	91 e0       	ldi	r25, 0x01	; 1
    3052:	48 9f       	mul	r20, r24
    3054:	90 01       	movw	r18, r0
    3056:	49 9f       	mul	r20, r25
    3058:	30 0d       	add	r19, r0
    305a:	58 9f       	mul	r21, r24
    305c:	30 0d       	add	r19, r0
    305e:	11 24       	eor	r1, r1
    3060:	89 81       	ldd	r24, Y+1	; 0x01
    3062:	9a 81       	ldd	r25, Y+2	; 0x02
    3064:	28 0f       	add	r18, r24
    3066:	39 1f       	adc	r19, r25
    3068:	89 85       	ldd	r24, Y+9	; 0x09
    306a:	9a 85       	ldd	r25, Y+10	; 0x0a
    306c:	03 96       	adiw	r24, 0x03	; 3
    306e:	96 95       	lsr	r25
    3070:	87 95       	ror	r24
    3072:	96 95       	lsr	r25
    3074:	87 95       	ror	r24
    3076:	82 0f       	add	r24, r18
    3078:	93 1f       	adc	r25, r19
    307a:	01 97       	sbiw	r24, 0x01	; 1
}
    307c:	2c 96       	adiw	r28, 0x0c	; 12
    307e:	0f b6       	in	r0, 0x3f	; 63
    3080:	f8 94       	cli
    3082:	de bf       	out	0x3e, r29	; 62
    3084:	0f be       	out	0x3f, r0	; 63
    3086:	cd bf       	out	0x3d, r28	; 61
    3088:	df 91       	pop	r29
    308a:	cf 91       	pop	r28
    308c:	08 95       	ret

0000308e <_ZN6DS32318unixtimeEv>:

uint32_t DS3231::unixtime(void)
{
    308e:	ff 92       	push	r15
    3090:	0f 93       	push	r16
    3092:	1f 93       	push	r17
    3094:	cf 93       	push	r28
    3096:	df 93       	push	r29
    3098:	00 d0       	rcall	.+0      	; 0x309a <_ZN6DS32318unixtimeEv+0xc>
    309a:	00 d0       	rcall	.+0      	; 0x309c <_ZN6DS32318unixtimeEv+0xe>
    309c:	cd b7       	in	r28, 0x3d	; 61
    309e:	de b7       	in	r29, 0x3e	; 62
    30a0:	9e 83       	std	Y+6, r25	; 0x06
    30a2:	8d 83       	std	Y+5, r24	; 0x05
    uint32_t u;

    u = time2long(date2days(t.year, t.month, t.day), t.hour, t.minute, t.second);
    30a4:	8d 81       	ldd	r24, Y+5	; 0x05
    30a6:	9e 81       	ldd	r25, Y+6	; 0x06
    30a8:	fc 01       	movw	r30, r24
    30aa:	06 81       	ldd	r16, Z+6	; 0x06
    30ac:	8d 81       	ldd	r24, Y+5	; 0x05
    30ae:	9e 81       	ldd	r25, Y+6	; 0x06
    30b0:	fc 01       	movw	r30, r24
    30b2:	f5 80       	ldd	r15, Z+5	; 0x05
    30b4:	8d 81       	ldd	r24, Y+5	; 0x05
    30b6:	9e 81       	ldd	r25, Y+6	; 0x06
    30b8:	fc 01       	movw	r30, r24
    30ba:	14 81       	ldd	r17, Z+4	; 0x04
    30bc:	8d 81       	ldd	r24, Y+5	; 0x05
    30be:	9e 81       	ldd	r25, Y+6	; 0x06
    30c0:	fc 01       	movw	r30, r24
    30c2:	23 81       	ldd	r18, Z+3	; 0x03
    30c4:	8d 81       	ldd	r24, Y+5	; 0x05
    30c6:	9e 81       	ldd	r25, Y+6	; 0x06
    30c8:	fc 01       	movw	r30, r24
    30ca:	32 81       	ldd	r19, Z+2	; 0x02
    30cc:	8d 81       	ldd	r24, Y+5	; 0x05
    30ce:	9e 81       	ldd	r25, Y+6	; 0x06
    30d0:	fc 01       	movw	r30, r24
    30d2:	60 81       	ld	r22, Z
    30d4:	71 81       	ldd	r23, Z+1	; 0x01
    30d6:	8d 81       	ldd	r24, Y+5	; 0x05
    30d8:	9e 81       	ldd	r25, Y+6	; 0x06
    30da:	43 2f       	mov	r20, r19
    30dc:	66 df       	rcall	.-308    	; 0x2faa <_ZN6DS32319date2daysEjhh>
    30de:	bc 01       	movw	r22, r24
    30e0:	8d 81       	ldd	r24, Y+5	; 0x05
    30e2:	9e 81       	ldd	r25, Y+6	; 0x06
    30e4:	2f 2d       	mov	r18, r15
    30e6:	41 2f       	mov	r20, r17
    30e8:	e2 de       	rcall	.-572    	; 0x2eae <_ZN6DS32319time2longEjhhh>
    30ea:	dc 01       	movw	r26, r24
    30ec:	cb 01       	movw	r24, r22
    30ee:	89 83       	std	Y+1, r24	; 0x01
    30f0:	9a 83       	std	Y+2, r25	; 0x02
    30f2:	ab 83       	std	Y+3, r26	; 0x03
    30f4:	bc 83       	std	Y+4, r27	; 0x04
    u += 946681200;
    30f6:	89 81       	ldd	r24, Y+1	; 0x01
    30f8:	9a 81       	ldd	r25, Y+2	; 0x02
    30fa:	ab 81       	ldd	r26, Y+3	; 0x03
    30fc:	bc 81       	ldd	r27, Y+4	; 0x04
    30fe:	80 59       	subi	r24, 0x90	; 144
    3100:	9a 4c       	sbci	r25, 0xCA	; 202
    3102:	a2 49       	sbci	r26, 0x92	; 146
    3104:	b7 4c       	sbci	r27, 0xC7	; 199
    3106:	89 83       	std	Y+1, r24	; 0x01
    3108:	9a 83       	std	Y+2, r25	; 0x02
    310a:	ab 83       	std	Y+3, r26	; 0x03
    310c:	bc 83       	std	Y+4, r27	; 0x04

    return u;
    310e:	89 81       	ldd	r24, Y+1	; 0x01
    3110:	9a 81       	ldd	r25, Y+2	; 0x02
    3112:	ab 81       	ldd	r26, Y+3	; 0x03
    3114:	bc 81       	ldd	r27, Y+4	; 0x04
}
    3116:	bc 01       	movw	r22, r24
    3118:	cd 01       	movw	r24, r26
    311a:	26 96       	adiw	r28, 0x06	; 6
    311c:	0f b6       	in	r0, 0x3f	; 63
    311e:	f8 94       	cli
    3120:	de bf       	out	0x3e, r29	; 62
    3122:	0f be       	out	0x3f, r0	; 63
    3124:	cd bf       	out	0x3d, r28	; 61
    3126:	df 91       	pop	r29
    3128:	cf 91       	pop	r28
    312a:	1f 91       	pop	r17
    312c:	0f 91       	pop	r16
    312e:	ff 90       	pop	r15
    3130:	08 95       	ret

00003132 <_ZN6DS32316conv2dEPKc>:

uint8_t DS3231::conv2d(const char* p)
{
    3132:	cf 93       	push	r28
    3134:	df 93       	push	r29
    3136:	00 d0       	rcall	.+0      	; 0x3138 <_ZN6DS32316conv2dEPKc+0x6>
    3138:	1f 92       	push	r1
    313a:	1f 92       	push	r1
    313c:	cd b7       	in	r28, 0x3d	; 61
    313e:	de b7       	in	r29, 0x3e	; 62
    3140:	9b 83       	std	Y+3, r25	; 0x03
    3142:	8a 83       	std	Y+2, r24	; 0x02
    3144:	7d 83       	std	Y+5, r23	; 0x05
    3146:	6c 83       	std	Y+4, r22	; 0x04
    uint8_t v = 0;
    3148:	19 82       	std	Y+1, r1	; 0x01

    if ('0' <= *p && *p <= '9')
    314a:	8c 81       	ldd	r24, Y+4	; 0x04
    314c:	9d 81       	ldd	r25, Y+5	; 0x05
    314e:	fc 01       	movw	r30, r24
    3150:	80 81       	ld	r24, Z
    3152:	80 33       	cpi	r24, 0x30	; 48
    3154:	60 f0       	brcs	.+24     	; 0x316e <_ZN6DS32316conv2dEPKc+0x3c>
    3156:	8c 81       	ldd	r24, Y+4	; 0x04
    3158:	9d 81       	ldd	r25, Y+5	; 0x05
    315a:	fc 01       	movw	r30, r24
    315c:	80 81       	ld	r24, Z
    315e:	8a 33       	cpi	r24, 0x3A	; 58
    3160:	30 f4       	brcc	.+12     	; 0x316e <_ZN6DS32316conv2dEPKc+0x3c>
    {
        v = *p - '0';
    3162:	8c 81       	ldd	r24, Y+4	; 0x04
    3164:	9d 81       	ldd	r25, Y+5	; 0x05
    3166:	fc 01       	movw	r30, r24
    3168:	80 81       	ld	r24, Z
    316a:	80 53       	subi	r24, 0x30	; 48
    316c:	89 83       	std	Y+1, r24	; 0x01
    }

    return 10 * v + *++p - '0';
    316e:	89 81       	ldd	r24, Y+1	; 0x01
    3170:	88 0f       	add	r24, r24
    3172:	98 2f       	mov	r25, r24
    3174:	99 0f       	add	r25, r25
    3176:	99 0f       	add	r25, r25
    3178:	28 2f       	mov	r18, r24
    317a:	29 0f       	add	r18, r25
    317c:	8c 81       	ldd	r24, Y+4	; 0x04
    317e:	9d 81       	ldd	r25, Y+5	; 0x05
    3180:	01 96       	adiw	r24, 0x01	; 1
    3182:	9d 83       	std	Y+5, r25	; 0x05
    3184:	8c 83       	std	Y+4, r24	; 0x04
    3186:	8c 81       	ldd	r24, Y+4	; 0x04
    3188:	9d 81       	ldd	r25, Y+5	; 0x05
    318a:	fc 01       	movw	r30, r24
    318c:	80 81       	ld	r24, Z
    318e:	82 0f       	add	r24, r18
    3190:	80 53       	subi	r24, 0x30	; 48
}
    3192:	0f 90       	pop	r0
    3194:	0f 90       	pop	r0
    3196:	0f 90       	pop	r0
    3198:	0f 90       	pop	r0
    319a:	0f 90       	pop	r0
    319c:	df 91       	pop	r29
    319e:	cf 91       	pop	r28
    31a0:	08 95       	ret

000031a2 <_ZN6DS32313dowEjhh>:

uint8_t DS3231::dow(uint16_t y, uint8_t m, uint8_t d)
{
    31a2:	cf 93       	push	r28
    31a4:	df 93       	push	r29
    31a6:	cd b7       	in	r28, 0x3d	; 61
    31a8:	de b7       	in	r29, 0x3e	; 62
    31aa:	2a 97       	sbiw	r28, 0x0a	; 10
    31ac:	0f b6       	in	r0, 0x3f	; 63
    31ae:	f8 94       	cli
    31b0:	de bf       	out	0x3e, r29	; 62
    31b2:	0f be       	out	0x3f, r0	; 63
    31b4:	cd bf       	out	0x3d, r28	; 61
    31b6:	9e 83       	std	Y+6, r25	; 0x06
    31b8:	8d 83       	std	Y+5, r24	; 0x05
    31ba:	78 87       	std	Y+8, r23	; 0x08
    31bc:	6f 83       	std	Y+7, r22	; 0x07
    31be:	49 87       	std	Y+9, r20	; 0x09
    31c0:	2a 87       	std	Y+10, r18	; 0x0a
    uint8_t dow;

    y -= m < 3;
    31c2:	81 e0       	ldi	r24, 0x01	; 1
    31c4:	99 85       	ldd	r25, Y+9	; 0x09
    31c6:	93 30       	cpi	r25, 0x03	; 3
    31c8:	08 f0       	brcs	.+2      	; 0x31cc <_ZN6DS32313dowEjhh+0x2a>
    31ca:	80 e0       	ldi	r24, 0x00	; 0
    31cc:	88 2f       	mov	r24, r24
    31ce:	90 e0       	ldi	r25, 0x00	; 0
    31d0:	2f 81       	ldd	r18, Y+7	; 0x07
    31d2:	38 85       	ldd	r19, Y+8	; 0x08
    31d4:	a9 01       	movw	r20, r18
    31d6:	48 1b       	sub	r20, r24
    31d8:	59 0b       	sbc	r21, r25
    31da:	ca 01       	movw	r24, r20
    31dc:	98 87       	std	Y+8, r25	; 0x08
    31de:	8f 83       	std	Y+7, r24	; 0x07
    dow = ((y + y/4 - y/100 + y/400 + pgm_read_byte(dowArray+(m-1)) + d) % 7);
    31e0:	8f 81       	ldd	r24, Y+7	; 0x07
    31e2:	98 85       	ldd	r25, Y+8	; 0x08
    31e4:	9c 01       	movw	r18, r24
    31e6:	36 95       	lsr	r19
    31e8:	27 95       	ror	r18
    31ea:	36 95       	lsr	r19
    31ec:	27 95       	ror	r18
    31ee:	8f 81       	ldd	r24, Y+7	; 0x07
    31f0:	98 85       	ldd	r25, Y+8	; 0x08
    31f2:	a9 01       	movw	r20, r18
    31f4:	48 0f       	add	r20, r24
    31f6:	59 1f       	adc	r21, r25
    31f8:	8f 81       	ldd	r24, Y+7	; 0x07
    31fa:	98 85       	ldd	r25, Y+8	; 0x08
    31fc:	96 95       	lsr	r25
    31fe:	87 95       	ror	r24
    3200:	96 95       	lsr	r25
    3202:	87 95       	ror	r24
    3204:	9c 01       	movw	r18, r24
    3206:	ab e7       	ldi	r26, 0x7B	; 123
    3208:	b4 e1       	ldi	r27, 0x14	; 20
    320a:	0e 94 a1 4d 	call	0x9b42	; 0x9b42 <__umulhisi3>
    320e:	96 95       	lsr	r25
    3210:	87 95       	ror	r24
    3212:	48 1b       	sub	r20, r24
    3214:	59 0b       	sbc	r21, r25
    3216:	8f 81       	ldd	r24, Y+7	; 0x07
    3218:	98 85       	ldd	r25, Y+8	; 0x08
    321a:	92 95       	swap	r25
    321c:	82 95       	swap	r24
    321e:	8f 70       	andi	r24, 0x0F	; 15
    3220:	89 27       	eor	r24, r25
    3222:	9f 70       	andi	r25, 0x0F	; 15
    3224:	89 27       	eor	r24, r25
    3226:	9c 01       	movw	r18, r24
    3228:	ae e3       	ldi	r26, 0x3E	; 62
    322a:	ba e0       	ldi	r27, 0x0A	; 10
    322c:	0e 94 a1 4d 	call	0x9b42	; 0x9b42 <__umulhisi3>
    3230:	9a 01       	movw	r18, r20
    3232:	28 0f       	add	r18, r24
    3234:	39 1f       	adc	r19, r25
    3236:	89 85       	ldd	r24, Y+9	; 0x09
    3238:	88 2f       	mov	r24, r24
    323a:	90 e0       	ldi	r25, 0x00	; 0
    323c:	01 97       	sbiw	r24, 0x01	; 1
    323e:	86 5e       	subi	r24, 0xE6	; 230
    3240:	9b 4f       	sbci	r25, 0xFB	; 251
    3242:	9a 83       	std	Y+2, r25	; 0x02
    3244:	89 83       	std	Y+1, r24	; 0x01
    3246:	89 81       	ldd	r24, Y+1	; 0x01
    3248:	9a 81       	ldd	r25, Y+2	; 0x02
    324a:	fc 01       	movw	r30, r24
    324c:	84 91       	lpm	r24, Z
    324e:	8b 83       	std	Y+3, r24	; 0x03
    3250:	8b 81       	ldd	r24, Y+3	; 0x03
    3252:	88 2f       	mov	r24, r24
    3254:	90 e0       	ldi	r25, 0x00	; 0
    3256:	28 0f       	add	r18, r24
    3258:	39 1f       	adc	r19, r25
    325a:	8a 85       	ldd	r24, Y+10	; 0x0a
    325c:	88 2f       	mov	r24, r24
    325e:	90 e0       	ldi	r25, 0x00	; 0
    3260:	a9 01       	movw	r20, r18
    3262:	48 0f       	add	r20, r24
    3264:	59 1f       	adc	r21, r25
    3266:	9a 01       	movw	r18, r20
    3268:	a3 e9       	ldi	r26, 0x93	; 147
    326a:	b4 e2       	ldi	r27, 0x24	; 36
    326c:	0e 94 a1 4d 	call	0x9b42	; 0x9b42 <__umulhisi3>
    3270:	9a 01       	movw	r18, r20
    3272:	28 1b       	sub	r18, r24
    3274:	39 0b       	sbc	r19, r25
    3276:	36 95       	lsr	r19
    3278:	27 95       	ror	r18
    327a:	82 0f       	add	r24, r18
    327c:	93 1f       	adc	r25, r19
    327e:	9c 01       	movw	r18, r24
    3280:	36 95       	lsr	r19
    3282:	27 95       	ror	r18
    3284:	36 95       	lsr	r19
    3286:	27 95       	ror	r18
    3288:	c9 01       	movw	r24, r18
    328a:	88 0f       	add	r24, r24
    328c:	99 1f       	adc	r25, r25
    328e:	88 0f       	add	r24, r24
    3290:	99 1f       	adc	r25, r25
    3292:	88 0f       	add	r24, r24
    3294:	99 1f       	adc	r25, r25
    3296:	82 1b       	sub	r24, r18
    3298:	93 0b       	sbc	r25, r19
    329a:	9a 01       	movw	r18, r20
    329c:	28 1b       	sub	r18, r24
    329e:	39 0b       	sbc	r19, r25
    32a0:	2c 83       	std	Y+4, r18	; 0x04

    if (dow == 0)
    32a2:	8c 81       	ldd	r24, Y+4	; 0x04
    32a4:	88 23       	and	r24, r24
    32a6:	11 f4       	brne	.+4      	; 0x32ac <_ZN6DS32313dowEjhh+0x10a>
    {
        return 7;
    32a8:	87 e0       	ldi	r24, 0x07	; 7
    32aa:	01 c0       	rjmp	.+2      	; 0x32ae <_ZN6DS32313dowEjhh+0x10c>
    }

    return dow;
    32ac:	8c 81       	ldd	r24, Y+4	; 0x04
}
    32ae:	2a 96       	adiw	r28, 0x0a	; 10
    32b0:	0f b6       	in	r0, 0x3f	; 63
    32b2:	f8 94       	cli
    32b4:	de bf       	out	0x3e, r29	; 62
    32b6:	0f be       	out	0x3f, r0	; 63
    32b8:	cd bf       	out	0x3d, r28	; 61
    32ba:	df 91       	pop	r29
    32bc:	cf 91       	pop	r28
    32be:	08 95       	ret

000032c0 <_ZN6DS323114writeRegister8Ehh>:

void DS3231::writeRegister8(uint8_t reg, uint8_t value)
{
    32c0:	cf 93       	push	r28
    32c2:	df 93       	push	r29
    32c4:	00 d0       	rcall	.+0      	; 0x32c6 <_ZN6DS323114writeRegister8Ehh+0x6>
    32c6:	1f 92       	push	r1
    32c8:	cd b7       	in	r28, 0x3d	; 61
    32ca:	de b7       	in	r29, 0x3e	; 62
    32cc:	9a 83       	std	Y+2, r25	; 0x02
    32ce:	89 83       	std	Y+1, r24	; 0x01
    32d0:	6b 83       	std	Y+3, r22	; 0x03
    32d2:	4c 83       	std	Y+4, r20	; 0x04
    Wire.beginTransmission(DS3231_ADDRESS);
    32d4:	68 e6       	ldi	r22, 0x68	; 104
    32d6:	70 e0       	ldi	r23, 0x00	; 0
    32d8:	82 e1       	ldi	r24, 0x12	; 18
    32da:	94 e0       	ldi	r25, 0x04	; 4
    32dc:	0e 94 89 21 	call	0x4312	; 0x4312 <_ZN7TwoWire17beginTransmissionEi>
    #if ARDUINO >= 100
        Wire.write(reg);
    32e0:	6b 81       	ldd	r22, Y+3	; 0x03
    32e2:	82 e1       	ldi	r24, 0x12	; 18
    32e4:	94 e0       	ldi	r25, 0x04	; 4
    32e6:	0e 94 d5 21 	call	0x43aa	; 0x43aa <_ZN7TwoWire5writeEh>
        Wire.write(value);
    32ea:	6c 81       	ldd	r22, Y+4	; 0x04
    32ec:	82 e1       	ldi	r24, 0x12	; 18
    32ee:	94 e0       	ldi	r25, 0x04	; 4
    32f0:	0e 94 d5 21 	call	0x43aa	; 0x43aa <_ZN7TwoWire5writeEh>
    #else
        Wire.send(reg);
        Wire.send(value);
    #endif
    Wire.endTransmission();
    32f4:	82 e1       	ldi	r24, 0x12	; 18
    32f6:	94 e0       	ldi	r25, 0x04	; 4
    32f8:	0e 94 c4 21 	call	0x4388	; 0x4388 <_ZN7TwoWire15endTransmissionEv>
}
    32fc:	00 00       	nop
    32fe:	0f 90       	pop	r0
    3300:	0f 90       	pop	r0
    3302:	0f 90       	pop	r0
    3304:	0f 90       	pop	r0
    3306:	df 91       	pop	r29
    3308:	cf 91       	pop	r28
    330a:	08 95       	ret

0000330c <_ZN6DS323113readRegister8Eh>:

uint8_t DS3231::readRegister8(uint8_t reg)
{
    330c:	cf 93       	push	r28
    330e:	df 93       	push	r29
    3310:	00 d0       	rcall	.+0      	; 0x3312 <_ZN6DS323113readRegister8Eh+0x6>
    3312:	1f 92       	push	r1
    3314:	cd b7       	in	r28, 0x3d	; 61
    3316:	de b7       	in	r29, 0x3e	; 62
    3318:	9b 83       	std	Y+3, r25	; 0x03
    331a:	8a 83       	std	Y+2, r24	; 0x02
    331c:	6c 83       	std	Y+4, r22	; 0x04
    uint8_t value;
    Wire.beginTransmission(DS3231_ADDRESS);
    331e:	68 e6       	ldi	r22, 0x68	; 104
    3320:	70 e0       	ldi	r23, 0x00	; 0
    3322:	82 e1       	ldi	r24, 0x12	; 18
    3324:	94 e0       	ldi	r25, 0x04	; 4
    3326:	f5 d7       	rcall	.+4074   	; 0x4312 <_ZN7TwoWire17beginTransmissionEi>
    #if ARDUINO >= 100
        Wire.write(reg);
    3328:	6c 81       	ldd	r22, Y+4	; 0x04
    332a:	82 e1       	ldi	r24, 0x12	; 18
    332c:	94 e0       	ldi	r25, 0x04	; 4
    332e:	0e 94 d5 21 	call	0x43aa	; 0x43aa <_ZN7TwoWire5writeEh>
    #else
        Wire.send(reg);
    #endif
    Wire.endTransmission();
    3332:	82 e1       	ldi	r24, 0x12	; 18
    3334:	94 e0       	ldi	r25, 0x04	; 4
    3336:	0e 94 c4 21 	call	0x4388	; 0x4388 <_ZN7TwoWire15endTransmissionEv>

    Wire.requestFrom(DS3231_ADDRESS, 1);
    333a:	41 e0       	ldi	r20, 0x01	; 1
    333c:	50 e0       	ldi	r21, 0x00	; 0
    333e:	68 e6       	ldi	r22, 0x68	; 104
    3340:	70 e0       	ldi	r23, 0x00	; 0
    3342:	82 e1       	ldi	r24, 0x12	; 18
    3344:	94 e0       	ldi	r25, 0x04	; 4
    3346:	b0 d7       	rcall	.+3936   	; 0x42a8 <_ZN7TwoWire11requestFromEii>
    while(!Wire.available()) {};
    3348:	82 e1       	ldi	r24, 0x12	; 18
    334a:	94 e0       	ldi	r25, 0x04	; 4
    334c:	0e 94 54 22 	call	0x44a8	; 0x44a8 <_ZN7TwoWire9availableEv>
    3350:	21 e0       	ldi	r18, 0x01	; 1
    3352:	89 2b       	or	r24, r25
    3354:	09 f0       	breq	.+2      	; 0x3358 <_ZN6DS323113readRegister8Eh+0x4c>
    3356:	20 e0       	ldi	r18, 0x00	; 0
    3358:	22 23       	and	r18, r18
    335a:	09 f0       	breq	.+2      	; 0x335e <_ZN6DS323113readRegister8Eh+0x52>
    335c:	f5 cf       	rjmp	.-22     	; 0x3348 <_ZN6DS323113readRegister8Eh+0x3c>
    #if ARDUINO >= 100
        value = Wire.read();
    335e:	82 e1       	ldi	r24, 0x12	; 18
    3360:	94 e0       	ldi	r25, 0x04	; 4
    3362:	0e 94 6d 22 	call	0x44da	; 0x44da <_ZN7TwoWire4readEv>
    3366:	89 83       	std	Y+1, r24	; 0x01
    #else
        value = Wire.receive();
    #endif;
    Wire.endTransmission();
    3368:	82 e1       	ldi	r24, 0x12	; 18
    336a:	94 e0       	ldi	r25, 0x04	; 4
    336c:	0e 94 c4 21 	call	0x4388	; 0x4388 <_ZN7TwoWire15endTransmissionEv>

    return value;
    3370:	89 81       	ldd	r24, Y+1	; 0x01
}
    3372:	0f 90       	pop	r0
    3374:	0f 90       	pop	r0
    3376:	0f 90       	pop	r0
    3378:	0f 90       	pop	r0
    337a:	df 91       	pop	r29
    337c:	cf 91       	pop	r28
    337e:	08 95       	ret

00003380 <twi_init>:
  bool flag = twi_timed_out_flag;
  if (clear_flag){
    twi_timed_out_flag = false;
  }
  return(flag);
}
    3380:	cf 93       	push	r28
    3382:	df 93       	push	r29
    3384:	cd b7       	in	r28, 0x3d	; 61
    3386:	de b7       	in	r29, 0x3e	; 62
    3388:	10 92 54 03 	sts	0x0354, r1	; 0x800354 <twi_state>
    338c:	81 e0       	ldi	r24, 0x01	; 1
    338e:	80 93 56 03 	sts	0x0356, r24	; 0x800356 <twi_sendStop>
    3392:	10 92 57 03 	sts	0x0357, r1	; 0x800357 <twi_inRepStart>
    3396:	84 e1       	ldi	r24, 0x14	; 20
    3398:	61 e0       	ldi	r22, 0x01	; 1
    339a:	0e 94 ea 4b 	call	0x97d4	; 0x97d4 <digitalWrite>
    339e:	85 e1       	ldi	r24, 0x15	; 21
    33a0:	61 e0       	ldi	r22, 0x01	; 1
    33a2:	0e 94 ea 4b 	call	0x97d4	; 0x97d4 <digitalWrite>
    33a6:	89 eb       	ldi	r24, 0xB9	; 185
    33a8:	90 e0       	ldi	r25, 0x00	; 0
    33aa:	29 eb       	ldi	r18, 0xB9	; 185
    33ac:	30 e0       	ldi	r19, 0x00	; 0
    33ae:	f9 01       	movw	r30, r18
    33b0:	20 81       	ld	r18, Z
    33b2:	2e 7f       	andi	r18, 0xFE	; 254
    33b4:	fc 01       	movw	r30, r24
    33b6:	20 83       	st	Z, r18
    33b8:	89 eb       	ldi	r24, 0xB9	; 185
    33ba:	90 e0       	ldi	r25, 0x00	; 0
    33bc:	29 eb       	ldi	r18, 0xB9	; 185
    33be:	30 e0       	ldi	r19, 0x00	; 0
    33c0:	f9 01       	movw	r30, r18
    33c2:	20 81       	ld	r18, Z
    33c4:	2d 7f       	andi	r18, 0xFD	; 253
    33c6:	fc 01       	movw	r30, r24
    33c8:	20 83       	st	Z, r18
    33ca:	88 eb       	ldi	r24, 0xB8	; 184
    33cc:	90 e0       	ldi	r25, 0x00	; 0
    33ce:	28 e4       	ldi	r18, 0x48	; 72
    33d0:	fc 01       	movw	r30, r24
    33d2:	20 83       	st	Z, r18
    33d4:	8c eb       	ldi	r24, 0xBC	; 188
    33d6:	90 e0       	ldi	r25, 0x00	; 0
    33d8:	25 e4       	ldi	r18, 0x45	; 69
    33da:	fc 01       	movw	r30, r24
    33dc:	20 83       	st	Z, r18
    33de:	00 00       	nop
    33e0:	df 91       	pop	r29
    33e2:	cf 91       	pop	r28
    33e4:	08 95       	ret

000033e6 <twi_disable>:
    33e6:	cf 93       	push	r28
    33e8:	df 93       	push	r29
    33ea:	cd b7       	in	r28, 0x3d	; 61
    33ec:	de b7       	in	r29, 0x3e	; 62
    33ee:	8c eb       	ldi	r24, 0xBC	; 188
    33f0:	90 e0       	ldi	r25, 0x00	; 0
    33f2:	2c eb       	ldi	r18, 0xBC	; 188
    33f4:	30 e0       	ldi	r19, 0x00	; 0
    33f6:	f9 01       	movw	r30, r18
    33f8:	20 81       	ld	r18, Z
    33fa:	2a 7b       	andi	r18, 0xBA	; 186
    33fc:	fc 01       	movw	r30, r24
    33fe:	20 83       	st	Z, r18
    3400:	84 e1       	ldi	r24, 0x14	; 20
    3402:	60 e0       	ldi	r22, 0x00	; 0
    3404:	0e 94 ea 4b 	call	0x97d4	; 0x97d4 <digitalWrite>
    3408:	85 e1       	ldi	r24, 0x15	; 21
    340a:	60 e0       	ldi	r22, 0x00	; 0
    340c:	0e 94 ea 4b 	call	0x97d4	; 0x97d4 <digitalWrite>
    3410:	00 00       	nop
    3412:	df 91       	pop	r29
    3414:	cf 91       	pop	r28
    3416:	08 95       	ret

00003418 <twi_setFrequency>:
    3418:	0f 93       	push	r16
    341a:	1f 93       	push	r17
    341c:	cf 93       	push	r28
    341e:	df 93       	push	r29
    3420:	00 d0       	rcall	.+0      	; 0x3422 <twi_setFrequency+0xa>
    3422:	1f 92       	push	r1
    3424:	cd b7       	in	r28, 0x3d	; 61
    3426:	de b7       	in	r29, 0x3e	; 62
    3428:	69 83       	std	Y+1, r22	; 0x01
    342a:	7a 83       	std	Y+2, r23	; 0x02
    342c:	8b 83       	std	Y+3, r24	; 0x03
    342e:	9c 83       	std	Y+4, r25	; 0x04
    3430:	08 eb       	ldi	r16, 0xB8	; 184
    3432:	10 e0       	ldi	r17, 0x00	; 0
    3434:	80 e0       	ldi	r24, 0x00	; 0
    3436:	94 e2       	ldi	r25, 0x24	; 36
    3438:	a4 ef       	ldi	r26, 0xF4	; 244
    343a:	b0 e0       	ldi	r27, 0x00	; 0
    343c:	29 81       	ldd	r18, Y+1	; 0x01
    343e:	3a 81       	ldd	r19, Y+2	; 0x02
    3440:	4b 81       	ldd	r20, Y+3	; 0x03
    3442:	5c 81       	ldd	r21, Y+4	; 0x04
    3444:	bc 01       	movw	r22, r24
    3446:	cd 01       	movw	r24, r26
    3448:	0e 94 77 4d 	call	0x9aee	; 0x9aee <__udivmodsi4>
    344c:	da 01       	movw	r26, r20
    344e:	c9 01       	movw	r24, r18
    3450:	40 97       	sbiw	r24, 0x10	; 16
    3452:	a1 09       	sbc	r26, r1
    3454:	b1 09       	sbc	r27, r1
    3456:	b6 95       	lsr	r27
    3458:	a7 95       	ror	r26
    345a:	97 95       	ror	r25
    345c:	87 95       	ror	r24
    345e:	f8 01       	movw	r30, r16
    3460:	80 83       	st	Z, r24
    3462:	00 00       	nop
    3464:	0f 90       	pop	r0
    3466:	0f 90       	pop	r0
    3468:	0f 90       	pop	r0
    346a:	0f 90       	pop	r0
    346c:	df 91       	pop	r29
    346e:	cf 91       	pop	r28
    3470:	1f 91       	pop	r17
    3472:	0f 91       	pop	r16
    3474:	08 95       	ret

00003476 <twi_readFrom>:
    3476:	cf 93       	push	r28
    3478:	df 93       	push	r29
    347a:	cd b7       	in	r28, 0x3d	; 61
    347c:	de b7       	in	r29, 0x3e	; 62
    347e:	2a 97       	sbiw	r28, 0x0a	; 10
    3480:	0f b6       	in	r0, 0x3f	; 63
    3482:	f8 94       	cli
    3484:	de bf       	out	0x3e, r29	; 62
    3486:	0f be       	out	0x3f, r0	; 63
    3488:	cd bf       	out	0x3d, r28	; 61
    348a:	8e 83       	std	Y+6, r24	; 0x06
    348c:	78 87       	std	Y+8, r23	; 0x08
    348e:	6f 83       	std	Y+7, r22	; 0x07
    3490:	49 87       	std	Y+9, r20	; 0x09
    3492:	2a 87       	std	Y+10, r18	; 0x0a
    3494:	89 85       	ldd	r24, Y+9	; 0x09
    3496:	81 32       	cpi	r24, 0x21	; 33
    3498:	10 f0       	brcs	.+4      	; 0x349e <twi_readFrom+0x28>
    349a:	80 e0       	ldi	r24, 0x00	; 0
    349c:	01 c1       	rjmp	.+514    	; 0x36a0 <twi_readFrom+0x22a>
    349e:	0e 94 8e 4a 	call	0x951c	; 0x951c <micros>
    34a2:	dc 01       	movw	r26, r24
    34a4:	cb 01       	movw	r24, r22
    34a6:	8a 83       	std	Y+2, r24	; 0x02
    34a8:	9b 83       	std	Y+3, r25	; 0x03
    34aa:	ac 83       	std	Y+4, r26	; 0x04
    34ac:	bd 83       	std	Y+5, r27	; 0x05
    34ae:	2a c0       	rjmp	.+84     	; 0x3504 <twi_readFrom+0x8e>
    34b0:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <twi_timeout_us>
    34b4:	90 91 59 03 	lds	r25, 0x0359	; 0x800359 <twi_timeout_us+0x1>
    34b8:	a0 91 5a 03 	lds	r26, 0x035A	; 0x80035a <twi_timeout_us+0x2>
    34bc:	b0 91 5b 03 	lds	r27, 0x035B	; 0x80035b <twi_timeout_us+0x3>
    34c0:	89 2b       	or	r24, r25
    34c2:	8a 2b       	or	r24, r26
    34c4:	8b 2b       	or	r24, r27
    34c6:	f1 f0       	breq	.+60     	; 0x3504 <twi_readFrom+0x8e>
    34c8:	0e 94 8e 4a 	call	0x951c	; 0x951c <micros>
    34cc:	9b 01       	movw	r18, r22
    34ce:	ac 01       	movw	r20, r24
    34d0:	8a 81       	ldd	r24, Y+2	; 0x02
    34d2:	9b 81       	ldd	r25, Y+3	; 0x03
    34d4:	ac 81       	ldd	r26, Y+4	; 0x04
    34d6:	bd 81       	ldd	r27, Y+5	; 0x05
    34d8:	28 1b       	sub	r18, r24
    34da:	39 0b       	sbc	r19, r25
    34dc:	4a 0b       	sbc	r20, r26
    34de:	5b 0b       	sbc	r21, r27
    34e0:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <twi_timeout_us>
    34e4:	90 91 59 03 	lds	r25, 0x0359	; 0x800359 <twi_timeout_us+0x1>
    34e8:	a0 91 5a 03 	lds	r26, 0x035A	; 0x80035a <twi_timeout_us+0x2>
    34ec:	b0 91 5b 03 	lds	r27, 0x035B	; 0x80035b <twi_timeout_us+0x3>
    34f0:	82 17       	cp	r24, r18
    34f2:	93 07       	cpc	r25, r19
    34f4:	a4 07       	cpc	r26, r20
    34f6:	b5 07       	cpc	r27, r21
    34f8:	28 f4       	brcc	.+10     	; 0x3504 <twi_readFrom+0x8e>
    34fa:	80 91 5d 03 	lds	r24, 0x035D	; 0x80035d <twi_do_reset_on_timeout>
    34fe:	fe d3       	rcall	.+2044   	; 0x3cfc <twi_handleTimeout>
    3500:	80 e0       	ldi	r24, 0x00	; 0
    3502:	ce c0       	rjmp	.+412    	; 0x36a0 <twi_readFrom+0x22a>
    3504:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <twi_state>
    3508:	88 23       	and	r24, r24
    350a:	91 f6       	brne	.-92     	; 0x34b0 <twi_readFrom+0x3a>
    350c:	81 e0       	ldi	r24, 0x01	; 1
    350e:	80 93 54 03 	sts	0x0354, r24	; 0x800354 <twi_state>
    3512:	8a 85       	ldd	r24, Y+10	; 0x0a
    3514:	80 93 56 03 	sts	0x0356, r24	; 0x800356 <twi_sendStop>
    3518:	8f ef       	ldi	r24, 0xFF	; 255
    351a:	80 93 c7 03 	sts	0x03C7, r24	; 0x8003c7 <twi_error>
    351e:	10 92 82 03 	sts	0x0382, r1	; 0x800382 <twi_masterBufferIndex>
    3522:	89 85       	ldd	r24, Y+9	; 0x09
    3524:	81 50       	subi	r24, 0x01	; 1
    3526:	80 93 83 03 	sts	0x0383, r24	; 0x800383 <twi_masterBufferLength>
    352a:	81 e0       	ldi	r24, 0x01	; 1
    352c:	80 93 55 03 	sts	0x0355, r24	; 0x800355 <twi_slarw>
    3530:	8e 81       	ldd	r24, Y+6	; 0x06
    3532:	88 2f       	mov	r24, r24
    3534:	90 e0       	ldi	r25, 0x00	; 0
    3536:	88 0f       	add	r24, r24
    3538:	99 1f       	adc	r25, r25
    353a:	98 2f       	mov	r25, r24
    353c:	80 91 55 03 	lds	r24, 0x0355	; 0x800355 <twi_slarw>
    3540:	89 2b       	or	r24, r25
    3542:	80 93 55 03 	sts	0x0355, r24	; 0x800355 <twi_slarw>
    3546:	80 91 57 03 	lds	r24, 0x0357	; 0x800357 <twi_inRepStart>
    354a:	81 30       	cpi	r24, 0x01	; 1
    354c:	09 f0       	breq	.+2      	; 0x3550 <twi_readFrom+0xda>
    354e:	4a c0       	rjmp	.+148    	; 0x35e4 <twi_readFrom+0x16e>
    3550:	10 92 57 03 	sts	0x0357, r1	; 0x800357 <twi_inRepStart>
    3554:	0e 94 8e 4a 	call	0x951c	; 0x951c <micros>
    3558:	dc 01       	movw	r26, r24
    355a:	cb 01       	movw	r24, r22
    355c:	8a 83       	std	Y+2, r24	; 0x02
    355e:	9b 83       	std	Y+3, r25	; 0x03
    3560:	ac 83       	std	Y+4, r26	; 0x04
    3562:	bd 83       	std	Y+5, r27	; 0x05
    3564:	8b eb       	ldi	r24, 0xBB	; 187
    3566:	90 e0       	ldi	r25, 0x00	; 0
    3568:	20 91 55 03 	lds	r18, 0x0355	; 0x800355 <twi_slarw>
    356c:	fc 01       	movw	r30, r24
    356e:	20 83       	st	Z, r18
    3570:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <twi_timeout_us>
    3574:	90 91 59 03 	lds	r25, 0x0359	; 0x800359 <twi_timeout_us+0x1>
    3578:	a0 91 5a 03 	lds	r26, 0x035A	; 0x80035a <twi_timeout_us+0x2>
    357c:	b0 91 5b 03 	lds	r27, 0x035B	; 0x80035b <twi_timeout_us+0x3>
    3580:	89 2b       	or	r24, r25
    3582:	8a 2b       	or	r24, r26
    3584:	8b 2b       	or	r24, r27
    3586:	f1 f0       	breq	.+60     	; 0x35c4 <twi_readFrom+0x14e>
    3588:	0e 94 8e 4a 	call	0x951c	; 0x951c <micros>
    358c:	9b 01       	movw	r18, r22
    358e:	ac 01       	movw	r20, r24
    3590:	8a 81       	ldd	r24, Y+2	; 0x02
    3592:	9b 81       	ldd	r25, Y+3	; 0x03
    3594:	ac 81       	ldd	r26, Y+4	; 0x04
    3596:	bd 81       	ldd	r27, Y+5	; 0x05
    3598:	28 1b       	sub	r18, r24
    359a:	39 0b       	sbc	r19, r25
    359c:	4a 0b       	sbc	r20, r26
    359e:	5b 0b       	sbc	r21, r27
    35a0:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <twi_timeout_us>
    35a4:	90 91 59 03 	lds	r25, 0x0359	; 0x800359 <twi_timeout_us+0x1>
    35a8:	a0 91 5a 03 	lds	r26, 0x035A	; 0x80035a <twi_timeout_us+0x2>
    35ac:	b0 91 5b 03 	lds	r27, 0x035B	; 0x80035b <twi_timeout_us+0x3>
    35b0:	82 17       	cp	r24, r18
    35b2:	93 07       	cpc	r25, r19
    35b4:	a4 07       	cpc	r26, r20
    35b6:	b5 07       	cpc	r27, r21
    35b8:	28 f4       	brcc	.+10     	; 0x35c4 <twi_readFrom+0x14e>
    35ba:	80 91 5d 03 	lds	r24, 0x035D	; 0x80035d <twi_do_reset_on_timeout>
    35be:	9e d3       	rcall	.+1852   	; 0x3cfc <twi_handleTimeout>
    35c0:	80 e0       	ldi	r24, 0x00	; 0
    35c2:	6e c0       	rjmp	.+220    	; 0x36a0 <twi_readFrom+0x22a>
    35c4:	8c eb       	ldi	r24, 0xBC	; 188
    35c6:	90 e0       	ldi	r25, 0x00	; 0
    35c8:	fc 01       	movw	r30, r24
    35ca:	80 81       	ld	r24, Z
    35cc:	88 2f       	mov	r24, r24
    35ce:	90 e0       	ldi	r25, 0x00	; 0
    35d0:	88 70       	andi	r24, 0x08	; 8
    35d2:	99 27       	eor	r25, r25
    35d4:	89 2b       	or	r24, r25
    35d6:	31 f6       	brne	.-116    	; 0x3564 <twi_readFrom+0xee>
    35d8:	8c eb       	ldi	r24, 0xBC	; 188
    35da:	90 e0       	ldi	r25, 0x00	; 0
    35dc:	25 ec       	ldi	r18, 0xC5	; 197
    35de:	fc 01       	movw	r30, r24
    35e0:	20 83       	st	Z, r18
    35e2:	05 c0       	rjmp	.+10     	; 0x35ee <twi_readFrom+0x178>
    35e4:	8c eb       	ldi	r24, 0xBC	; 188
    35e6:	90 e0       	ldi	r25, 0x00	; 0
    35e8:	25 ee       	ldi	r18, 0xE5	; 229
    35ea:	fc 01       	movw	r30, r24
    35ec:	20 83       	st	Z, r18
    35ee:	0e 94 8e 4a 	call	0x951c	; 0x951c <micros>
    35f2:	dc 01       	movw	r26, r24
    35f4:	cb 01       	movw	r24, r22
    35f6:	8a 83       	std	Y+2, r24	; 0x02
    35f8:	9b 83       	std	Y+3, r25	; 0x03
    35fa:	ac 83       	std	Y+4, r26	; 0x04
    35fc:	bd 83       	std	Y+5, r27	; 0x05
    35fe:	2a c0       	rjmp	.+84     	; 0x3654 <twi_readFrom+0x1de>
    3600:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <twi_timeout_us>
    3604:	90 91 59 03 	lds	r25, 0x0359	; 0x800359 <twi_timeout_us+0x1>
    3608:	a0 91 5a 03 	lds	r26, 0x035A	; 0x80035a <twi_timeout_us+0x2>
    360c:	b0 91 5b 03 	lds	r27, 0x035B	; 0x80035b <twi_timeout_us+0x3>
    3610:	89 2b       	or	r24, r25
    3612:	8a 2b       	or	r24, r26
    3614:	8b 2b       	or	r24, r27
    3616:	f1 f0       	breq	.+60     	; 0x3654 <twi_readFrom+0x1de>
    3618:	0e 94 8e 4a 	call	0x951c	; 0x951c <micros>
    361c:	9b 01       	movw	r18, r22
    361e:	ac 01       	movw	r20, r24
    3620:	8a 81       	ldd	r24, Y+2	; 0x02
    3622:	9b 81       	ldd	r25, Y+3	; 0x03
    3624:	ac 81       	ldd	r26, Y+4	; 0x04
    3626:	bd 81       	ldd	r27, Y+5	; 0x05
    3628:	28 1b       	sub	r18, r24
    362a:	39 0b       	sbc	r19, r25
    362c:	4a 0b       	sbc	r20, r26
    362e:	5b 0b       	sbc	r21, r27
    3630:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <twi_timeout_us>
    3634:	90 91 59 03 	lds	r25, 0x0359	; 0x800359 <twi_timeout_us+0x1>
    3638:	a0 91 5a 03 	lds	r26, 0x035A	; 0x80035a <twi_timeout_us+0x2>
    363c:	b0 91 5b 03 	lds	r27, 0x035B	; 0x80035b <twi_timeout_us+0x3>
    3640:	82 17       	cp	r24, r18
    3642:	93 07       	cpc	r25, r19
    3644:	a4 07       	cpc	r26, r20
    3646:	b5 07       	cpc	r27, r21
    3648:	28 f4       	brcc	.+10     	; 0x3654 <twi_readFrom+0x1de>
    364a:	80 91 5d 03 	lds	r24, 0x035D	; 0x80035d <twi_do_reset_on_timeout>
    364e:	56 d3       	rcall	.+1708   	; 0x3cfc <twi_handleTimeout>
    3650:	80 e0       	ldi	r24, 0x00	; 0
    3652:	26 c0       	rjmp	.+76     	; 0x36a0 <twi_readFrom+0x22a>
    3654:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <twi_state>
    3658:	81 30       	cpi	r24, 0x01	; 1
    365a:	91 f2       	breq	.-92     	; 0x3600 <twi_readFrom+0x18a>
    365c:	90 91 82 03 	lds	r25, 0x0382	; 0x800382 <twi_masterBufferIndex>
    3660:	89 85       	ldd	r24, Y+9	; 0x09
    3662:	98 17       	cp	r25, r24
    3664:	18 f4       	brcc	.+6      	; 0x366c <twi_readFrom+0x1f6>
    3666:	80 91 82 03 	lds	r24, 0x0382	; 0x800382 <twi_masterBufferIndex>
    366a:	89 87       	std	Y+9, r24	; 0x09
    366c:	19 82       	std	Y+1, r1	; 0x01
    366e:	13 c0       	rjmp	.+38     	; 0x3696 <twi_readFrom+0x220>
    3670:	89 81       	ldd	r24, Y+1	; 0x01
    3672:	88 2f       	mov	r24, r24
    3674:	90 e0       	ldi	r25, 0x00	; 0
    3676:	2f 81       	ldd	r18, Y+7	; 0x07
    3678:	38 85       	ldd	r19, Y+8	; 0x08
    367a:	82 0f       	add	r24, r18
    367c:	93 1f       	adc	r25, r19
    367e:	29 81       	ldd	r18, Y+1	; 0x01
    3680:	22 2f       	mov	r18, r18
    3682:	30 e0       	ldi	r19, 0x00	; 0
    3684:	2e 59       	subi	r18, 0x9E	; 158
    3686:	3c 4f       	sbci	r19, 0xFC	; 252
    3688:	f9 01       	movw	r30, r18
    368a:	20 81       	ld	r18, Z
    368c:	fc 01       	movw	r30, r24
    368e:	20 83       	st	Z, r18
    3690:	89 81       	ldd	r24, Y+1	; 0x01
    3692:	8f 5f       	subi	r24, 0xFF	; 255
    3694:	89 83       	std	Y+1, r24	; 0x01
    3696:	99 81       	ldd	r25, Y+1	; 0x01
    3698:	89 85       	ldd	r24, Y+9	; 0x09
    369a:	98 17       	cp	r25, r24
    369c:	48 f3       	brcs	.-46     	; 0x3670 <twi_readFrom+0x1fa>
    369e:	89 85       	ldd	r24, Y+9	; 0x09
    36a0:	2a 96       	adiw	r28, 0x0a	; 10
    36a2:	0f b6       	in	r0, 0x3f	; 63
    36a4:	f8 94       	cli
    36a6:	de bf       	out	0x3e, r29	; 62
    36a8:	0f be       	out	0x3f, r0	; 63
    36aa:	cd bf       	out	0x3d, r28	; 61
    36ac:	df 91       	pop	r29
    36ae:	cf 91       	pop	r28
    36b0:	08 95       	ret

000036b2 <twi_writeTo>:
    36b2:	0f 93       	push	r16
    36b4:	cf 93       	push	r28
    36b6:	df 93       	push	r29
    36b8:	cd b7       	in	r28, 0x3d	; 61
    36ba:	de b7       	in	r29, 0x3e	; 62
    36bc:	2b 97       	sbiw	r28, 0x0b	; 11
    36be:	0f b6       	in	r0, 0x3f	; 63
    36c0:	f8 94       	cli
    36c2:	de bf       	out	0x3e, r29	; 62
    36c4:	0f be       	out	0x3f, r0	; 63
    36c6:	cd bf       	out	0x3d, r28	; 61
    36c8:	8e 83       	std	Y+6, r24	; 0x06
    36ca:	78 87       	std	Y+8, r23	; 0x08
    36cc:	6f 83       	std	Y+7, r22	; 0x07
    36ce:	49 87       	std	Y+9, r20	; 0x09
    36d0:	2a 87       	std	Y+10, r18	; 0x0a
    36d2:	0b 87       	std	Y+11, r16	; 0x0b
    36d4:	89 85       	ldd	r24, Y+9	; 0x09
    36d6:	81 32       	cpi	r24, 0x21	; 33
    36d8:	10 f0       	brcs	.+4      	; 0x36de <twi_writeTo+0x2c>
    36da:	81 e0       	ldi	r24, 0x01	; 1
    36dc:	0c c1       	rjmp	.+536    	; 0x38f6 <twi_writeTo+0x244>
    36de:	0e 94 8e 4a 	call	0x951c	; 0x951c <micros>
    36e2:	dc 01       	movw	r26, r24
    36e4:	cb 01       	movw	r24, r22
    36e6:	8a 83       	std	Y+2, r24	; 0x02
    36e8:	9b 83       	std	Y+3, r25	; 0x03
    36ea:	ac 83       	std	Y+4, r26	; 0x04
    36ec:	bd 83       	std	Y+5, r27	; 0x05
    36ee:	2a c0       	rjmp	.+84     	; 0x3744 <twi_writeTo+0x92>
    36f0:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <twi_timeout_us>
    36f4:	90 91 59 03 	lds	r25, 0x0359	; 0x800359 <twi_timeout_us+0x1>
    36f8:	a0 91 5a 03 	lds	r26, 0x035A	; 0x80035a <twi_timeout_us+0x2>
    36fc:	b0 91 5b 03 	lds	r27, 0x035B	; 0x80035b <twi_timeout_us+0x3>
    3700:	89 2b       	or	r24, r25
    3702:	8a 2b       	or	r24, r26
    3704:	8b 2b       	or	r24, r27
    3706:	f1 f0       	breq	.+60     	; 0x3744 <twi_writeTo+0x92>
    3708:	0e 94 8e 4a 	call	0x951c	; 0x951c <micros>
    370c:	9b 01       	movw	r18, r22
    370e:	ac 01       	movw	r20, r24
    3710:	8a 81       	ldd	r24, Y+2	; 0x02
    3712:	9b 81       	ldd	r25, Y+3	; 0x03
    3714:	ac 81       	ldd	r26, Y+4	; 0x04
    3716:	bd 81       	ldd	r27, Y+5	; 0x05
    3718:	28 1b       	sub	r18, r24
    371a:	39 0b       	sbc	r19, r25
    371c:	4a 0b       	sbc	r20, r26
    371e:	5b 0b       	sbc	r21, r27
    3720:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <twi_timeout_us>
    3724:	90 91 59 03 	lds	r25, 0x0359	; 0x800359 <twi_timeout_us+0x1>
    3728:	a0 91 5a 03 	lds	r26, 0x035A	; 0x80035a <twi_timeout_us+0x2>
    372c:	b0 91 5b 03 	lds	r27, 0x035B	; 0x80035b <twi_timeout_us+0x3>
    3730:	82 17       	cp	r24, r18
    3732:	93 07       	cpc	r25, r19
    3734:	a4 07       	cpc	r26, r20
    3736:	b5 07       	cpc	r27, r21
    3738:	28 f4       	brcc	.+10     	; 0x3744 <twi_writeTo+0x92>
    373a:	80 91 5d 03 	lds	r24, 0x035D	; 0x80035d <twi_do_reset_on_timeout>
    373e:	de d2       	rcall	.+1468   	; 0x3cfc <twi_handleTimeout>
    3740:	85 e0       	ldi	r24, 0x05	; 5
    3742:	d9 c0       	rjmp	.+434    	; 0x38f6 <twi_writeTo+0x244>
    3744:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <twi_state>
    3748:	88 23       	and	r24, r24
    374a:	91 f6       	brne	.-92     	; 0x36f0 <twi_writeTo+0x3e>
    374c:	82 e0       	ldi	r24, 0x02	; 2
    374e:	80 93 54 03 	sts	0x0354, r24	; 0x800354 <twi_state>
    3752:	8b 85       	ldd	r24, Y+11	; 0x0b
    3754:	80 93 56 03 	sts	0x0356, r24	; 0x800356 <twi_sendStop>
    3758:	8f ef       	ldi	r24, 0xFF	; 255
    375a:	80 93 c7 03 	sts	0x03C7, r24	; 0x8003c7 <twi_error>
    375e:	10 92 82 03 	sts	0x0382, r1	; 0x800382 <twi_masterBufferIndex>
    3762:	89 85       	ldd	r24, Y+9	; 0x09
    3764:	80 93 83 03 	sts	0x0383, r24	; 0x800383 <twi_masterBufferLength>
    3768:	19 82       	std	Y+1, r1	; 0x01
    376a:	13 c0       	rjmp	.+38     	; 0x3792 <twi_writeTo+0xe0>
    376c:	89 81       	ldd	r24, Y+1	; 0x01
    376e:	88 2f       	mov	r24, r24
    3770:	90 e0       	ldi	r25, 0x00	; 0
    3772:	29 81       	ldd	r18, Y+1	; 0x01
    3774:	22 2f       	mov	r18, r18
    3776:	30 e0       	ldi	r19, 0x00	; 0
    3778:	4f 81       	ldd	r20, Y+7	; 0x07
    377a:	58 85       	ldd	r21, Y+8	; 0x08
    377c:	24 0f       	add	r18, r20
    377e:	35 1f       	adc	r19, r21
    3780:	f9 01       	movw	r30, r18
    3782:	20 81       	ld	r18, Z
    3784:	8e 59       	subi	r24, 0x9E	; 158
    3786:	9c 4f       	sbci	r25, 0xFC	; 252
    3788:	fc 01       	movw	r30, r24
    378a:	20 83       	st	Z, r18
    378c:	89 81       	ldd	r24, Y+1	; 0x01
    378e:	8f 5f       	subi	r24, 0xFF	; 255
    3790:	89 83       	std	Y+1, r24	; 0x01
    3792:	99 81       	ldd	r25, Y+1	; 0x01
    3794:	89 85       	ldd	r24, Y+9	; 0x09
    3796:	98 17       	cp	r25, r24
    3798:	48 f3       	brcs	.-46     	; 0x376c <twi_writeTo+0xba>
    379a:	10 92 55 03 	sts	0x0355, r1	; 0x800355 <twi_slarw>
    379e:	8e 81       	ldd	r24, Y+6	; 0x06
    37a0:	88 2f       	mov	r24, r24
    37a2:	90 e0       	ldi	r25, 0x00	; 0
    37a4:	88 0f       	add	r24, r24
    37a6:	99 1f       	adc	r25, r25
    37a8:	98 2f       	mov	r25, r24
    37aa:	80 91 55 03 	lds	r24, 0x0355	; 0x800355 <twi_slarw>
    37ae:	89 2b       	or	r24, r25
    37b0:	80 93 55 03 	sts	0x0355, r24	; 0x800355 <twi_slarw>
    37b4:	80 91 57 03 	lds	r24, 0x0357	; 0x800357 <twi_inRepStart>
    37b8:	81 30       	cpi	r24, 0x01	; 1
    37ba:	09 f0       	breq	.+2      	; 0x37be <twi_writeTo+0x10c>
    37bc:	4a c0       	rjmp	.+148    	; 0x3852 <twi_writeTo+0x1a0>
    37be:	10 92 57 03 	sts	0x0357, r1	; 0x800357 <twi_inRepStart>
    37c2:	0e 94 8e 4a 	call	0x951c	; 0x951c <micros>
    37c6:	dc 01       	movw	r26, r24
    37c8:	cb 01       	movw	r24, r22
    37ca:	8a 83       	std	Y+2, r24	; 0x02
    37cc:	9b 83       	std	Y+3, r25	; 0x03
    37ce:	ac 83       	std	Y+4, r26	; 0x04
    37d0:	bd 83       	std	Y+5, r27	; 0x05
    37d2:	8b eb       	ldi	r24, 0xBB	; 187
    37d4:	90 e0       	ldi	r25, 0x00	; 0
    37d6:	20 91 55 03 	lds	r18, 0x0355	; 0x800355 <twi_slarw>
    37da:	fc 01       	movw	r30, r24
    37dc:	20 83       	st	Z, r18
    37de:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <twi_timeout_us>
    37e2:	90 91 59 03 	lds	r25, 0x0359	; 0x800359 <twi_timeout_us+0x1>
    37e6:	a0 91 5a 03 	lds	r26, 0x035A	; 0x80035a <twi_timeout_us+0x2>
    37ea:	b0 91 5b 03 	lds	r27, 0x035B	; 0x80035b <twi_timeout_us+0x3>
    37ee:	89 2b       	or	r24, r25
    37f0:	8a 2b       	or	r24, r26
    37f2:	8b 2b       	or	r24, r27
    37f4:	f1 f0       	breq	.+60     	; 0x3832 <twi_writeTo+0x180>
    37f6:	0e 94 8e 4a 	call	0x951c	; 0x951c <micros>
    37fa:	9b 01       	movw	r18, r22
    37fc:	ac 01       	movw	r20, r24
    37fe:	8a 81       	ldd	r24, Y+2	; 0x02
    3800:	9b 81       	ldd	r25, Y+3	; 0x03
    3802:	ac 81       	ldd	r26, Y+4	; 0x04
    3804:	bd 81       	ldd	r27, Y+5	; 0x05
    3806:	28 1b       	sub	r18, r24
    3808:	39 0b       	sbc	r19, r25
    380a:	4a 0b       	sbc	r20, r26
    380c:	5b 0b       	sbc	r21, r27
    380e:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <twi_timeout_us>
    3812:	90 91 59 03 	lds	r25, 0x0359	; 0x800359 <twi_timeout_us+0x1>
    3816:	a0 91 5a 03 	lds	r26, 0x035A	; 0x80035a <twi_timeout_us+0x2>
    381a:	b0 91 5b 03 	lds	r27, 0x035B	; 0x80035b <twi_timeout_us+0x3>
    381e:	82 17       	cp	r24, r18
    3820:	93 07       	cpc	r25, r19
    3822:	a4 07       	cpc	r26, r20
    3824:	b5 07       	cpc	r27, r21
    3826:	28 f4       	brcc	.+10     	; 0x3832 <twi_writeTo+0x180>
    3828:	80 91 5d 03 	lds	r24, 0x035D	; 0x80035d <twi_do_reset_on_timeout>
    382c:	67 d2       	rcall	.+1230   	; 0x3cfc <twi_handleTimeout>
    382e:	85 e0       	ldi	r24, 0x05	; 5
    3830:	62 c0       	rjmp	.+196    	; 0x38f6 <twi_writeTo+0x244>
    3832:	8c eb       	ldi	r24, 0xBC	; 188
    3834:	90 e0       	ldi	r25, 0x00	; 0
    3836:	fc 01       	movw	r30, r24
    3838:	80 81       	ld	r24, Z
    383a:	88 2f       	mov	r24, r24
    383c:	90 e0       	ldi	r25, 0x00	; 0
    383e:	88 70       	andi	r24, 0x08	; 8
    3840:	99 27       	eor	r25, r25
    3842:	89 2b       	or	r24, r25
    3844:	31 f6       	brne	.-116    	; 0x37d2 <twi_writeTo+0x120>
    3846:	8c eb       	ldi	r24, 0xBC	; 188
    3848:	90 e0       	ldi	r25, 0x00	; 0
    384a:	25 ec       	ldi	r18, 0xC5	; 197
    384c:	fc 01       	movw	r30, r24
    384e:	20 83       	st	Z, r18
    3850:	05 c0       	rjmp	.+10     	; 0x385c <twi_writeTo+0x1aa>
    3852:	8c eb       	ldi	r24, 0xBC	; 188
    3854:	90 e0       	ldi	r25, 0x00	; 0
    3856:	25 ee       	ldi	r18, 0xE5	; 229
    3858:	fc 01       	movw	r30, r24
    385a:	20 83       	st	Z, r18
    385c:	0e 94 8e 4a 	call	0x951c	; 0x951c <micros>
    3860:	dc 01       	movw	r26, r24
    3862:	cb 01       	movw	r24, r22
    3864:	8a 83       	std	Y+2, r24	; 0x02
    3866:	9b 83       	std	Y+3, r25	; 0x03
    3868:	ac 83       	std	Y+4, r26	; 0x04
    386a:	bd 83       	std	Y+5, r27	; 0x05
    386c:	2a c0       	rjmp	.+84     	; 0x38c2 <twi_writeTo+0x210>
    386e:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <twi_timeout_us>
    3872:	90 91 59 03 	lds	r25, 0x0359	; 0x800359 <twi_timeout_us+0x1>
    3876:	a0 91 5a 03 	lds	r26, 0x035A	; 0x80035a <twi_timeout_us+0x2>
    387a:	b0 91 5b 03 	lds	r27, 0x035B	; 0x80035b <twi_timeout_us+0x3>
    387e:	89 2b       	or	r24, r25
    3880:	8a 2b       	or	r24, r26
    3882:	8b 2b       	or	r24, r27
    3884:	f1 f0       	breq	.+60     	; 0x38c2 <twi_writeTo+0x210>
    3886:	0e 94 8e 4a 	call	0x951c	; 0x951c <micros>
    388a:	9b 01       	movw	r18, r22
    388c:	ac 01       	movw	r20, r24
    388e:	8a 81       	ldd	r24, Y+2	; 0x02
    3890:	9b 81       	ldd	r25, Y+3	; 0x03
    3892:	ac 81       	ldd	r26, Y+4	; 0x04
    3894:	bd 81       	ldd	r27, Y+5	; 0x05
    3896:	28 1b       	sub	r18, r24
    3898:	39 0b       	sbc	r19, r25
    389a:	4a 0b       	sbc	r20, r26
    389c:	5b 0b       	sbc	r21, r27
    389e:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <twi_timeout_us>
    38a2:	90 91 59 03 	lds	r25, 0x0359	; 0x800359 <twi_timeout_us+0x1>
    38a6:	a0 91 5a 03 	lds	r26, 0x035A	; 0x80035a <twi_timeout_us+0x2>
    38aa:	b0 91 5b 03 	lds	r27, 0x035B	; 0x80035b <twi_timeout_us+0x3>
    38ae:	82 17       	cp	r24, r18
    38b0:	93 07       	cpc	r25, r19
    38b2:	a4 07       	cpc	r26, r20
    38b4:	b5 07       	cpc	r27, r21
    38b6:	28 f4       	brcc	.+10     	; 0x38c2 <twi_writeTo+0x210>
    38b8:	80 91 5d 03 	lds	r24, 0x035D	; 0x80035d <twi_do_reset_on_timeout>
    38bc:	1f d2       	rcall	.+1086   	; 0x3cfc <twi_handleTimeout>
    38be:	85 e0       	ldi	r24, 0x05	; 5
    38c0:	1a c0       	rjmp	.+52     	; 0x38f6 <twi_writeTo+0x244>
    38c2:	8a 85       	ldd	r24, Y+10	; 0x0a
    38c4:	88 23       	and	r24, r24
    38c6:	21 f0       	breq	.+8      	; 0x38d0 <twi_writeTo+0x21e>
    38c8:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <twi_state>
    38cc:	82 30       	cpi	r24, 0x02	; 2
    38ce:	79 f2       	breq	.-98     	; 0x386e <twi_writeTo+0x1bc>
    38d0:	80 91 c7 03 	lds	r24, 0x03C7	; 0x8003c7 <twi_error>
    38d4:	8f 3f       	cpi	r24, 0xFF	; 255
    38d6:	11 f4       	brne	.+4      	; 0x38dc <twi_writeTo+0x22a>
    38d8:	80 e0       	ldi	r24, 0x00	; 0
    38da:	0d c0       	rjmp	.+26     	; 0x38f6 <twi_writeTo+0x244>
    38dc:	80 91 c7 03 	lds	r24, 0x03C7	; 0x8003c7 <twi_error>
    38e0:	80 32       	cpi	r24, 0x20	; 32
    38e2:	11 f4       	brne	.+4      	; 0x38e8 <twi_writeTo+0x236>
    38e4:	82 e0       	ldi	r24, 0x02	; 2
    38e6:	07 c0       	rjmp	.+14     	; 0x38f6 <twi_writeTo+0x244>
    38e8:	80 91 c7 03 	lds	r24, 0x03C7	; 0x8003c7 <twi_error>
    38ec:	80 33       	cpi	r24, 0x30	; 48
    38ee:	11 f4       	brne	.+4      	; 0x38f4 <twi_writeTo+0x242>
    38f0:	83 e0       	ldi	r24, 0x03	; 3
    38f2:	01 c0       	rjmp	.+2      	; 0x38f6 <twi_writeTo+0x244>
    38f4:	84 e0       	ldi	r24, 0x04	; 4
    38f6:	2b 96       	adiw	r28, 0x0b	; 11
    38f8:	0f b6       	in	r0, 0x3f	; 63
    38fa:	f8 94       	cli
    38fc:	de bf       	out	0x3e, r29	; 62
    38fe:	0f be       	out	0x3f, r0	; 63
    3900:	cd bf       	out	0x3d, r28	; 61
    3902:	df 91       	pop	r29
    3904:	cf 91       	pop	r28
    3906:	0f 91       	pop	r16
    3908:	08 95       	ret

0000390a <twi_transmit>:
    390a:	cf 93       	push	r28
    390c:	df 93       	push	r29
    390e:	00 d0       	rcall	.+0      	; 0x3910 <twi_transmit+0x6>
    3910:	1f 92       	push	r1
    3912:	cd b7       	in	r28, 0x3d	; 61
    3914:	de b7       	in	r29, 0x3e	; 62
    3916:	9b 83       	std	Y+3, r25	; 0x03
    3918:	8a 83       	std	Y+2, r24	; 0x02
    391a:	6c 83       	std	Y+4, r22	; 0x04
    391c:	80 91 a5 03 	lds	r24, 0x03A5	; 0x8003a5 <twi_txBufferLength>
    3920:	28 2f       	mov	r18, r24
    3922:	30 e0       	ldi	r19, 0x00	; 0
    3924:	8c 81       	ldd	r24, Y+4	; 0x04
    3926:	88 2f       	mov	r24, r24
    3928:	90 e0       	ldi	r25, 0x00	; 0
    392a:	82 0f       	add	r24, r18
    392c:	93 1f       	adc	r25, r19
    392e:	81 97       	sbiw	r24, 0x21	; 33
    3930:	14 f0       	brlt	.+4      	; 0x3936 <twi_transmit+0x2c>
    3932:	81 e0       	ldi	r24, 0x01	; 1
    3934:	2c c0       	rjmp	.+88     	; 0x398e <twi_transmit+0x84>
    3936:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <twi_state>
    393a:	84 30       	cpi	r24, 0x04	; 4
    393c:	11 f0       	breq	.+4      	; 0x3942 <twi_transmit+0x38>
    393e:	82 e0       	ldi	r24, 0x02	; 2
    3940:	26 c0       	rjmp	.+76     	; 0x398e <twi_transmit+0x84>
    3942:	19 82       	std	Y+1, r1	; 0x01
    3944:	19 c0       	rjmp	.+50     	; 0x3978 <twi_transmit+0x6e>
    3946:	80 91 a5 03 	lds	r24, 0x03A5	; 0x8003a5 <twi_txBufferLength>
    394a:	28 2f       	mov	r18, r24
    394c:	30 e0       	ldi	r19, 0x00	; 0
    394e:	89 81       	ldd	r24, Y+1	; 0x01
    3950:	88 2f       	mov	r24, r24
    3952:	90 e0       	ldi	r25, 0x00	; 0
    3954:	82 0f       	add	r24, r18
    3956:	93 1f       	adc	r25, r19
    3958:	29 81       	ldd	r18, Y+1	; 0x01
    395a:	22 2f       	mov	r18, r18
    395c:	30 e0       	ldi	r19, 0x00	; 0
    395e:	4a 81       	ldd	r20, Y+2	; 0x02
    3960:	5b 81       	ldd	r21, Y+3	; 0x03
    3962:	24 0f       	add	r18, r20
    3964:	35 1f       	adc	r19, r21
    3966:	f9 01       	movw	r30, r18
    3968:	20 81       	ld	r18, Z
    396a:	8c 57       	subi	r24, 0x7C	; 124
    396c:	9c 4f       	sbci	r25, 0xFC	; 252
    396e:	fc 01       	movw	r30, r24
    3970:	20 83       	st	Z, r18
    3972:	89 81       	ldd	r24, Y+1	; 0x01
    3974:	8f 5f       	subi	r24, 0xFF	; 255
    3976:	89 83       	std	Y+1, r24	; 0x01
    3978:	99 81       	ldd	r25, Y+1	; 0x01
    397a:	8c 81       	ldd	r24, Y+4	; 0x04
    397c:	98 17       	cp	r25, r24
    397e:	18 f3       	brcs	.-58     	; 0x3946 <twi_transmit+0x3c>
    3980:	90 91 a5 03 	lds	r25, 0x03A5	; 0x8003a5 <twi_txBufferLength>
    3984:	8c 81       	ldd	r24, Y+4	; 0x04
    3986:	89 0f       	add	r24, r25
    3988:	80 93 a5 03 	sts	0x03A5, r24	; 0x8003a5 <twi_txBufferLength>
    398c:	80 e0       	ldi	r24, 0x00	; 0
    398e:	0f 90       	pop	r0
    3990:	0f 90       	pop	r0
    3992:	0f 90       	pop	r0
    3994:	0f 90       	pop	r0
    3996:	df 91       	pop	r29
    3998:	cf 91       	pop	r28
    399a:	08 95       	ret

0000399c <twi_attachSlaveRxEvent>:
    399c:	cf 93       	push	r28
    399e:	df 93       	push	r29
    39a0:	1f 92       	push	r1
    39a2:	1f 92       	push	r1
    39a4:	cd b7       	in	r28, 0x3d	; 61
    39a6:	de b7       	in	r29, 0x3e	; 62
    39a8:	9a 83       	std	Y+2, r25	; 0x02
    39aa:	89 83       	std	Y+1, r24	; 0x01
    39ac:	89 81       	ldd	r24, Y+1	; 0x01
    39ae:	9a 81       	ldd	r25, Y+2	; 0x02
    39b0:	90 93 61 03 	sts	0x0361, r25	; 0x800361 <twi_onSlaveReceive+0x1>
    39b4:	80 93 60 03 	sts	0x0360, r24	; 0x800360 <twi_onSlaveReceive>
    39b8:	00 00       	nop
    39ba:	0f 90       	pop	r0
    39bc:	0f 90       	pop	r0
    39be:	df 91       	pop	r29
    39c0:	cf 91       	pop	r28
    39c2:	08 95       	ret

000039c4 <twi_attachSlaveTxEvent>:
    39c4:	cf 93       	push	r28
    39c6:	df 93       	push	r29
    39c8:	1f 92       	push	r1
    39ca:	1f 92       	push	r1
    39cc:	cd b7       	in	r28, 0x3d	; 61
    39ce:	de b7       	in	r29, 0x3e	; 62
    39d0:	9a 83       	std	Y+2, r25	; 0x02
    39d2:	89 83       	std	Y+1, r24	; 0x01
    39d4:	89 81       	ldd	r24, Y+1	; 0x01
    39d6:	9a 81       	ldd	r25, Y+2	; 0x02
    39d8:	90 93 5f 03 	sts	0x035F, r25	; 0x80035f <twi_onSlaveTransmit+0x1>
    39dc:	80 93 5e 03 	sts	0x035E, r24	; 0x80035e <twi_onSlaveTransmit>
    39e0:	00 00       	nop
    39e2:	0f 90       	pop	r0
    39e4:	0f 90       	pop	r0
    39e6:	df 91       	pop	r29
    39e8:	cf 91       	pop	r28
    39ea:	08 95       	ret

000039ec <twi_reply>:
    39ec:	cf 93       	push	r28
    39ee:	df 93       	push	r29
    39f0:	1f 92       	push	r1
    39f2:	cd b7       	in	r28, 0x3d	; 61
    39f4:	de b7       	in	r29, 0x3e	; 62
    39f6:	89 83       	std	Y+1, r24	; 0x01
    39f8:	89 81       	ldd	r24, Y+1	; 0x01
    39fa:	88 23       	and	r24, r24
    39fc:	31 f0       	breq	.+12     	; 0x3a0a <twi_reply+0x1e>
    39fe:	8c eb       	ldi	r24, 0xBC	; 188
    3a00:	90 e0       	ldi	r25, 0x00	; 0
    3a02:	25 ec       	ldi	r18, 0xC5	; 197
    3a04:	fc 01       	movw	r30, r24
    3a06:	20 83       	st	Z, r18
    3a08:	05 c0       	rjmp	.+10     	; 0x3a14 <twi_reply+0x28>
    3a0a:	8c eb       	ldi	r24, 0xBC	; 188
    3a0c:	90 e0       	ldi	r25, 0x00	; 0
    3a0e:	25 e8       	ldi	r18, 0x85	; 133
    3a10:	fc 01       	movw	r30, r24
    3a12:	20 83       	st	Z, r18
    3a14:	00 00       	nop
    3a16:	0f 90       	pop	r0
    3a18:	df 91       	pop	r29
    3a1a:	cf 91       	pop	r28
    3a1c:	08 95       	ret

00003a1e <twi_stop>:
    3a1e:	cf 93       	push	r28
    3a20:	df 93       	push	r29
    3a22:	cd b7       	in	r28, 0x3d	; 61
    3a24:	de b7       	in	r29, 0x3e	; 62
    3a26:	a5 97       	sbiw	r28, 0x25	; 37
    3a28:	0f b6       	in	r0, 0x3f	; 63
    3a2a:	f8 94       	cli
    3a2c:	de bf       	out	0x3e, r29	; 62
    3a2e:	0f be       	out	0x3f, r0	; 63
    3a30:	cd bf       	out	0x3d, r28	; 61
    3a32:	8c eb       	ldi	r24, 0xBC	; 188
    3a34:	90 e0       	ldi	r25, 0x00	; 0
    3a36:	25 ed       	ldi	r18, 0xD5	; 213
    3a38:	fc 01       	movw	r30, r24
    3a3a:	20 83       	st	Z, r18
    3a3c:	88 e0       	ldi	r24, 0x08	; 8
    3a3e:	8d 83       	std	Y+5, r24	; 0x05
    3a40:	8d 81       	ldd	r24, Y+5	; 0x05
    3a42:	28 2f       	mov	r18, r24
    3a44:	30 e0       	ldi	r19, 0x00	; 0
    3a46:	40 e0       	ldi	r20, 0x00	; 0
    3a48:	50 e0       	ldi	r21, 0x00	; 0
    3a4a:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <twi_timeout_us>
    3a4e:	90 91 59 03 	lds	r25, 0x0359	; 0x800359 <twi_timeout_us+0x1>
    3a52:	a0 91 5a 03 	lds	r26, 0x035A	; 0x80035a <twi_timeout_us+0x2>
    3a56:	b0 91 5b 03 	lds	r27, 0x035B	; 0x80035b <twi_timeout_us+0x3>
    3a5a:	82 0f       	add	r24, r18
    3a5c:	93 1f       	adc	r25, r19
    3a5e:	a4 1f       	adc	r26, r20
    3a60:	b5 1f       	adc	r27, r21
    3a62:	01 97       	sbiw	r24, 0x01	; 1
    3a64:	a1 09       	sbc	r26, r1
    3a66:	b1 09       	sbc	r27, r1
    3a68:	2d 81       	ldd	r18, Y+5	; 0x05
    3a6a:	22 2f       	mov	r18, r18
    3a6c:	30 e0       	ldi	r19, 0x00	; 0
    3a6e:	40 e0       	ldi	r20, 0x00	; 0
    3a70:	50 e0       	ldi	r21, 0x00	; 0
    3a72:	bc 01       	movw	r22, r24
    3a74:	cd 01       	movw	r24, r26
    3a76:	0e 94 77 4d 	call	0x9aee	; 0x9aee <__udivmodsi4>
    3a7a:	da 01       	movw	r26, r20
    3a7c:	c9 01       	movw	r24, r18
    3a7e:	89 83       	std	Y+1, r24	; 0x01
    3a80:	9a 83       	std	Y+2, r25	; 0x02
    3a82:	ab 83       	std	Y+3, r26	; 0x03
    3a84:	bc 83       	std	Y+4, r27	; 0x04
    3a86:	15 c1       	rjmp	.+554    	; 0x3cb2 <twi_stop+0x294>
    3a88:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <twi_timeout_us>
    3a8c:	90 91 59 03 	lds	r25, 0x0359	; 0x800359 <twi_timeout_us+0x1>
    3a90:	a0 91 5a 03 	lds	r26, 0x035A	; 0x80035a <twi_timeout_us+0x2>
    3a94:	b0 91 5b 03 	lds	r27, 0x035B	; 0x80035b <twi_timeout_us+0x3>
    3a98:	89 2b       	or	r24, r25
    3a9a:	8a 2b       	or	r24, r26
    3a9c:	8b 2b       	or	r24, r27
    3a9e:	09 f4       	brne	.+2      	; 0x3aa2 <twi_stop+0x84>
    3aa0:	08 c1       	rjmp	.+528    	; 0x3cb2 <twi_stop+0x294>
    3aa2:	89 81       	ldd	r24, Y+1	; 0x01
    3aa4:	9a 81       	ldd	r25, Y+2	; 0x02
    3aa6:	ab 81       	ldd	r26, Y+3	; 0x03
    3aa8:	bc 81       	ldd	r27, Y+4	; 0x04
    3aaa:	89 2b       	or	r24, r25
    3aac:	8a 2b       	or	r24, r26
    3aae:	8b 2b       	or	r24, r27
    3ab0:	09 f4       	brne	.+2      	; 0x3ab4 <twi_stop+0x96>
    3ab2:	fb c0       	rjmp	.+502    	; 0x3caa <twi_stop+0x28c>
    3ab4:	80 e0       	ldi	r24, 0x00	; 0
    3ab6:	90 e0       	ldi	r25, 0x00	; 0
    3ab8:	a0 e2       	ldi	r26, 0x20	; 32
    3aba:	b1 e4       	ldi	r27, 0x41	; 65
    3abc:	8e 83       	std	Y+6, r24	; 0x06
    3abe:	9f 83       	std	Y+7, r25	; 0x07
    3ac0:	a8 87       	std	Y+8, r26	; 0x08
    3ac2:	b9 87       	std	Y+9, r27	; 0x09
    3ac4:	2b ea       	ldi	r18, 0xAB	; 171
    3ac6:	3a ea       	ldi	r19, 0xAA	; 170
    3ac8:	4a ea       	ldi	r20, 0xAA	; 170
    3aca:	50 e4       	ldi	r21, 0x40	; 64
    3acc:	6e 81       	ldd	r22, Y+6	; 0x06
    3ace:	7f 81       	ldd	r23, Y+7	; 0x07
    3ad0:	88 85       	ldd	r24, Y+8	; 0x08
    3ad2:	99 85       	ldd	r25, Y+9	; 0x09
    3ad4:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    3ad8:	dc 01       	movw	r26, r24
    3ada:	cb 01       	movw	r24, r22
    3adc:	8a 87       	std	Y+10, r24	; 0x0a
    3ade:	9b 87       	std	Y+11, r25	; 0x0b
    3ae0:	ac 87       	std	Y+12, r26	; 0x0c
    3ae2:	bd 87       	std	Y+13, r27	; 0x0d
    3ae4:	20 e0       	ldi	r18, 0x00	; 0
    3ae6:	30 e0       	ldi	r19, 0x00	; 0
    3ae8:	40 e8       	ldi	r20, 0x80	; 128
    3aea:	50 e4       	ldi	r21, 0x40	; 64
    3aec:	6e 81       	ldd	r22, Y+6	; 0x06
    3aee:	7f 81       	ldd	r23, Y+7	; 0x07
    3af0:	88 85       	ldd	r24, Y+8	; 0x08
    3af2:	99 85       	ldd	r25, Y+9	; 0x09
    3af4:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    3af8:	dc 01       	movw	r26, r24
    3afa:	cb 01       	movw	r24, r22
    3afc:	8e 87       	std	Y+14, r24	; 0x0e
    3afe:	9f 87       	std	Y+15, r25	; 0x0f
    3b00:	a8 8b       	std	Y+16, r26	; 0x10
    3b02:	b9 8b       	std	Y+17, r27	; 0x11
    3b04:	20 e0       	ldi	r18, 0x00	; 0
    3b06:	30 e0       	ldi	r19, 0x00	; 0
    3b08:	40 e8       	ldi	r20, 0x80	; 128
    3b0a:	5f e3       	ldi	r21, 0x3F	; 63
    3b0c:	6a 85       	ldd	r22, Y+10	; 0x0a
    3b0e:	7b 85       	ldd	r23, Y+11	; 0x0b
    3b10:	8c 85       	ldd	r24, Y+12	; 0x0c
    3b12:	9d 85       	ldd	r25, Y+13	; 0x0d
    3b14:	0e 94 72 43 	call	0x86e4	; 0x86e4 <__cmpsf2>
    3b18:	88 23       	and	r24, r24
    3b1a:	1c f4       	brge	.+6      	; 0x3b22 <twi_stop+0x104>
    3b1c:	81 e0       	ldi	r24, 0x01	; 1
    3b1e:	8a 8b       	std	Y+18, r24	; 0x12
    3b20:	b2 c0       	rjmp	.+356    	; 0x3c86 <twi_stop+0x268>
    3b22:	20 e0       	ldi	r18, 0x00	; 0
    3b24:	3f ef       	ldi	r19, 0xFF	; 255
    3b26:	4f e7       	ldi	r20, 0x7F	; 127
    3b28:	57 e4       	ldi	r21, 0x47	; 71
    3b2a:	6e 85       	ldd	r22, Y+14	; 0x0e
    3b2c:	7f 85       	ldd	r23, Y+15	; 0x0f
    3b2e:	88 89       	ldd	r24, Y+16	; 0x10
    3b30:	99 89       	ldd	r25, Y+17	; 0x11
    3b32:	0e 94 c1 44 	call	0x8982	; 0x8982 <__gesf2>
    3b36:	18 16       	cp	r1, r24
    3b38:	0c f0       	brlt	.+2      	; 0x3b3c <twi_stop+0x11e>
    3b3a:	7b c0       	rjmp	.+246    	; 0x3c32 <twi_stop+0x214>
    3b3c:	20 e0       	ldi	r18, 0x00	; 0
    3b3e:	30 e0       	ldi	r19, 0x00	; 0
    3b40:	4a e7       	ldi	r20, 0x7A	; 122
    3b42:	54 e4       	ldi	r21, 0x44	; 68
    3b44:	6e 81       	ldd	r22, Y+6	; 0x06
    3b46:	7f 81       	ldd	r23, Y+7	; 0x07
    3b48:	88 85       	ldd	r24, Y+8	; 0x08
    3b4a:	99 85       	ldd	r25, Y+9	; 0x09
    3b4c:	0e 94 76 43 	call	0x86ec	; 0x86ec <__divsf3>
    3b50:	dc 01       	movw	r26, r24
    3b52:	cb 01       	movw	r24, r22
    3b54:	8b 8b       	std	Y+19, r24	; 0x13
    3b56:	9c 8b       	std	Y+20, r25	; 0x14
    3b58:	ad 8b       	std	Y+21, r26	; 0x15
    3b5a:	be 8b       	std	Y+22, r27	; 0x16
    3b5c:	20 e0       	ldi	r18, 0x00	; 0
    3b5e:	30 e0       	ldi	r19, 0x00	; 0
    3b60:	4a e7       	ldi	r20, 0x7A	; 122
    3b62:	55 e4       	ldi	r21, 0x45	; 69
    3b64:	6b 89       	ldd	r22, Y+19	; 0x13
    3b66:	7c 89       	ldd	r23, Y+20	; 0x14
    3b68:	8d 89       	ldd	r24, Y+21	; 0x15
    3b6a:	9e 89       	ldd	r25, Y+22	; 0x16
    3b6c:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    3b70:	dc 01       	movw	r26, r24
    3b72:	cb 01       	movw	r24, r22
    3b74:	8f 8b       	std	Y+23, r24	; 0x17
    3b76:	98 8f       	std	Y+24, r25	; 0x18
    3b78:	a9 8f       	std	Y+25, r26	; 0x19
    3b7a:	ba 8f       	std	Y+26, r27	; 0x1a
    3b7c:	20 e0       	ldi	r18, 0x00	; 0
    3b7e:	30 e0       	ldi	r19, 0x00	; 0
    3b80:	40 e8       	ldi	r20, 0x80	; 128
    3b82:	5f e3       	ldi	r21, 0x3F	; 63
    3b84:	6f 89       	ldd	r22, Y+23	; 0x17
    3b86:	78 8d       	ldd	r23, Y+24	; 0x18
    3b88:	89 8d       	ldd	r24, Y+25	; 0x19
    3b8a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    3b8c:	0e 94 72 43 	call	0x86e4	; 0x86e4 <__cmpsf2>
    3b90:	88 23       	and	r24, r24
    3b92:	2c f4       	brge	.+10     	; 0x3b9e <twi_stop+0x180>
    3b94:	81 e0       	ldi	r24, 0x01	; 1
    3b96:	90 e0       	ldi	r25, 0x00	; 0
    3b98:	9c 8f       	std	Y+28, r25	; 0x1c
    3b9a:	8b 8f       	std	Y+27, r24	; 0x1b
    3b9c:	3f c0       	rjmp	.+126    	; 0x3c1c <twi_stop+0x1fe>
    3b9e:	20 e0       	ldi	r18, 0x00	; 0
    3ba0:	3f ef       	ldi	r19, 0xFF	; 255
    3ba2:	4f e7       	ldi	r20, 0x7F	; 127
    3ba4:	57 e4       	ldi	r21, 0x47	; 71
    3ba6:	6f 89       	ldd	r22, Y+23	; 0x17
    3ba8:	78 8d       	ldd	r23, Y+24	; 0x18
    3baa:	89 8d       	ldd	r24, Y+25	; 0x19
    3bac:	9a 8d       	ldd	r25, Y+26	; 0x1a
    3bae:	0e 94 c1 44 	call	0x8982	; 0x8982 <__gesf2>
    3bb2:	18 16       	cp	r1, r24
    3bb4:	4c f5       	brge	.+82     	; 0x3c08 <twi_stop+0x1ea>
    3bb6:	20 e0       	ldi	r18, 0x00	; 0
    3bb8:	30 e0       	ldi	r19, 0x00	; 0
    3bba:	40 e2       	ldi	r20, 0x20	; 32
    3bbc:	51 e4       	ldi	r21, 0x41	; 65
    3bbe:	6b 89       	ldd	r22, Y+19	; 0x13
    3bc0:	7c 89       	ldd	r23, Y+20	; 0x14
    3bc2:	8d 89       	ldd	r24, Y+21	; 0x15
    3bc4:	9e 89       	ldd	r25, Y+22	; 0x16
    3bc6:	0e 94 c5 44 	call	0x898a	; 0x898a <__mulsf3>
    3bca:	dc 01       	movw	r26, r24
    3bcc:	cb 01       	movw	r24, r22
    3bce:	bc 01       	movw	r22, r24
    3bd0:	cd 01       	movw	r24, r26
    3bd2:	0e 94 e3 43 	call	0x87c6	; 0x87c6 <__fixunssfsi>
    3bd6:	dc 01       	movw	r26, r24
    3bd8:	cb 01       	movw	r24, r22
    3bda:	9c 8f       	std	Y+28, r25	; 0x1c
    3bdc:	8b 8f       	std	Y+27, r24	; 0x1b
    3bde:	0f c0       	rjmp	.+30     	; 0x3bfe <twi_stop+0x1e0>
    3be0:	80 e9       	ldi	r24, 0x90	; 144
    3be2:	91 e0       	ldi	r25, 0x01	; 1
    3be4:	9e 8f       	std	Y+30, r25	; 0x1e
    3be6:	8d 8f       	std	Y+29, r24	; 0x1d
    3be8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3bea:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3bec:	01 97       	sbiw	r24, 0x01	; 1
    3bee:	f1 f7       	brne	.-4      	; 0x3bec <twi_stop+0x1ce>
    3bf0:	9e 8f       	std	Y+30, r25	; 0x1e
    3bf2:	8d 8f       	std	Y+29, r24	; 0x1d
    3bf4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3bf6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3bf8:	01 97       	sbiw	r24, 0x01	; 1
    3bfa:	9c 8f       	std	Y+28, r25	; 0x1c
    3bfc:	8b 8f       	std	Y+27, r24	; 0x1b
    3bfe:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3c00:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3c02:	89 2b       	or	r24, r25
    3c04:	69 f7       	brne	.-38     	; 0x3be0 <twi_stop+0x1c2>
    3c06:	3f c0       	rjmp	.+126    	; 0x3c86 <twi_stop+0x268>
    3c08:	6f 89       	ldd	r22, Y+23	; 0x17
    3c0a:	78 8d       	ldd	r23, Y+24	; 0x18
    3c0c:	89 8d       	ldd	r24, Y+25	; 0x19
    3c0e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    3c10:	0e 94 e3 43 	call	0x87c6	; 0x87c6 <__fixunssfsi>
    3c14:	dc 01       	movw	r26, r24
    3c16:	cb 01       	movw	r24, r22
    3c18:	9c 8f       	std	Y+28, r25	; 0x1c
    3c1a:	8b 8f       	std	Y+27, r24	; 0x1b
    3c1c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3c1e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3c20:	98 a3       	std	Y+32, r25	; 0x20
    3c22:	8f 8f       	std	Y+31, r24	; 0x1f
    3c24:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3c26:	98 a1       	ldd	r25, Y+32	; 0x20
    3c28:	01 97       	sbiw	r24, 0x01	; 1
    3c2a:	f1 f7       	brne	.-4      	; 0x3c28 <twi_stop+0x20a>
    3c2c:	98 a3       	std	Y+32, r25	; 0x20
    3c2e:	8f 8f       	std	Y+31, r24	; 0x1f
    3c30:	2a c0       	rjmp	.+84     	; 0x3c86 <twi_stop+0x268>
    3c32:	20 e0       	ldi	r18, 0x00	; 0
    3c34:	30 e0       	ldi	r19, 0x00	; 0
    3c36:	4f e7       	ldi	r20, 0x7F	; 127
    3c38:	53 e4       	ldi	r21, 0x43	; 67
    3c3a:	6a 85       	ldd	r22, Y+10	; 0x0a
    3c3c:	7b 85       	ldd	r23, Y+11	; 0x0b
    3c3e:	8c 85       	ldd	r24, Y+12	; 0x0c
    3c40:	9d 85       	ldd	r25, Y+13	; 0x0d
    3c42:	0e 94 c1 44 	call	0x8982	; 0x8982 <__gesf2>
    3c46:	18 16       	cp	r1, r24
    3c48:	ac f4       	brge	.+42     	; 0x3c74 <twi_stop+0x256>
    3c4a:	6e 85       	ldd	r22, Y+14	; 0x0e
    3c4c:	7f 85       	ldd	r23, Y+15	; 0x0f
    3c4e:	88 89       	ldd	r24, Y+16	; 0x10
    3c50:	99 89       	ldd	r25, Y+17	; 0x11
    3c52:	0e 94 e3 43 	call	0x87c6	; 0x87c6 <__fixunssfsi>
    3c56:	dc 01       	movw	r26, r24
    3c58:	cb 01       	movw	r24, r22
    3c5a:	9a a3       	std	Y+34, r25	; 0x22
    3c5c:	89 a3       	std	Y+33, r24	; 0x21
    3c5e:	89 a1       	ldd	r24, Y+33	; 0x21
    3c60:	9a a1       	ldd	r25, Y+34	; 0x22
    3c62:	9c a3       	std	Y+36, r25	; 0x24
    3c64:	8b a3       	std	Y+35, r24	; 0x23
    3c66:	8b a1       	ldd	r24, Y+35	; 0x23
    3c68:	9c a1       	ldd	r25, Y+36	; 0x24
    3c6a:	01 97       	sbiw	r24, 0x01	; 1
    3c6c:	f1 f7       	brne	.-4      	; 0x3c6a <twi_stop+0x24c>
    3c6e:	9c a3       	std	Y+36, r25	; 0x24
    3c70:	8b a3       	std	Y+35, r24	; 0x23
    3c72:	0f c0       	rjmp	.+30     	; 0x3c92 <twi_stop+0x274>
    3c74:	6a 85       	ldd	r22, Y+10	; 0x0a
    3c76:	7b 85       	ldd	r23, Y+11	; 0x0b
    3c78:	8c 85       	ldd	r24, Y+12	; 0x0c
    3c7a:	9d 85       	ldd	r25, Y+13	; 0x0d
    3c7c:	0e 94 e3 43 	call	0x87c6	; 0x87c6 <__fixunssfsi>
    3c80:	dc 01       	movw	r26, r24
    3c82:	cb 01       	movw	r24, r22
    3c84:	8a 8b       	std	Y+18, r24	; 0x12
    3c86:	8a 89       	ldd	r24, Y+18	; 0x12
    3c88:	8d a3       	std	Y+37, r24	; 0x25
    3c8a:	8d a1       	ldd	r24, Y+37	; 0x25
    3c8c:	8a 95       	dec	r24
    3c8e:	f1 f7       	brne	.-4      	; 0x3c8c <twi_stop+0x26e>
    3c90:	8d a3       	std	Y+37, r24	; 0x25
    3c92:	89 81       	ldd	r24, Y+1	; 0x01
    3c94:	9a 81       	ldd	r25, Y+2	; 0x02
    3c96:	ab 81       	ldd	r26, Y+3	; 0x03
    3c98:	bc 81       	ldd	r27, Y+4	; 0x04
    3c9a:	01 97       	sbiw	r24, 0x01	; 1
    3c9c:	a1 09       	sbc	r26, r1
    3c9e:	b1 09       	sbc	r27, r1
    3ca0:	89 83       	std	Y+1, r24	; 0x01
    3ca2:	9a 83       	std	Y+2, r25	; 0x02
    3ca4:	ab 83       	std	Y+3, r26	; 0x03
    3ca6:	bc 83       	std	Y+4, r27	; 0x04
    3ca8:	04 c0       	rjmp	.+8      	; 0x3cb2 <twi_stop+0x294>
    3caa:	80 91 5d 03 	lds	r24, 0x035D	; 0x80035d <twi_do_reset_on_timeout>
    3cae:	26 d0       	rcall	.+76     	; 0x3cfc <twi_handleTimeout>
    3cb0:	0d c0       	rjmp	.+26     	; 0x3ccc <twi_stop+0x2ae>
    3cb2:	8c eb       	ldi	r24, 0xBC	; 188
    3cb4:	90 e0       	ldi	r25, 0x00	; 0
    3cb6:	fc 01       	movw	r30, r24
    3cb8:	80 81       	ld	r24, Z
    3cba:	88 2f       	mov	r24, r24
    3cbc:	90 e0       	ldi	r25, 0x00	; 0
    3cbe:	80 71       	andi	r24, 0x10	; 16
    3cc0:	99 27       	eor	r25, r25
    3cc2:	89 2b       	or	r24, r25
    3cc4:	09 f0       	breq	.+2      	; 0x3cc8 <twi_stop+0x2aa>
    3cc6:	e0 ce       	rjmp	.-576    	; 0x3a88 <twi_stop+0x6a>
    3cc8:	10 92 54 03 	sts	0x0354, r1	; 0x800354 <twi_state>
    3ccc:	a5 96       	adiw	r28, 0x25	; 37
    3cce:	0f b6       	in	r0, 0x3f	; 63
    3cd0:	f8 94       	cli
    3cd2:	de bf       	out	0x3e, r29	; 62
    3cd4:	0f be       	out	0x3f, r0	; 63
    3cd6:	cd bf       	out	0x3d, r28	; 61
    3cd8:	df 91       	pop	r29
    3cda:	cf 91       	pop	r28
    3cdc:	08 95       	ret

00003cde <twi_releaseBus>:
    3cde:	cf 93       	push	r28
    3ce0:	df 93       	push	r29
    3ce2:	cd b7       	in	r28, 0x3d	; 61
    3ce4:	de b7       	in	r29, 0x3e	; 62
    3ce6:	8c eb       	ldi	r24, 0xBC	; 188
    3ce8:	90 e0       	ldi	r25, 0x00	; 0
    3cea:	25 ec       	ldi	r18, 0xC5	; 197
    3cec:	fc 01       	movw	r30, r24
    3cee:	20 83       	st	Z, r18
    3cf0:	10 92 54 03 	sts	0x0354, r1	; 0x800354 <twi_state>
    3cf4:	00 00       	nop
    3cf6:	df 91       	pop	r29
    3cf8:	cf 91       	pop	r28
    3cfa:	08 95       	ret

00003cfc <twi_handleTimeout>:
    3cfc:	cf 93       	push	r28
    3cfe:	df 93       	push	r29
    3d00:	00 d0       	rcall	.+0      	; 0x3d02 <twi_handleTimeout+0x6>
    3d02:	cd b7       	in	r28, 0x3d	; 61
    3d04:	de b7       	in	r29, 0x3e	; 62
    3d06:	8b 83       	std	Y+3, r24	; 0x03
    3d08:	81 e0       	ldi	r24, 0x01	; 1
    3d0a:	80 93 5c 03 	sts	0x035C, r24	; 0x80035c <twi_timed_out_flag>
    3d0e:	8b 81       	ldd	r24, Y+3	; 0x03
    3d10:	88 23       	and	r24, r24
    3d12:	b1 f0       	breq	.+44     	; 0x3d40 <twi_handleTimeout+0x44>
    3d14:	88 eb       	ldi	r24, 0xB8	; 184
    3d16:	90 e0       	ldi	r25, 0x00	; 0
    3d18:	fc 01       	movw	r30, r24
    3d1a:	80 81       	ld	r24, Z
    3d1c:	89 83       	std	Y+1, r24	; 0x01
    3d1e:	8a eb       	ldi	r24, 0xBA	; 186
    3d20:	90 e0       	ldi	r25, 0x00	; 0
    3d22:	fc 01       	movw	r30, r24
    3d24:	80 81       	ld	r24, Z
    3d26:	8a 83       	std	Y+2, r24	; 0x02
    3d28:	5e db       	rcall	.-2372   	; 0x33e6 <twi_disable>
    3d2a:	2a db       	rcall	.-2476   	; 0x3380 <twi_init>
    3d2c:	8a eb       	ldi	r24, 0xBA	; 186
    3d2e:	90 e0       	ldi	r25, 0x00	; 0
    3d30:	2a 81       	ldd	r18, Y+2	; 0x02
    3d32:	fc 01       	movw	r30, r24
    3d34:	20 83       	st	Z, r18
    3d36:	88 eb       	ldi	r24, 0xB8	; 184
    3d38:	90 e0       	ldi	r25, 0x00	; 0
    3d3a:	29 81       	ldd	r18, Y+1	; 0x01
    3d3c:	fc 01       	movw	r30, r24
    3d3e:	20 83       	st	Z, r18
    3d40:	00 00       	nop
    3d42:	0f 90       	pop	r0
    3d44:	0f 90       	pop	r0
    3d46:	0f 90       	pop	r0
    3d48:	df 91       	pop	r29
    3d4a:	cf 91       	pop	r28
    3d4c:	08 95       	ret

00003d4e <__vector_39>:

ISR(TWI_vect)
{
    3d4e:	1f 92       	push	r1
    3d50:	0f 92       	push	r0
    3d52:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7c005f>
    3d56:	0f 92       	push	r0
    3d58:	11 24       	eor	r1, r1
    3d5a:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7c005b>
    3d5e:	0f 92       	push	r0
    3d60:	2f 93       	push	r18
    3d62:	3f 93       	push	r19
    3d64:	4f 93       	push	r20
    3d66:	5f 93       	push	r21
    3d68:	6f 93       	push	r22
    3d6a:	7f 93       	push	r23
    3d6c:	8f 93       	push	r24
    3d6e:	9f 93       	push	r25
    3d70:	af 93       	push	r26
    3d72:	bf 93       	push	r27
    3d74:	ef 93       	push	r30
    3d76:	ff 93       	push	r31
    3d78:	cf 93       	push	r28
    3d7a:	df 93       	push	r29
    3d7c:	cd b7       	in	r28, 0x3d	; 61
    3d7e:	de b7       	in	r29, 0x3e	; 62
  switch(TW_STATUS){
    3d80:	89 eb       	ldi	r24, 0xB9	; 185
    3d82:	90 e0       	ldi	r25, 0x00	; 0
    3d84:	fc 01       	movw	r30, r24
    3d86:	80 81       	ld	r24, Z
    3d88:	88 2f       	mov	r24, r24
    3d8a:	90 e0       	ldi	r25, 0x00	; 0
    3d8c:	88 7f       	andi	r24, 0xF8	; 248
    3d8e:	99 27       	eor	r25, r25
    3d90:	09 2e       	mov	r0, r25
    3d92:	00 0c       	add	r0, r0
    3d94:	aa 0b       	sbc	r26, r26
    3d96:	bb 0b       	sbc	r27, r27
    3d98:	40 e0       	ldi	r20, 0x00	; 0
    3d9a:	50 e0       	ldi	r21, 0x00	; 0
    3d9c:	28 ef       	ldi	r18, 0xF8	; 248
    3d9e:	30 e0       	ldi	r19, 0x00	; 0
    3da0:	84 1b       	sub	r24, r20
    3da2:	95 0b       	sbc	r25, r21
    3da4:	28 17       	cp	r18, r24
    3da6:	39 07       	cpc	r19, r25
    3da8:	08 f4       	brcc	.+2      	; 0x3dac <__vector_39+0x5e>
    3daa:	06 c1       	rjmp	.+524    	; 0x3fb8 <__vector_39+0x26a>
    3dac:	fc 01       	movw	r30, r24
    3dae:	88 27       	eor	r24, r24
    3db0:	eb 57       	subi	r30, 0x7B	; 123
    3db2:	ff 4f       	sbci	r31, 0xFF	; 255
    3db4:	8f 4f       	sbci	r24, 0xFF	; 255
    3db6:	0c 94 99 4d 	jmp	0x9b32	; 0x9b32 <__tablejump2__>
    // All Master
    case TW_START:     // sent start condition
    case TW_REP_START: // sent repeated start condition
      // copy device address and r/w bit to output register and ack
      TWDR = twi_slarw;
    3dba:	8b eb       	ldi	r24, 0xBB	; 187
    3dbc:	90 e0       	ldi	r25, 0x00	; 0
    3dbe:	20 91 55 03 	lds	r18, 0x0355	; 0x800355 <twi_slarw>
    3dc2:	fc 01       	movw	r30, r24
    3dc4:	20 83       	st	Z, r18
      twi_reply(1);
    3dc6:	81 e0       	ldi	r24, 0x01	; 1
    3dc8:	11 de       	rcall	.-990    	; 0x39ec <twi_reply>
      break;
    3dca:	f6 c0       	rjmp	.+492    	; 0x3fb8 <__vector_39+0x26a>

    // Master Transmitter
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop 
      if(twi_masterBufferIndex < twi_masterBufferLength){
    3dcc:	90 91 82 03 	lds	r25, 0x0382	; 0x800382 <twi_masterBufferIndex>
    3dd0:	80 91 83 03 	lds	r24, 0x0383	; 0x800383 <twi_masterBufferLength>
    3dd4:	98 17       	cp	r25, r24
    3dd6:	98 f4       	brcc	.+38     	; 0x3dfe <__vector_39+0xb0>
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
    3dd8:	8b eb       	ldi	r24, 0xBB	; 187
    3dda:	90 e0       	ldi	r25, 0x00	; 0
    3ddc:	20 91 82 03 	lds	r18, 0x0382	; 0x800382 <twi_masterBufferIndex>
    3de0:	31 e0       	ldi	r19, 0x01	; 1
    3de2:	32 0f       	add	r19, r18
    3de4:	30 93 82 03 	sts	0x0382, r19	; 0x800382 <twi_masterBufferIndex>
    3de8:	22 2f       	mov	r18, r18
    3dea:	30 e0       	ldi	r19, 0x00	; 0
    3dec:	2e 59       	subi	r18, 0x9E	; 158
    3dee:	3c 4f       	sbci	r19, 0xFC	; 252
    3df0:	f9 01       	movw	r30, r18
    3df2:	20 81       	ld	r18, Z
    3df4:	fc 01       	movw	r30, r24
    3df6:	20 83       	st	Z, r18
        twi_reply(1);
    3df8:	81 e0       	ldi	r24, 0x01	; 1
    3dfa:	f8 dd       	rcall	.-1040   	; 0x39ec <twi_reply>
         // at the point where we would normally issue the start.
         TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
         twi_state = TWI_READY;
        }
      }
      break;
    3dfc:	dd c0       	rjmp	.+442    	; 0x3fb8 <__vector_39+0x26a>
      if(twi_masterBufferIndex < twi_masterBufferLength){
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
        twi_reply(1);
      }else{
        if (twi_sendStop){
    3dfe:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <twi_sendStop>
    3e02:	88 23       	and	r24, r24
          twi_stop();
    3e04:	11 f0       	breq	.+4      	; 0x3e0a <__vector_39+0xbc>
    3e06:	0b de       	rcall	.-1002   	; 0x3a1e <twi_stop>
         // at the point where we would normally issue the start.
         TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
         twi_state = TWI_READY;
        }
      }
      break;
    3e08:	d7 c0       	rjmp	.+430    	; 0x3fb8 <__vector_39+0x26a>
        twi_reply(1);
      }else{
        if (twi_sendStop){
          twi_stop();
       } else {
         twi_inRepStart = true;	// we're gonna send the START
    3e0a:	81 e0       	ldi	r24, 0x01	; 1
    3e0c:	80 93 57 03 	sts	0x0357, r24	; 0x800357 <twi_inRepStart>
         // don't enable the interrupt. We'll generate the start, but we
         // avoid handling the interrupt until we're in the next transaction,
         // at the point where we would normally issue the start.
         TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
    3e10:	8c eb       	ldi	r24, 0xBC	; 188
    3e12:	90 e0       	ldi	r25, 0x00	; 0
    3e14:	24 ea       	ldi	r18, 0xA4	; 164
    3e16:	fc 01       	movw	r30, r24
    3e18:	20 83       	st	Z, r18
         twi_state = TWI_READY;
    3e1a:	10 92 54 03 	sts	0x0354, r1	; 0x800354 <twi_state>
        }
      }
      break;
    3e1e:	cc c0       	rjmp	.+408    	; 0x3fb8 <__vector_39+0x26a>
    case TW_MT_SLA_NACK:  // address sent, nack received
      twi_error = TW_MT_SLA_NACK;
    3e20:	80 e2       	ldi	r24, 0x20	; 32
    3e22:	80 93 c7 03 	sts	0x03C7, r24	; 0x8003c7 <twi_error>
      twi_stop();
    3e26:	fb dd       	rcall	.-1034   	; 0x3a1e <twi_stop>
      break;
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
    3e28:	c7 c0       	rjmp	.+398    	; 0x3fb8 <__vector_39+0x26a>
    3e2a:	80 e3       	ldi	r24, 0x30	; 48
    3e2c:	80 93 c7 03 	sts	0x03C7, r24	; 0x8003c7 <twi_error>
      twi_stop();
      break;
    3e30:	f6 dd       	rcall	.-1044   	; 0x3a1e <twi_stop>
    case TW_MT_ARB_LOST: // lost bus arbitration
      twi_error = TW_MT_ARB_LOST;
    3e32:	c2 c0       	rjmp	.+388    	; 0x3fb8 <__vector_39+0x26a>
    3e34:	88 e3       	ldi	r24, 0x38	; 56
    3e36:	80 93 c7 03 	sts	0x03C7, r24	; 0x8003c7 <twi_error>
      twi_releaseBus();
    3e3a:	51 df       	rcall	.-350    	; 0x3cde <twi_releaseBus>
      break;
    3e3c:	bd c0       	rjmp	.+378    	; 0x3fb8 <__vector_39+0x26a>

    // Master Receiver
    case TW_MR_DATA_ACK: // data received, ack sent
      // put byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    3e3e:	80 91 82 03 	lds	r24, 0x0382	; 0x800382 <twi_masterBufferIndex>
    3e42:	91 e0       	ldi	r25, 0x01	; 1
    3e44:	98 0f       	add	r25, r24
    3e46:	90 93 82 03 	sts	0x0382, r25	; 0x800382 <twi_masterBufferIndex>
    3e4a:	88 2f       	mov	r24, r24
    3e4c:	90 e0       	ldi	r25, 0x00	; 0
    3e4e:	2b eb       	ldi	r18, 0xBB	; 187
    3e50:	30 e0       	ldi	r19, 0x00	; 0
    3e52:	f9 01       	movw	r30, r18
    3e54:	20 81       	ld	r18, Z
    3e56:	8e 59       	subi	r24, 0x9E	; 158
    3e58:	9c 4f       	sbci	r25, 0xFC	; 252
    3e5a:	fc 01       	movw	r30, r24
    3e5c:	20 83       	st	Z, r18
      __attribute__ ((fallthrough));
    case TW_MR_SLA_ACK:  // address sent, ack received
      // ack if more bytes are expected, otherwise nack
      if(twi_masterBufferIndex < twi_masterBufferLength){
    3e5e:	90 91 82 03 	lds	r25, 0x0382	; 0x800382 <twi_masterBufferIndex>
    3e62:	80 91 83 03 	lds	r24, 0x0383	; 0x800383 <twi_masterBufferLength>
        twi_reply(1);
    3e66:	98 17       	cp	r25, r24
    3e68:	18 f4       	brcc	.+6      	; 0x3e70 <__vector_39+0x122>
    3e6a:	81 e0       	ldi	r24, 0x01	; 1
      }else{
        twi_reply(0);
      }
      break;
    3e6c:	bf dd       	rcall	.-1154   	; 0x39ec <twi_reply>
    case TW_MR_SLA_ACK:  // address sent, ack received
      // ack if more bytes are expected, otherwise nack
      if(twi_masterBufferIndex < twi_masterBufferLength){
        twi_reply(1);
      }else{
        twi_reply(0);
    3e6e:	a4 c0       	rjmp	.+328    	; 0x3fb8 <__vector_39+0x26a>
    3e70:	80 e0       	ldi	r24, 0x00	; 0
    3e72:	bc dd       	rcall	.-1160   	; 0x39ec <twi_reply>
      }
      break;
    3e74:	a1 c0       	rjmp	.+322    	; 0x3fb8 <__vector_39+0x26a>
    case TW_MR_DATA_NACK: // data received, nack sent
      // put final byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    3e76:	80 91 82 03 	lds	r24, 0x0382	; 0x800382 <twi_masterBufferIndex>
    3e7a:	91 e0       	ldi	r25, 0x01	; 1
    3e7c:	98 0f       	add	r25, r24
    3e7e:	90 93 82 03 	sts	0x0382, r25	; 0x800382 <twi_masterBufferIndex>
    3e82:	88 2f       	mov	r24, r24
    3e84:	90 e0       	ldi	r25, 0x00	; 0
    3e86:	2b eb       	ldi	r18, 0xBB	; 187
    3e88:	30 e0       	ldi	r19, 0x00	; 0
    3e8a:	f9 01       	movw	r30, r18
    3e8c:	20 81       	ld	r18, Z
    3e8e:	8e 59       	subi	r24, 0x9E	; 158
    3e90:	9c 4f       	sbci	r25, 0xFC	; 252
    3e92:	fc 01       	movw	r30, r24
      if (twi_sendStop){
    3e94:	20 83       	st	Z, r18
    3e96:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <twi_sendStop>
    3e9a:	88 23       	and	r24, r24
        twi_stop();
    3e9c:	11 f0       	breq	.+4      	; 0x3ea2 <__vector_39+0x154>
    3e9e:	bf dd       	rcall	.-1154   	; 0x3a1e <twi_stop>
        // avoid handling the interrupt until we're in the next transaction,
        // at the point where we would normally issue the start.
        TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
        twi_state = TWI_READY;
      }
      break;
    3ea0:	8b c0       	rjmp	.+278    	; 0x3fb8 <__vector_39+0x26a>
      // put final byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
      if (twi_sendStop){
        twi_stop();
      } else {
        twi_inRepStart = true;	// we're gonna send the START
    3ea2:	81 e0       	ldi	r24, 0x01	; 1
    3ea4:	80 93 57 03 	sts	0x0357, r24	; 0x800357 <twi_inRepStart>
        // don't enable the interrupt. We'll generate the start, but we
        // avoid handling the interrupt until we're in the next transaction,
        // at the point where we would normally issue the start.
        TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
    3ea8:	8c eb       	ldi	r24, 0xBC	; 188
    3eaa:	90 e0       	ldi	r25, 0x00	; 0
    3eac:	24 ea       	ldi	r18, 0xA4	; 164
    3eae:	fc 01       	movw	r30, r24
        twi_state = TWI_READY;
    3eb0:	20 83       	st	Z, r18
    3eb2:	10 92 54 03 	sts	0x0354, r1	; 0x800354 <twi_state>
      }
      break;
    case TW_MR_SLA_NACK: // address sent, nack received
      twi_stop();
    3eb6:	80 c0       	rjmp	.+256    	; 0x3fb8 <__vector_39+0x26a>
      break;
    3eb8:	b2 dd       	rcall	.-1180   	; 0x3a1e <twi_stop>
    case TW_SR_SLA_ACK:   // addressed, returned ack
    case TW_SR_GCALL_ACK: // addressed generally, returned ack
    case TW_SR_ARB_LOST_SLA_ACK:   // lost arbitration, returned ack
    case TW_SR_ARB_LOST_GCALL_ACK: // lost arbitration, returned ack
      // enter slave receiver mode
      twi_state = TWI_SRX;
    3eba:	7e c0       	rjmp	.+252    	; 0x3fb8 <__vector_39+0x26a>
    3ebc:	83 e0       	ldi	r24, 0x03	; 3
    3ebe:	80 93 54 03 	sts	0x0354, r24	; 0x800354 <twi_state>
      // indicate that rx buffer can be overwritten and ack
      twi_rxBufferIndex = 0;
    3ec2:	10 92 c6 03 	sts	0x03C6, r1	; 0x8003c6 <twi_rxBufferIndex>
      twi_reply(1);
    3ec6:	81 e0       	ldi	r24, 0x01	; 1
    3ec8:	91 dd       	rcall	.-1246   	; 0x39ec <twi_reply>
      break;
    3eca:	76 c0       	rjmp	.+236    	; 0x3fb8 <__vector_39+0x26a>
    case TW_SR_DATA_ACK:       // data received, returned ack
    case TW_SR_GCALL_DATA_ACK: // data received generally, returned ack
      // if there is still room in the rx buffer
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
    3ecc:	80 91 c6 03 	lds	r24, 0x03C6	; 0x8003c6 <twi_rxBufferIndex>
    3ed0:	80 32       	cpi	r24, 0x20	; 32
    3ed2:	98 f4       	brcc	.+38     	; 0x3efa <__vector_39+0x1ac>
        // put byte in buffer and ack
        twi_rxBuffer[twi_rxBufferIndex++] = TWDR;
    3ed4:	80 91 c6 03 	lds	r24, 0x03C6	; 0x8003c6 <twi_rxBufferIndex>
    3ed8:	91 e0       	ldi	r25, 0x01	; 1
    3eda:	98 0f       	add	r25, r24
    3edc:	90 93 c6 03 	sts	0x03C6, r25	; 0x8003c6 <twi_rxBufferIndex>
    3ee0:	88 2f       	mov	r24, r24
    3ee2:	90 e0       	ldi	r25, 0x00	; 0
    3ee4:	2b eb       	ldi	r18, 0xBB	; 187
    3ee6:	30 e0       	ldi	r19, 0x00	; 0
    3ee8:	f9 01       	movw	r30, r18
    3eea:	20 81       	ld	r18, Z
    3eec:	8a 55       	subi	r24, 0x5A	; 90
        twi_reply(1);
    3eee:	9c 4f       	sbci	r25, 0xFC	; 252
    3ef0:	fc 01       	movw	r30, r24
    3ef2:	20 83       	st	Z, r18
      }else{
        // otherwise nack
        twi_reply(0);
      }
      break;
    3ef4:	81 e0       	ldi	r24, 0x01	; 1
        // put byte in buffer and ack
        twi_rxBuffer[twi_rxBufferIndex++] = TWDR;
        twi_reply(1);
      }else{
        // otherwise nack
        twi_reply(0);
    3ef6:	7a dd       	rcall	.-1292   	; 0x39ec <twi_reply>
    3ef8:	5f c0       	rjmp	.+190    	; 0x3fb8 <__vector_39+0x26a>
    3efa:	80 e0       	ldi	r24, 0x00	; 0
      }
      break;
    3efc:	77 dd       	rcall	.-1298   	; 0x39ec <twi_reply>
    case TW_SR_STOP: // stop or repeated start condition received
      // ack future responses and leave slave receiver state
      twi_releaseBus();
    3efe:	5c c0       	rjmp	.+184    	; 0x3fb8 <__vector_39+0x26a>
    3f00:	ee de       	rcall	.-548    	; 0x3cde <twi_releaseBus>
      // put a null char after data if there's room
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
    3f02:	80 91 c6 03 	lds	r24, 0x03C6	; 0x8003c6 <twi_rxBufferIndex>
    3f06:	80 32       	cpi	r24, 0x20	; 32
    3f08:	40 f4       	brcc	.+16     	; 0x3f1a <__vector_39+0x1cc>
        twi_rxBuffer[twi_rxBufferIndex] = '\0';
    3f0a:	80 91 c6 03 	lds	r24, 0x03C6	; 0x8003c6 <twi_rxBufferIndex>
    3f0e:	88 2f       	mov	r24, r24
    3f10:	90 e0       	ldi	r25, 0x00	; 0
    3f12:	8a 55       	subi	r24, 0x5A	; 90
    3f14:	9c 4f       	sbci	r25, 0xFC	; 252
    3f16:	fc 01       	movw	r30, r24
    3f18:	10 82       	st	Z, r1
      }
      // callback to user defined callback
      twi_onSlaveReceive(twi_rxBuffer, twi_rxBufferIndex);
    3f1a:	20 91 60 03 	lds	r18, 0x0360	; 0x800360 <twi_onSlaveReceive>
    3f1e:	30 91 61 03 	lds	r19, 0x0361	; 0x800361 <twi_onSlaveReceive+0x1>
    3f22:	80 91 c6 03 	lds	r24, 0x03C6	; 0x8003c6 <twi_rxBufferIndex>
    3f26:	88 2f       	mov	r24, r24
    3f28:	90 e0       	ldi	r25, 0x00	; 0
    3f2a:	bc 01       	movw	r22, r24
    3f2c:	86 ea       	ldi	r24, 0xA6	; 166
    3f2e:	93 e0       	ldi	r25, 0x03	; 3
    3f30:	f9 01       	movw	r30, r18
      // since we submit rx buffer to "wire" library, we can reset it
      twi_rxBufferIndex = 0;
    3f32:	19 95       	eicall
    3f34:	10 92 c6 03 	sts	0x03C6, r1	; 0x8003c6 <twi_rxBufferIndex>
      break;
    case TW_SR_DATA_NACK:       // data received, returned nack
    case TW_SR_GCALL_DATA_NACK: // data received generally, returned nack
      // nack back at master
      twi_reply(0);
    3f38:	3f c0       	rjmp	.+126    	; 0x3fb8 <__vector_39+0x26a>
    3f3a:	80 e0       	ldi	r24, 0x00	; 0
    3f3c:	57 dd       	rcall	.-1362   	; 0x39ec <twi_reply>
      break;
    3f3e:	3c c0       	rjmp	.+120    	; 0x3fb8 <__vector_39+0x26a>
    
    // Slave Transmitter
    case TW_ST_SLA_ACK:          // addressed, returned ack
    case TW_ST_ARB_LOST_SLA_ACK: // arbitration lost, returned ack
      // enter slave transmitter mode
      twi_state = TWI_STX;
    3f40:	84 e0       	ldi	r24, 0x04	; 4
    3f42:	80 93 54 03 	sts	0x0354, r24	; 0x800354 <twi_state>
      // ready the tx buffer index for iteration
      twi_txBufferIndex = 0;
    3f46:	10 92 a4 03 	sts	0x03A4, r1	; 0x8003a4 <twi_txBufferIndex>
      // set tx buffer length to be zero, to verify if user changes it
      twi_txBufferLength = 0;
    3f4a:	10 92 a5 03 	sts	0x03A5, r1	; 0x8003a5 <twi_txBufferLength>
      // request for txBuffer to be filled and length to be set
      // note: user must call twi_transmit(bytes, length) to do this
      twi_onSlaveTransmit();
    3f4e:	80 91 5e 03 	lds	r24, 0x035E	; 0x80035e <twi_onSlaveTransmit>
    3f52:	90 91 5f 03 	lds	r25, 0x035F	; 0x80035f <twi_onSlaveTransmit+0x1>
    3f56:	fc 01       	movw	r30, r24
    3f58:	19 95       	eicall
      // if they didn't change buffer & length, initialize it
      if(0 == twi_txBufferLength){
    3f5a:	80 91 a5 03 	lds	r24, 0x03A5	; 0x8003a5 <twi_txBufferLength>
    3f5e:	88 23       	and	r24, r24
    3f60:	29 f4       	brne	.+10     	; 0x3f6c <__vector_39+0x21e>
        twi_txBufferLength = 1;
    3f62:	81 e0       	ldi	r24, 0x01	; 1
    3f64:	80 93 a5 03 	sts	0x03A5, r24	; 0x8003a5 <twi_txBufferLength>
        twi_txBuffer[0] = 0x00;
    3f68:	10 92 84 03 	sts	0x0384, r1	; 0x800384 <twi_txBuffer>
      }
      __attribute__ ((fallthrough));		  
      // transmit first byte from buffer, fall
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
    3f6c:	8b eb       	ldi	r24, 0xBB	; 187
    3f6e:	90 e0       	ldi	r25, 0x00	; 0
    3f70:	20 91 a4 03 	lds	r18, 0x03A4	; 0x8003a4 <twi_txBufferIndex>
    3f74:	31 e0       	ldi	r19, 0x01	; 1
    3f76:	32 0f       	add	r19, r18
    3f78:	30 93 a4 03 	sts	0x03A4, r19	; 0x8003a4 <twi_txBufferIndex>
    3f7c:	22 2f       	mov	r18, r18
    3f7e:	30 e0       	ldi	r19, 0x00	; 0
    3f80:	2c 57       	subi	r18, 0x7C	; 124
    3f82:	3c 4f       	sbci	r19, 0xFC	; 252
    3f84:	f9 01       	movw	r30, r18
    3f86:	20 81       	ld	r18, Z
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
    3f88:	fc 01       	movw	r30, r24
    3f8a:	20 83       	st	Z, r18
    3f8c:	90 91 a4 03 	lds	r25, 0x03A4	; 0x8003a4 <twi_txBufferIndex>
    3f90:	80 91 a5 03 	lds	r24, 0x03A5	; 0x8003a5 <twi_txBufferLength>
        twi_reply(1);
    3f94:	98 17       	cp	r25, r24
    3f96:	18 f4       	brcc	.+6      	; 0x3f9e <__vector_39+0x250>
      }else{
        twi_reply(0);
      }
      break;
    3f98:	81 e0       	ldi	r24, 0x01	; 1
      TWDR = twi_txBuffer[twi_txBufferIndex++];
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
        twi_reply(1);
      }else{
        twi_reply(0);
    3f9a:	28 dd       	rcall	.-1456   	; 0x39ec <twi_reply>
    3f9c:	0d c0       	rjmp	.+26     	; 0x3fb8 <__vector_39+0x26a>
    3f9e:	80 e0       	ldi	r24, 0x00	; 0
      }
      break;
    3fa0:	25 dd       	rcall	.-1462   	; 0x39ec <twi_reply>
    case TW_ST_DATA_NACK: // received nack, we are done 
    case TW_ST_LAST_DATA: // received ack, but we are done already!
      // ack future responses
      twi_reply(1);
    3fa2:	0a c0       	rjmp	.+20     	; 0x3fb8 <__vector_39+0x26a>
    3fa4:	81 e0       	ldi	r24, 0x01	; 1
    3fa6:	22 dd       	rcall	.-1468   	; 0x39ec <twi_reply>
      // leave slave receiver state
      twi_state = TWI_READY;
    3fa8:	10 92 54 03 	sts	0x0354, r1	; 0x800354 <twi_state>
      break;
    3fac:	05 c0       	rjmp	.+10     	; 0x3fb8 <__vector_39+0x26a>

    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
    3fae:	10 92 c7 03 	sts	0x03C7, r1	; 0x8003c7 <twi_error>
      twi_stop();
    3fb2:	35 dd       	rcall	.-1430   	; 0x3a1e <twi_stop>
    3fb4:	01 c0       	rjmp	.+2      	; 0x3fb8 <__vector_39+0x26a>
      break;
    3fb6:	00 00       	nop
      twi_state = TWI_READY;
      break;

    // All
    case TW_NO_INFO:   // no state information
      break;
    3fb8:	00 00       	nop
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
      twi_stop();
      break;
  }
}
    3fba:	df 91       	pop	r29
    3fbc:	cf 91       	pop	r28
    3fbe:	ff 91       	pop	r31
    3fc0:	ef 91       	pop	r30
    3fc2:	bf 91       	pop	r27
    3fc4:	af 91       	pop	r26
    3fc6:	9f 91       	pop	r25
    3fc8:	8f 91       	pop	r24
    3fca:	7f 91       	pop	r23
    3fcc:	6f 91       	pop	r22
    3fce:	5f 91       	pop	r21
    3fd0:	4f 91       	pop	r20
    3fd2:	3f 91       	pop	r19
    3fd4:	2f 91       	pop	r18
    3fd6:	0f 90       	pop	r0
    3fd8:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7c005b>
    3fdc:	0f 90       	pop	r0
    3fde:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7c005f>
    3fe2:	0f 90       	pop	r0
    3fe4:	1f 90       	pop	r1
    3fe6:	18 95       	reti

00003fe8 <_ZN5Print13setWriteErrorEi>:
    3fe8:	cf 93       	push	r28

// sets function called on slave read
void TwoWire::onRequest( void (*function)(void) )
{
  user_onRequest = function;
}
    3fea:	df 93       	push	r29
    3fec:	00 d0       	rcall	.+0      	; 0x3fee <_ZN5Print13setWriteErrorEi+0x6>
    3fee:	1f 92       	push	r1
    3ff0:	cd b7       	in	r28, 0x3d	; 61
    3ff2:	de b7       	in	r29, 0x3e	; 62
    3ff4:	9a 83       	std	Y+2, r25	; 0x02
    3ff6:	89 83       	std	Y+1, r24	; 0x01
    3ff8:	7c 83       	std	Y+4, r23	; 0x04
    3ffa:	6b 83       	std	Y+3, r22	; 0x03
    3ffc:	89 81       	ldd	r24, Y+1	; 0x01
    3ffe:	9a 81       	ldd	r25, Y+2	; 0x02
    4000:	2b 81       	ldd	r18, Y+3	; 0x03
    4002:	3c 81       	ldd	r19, Y+4	; 0x04
    4004:	fc 01       	movw	r30, r24
    4006:	33 83       	std	Z+3, r19	; 0x03
    4008:	22 83       	std	Z+2, r18	; 0x02
    400a:	00 00       	nop
    400c:	0f 90       	pop	r0
    400e:	0f 90       	pop	r0
    4010:	0f 90       	pop	r0
    4012:	0f 90       	pop	r0
    4014:	df 91       	pop	r29
    4016:	cf 91       	pop	r28
    4018:	08 95       	ret

0000401a <_ZN5PrintC1Ev>:
    401a:	cf 93       	push	r28
    401c:	df 93       	push	r29
    401e:	1f 92       	push	r1
    4020:	1f 92       	push	r1
    4022:	cd b7       	in	r28, 0x3d	; 61
    4024:	de b7       	in	r29, 0x3e	; 62
    4026:	9a 83       	std	Y+2, r25	; 0x02
    4028:	89 83       	std	Y+1, r24	; 0x01
    402a:	26 ed       	ldi	r18, 0xD6	; 214
    402c:	32 e0       	ldi	r19, 0x02	; 2
    402e:	89 81       	ldd	r24, Y+1	; 0x01
    4030:	9a 81       	ldd	r25, Y+2	; 0x02
    4032:	fc 01       	movw	r30, r24
    4034:	31 83       	std	Z+1, r19	; 0x01
    4036:	20 83       	st	Z, r18
    4038:	89 81       	ldd	r24, Y+1	; 0x01
    403a:	9a 81       	ldd	r25, Y+2	; 0x02
    403c:	fc 01       	movw	r30, r24
    403e:	13 82       	std	Z+3, r1	; 0x03
    4040:	12 82       	std	Z+2, r1	; 0x02
    4042:	00 00       	nop
    4044:	0f 90       	pop	r0
    4046:	0f 90       	pop	r0
    4048:	df 91       	pop	r29
    404a:	cf 91       	pop	r28
    404c:	08 95       	ret

0000404e <_ZN5Print17availableForWriteEv>:
    404e:	cf 93       	push	r28
    4050:	df 93       	push	r29
    4052:	1f 92       	push	r1
    4054:	1f 92       	push	r1
    4056:	cd b7       	in	r28, 0x3d	; 61
    4058:	de b7       	in	r29, 0x3e	; 62
    405a:	9a 83       	std	Y+2, r25	; 0x02
    405c:	89 83       	std	Y+1, r24	; 0x01
    405e:	80 e0       	ldi	r24, 0x00	; 0
    4060:	90 e0       	ldi	r25, 0x00	; 0
    4062:	0f 90       	pop	r0
    4064:	0f 90       	pop	r0
    4066:	df 91       	pop	r29
    4068:	cf 91       	pop	r28
    406a:	08 95       	ret

0000406c <_ZN5Print5flushEv>:
    406c:	cf 93       	push	r28
    406e:	df 93       	push	r29
    4070:	1f 92       	push	r1
    4072:	1f 92       	push	r1
    4074:	cd b7       	in	r28, 0x3d	; 61
    4076:	de b7       	in	r29, 0x3e	; 62
    4078:	9a 83       	std	Y+2, r25	; 0x02
    407a:	89 83       	std	Y+1, r24	; 0x01
    407c:	00 00       	nop
    407e:	0f 90       	pop	r0
    4080:	0f 90       	pop	r0
    4082:	df 91       	pop	r29
    4084:	cf 91       	pop	r28
    4086:	08 95       	ret

00004088 <_ZN6StreamC1Ev>:
    4088:	cf 93       	push	r28
    408a:	df 93       	push	r29
    408c:	1f 92       	push	r1
    408e:	1f 92       	push	r1
    4090:	cd b7       	in	r28, 0x3d	; 61
    4092:	de b7       	in	r29, 0x3e	; 62
    4094:	9a 83       	std	Y+2, r25	; 0x02
    4096:	89 83       	std	Y+1, r24	; 0x01
    4098:	89 81       	ldd	r24, Y+1	; 0x01
    409a:	9a 81       	ldd	r25, Y+2	; 0x02
    409c:	be df       	rcall	.-132    	; 0x401a <_ZN5PrintC1Ev>
    409e:	2b e4       	ldi	r18, 0x4B	; 75
    40a0:	32 e0       	ldi	r19, 0x02	; 2
    40a2:	89 81       	ldd	r24, Y+1	; 0x01
    40a4:	9a 81       	ldd	r25, Y+2	; 0x02
    40a6:	fc 01       	movw	r30, r24
    40a8:	31 83       	std	Z+1, r19	; 0x01
    40aa:	20 83       	st	Z, r18
    40ac:	29 81       	ldd	r18, Y+1	; 0x01
    40ae:	3a 81       	ldd	r19, Y+2	; 0x02
    40b0:	88 ee       	ldi	r24, 0xE8	; 232
    40b2:	93 e0       	ldi	r25, 0x03	; 3
    40b4:	a0 e0       	ldi	r26, 0x00	; 0
    40b6:	b0 e0       	ldi	r27, 0x00	; 0
    40b8:	f9 01       	movw	r30, r18
    40ba:	84 83       	std	Z+4, r24	; 0x04
    40bc:	95 83       	std	Z+5, r25	; 0x05
    40be:	a6 83       	std	Z+6, r26	; 0x06
    40c0:	b7 83       	std	Z+7, r27	; 0x07
    40c2:	00 00       	nop
    40c4:	0f 90       	pop	r0
    40c6:	0f 90       	pop	r0
    40c8:	df 91       	pop	r29
    40ca:	cf 91       	pop	r28
    40cc:	08 95       	ret

000040ce <_ZN7TwoWireC1Ev>:
    40ce:	cf 93       	push	r28
    40d0:	df 93       	push	r29
    40d2:	1f 92       	push	r1
    40d4:	1f 92       	push	r1
    40d6:	cd b7       	in	r28, 0x3d	; 61
    40d8:	de b7       	in	r29, 0x3e	; 62
    40da:	9a 83       	std	Y+2, r25	; 0x02
    40dc:	89 83       	std	Y+1, r24	; 0x01
    40de:	89 81       	ldd	r24, Y+1	; 0x01
    40e0:	9a 81       	ldd	r25, Y+2	; 0x02
    40e2:	d2 df       	rcall	.-92     	; 0x4088 <_ZN6StreamC1Ev>
    40e4:	29 e3       	ldi	r18, 0x39	; 57
    40e6:	32 e0       	ldi	r19, 0x02	; 2
    40e8:	89 81       	ldd	r24, Y+1	; 0x01
    40ea:	9a 81       	ldd	r25, Y+2	; 0x02
    40ec:	fc 01       	movw	r30, r24
    40ee:	31 83       	std	Z+1, r19	; 0x01
    40f0:	20 83       	st	Z, r18
    40f2:	00 00       	nop
    40f4:	0f 90       	pop	r0
    40f6:	0f 90       	pop	r0
    40f8:	df 91       	pop	r29
    40fa:	cf 91       	pop	r28
    40fc:	08 95       	ret

000040fe <_ZN7TwoWire5beginEv>:
    40fe:	cf 93       	push	r28
    4100:	df 93       	push	r29
    4102:	1f 92       	push	r1
    4104:	1f 92       	push	r1
    4106:	cd b7       	in	r28, 0x3d	; 61
    4108:	de b7       	in	r29, 0x3e	; 62
    410a:	9a 83       	std	Y+2, r25	; 0x02
    410c:	89 83       	std	Y+1, r24	; 0x01
    410e:	10 92 e8 03 	sts	0x03E8, r1	; 0x8003e8 <_ZN7TwoWire13rxBufferIndexE>
    4112:	10 92 e9 03 	sts	0x03E9, r1	; 0x8003e9 <_ZN7TwoWire14rxBufferLengthE>
    4116:	10 92 0b 04 	sts	0x040B, r1	; 0x80040b <_ZN7TwoWire13txBufferIndexE>
    411a:	10 92 0c 04 	sts	0x040C, r1	; 0x80040c <_ZN7TwoWire14txBufferLengthE>
    411e:	30 d9       	rcall	.-3488   	; 0x3380 <twi_init>
    4120:	8b e1       	ldi	r24, 0x1B	; 27
    4122:	93 e2       	ldi	r25, 0x23	; 35
    4124:	4f dc       	rcall	.-1890   	; 0x39c4 <twi_attachSlaveTxEvent>
    4126:	8e ec       	ldi	r24, 0xCE	; 206
    4128:	92 e2       	ldi	r25, 0x22	; 34
    412a:	38 dc       	rcall	.-1936   	; 0x399c <twi_attachSlaveRxEvent>
    412c:	00 00       	nop
    412e:	0f 90       	pop	r0
    4130:	0f 90       	pop	r0
    4132:	df 91       	pop	r29
    4134:	cf 91       	pop	r28
    4136:	08 95       	ret

00004138 <_ZN7TwoWire8setClockEm>:
    4138:	cf 93       	push	r28
    413a:	df 93       	push	r29
    413c:	00 d0       	rcall	.+0      	; 0x413e <_ZN7TwoWire8setClockEm+0x6>
    413e:	00 d0       	rcall	.+0      	; 0x4140 <_ZN7TwoWire8setClockEm+0x8>
    4140:	cd b7       	in	r28, 0x3d	; 61
    4142:	de b7       	in	r29, 0x3e	; 62
    4144:	9a 83       	std	Y+2, r25	; 0x02
    4146:	89 83       	std	Y+1, r24	; 0x01
    4148:	4b 83       	std	Y+3, r20	; 0x03
    414a:	5c 83       	std	Y+4, r21	; 0x04
    414c:	6d 83       	std	Y+5, r22	; 0x05
    414e:	7e 83       	std	Y+6, r23	; 0x06
    4150:	8b 81       	ldd	r24, Y+3	; 0x03
    4152:	9c 81       	ldd	r25, Y+4	; 0x04
    4154:	ad 81       	ldd	r26, Y+5	; 0x05
    4156:	be 81       	ldd	r27, Y+6	; 0x06
    4158:	bc 01       	movw	r22, r24
    415a:	cd 01       	movw	r24, r26
    415c:	5d d9       	rcall	.-3398   	; 0x3418 <twi_setFrequency>
    415e:	00 00       	nop
    4160:	26 96       	adiw	r28, 0x06	; 6
    4162:	0f b6       	in	r0, 0x3f	; 63
    4164:	f8 94       	cli
    4166:	de bf       	out	0x3e, r29	; 62
    4168:	0f be       	out	0x3f, r0	; 63
    416a:	cd bf       	out	0x3d, r28	; 61
    416c:	df 91       	pop	r29
    416e:	cf 91       	pop	r28
    4170:	08 95       	ret

00004172 <_ZN7TwoWire11requestFromEhhmhh>:
    4172:	cf 92       	push	r12
    4174:	ef 92       	push	r14
    4176:	0f 93       	push	r16
    4178:	1f 93       	push	r17
    417a:	cf 93       	push	r28
    417c:	df 93       	push	r29
    417e:	cd b7       	in	r28, 0x3d	; 61
    4180:	de b7       	in	r29, 0x3e	; 62
    4182:	2b 97       	sbiw	r28, 0x0b	; 11
    4184:	0f b6       	in	r0, 0x3f	; 63
    4186:	f8 94       	cli
    4188:	de bf       	out	0x3e, r29	; 62
    418a:	0f be       	out	0x3f, r0	; 63
    418c:	cd bf       	out	0x3d, r28	; 61
    418e:	9b 83       	std	Y+3, r25	; 0x03
    4190:	8a 83       	std	Y+2, r24	; 0x02
    4192:	6c 83       	std	Y+4, r22	; 0x04
    4194:	4d 83       	std	Y+5, r20	; 0x05
    4196:	0e 83       	std	Y+6, r16	; 0x06
    4198:	1f 83       	std	Y+7, r17	; 0x07
    419a:	28 87       	std	Y+8, r18	; 0x08
    419c:	39 87       	std	Y+9, r19	; 0x09
    419e:	ea 86       	std	Y+10, r14	; 0x0a
    41a0:	cb 86       	std	Y+11, r12	; 0x0b
    41a2:	8a 85       	ldd	r24, Y+10	; 0x0a
    41a4:	88 23       	and	r24, r24
    41a6:	d9 f1       	breq	.+118    	; 0x421e <_ZN7TwoWire11requestFromEhhmhh+0xac>
    41a8:	8a 81       	ldd	r24, Y+2	; 0x02
    41aa:	9b 81       	ldd	r25, Y+3	; 0x03
    41ac:	6c 81       	ldd	r22, Y+4	; 0x04
    41ae:	98 d0       	rcall	.+304    	; 0x42e0 <_ZN7TwoWire17beginTransmissionEh>
    41b0:	8a 85       	ldd	r24, Y+10	; 0x0a
    41b2:	84 30       	cpi	r24, 0x04	; 4
    41b4:	10 f0       	brcs	.+4      	; 0x41ba <_ZN7TwoWire11requestFromEhhmhh+0x48>
    41b6:	83 e0       	ldi	r24, 0x03	; 3
    41b8:	8a 87       	std	Y+10, r24	; 0x0a
    41ba:	8a 85       	ldd	r24, Y+10	; 0x0a
    41bc:	9f ef       	ldi	r25, 0xFF	; 255
    41be:	98 0f       	add	r25, r24
    41c0:	9a 87       	std	Y+10, r25	; 0x0a
    41c2:	91 e0       	ldi	r25, 0x01	; 1
    41c4:	88 23       	and	r24, r24
    41c6:	09 f4       	brne	.+2      	; 0x41ca <_ZN7TwoWire11requestFromEhhmhh+0x58>
    41c8:	90 e0       	ldi	r25, 0x00	; 0
    41ca:	99 23       	and	r25, r25
    41cc:	21 f1       	breq	.+72     	; 0x4216 <_ZN7TwoWire11requestFromEhhmhh+0xa4>
    41ce:	8a 81       	ldd	r24, Y+2	; 0x02
    41d0:	9b 81       	ldd	r25, Y+3	; 0x03
    41d2:	fc 01       	movw	r30, r24
    41d4:	80 81       	ld	r24, Z
    41d6:	91 81       	ldd	r25, Z+1	; 0x01
    41d8:	fc 01       	movw	r30, r24
    41da:	20 81       	ld	r18, Z
    41dc:	31 81       	ldd	r19, Z+1	; 0x01
    41de:	8a 85       	ldd	r24, Y+10	; 0x0a
    41e0:	88 2f       	mov	r24, r24
    41e2:	90 e0       	ldi	r25, 0x00	; 0
    41e4:	ac 01       	movw	r20, r24
    41e6:	44 0f       	add	r20, r20
    41e8:	55 1f       	adc	r21, r21
    41ea:	44 0f       	add	r20, r20
    41ec:	55 1f       	adc	r21, r21
    41ee:	44 0f       	add	r20, r20
    41f0:	55 1f       	adc	r21, r21
    41f2:	8e 81       	ldd	r24, Y+6	; 0x06
    41f4:	9f 81       	ldd	r25, Y+7	; 0x07
    41f6:	a8 85       	ldd	r26, Y+8	; 0x08
    41f8:	b9 85       	ldd	r27, Y+9	; 0x09
    41fa:	04 c0       	rjmp	.+8      	; 0x4204 <_ZN7TwoWire11requestFromEhhmhh+0x92>
    41fc:	b6 95       	lsr	r27
    41fe:	a7 95       	ror	r26
    4200:	97 95       	ror	r25
    4202:	87 95       	ror	r24
    4204:	4a 95       	dec	r20
    4206:	d2 f7       	brpl	.-12     	; 0x41fc <_ZN7TwoWire11requestFromEhhmhh+0x8a>
    4208:	48 2f       	mov	r20, r24
    420a:	8a 81       	ldd	r24, Y+2	; 0x02
    420c:	9b 81       	ldd	r25, Y+3	; 0x03
    420e:	64 2f       	mov	r22, r20
    4210:	f9 01       	movw	r30, r18
    4212:	19 95       	eicall
    4214:	d2 cf       	rjmp	.-92     	; 0x41ba <_ZN7TwoWire11requestFromEhhmhh+0x48>
    4216:	8a 81       	ldd	r24, Y+2	; 0x02
    4218:	9b 81       	ldd	r25, Y+3	; 0x03
    421a:	60 e0       	ldi	r22, 0x00	; 0
    421c:	91 d0       	rcall	.+290    	; 0x4340 <_ZN7TwoWire15endTransmissionEh>
    421e:	8d 81       	ldd	r24, Y+5	; 0x05
    4220:	81 32       	cpi	r24, 0x21	; 33
    4222:	10 f0       	brcs	.+4      	; 0x4228 <_ZN7TwoWire11requestFromEhhmhh+0xb6>
    4224:	80 e2       	ldi	r24, 0x20	; 32
    4226:	8d 83       	std	Y+5, r24	; 0x05
    4228:	2b 85       	ldd	r18, Y+11	; 0x0b
    422a:	4d 81       	ldd	r20, Y+5	; 0x05
    422c:	68 ec       	ldi	r22, 0xC8	; 200
    422e:	73 e0       	ldi	r23, 0x03	; 3
    4230:	8c 81       	ldd	r24, Y+4	; 0x04
    4232:	21 d9       	rcall	.-3518   	; 0x3476 <twi_readFrom>
    4234:	89 83       	std	Y+1, r24	; 0x01
    4236:	10 92 e8 03 	sts	0x03E8, r1	; 0x8003e8 <_ZN7TwoWire13rxBufferIndexE>
    423a:	89 81       	ldd	r24, Y+1	; 0x01
    423c:	80 93 e9 03 	sts	0x03E9, r24	; 0x8003e9 <_ZN7TwoWire14rxBufferLengthE>
    4240:	89 81       	ldd	r24, Y+1	; 0x01
    4242:	2b 96       	adiw	r28, 0x0b	; 11
    4244:	0f b6       	in	r0, 0x3f	; 63
    4246:	f8 94       	cli
    4248:	de bf       	out	0x3e, r29	; 62
    424a:	0f be       	out	0x3f, r0	; 63
    424c:	cd bf       	out	0x3d, r28	; 61
    424e:	df 91       	pop	r29
    4250:	cf 91       	pop	r28
    4252:	1f 91       	pop	r17
    4254:	0f 91       	pop	r16
    4256:	ef 90       	pop	r14
    4258:	cf 90       	pop	r12
    425a:	08 95       	ret

0000425c <_ZN7TwoWire11requestFromEhhh>:
    425c:	cf 92       	push	r12
    425e:	ef 92       	push	r14
    4260:	0f 93       	push	r16
    4262:	1f 93       	push	r17
    4264:	cf 93       	push	r28
    4266:	df 93       	push	r29
    4268:	00 d0       	rcall	.+0      	; 0x426a <_ZN7TwoWire11requestFromEhhh+0xe>
    426a:	1f 92       	push	r1
    426c:	1f 92       	push	r1
    426e:	cd b7       	in	r28, 0x3d	; 61
    4270:	de b7       	in	r29, 0x3e	; 62
    4272:	9a 83       	std	Y+2, r25	; 0x02
    4274:	89 83       	std	Y+1, r24	; 0x01
    4276:	6b 83       	std	Y+3, r22	; 0x03
    4278:	4c 83       	std	Y+4, r20	; 0x04
    427a:	2d 83       	std	Y+5, r18	; 0x05
    427c:	89 81       	ldd	r24, Y+1	; 0x01
    427e:	9a 81       	ldd	r25, Y+2	; 0x02
    4280:	cd 80       	ldd	r12, Y+5	; 0x05
    4282:	e1 2c       	mov	r14, r1
    4284:	00 e0       	ldi	r16, 0x00	; 0
    4286:	10 e0       	ldi	r17, 0x00	; 0
    4288:	98 01       	movw	r18, r16
    428a:	4c 81       	ldd	r20, Y+4	; 0x04
    428c:	6b 81       	ldd	r22, Y+3	; 0x03
    428e:	71 df       	rcall	.-286    	; 0x4172 <_ZN7TwoWire11requestFromEhhmhh>
    4290:	0f 90       	pop	r0
    4292:	0f 90       	pop	r0
    4294:	0f 90       	pop	r0
    4296:	0f 90       	pop	r0
    4298:	0f 90       	pop	r0
    429a:	df 91       	pop	r29
    429c:	cf 91       	pop	r28
    429e:	1f 91       	pop	r17
    42a0:	0f 91       	pop	r16
    42a2:	ef 90       	pop	r14
    42a4:	cf 90       	pop	r12
    42a6:	08 95       	ret

000042a8 <_ZN7TwoWire11requestFromEii>:
    42a8:	cf 93       	push	r28
    42aa:	df 93       	push	r29
    42ac:	00 d0       	rcall	.+0      	; 0x42ae <_ZN7TwoWire11requestFromEii+0x6>
    42ae:	00 d0       	rcall	.+0      	; 0x42b0 <_ZN7TwoWire11requestFromEii+0x8>
    42b0:	cd b7       	in	r28, 0x3d	; 61
    42b2:	de b7       	in	r29, 0x3e	; 62
    42b4:	9a 83       	std	Y+2, r25	; 0x02
    42b6:	89 83       	std	Y+1, r24	; 0x01
    42b8:	7c 83       	std	Y+4, r23	; 0x04
    42ba:	6b 83       	std	Y+3, r22	; 0x03
    42bc:	5e 83       	std	Y+6, r21	; 0x06
    42be:	4d 83       	std	Y+5, r20	; 0x05
    42c0:	4d 81       	ldd	r20, Y+5	; 0x05
    42c2:	3b 81       	ldd	r19, Y+3	; 0x03
    42c4:	89 81       	ldd	r24, Y+1	; 0x01
    42c6:	9a 81       	ldd	r25, Y+2	; 0x02
    42c8:	21 e0       	ldi	r18, 0x01	; 1
    42ca:	63 2f       	mov	r22, r19
    42cc:	c7 df       	rcall	.-114    	; 0x425c <_ZN7TwoWire11requestFromEhhh>
    42ce:	26 96       	adiw	r28, 0x06	; 6
    42d0:	0f b6       	in	r0, 0x3f	; 63
    42d2:	f8 94       	cli
    42d4:	de bf       	out	0x3e, r29	; 62
    42d6:	0f be       	out	0x3f, r0	; 63
    42d8:	cd bf       	out	0x3d, r28	; 61
    42da:	df 91       	pop	r29
    42dc:	cf 91       	pop	r28
    42de:	08 95       	ret

000042e0 <_ZN7TwoWire17beginTransmissionEh>:
    42e0:	cf 93       	push	r28
    42e2:	df 93       	push	r29
    42e4:	00 d0       	rcall	.+0      	; 0x42e6 <_ZN7TwoWire17beginTransmissionEh+0x6>
    42e6:	cd b7       	in	r28, 0x3d	; 61
    42e8:	de b7       	in	r29, 0x3e	; 62
    42ea:	9a 83       	std	Y+2, r25	; 0x02
    42ec:	89 83       	std	Y+1, r24	; 0x01
    42ee:	6b 83       	std	Y+3, r22	; 0x03
    42f0:	81 e0       	ldi	r24, 0x01	; 1
    42f2:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <_ZN7TwoWire12transmittingE>
    42f6:	8b 81       	ldd	r24, Y+3	; 0x03
    42f8:	80 93 ea 03 	sts	0x03EA, r24	; 0x8003ea <_ZN7TwoWire9txAddressE>
    42fc:	10 92 0b 04 	sts	0x040B, r1	; 0x80040b <_ZN7TwoWire13txBufferIndexE>
    4300:	10 92 0c 04 	sts	0x040C, r1	; 0x80040c <_ZN7TwoWire14txBufferLengthE>
    4304:	00 00       	nop
    4306:	0f 90       	pop	r0
    4308:	0f 90       	pop	r0
    430a:	0f 90       	pop	r0
    430c:	df 91       	pop	r29
    430e:	cf 91       	pop	r28
    4310:	08 95       	ret

00004312 <_ZN7TwoWire17beginTransmissionEi>:
    4312:	cf 93       	push	r28
    4314:	df 93       	push	r29
    4316:	00 d0       	rcall	.+0      	; 0x4318 <_ZN7TwoWire17beginTransmissionEi+0x6>
    4318:	1f 92       	push	r1
    431a:	cd b7       	in	r28, 0x3d	; 61
    431c:	de b7       	in	r29, 0x3e	; 62
    431e:	9a 83       	std	Y+2, r25	; 0x02
    4320:	89 83       	std	Y+1, r24	; 0x01
    4322:	7c 83       	std	Y+4, r23	; 0x04
    4324:	6b 83       	std	Y+3, r22	; 0x03
    4326:	2b 81       	ldd	r18, Y+3	; 0x03
    4328:	89 81       	ldd	r24, Y+1	; 0x01
    432a:	9a 81       	ldd	r25, Y+2	; 0x02
    432c:	62 2f       	mov	r22, r18
    432e:	d8 df       	rcall	.-80     	; 0x42e0 <_ZN7TwoWire17beginTransmissionEh>
    4330:	00 00       	nop
    4332:	0f 90       	pop	r0
    4334:	0f 90       	pop	r0
    4336:	0f 90       	pop	r0
    4338:	0f 90       	pop	r0
    433a:	df 91       	pop	r29
    433c:	cf 91       	pop	r28
    433e:	08 95       	ret

00004340 <_ZN7TwoWire15endTransmissionEh>:
    4340:	0f 93       	push	r16
    4342:	cf 93       	push	r28
    4344:	df 93       	push	r29
    4346:	00 d0       	rcall	.+0      	; 0x4348 <_ZN7TwoWire15endTransmissionEh+0x8>
    4348:	1f 92       	push	r1
    434a:	cd b7       	in	r28, 0x3d	; 61
    434c:	de b7       	in	r29, 0x3e	; 62
    434e:	9b 83       	std	Y+3, r25	; 0x03
    4350:	8a 83       	std	Y+2, r24	; 0x02
    4352:	6c 83       	std	Y+4, r22	; 0x04
    4354:	90 91 0c 04 	lds	r25, 0x040C	; 0x80040c <_ZN7TwoWire14txBufferLengthE>
    4358:	80 91 ea 03 	lds	r24, 0x03EA	; 0x8003ea <_ZN7TwoWire9txAddressE>
    435c:	0c 81       	ldd	r16, Y+4	; 0x04
    435e:	21 e0       	ldi	r18, 0x01	; 1
    4360:	49 2f       	mov	r20, r25
    4362:	6b ee       	ldi	r22, 0xEB	; 235
    4364:	73 e0       	ldi	r23, 0x03	; 3
    4366:	a5 d9       	rcall	.-3254   	; 0x36b2 <twi_writeTo>
    4368:	89 83       	std	Y+1, r24	; 0x01
    436a:	10 92 0b 04 	sts	0x040B, r1	; 0x80040b <_ZN7TwoWire13txBufferIndexE>
    436e:	10 92 0c 04 	sts	0x040C, r1	; 0x80040c <_ZN7TwoWire14txBufferLengthE>
    4372:	10 92 0d 04 	sts	0x040D, r1	; 0x80040d <_ZN7TwoWire12transmittingE>
    4376:	89 81       	ldd	r24, Y+1	; 0x01
    4378:	0f 90       	pop	r0
    437a:	0f 90       	pop	r0
    437c:	0f 90       	pop	r0
    437e:	0f 90       	pop	r0
    4380:	df 91       	pop	r29
    4382:	cf 91       	pop	r28
    4384:	0f 91       	pop	r16
    4386:	08 95       	ret

00004388 <_ZN7TwoWire15endTransmissionEv>:
    4388:	cf 93       	push	r28
    438a:	df 93       	push	r29
    438c:	1f 92       	push	r1
    438e:	1f 92       	push	r1
    4390:	cd b7       	in	r28, 0x3d	; 61
    4392:	de b7       	in	r29, 0x3e	; 62
    4394:	9a 83       	std	Y+2, r25	; 0x02
    4396:	89 83       	std	Y+1, r24	; 0x01
    4398:	89 81       	ldd	r24, Y+1	; 0x01
    439a:	9a 81       	ldd	r25, Y+2	; 0x02
    439c:	61 e0       	ldi	r22, 0x01	; 1
    439e:	d0 df       	rcall	.-96     	; 0x4340 <_ZN7TwoWire15endTransmissionEh>
    43a0:	0f 90       	pop	r0
    43a2:	0f 90       	pop	r0
    43a4:	df 91       	pop	r29
    43a6:	cf 91       	pop	r28
    43a8:	08 95       	ret

000043aa <_ZN7TwoWire5writeEh>:
    43aa:	cf 93       	push	r28
    43ac:	df 93       	push	r29
    43ae:	00 d0       	rcall	.+0      	; 0x43b0 <_ZN7TwoWire5writeEh+0x6>
    43b0:	cd b7       	in	r28, 0x3d	; 61
    43b2:	de b7       	in	r29, 0x3e	; 62
    43b4:	9a 83       	std	Y+2, r25	; 0x02
    43b6:	89 83       	std	Y+1, r24	; 0x01
    43b8:	6b 83       	std	Y+3, r22	; 0x03
    43ba:	80 91 0d 04 	lds	r24, 0x040D	; 0x80040d <_ZN7TwoWire12transmittingE>
    43be:	88 23       	and	r24, r24
    43c0:	f9 f0       	breq	.+62     	; 0x4400 <_ZN7TwoWire5writeEh+0x56>
    43c2:	80 91 0c 04 	lds	r24, 0x040C	; 0x80040c <_ZN7TwoWire14txBufferLengthE>
    43c6:	80 32       	cpi	r24, 0x20	; 32
    43c8:	40 f0       	brcs	.+16     	; 0x43da <_ZN7TwoWire5writeEh+0x30>
    43ca:	89 81       	ldd	r24, Y+1	; 0x01
    43cc:	9a 81       	ldd	r25, Y+2	; 0x02
    43ce:	61 e0       	ldi	r22, 0x01	; 1
    43d0:	70 e0       	ldi	r23, 0x00	; 0
    43d2:	0a de       	rcall	.-1004   	; 0x3fe8 <_ZN5Print13setWriteErrorEi>
    43d4:	80 e0       	ldi	r24, 0x00	; 0
    43d6:	90 e0       	ldi	r25, 0x00	; 0
    43d8:	19 c0       	rjmp	.+50     	; 0x440c <_ZN7TwoWire5writeEh+0x62>
    43da:	80 91 0b 04 	lds	r24, 0x040B	; 0x80040b <_ZN7TwoWire13txBufferIndexE>
    43de:	88 2f       	mov	r24, r24
    43e0:	90 e0       	ldi	r25, 0x00	; 0
    43e2:	2b 81       	ldd	r18, Y+3	; 0x03
    43e4:	85 51       	subi	r24, 0x15	; 21
    43e6:	9c 4f       	sbci	r25, 0xFC	; 252
    43e8:	fc 01       	movw	r30, r24
    43ea:	20 83       	st	Z, r18
    43ec:	80 91 0b 04 	lds	r24, 0x040B	; 0x80040b <_ZN7TwoWire13txBufferIndexE>
    43f0:	8f 5f       	subi	r24, 0xFF	; 255
    43f2:	80 93 0b 04 	sts	0x040B, r24	; 0x80040b <_ZN7TwoWire13txBufferIndexE>
    43f6:	80 91 0b 04 	lds	r24, 0x040B	; 0x80040b <_ZN7TwoWire13txBufferIndexE>
    43fa:	80 93 0c 04 	sts	0x040C, r24	; 0x80040c <_ZN7TwoWire14txBufferLengthE>
    43fe:	04 c0       	rjmp	.+8      	; 0x4408 <_ZN7TwoWire5writeEh+0x5e>
    4400:	ce 01       	movw	r24, r28
    4402:	03 96       	adiw	r24, 0x03	; 3
    4404:	61 e0       	ldi	r22, 0x01	; 1
    4406:	81 da       	rcall	.-2814   	; 0x390a <twi_transmit>
    4408:	81 e0       	ldi	r24, 0x01	; 1
    440a:	90 e0       	ldi	r25, 0x00	; 0
    440c:	0f 90       	pop	r0
    440e:	0f 90       	pop	r0
    4410:	0f 90       	pop	r0
    4412:	df 91       	pop	r29
    4414:	cf 91       	pop	r28
    4416:	08 95       	ret

00004418 <_ZN7TwoWire5writeEPKhj>:
    4418:	cf 93       	push	r28
    441a:	df 93       	push	r29
    441c:	cd b7       	in	r28, 0x3d	; 61
    441e:	de b7       	in	r29, 0x3e	; 62
    4420:	28 97       	sbiw	r28, 0x08	; 8
    4422:	0f b6       	in	r0, 0x3f	; 63
    4424:	f8 94       	cli
    4426:	de bf       	out	0x3e, r29	; 62
    4428:	0f be       	out	0x3f, r0	; 63
    442a:	cd bf       	out	0x3d, r28	; 61
    442c:	9c 83       	std	Y+4, r25	; 0x04
    442e:	8b 83       	std	Y+3, r24	; 0x03
    4430:	7e 83       	std	Y+6, r23	; 0x06
    4432:	6d 83       	std	Y+5, r22	; 0x05
    4434:	58 87       	std	Y+8, r21	; 0x08
    4436:	4f 83       	std	Y+7, r20	; 0x07
    4438:	80 91 0d 04 	lds	r24, 0x040D	; 0x80040d <_ZN7TwoWire12transmittingE>
    443c:	88 23       	and	r24, r24
    443e:	21 f1       	breq	.+72     	; 0x4488 <_ZN7TwoWire5writeEPKhj+0x70>
    4440:	1a 82       	std	Y+2, r1	; 0x02
    4442:	19 82       	std	Y+1, r1	; 0x01
    4444:	29 81       	ldd	r18, Y+1	; 0x01
    4446:	3a 81       	ldd	r19, Y+2	; 0x02
    4448:	8f 81       	ldd	r24, Y+7	; 0x07
    444a:	98 85       	ldd	r25, Y+8	; 0x08
    444c:	28 17       	cp	r18, r24
    444e:	39 07       	cpc	r19, r25
    4450:	00 f5       	brcc	.+64     	; 0x4492 <_ZN7TwoWire5writeEPKhj+0x7a>
    4452:	8b 81       	ldd	r24, Y+3	; 0x03
    4454:	9c 81       	ldd	r25, Y+4	; 0x04
    4456:	fc 01       	movw	r30, r24
    4458:	80 81       	ld	r24, Z
    445a:	91 81       	ldd	r25, Z+1	; 0x01
    445c:	fc 01       	movw	r30, r24
    445e:	20 81       	ld	r18, Z
    4460:	31 81       	ldd	r19, Z+1	; 0x01
    4462:	4d 81       	ldd	r20, Y+5	; 0x05
    4464:	5e 81       	ldd	r21, Y+6	; 0x06
    4466:	89 81       	ldd	r24, Y+1	; 0x01
    4468:	9a 81       	ldd	r25, Y+2	; 0x02
    446a:	84 0f       	add	r24, r20
    446c:	95 1f       	adc	r25, r21
    446e:	fc 01       	movw	r30, r24
    4470:	40 81       	ld	r20, Z
    4472:	8b 81       	ldd	r24, Y+3	; 0x03
    4474:	9c 81       	ldd	r25, Y+4	; 0x04
    4476:	64 2f       	mov	r22, r20
    4478:	f9 01       	movw	r30, r18
    447a:	19 95       	eicall
    447c:	89 81       	ldd	r24, Y+1	; 0x01
    447e:	9a 81       	ldd	r25, Y+2	; 0x02
    4480:	01 96       	adiw	r24, 0x01	; 1
    4482:	9a 83       	std	Y+2, r25	; 0x02
    4484:	89 83       	std	Y+1, r24	; 0x01
    4486:	de cf       	rjmp	.-68     	; 0x4444 <_ZN7TwoWire5writeEPKhj+0x2c>
    4488:	2f 81       	ldd	r18, Y+7	; 0x07
    448a:	8d 81       	ldd	r24, Y+5	; 0x05
    448c:	9e 81       	ldd	r25, Y+6	; 0x06
    448e:	62 2f       	mov	r22, r18
    4490:	3c da       	rcall	.-2952   	; 0x390a <twi_transmit>
    4492:	8f 81       	ldd	r24, Y+7	; 0x07
    4494:	98 85       	ldd	r25, Y+8	; 0x08
    4496:	28 96       	adiw	r28, 0x08	; 8
    4498:	0f b6       	in	r0, 0x3f	; 63
    449a:	f8 94       	cli
    449c:	de bf       	out	0x3e, r29	; 62
    449e:	0f be       	out	0x3f, r0	; 63
    44a0:	cd bf       	out	0x3d, r28	; 61
    44a2:	df 91       	pop	r29
    44a4:	cf 91       	pop	r28
    44a6:	08 95       	ret

000044a8 <_ZN7TwoWire9availableEv>:
    44a8:	cf 93       	push	r28
    44aa:	df 93       	push	r29
    44ac:	1f 92       	push	r1
    44ae:	1f 92       	push	r1
    44b0:	cd b7       	in	r28, 0x3d	; 61
    44b2:	de b7       	in	r29, 0x3e	; 62
    44b4:	9a 83       	std	Y+2, r25	; 0x02
    44b6:	89 83       	std	Y+1, r24	; 0x01
    44b8:	80 91 e9 03 	lds	r24, 0x03E9	; 0x8003e9 <_ZN7TwoWire14rxBufferLengthE>
    44bc:	28 2f       	mov	r18, r24
    44be:	30 e0       	ldi	r19, 0x00	; 0
    44c0:	80 91 e8 03 	lds	r24, 0x03E8	; 0x8003e8 <_ZN7TwoWire13rxBufferIndexE>
    44c4:	88 2f       	mov	r24, r24
    44c6:	90 e0       	ldi	r25, 0x00	; 0
    44c8:	a9 01       	movw	r20, r18
    44ca:	48 1b       	sub	r20, r24
    44cc:	59 0b       	sbc	r21, r25
    44ce:	ca 01       	movw	r24, r20
    44d0:	0f 90       	pop	r0
    44d2:	0f 90       	pop	r0
    44d4:	df 91       	pop	r29
    44d6:	cf 91       	pop	r28
    44d8:	08 95       	ret

000044da <_ZN7TwoWire4readEv>:
    44da:	cf 93       	push	r28
    44dc:	df 93       	push	r29
    44de:	00 d0       	rcall	.+0      	; 0x44e0 <_ZN7TwoWire4readEv+0x6>
    44e0:	1f 92       	push	r1
    44e2:	cd b7       	in	r28, 0x3d	; 61
    44e4:	de b7       	in	r29, 0x3e	; 62
    44e6:	9c 83       	std	Y+4, r25	; 0x04
    44e8:	8b 83       	std	Y+3, r24	; 0x03
    44ea:	8f ef       	ldi	r24, 0xFF	; 255
    44ec:	9f ef       	ldi	r25, 0xFF	; 255
    44ee:	9a 83       	std	Y+2, r25	; 0x02
    44f0:	89 83       	std	Y+1, r24	; 0x01
    44f2:	90 91 e8 03 	lds	r25, 0x03E8	; 0x8003e8 <_ZN7TwoWire13rxBufferIndexE>
    44f6:	80 91 e9 03 	lds	r24, 0x03E9	; 0x8003e9 <_ZN7TwoWire14rxBufferLengthE>
    44fa:	98 17       	cp	r25, r24
    44fc:	88 f4       	brcc	.+34     	; 0x4520 <_ZN7TwoWire4readEv+0x46>
    44fe:	80 91 e8 03 	lds	r24, 0x03E8	; 0x8003e8 <_ZN7TwoWire13rxBufferIndexE>
    4502:	88 2f       	mov	r24, r24
    4504:	90 e0       	ldi	r25, 0x00	; 0
    4506:	88 53       	subi	r24, 0x38	; 56
    4508:	9c 4f       	sbci	r25, 0xFC	; 252
    450a:	fc 01       	movw	r30, r24
    450c:	80 81       	ld	r24, Z
    450e:	88 2f       	mov	r24, r24
    4510:	90 e0       	ldi	r25, 0x00	; 0
    4512:	9a 83       	std	Y+2, r25	; 0x02
    4514:	89 83       	std	Y+1, r24	; 0x01
    4516:	80 91 e8 03 	lds	r24, 0x03E8	; 0x8003e8 <_ZN7TwoWire13rxBufferIndexE>
    451a:	8f 5f       	subi	r24, 0xFF	; 255
    451c:	80 93 e8 03 	sts	0x03E8, r24	; 0x8003e8 <_ZN7TwoWire13rxBufferIndexE>
    4520:	89 81       	ldd	r24, Y+1	; 0x01
    4522:	9a 81       	ldd	r25, Y+2	; 0x02
    4524:	0f 90       	pop	r0
    4526:	0f 90       	pop	r0
    4528:	0f 90       	pop	r0
    452a:	0f 90       	pop	r0
    452c:	df 91       	pop	r29
    452e:	cf 91       	pop	r28
    4530:	08 95       	ret

00004532 <_ZN7TwoWire4peekEv>:
    4532:	cf 93       	push	r28
    4534:	df 93       	push	r29
    4536:	00 d0       	rcall	.+0      	; 0x4538 <_ZN7TwoWire4peekEv+0x6>
    4538:	1f 92       	push	r1
    453a:	cd b7       	in	r28, 0x3d	; 61
    453c:	de b7       	in	r29, 0x3e	; 62
    453e:	9c 83       	std	Y+4, r25	; 0x04
    4540:	8b 83       	std	Y+3, r24	; 0x03
    4542:	8f ef       	ldi	r24, 0xFF	; 255
    4544:	9f ef       	ldi	r25, 0xFF	; 255
    4546:	9a 83       	std	Y+2, r25	; 0x02
    4548:	89 83       	std	Y+1, r24	; 0x01
    454a:	90 91 e8 03 	lds	r25, 0x03E8	; 0x8003e8 <_ZN7TwoWire13rxBufferIndexE>
    454e:	80 91 e9 03 	lds	r24, 0x03E9	; 0x8003e9 <_ZN7TwoWire14rxBufferLengthE>
    4552:	98 17       	cp	r25, r24
    4554:	60 f4       	brcc	.+24     	; 0x456e <_ZN7TwoWire4peekEv+0x3c>
    4556:	80 91 e8 03 	lds	r24, 0x03E8	; 0x8003e8 <_ZN7TwoWire13rxBufferIndexE>
    455a:	88 2f       	mov	r24, r24
    455c:	90 e0       	ldi	r25, 0x00	; 0
    455e:	88 53       	subi	r24, 0x38	; 56
    4560:	9c 4f       	sbci	r25, 0xFC	; 252
    4562:	fc 01       	movw	r30, r24
    4564:	80 81       	ld	r24, Z
    4566:	88 2f       	mov	r24, r24
    4568:	90 e0       	ldi	r25, 0x00	; 0
    456a:	9a 83       	std	Y+2, r25	; 0x02
    456c:	89 83       	std	Y+1, r24	; 0x01
    456e:	89 81       	ldd	r24, Y+1	; 0x01
    4570:	9a 81       	ldd	r25, Y+2	; 0x02
    4572:	0f 90       	pop	r0
    4574:	0f 90       	pop	r0
    4576:	0f 90       	pop	r0
    4578:	0f 90       	pop	r0
    457a:	df 91       	pop	r29
    457c:	cf 91       	pop	r28
    457e:	08 95       	ret

00004580 <_ZN7TwoWire5flushEv>:
    4580:	cf 93       	push	r28
    4582:	df 93       	push	r29
    4584:	1f 92       	push	r1
    4586:	1f 92       	push	r1
    4588:	cd b7       	in	r28, 0x3d	; 61
    458a:	de b7       	in	r29, 0x3e	; 62
    458c:	9a 83       	std	Y+2, r25	; 0x02
    458e:	89 83       	std	Y+1, r24	; 0x01
    4590:	00 00       	nop
    4592:	0f 90       	pop	r0
    4594:	0f 90       	pop	r0
    4596:	df 91       	pop	r29
    4598:	cf 91       	pop	r28
    459a:	08 95       	ret

0000459c <_ZN7TwoWire16onReceiveServiceEPhi>:
    459c:	cf 93       	push	r28
    459e:	df 93       	push	r29
    45a0:	00 d0       	rcall	.+0      	; 0x45a2 <_ZN7TwoWire16onReceiveServiceEPhi+0x6>
    45a2:	1f 92       	push	r1
    45a4:	1f 92       	push	r1
    45a6:	cd b7       	in	r28, 0x3d	; 61
    45a8:	de b7       	in	r29, 0x3e	; 62
    45aa:	9b 83       	std	Y+3, r25	; 0x03
    45ac:	8a 83       	std	Y+2, r24	; 0x02
    45ae:	7d 83       	std	Y+5, r23	; 0x05
    45b0:	6c 83       	std	Y+4, r22	; 0x04
    45b2:	80 91 10 04 	lds	r24, 0x0410	; 0x800410 <_ZN7TwoWire14user_onReceiveE>
    45b6:	90 91 11 04 	lds	r25, 0x0411	; 0x800411 <_ZN7TwoWire14user_onReceiveE+0x1>
    45ba:	89 2b       	or	r24, r25
    45bc:	89 f1       	breq	.+98     	; 0x4620 <_ZN7TwoWire16onReceiveServiceEPhi+0x84>
    45be:	90 91 e8 03 	lds	r25, 0x03E8	; 0x8003e8 <_ZN7TwoWire13rxBufferIndexE>
    45c2:	80 91 e9 03 	lds	r24, 0x03E9	; 0x8003e9 <_ZN7TwoWire14rxBufferLengthE>
    45c6:	98 17       	cp	r25, r24
    45c8:	68 f1       	brcs	.+90     	; 0x4624 <_ZN7TwoWire16onReceiveServiceEPhi+0x88>
    45ca:	19 82       	std	Y+1, r1	; 0x01
    45cc:	89 81       	ldd	r24, Y+1	; 0x01
    45ce:	28 2f       	mov	r18, r24
    45d0:	30 e0       	ldi	r19, 0x00	; 0
    45d2:	8c 81       	ldd	r24, Y+4	; 0x04
    45d4:	9d 81       	ldd	r25, Y+5	; 0x05
    45d6:	28 17       	cp	r18, r24
    45d8:	39 07       	cpc	r19, r25
    45da:	a4 f4       	brge	.+40     	; 0x4604 <_ZN7TwoWire16onReceiveServiceEPhi+0x68>
    45dc:	89 81       	ldd	r24, Y+1	; 0x01
    45de:	88 2f       	mov	r24, r24
    45e0:	90 e0       	ldi	r25, 0x00	; 0
    45e2:	29 81       	ldd	r18, Y+1	; 0x01
    45e4:	22 2f       	mov	r18, r18
    45e6:	30 e0       	ldi	r19, 0x00	; 0
    45e8:	4a 81       	ldd	r20, Y+2	; 0x02
    45ea:	5b 81       	ldd	r21, Y+3	; 0x03
    45ec:	24 0f       	add	r18, r20
    45ee:	35 1f       	adc	r19, r21
    45f0:	f9 01       	movw	r30, r18
    45f2:	20 81       	ld	r18, Z
    45f4:	88 53       	subi	r24, 0x38	; 56
    45f6:	9c 4f       	sbci	r25, 0xFC	; 252
    45f8:	fc 01       	movw	r30, r24
    45fa:	20 83       	st	Z, r18
    45fc:	89 81       	ldd	r24, Y+1	; 0x01
    45fe:	8f 5f       	subi	r24, 0xFF	; 255
    4600:	89 83       	std	Y+1, r24	; 0x01
    4602:	e4 cf       	rjmp	.-56     	; 0x45cc <_ZN7TwoWire16onReceiveServiceEPhi+0x30>
    4604:	10 92 e8 03 	sts	0x03E8, r1	; 0x8003e8 <_ZN7TwoWire13rxBufferIndexE>
    4608:	8c 81       	ldd	r24, Y+4	; 0x04
    460a:	80 93 e9 03 	sts	0x03E9, r24	; 0x8003e9 <_ZN7TwoWire14rxBufferLengthE>
    460e:	20 91 10 04 	lds	r18, 0x0410	; 0x800410 <_ZN7TwoWire14user_onReceiveE>
    4612:	30 91 11 04 	lds	r19, 0x0411	; 0x800411 <_ZN7TwoWire14user_onReceiveE+0x1>
    4616:	8c 81       	ldd	r24, Y+4	; 0x04
    4618:	9d 81       	ldd	r25, Y+5	; 0x05
    461a:	f9 01       	movw	r30, r18
    461c:	19 95       	eicall
    461e:	03 c0       	rjmp	.+6      	; 0x4626 <_ZN7TwoWire16onReceiveServiceEPhi+0x8a>
    4620:	00 00       	nop
    4622:	01 c0       	rjmp	.+2      	; 0x4626 <_ZN7TwoWire16onReceiveServiceEPhi+0x8a>
    4624:	00 00       	nop
    4626:	0f 90       	pop	r0
    4628:	0f 90       	pop	r0
    462a:	0f 90       	pop	r0
    462c:	0f 90       	pop	r0
    462e:	0f 90       	pop	r0
    4630:	df 91       	pop	r29
    4632:	cf 91       	pop	r28
    4634:	08 95       	ret

00004636 <_ZN7TwoWire16onRequestServiceEv>:
    4636:	cf 93       	push	r28
    4638:	df 93       	push	r29
    463a:	cd b7       	in	r28, 0x3d	; 61
    463c:	de b7       	in	r29, 0x3e	; 62
    463e:	80 91 0e 04 	lds	r24, 0x040E	; 0x80040e <_ZN7TwoWire14user_onRequestE>
    4642:	90 91 0f 04 	lds	r25, 0x040F	; 0x80040f <_ZN7TwoWire14user_onRequestE+0x1>
    4646:	89 2b       	or	r24, r25
    4648:	59 f0       	breq	.+22     	; 0x4660 <_ZN7TwoWire16onRequestServiceEv+0x2a>
    464a:	10 92 0b 04 	sts	0x040B, r1	; 0x80040b <_ZN7TwoWire13txBufferIndexE>
    464e:	10 92 0c 04 	sts	0x040C, r1	; 0x80040c <_ZN7TwoWire14txBufferLengthE>
    4652:	80 91 0e 04 	lds	r24, 0x040E	; 0x80040e <_ZN7TwoWire14user_onRequestE>
    4656:	90 91 0f 04 	lds	r25, 0x040F	; 0x80040f <_ZN7TwoWire14user_onRequestE+0x1>
    465a:	fc 01       	movw	r30, r24
    465c:	19 95       	eicall
    465e:	01 c0       	rjmp	.+2      	; 0x4662 <_ZN7TwoWire16onRequestServiceEv+0x2c>
    4660:	00 00       	nop
    4662:	df 91       	pop	r29
    4664:	cf 91       	pop	r28
    4666:	08 95       	ret

00004668 <_Z41__static_initialization_and_destruction_0ii>:

// Preinstantiate Objects //////////////////////////////////////////////////////

TwoWire Wire = TwoWire();
    4668:	cf 93       	push	r28
    466a:	df 93       	push	r29
    466c:	00 d0       	rcall	.+0      	; 0x466e <_Z41__static_initialization_and_destruction_0ii+0x6>
    466e:	1f 92       	push	r1
    4670:	cd b7       	in	r28, 0x3d	; 61
    4672:	de b7       	in	r29, 0x3e	; 62
    4674:	9a 83       	std	Y+2, r25	; 0x02
    4676:	89 83       	std	Y+1, r24	; 0x01
    4678:	7c 83       	std	Y+4, r23	; 0x04
    467a:	6b 83       	std	Y+3, r22	; 0x03
    467c:	89 81       	ldd	r24, Y+1	; 0x01
    467e:	9a 81       	ldd	r25, Y+2	; 0x02
    4680:	01 97       	sbiw	r24, 0x01	; 1
    4682:	39 f4       	brne	.+14     	; 0x4692 <_Z41__static_initialization_and_destruction_0ii+0x2a>
    4684:	8b 81       	ldd	r24, Y+3	; 0x03
    4686:	9c 81       	ldd	r25, Y+4	; 0x04
    4688:	01 96       	adiw	r24, 0x01	; 1
    468a:	19 f4       	brne	.+6      	; 0x4692 <_Z41__static_initialization_and_destruction_0ii+0x2a>
    468c:	82 e1       	ldi	r24, 0x12	; 18
    468e:	94 e0       	ldi	r25, 0x04	; 4
    4690:	1e dd       	rcall	.-1476   	; 0x40ce <_ZN7TwoWireC1Ev>
    4692:	00 00       	nop
    4694:	0f 90       	pop	r0
    4696:	0f 90       	pop	r0
    4698:	0f 90       	pop	r0
    469a:	0f 90       	pop	r0
    469c:	df 91       	pop	r29
    469e:	cf 91       	pop	r28
    46a0:	08 95       	ret

000046a2 <_GLOBAL__sub_I__ZN7TwoWire8rxBufferE>:
    46a2:	cf 93       	push	r28
    46a4:	df 93       	push	r29
    46a6:	cd b7       	in	r28, 0x3d	; 61
    46a8:	de b7       	in	r29, 0x3e	; 62
    46aa:	6f ef       	ldi	r22, 0xFF	; 255
    46ac:	7f ef       	ldi	r23, 0xFF	; 255
    46ae:	81 e0       	ldi	r24, 0x01	; 1
    46b0:	90 e0       	ldi	r25, 0x00	; 0
    46b2:	da df       	rcall	.-76     	; 0x4668 <_Z41__static_initialization_and_destruction_0ii>
    46b4:	df 91       	pop	r29
    46b6:	cf 91       	pop	r28
    46b8:	08 95       	ret

000046ba <_ZN8SPIClass16beginTransactionE11SPISettings>:
  // https://github.com/arduino/Arduino/pull/2449

  // Before using SPI.transfer() or asserting chip select pins,
  // this function is used to gain exclusive access to the SPI bus
  // and configure the correct settings.
  inline static void beginTransaction(SPISettings settings) {
    46ba:	cf 93       	push	r28
    46bc:	df 93       	push	r29
    46be:	00 d0       	rcall	.+0      	; 0x46c0 <_ZN8SPIClass16beginTransactionE11SPISettings+0x6>
    46c0:	cd b7       	in	r28, 0x3d	; 61
    46c2:	de b7       	in	r29, 0x3e	; 62
    46c4:	9b 83       	std	Y+3, r25	; 0x03
    46c6:	8a 83       	std	Y+2, r24	; 0x02
    if (interruptMode > 0) {
    46c8:	80 91 1f 04 	lds	r24, 0x041F	; 0x80041f <_ZN8SPIClass13interruptModeE>
    46cc:	88 23       	and	r24, r24
    46ce:	31 f1       	breq	.+76     	; 0x471c <_ZN8SPIClass16beginTransactionE11SPISettings+0x62>
      uint8_t sreg = SREG;
    46d0:	8f e5       	ldi	r24, 0x5F	; 95
    46d2:	90 e0       	ldi	r25, 0x00	; 0
    46d4:	fc 01       	movw	r30, r24
    46d6:	80 81       	ld	r24, Z
    46d8:	89 83       	std	Y+1, r24	; 0x01
      noInterrupts();
    46da:	f8 94       	cli

      #ifdef SPI_AVR_EIMSK
      if (interruptMode == 1) {
    46dc:	80 91 1f 04 	lds	r24, 0x041F	; 0x80041f <_ZN8SPIClass13interruptModeE>
    46e0:	81 30       	cpi	r24, 0x01	; 1
    46e2:	c9 f4       	brne	.+50     	; 0x4716 <_ZN8SPIClass16beginTransactionE11SPISettings+0x5c>
        interruptSave = SPI_AVR_EIMSK;
    46e4:	8d e3       	ldi	r24, 0x3D	; 61
    46e6:	90 e0       	ldi	r25, 0x00	; 0
    46e8:	fc 01       	movw	r30, r24
    46ea:	80 81       	ld	r24, Z
    46ec:	80 93 21 04 	sts	0x0421, r24	; 0x800421 <_ZN8SPIClass13interruptSaveE>
        SPI_AVR_EIMSK &= ~interruptMask;
    46f0:	8d e3       	ldi	r24, 0x3D	; 61
    46f2:	90 e0       	ldi	r25, 0x00	; 0
    46f4:	2d e3       	ldi	r18, 0x3D	; 61
    46f6:	30 e0       	ldi	r19, 0x00	; 0
    46f8:	f9 01       	movw	r30, r18
    46fa:	20 81       	ld	r18, Z
    46fc:	32 2f       	mov	r19, r18
    46fe:	20 91 20 04 	lds	r18, 0x0420	; 0x800420 <_ZN8SPIClass13interruptMaskE>
    4702:	20 95       	com	r18
    4704:	23 23       	and	r18, r19
    4706:	fc 01       	movw	r30, r24
    4708:	20 83       	st	Z, r18
        SREG = sreg;
    470a:	8f e5       	ldi	r24, 0x5F	; 95
    470c:	90 e0       	ldi	r25, 0x00	; 0
    470e:	29 81       	ldd	r18, Y+1	; 0x01
    4710:	fc 01       	movw	r30, r24
    4712:	20 83       	st	Z, r18
    4714:	03 c0       	rjmp	.+6      	; 0x471c <_ZN8SPIClass16beginTransactionE11SPISettings+0x62>
      } else
      #endif
      {
        interruptSave = sreg;
    4716:	89 81       	ldd	r24, Y+1	; 0x01
    4718:	80 93 21 04 	sts	0x0421, r24	; 0x800421 <_ZN8SPIClass13interruptSaveE>
      digitalWrite(SPI_TRANSACTION_MISMATCH_LED, HIGH);
    }
    inTransactionFlag = 1;
    #endif

    SPCR = settings.spcr;
    471c:	8c e4       	ldi	r24, 0x4C	; 76
    471e:	90 e0       	ldi	r25, 0x00	; 0
    4720:	2a 81       	ldd	r18, Y+2	; 0x02
    4722:	fc 01       	movw	r30, r24
    4724:	20 83       	st	Z, r18
    SPSR = settings.spsr;
    4726:	8d e4       	ldi	r24, 0x4D	; 77
    4728:	90 e0       	ldi	r25, 0x00	; 0
    472a:	2b 81       	ldd	r18, Y+3	; 0x03
    472c:	fc 01       	movw	r30, r24
    472e:	20 83       	st	Z, r18
  }
    4730:	00 00       	nop
    4732:	0f 90       	pop	r0
    4734:	0f 90       	pop	r0
    4736:	0f 90       	pop	r0
    4738:	df 91       	pop	r29
    473a:	cf 91       	pop	r28
    473c:	08 95       	ret

0000473e <_ZN8SPIClass14endTransactionEv>:
    while (!(SPSR & _BV(SPIF))) ;
    *p = SPDR;
  }
  // After performing a group of transfers and releasing the chip select
  // signal, this function allows others to access the SPI bus
  inline static void endTransaction(void) {
    473e:	cf 93       	push	r28
    4740:	df 93       	push	r29
    4742:	1f 92       	push	r1
    4744:	cd b7       	in	r28, 0x3d	; 61
    4746:	de b7       	in	r29, 0x3e	; 62
      digitalWrite(SPI_TRANSACTION_MISMATCH_LED, HIGH);
    }
    inTransactionFlag = 0;
    #endif

    if (interruptMode > 0) {
    4748:	80 91 1f 04 	lds	r24, 0x041F	; 0x80041f <_ZN8SPIClass13interruptModeE>
    474c:	88 23       	and	r24, r24
    474e:	e1 f0       	breq	.+56     	; 0x4788 <_ZN8SPIClass14endTransactionEv+0x4a>
      #ifdef SPI_AVR_EIMSK
      uint8_t sreg = SREG;
    4750:	8f e5       	ldi	r24, 0x5F	; 95
    4752:	90 e0       	ldi	r25, 0x00	; 0
    4754:	fc 01       	movw	r30, r24
    4756:	80 81       	ld	r24, Z
    4758:	89 83       	std	Y+1, r24	; 0x01
      #endif
      noInterrupts();
    475a:	f8 94       	cli
      #ifdef SPI_AVR_EIMSK
      if (interruptMode == 1) {
    475c:	80 91 1f 04 	lds	r24, 0x041F	; 0x80041f <_ZN8SPIClass13interruptModeE>
    4760:	81 30       	cpi	r24, 0x01	; 1
    4762:	61 f4       	brne	.+24     	; 0x477c <_ZN8SPIClass14endTransactionEv+0x3e>
        SPI_AVR_EIMSK = interruptSave;
    4764:	8d e3       	ldi	r24, 0x3D	; 61
    4766:	90 e0       	ldi	r25, 0x00	; 0
    4768:	20 91 21 04 	lds	r18, 0x0421	; 0x800421 <_ZN8SPIClass13interruptSaveE>
    476c:	fc 01       	movw	r30, r24
    476e:	20 83       	st	Z, r18
        SREG = sreg;
    4770:	8f e5       	ldi	r24, 0x5F	; 95
    4772:	90 e0       	ldi	r25, 0x00	; 0
    4774:	29 81       	ldd	r18, Y+1	; 0x01
    4776:	fc 01       	movw	r30, r24
    4778:	20 83       	st	Z, r18
      #endif
      {
        SREG = interruptSave;
      }
    }
  }
    477a:	06 c0       	rjmp	.+12     	; 0x4788 <_ZN8SPIClass14endTransactionEv+0x4a>
        SPI_AVR_EIMSK = interruptSave;
        SREG = sreg;
      } else
      #endif
      {
        SREG = interruptSave;
    477c:	8f e5       	ldi	r24, 0x5F	; 95
    477e:	90 e0       	ldi	r25, 0x00	; 0
    4780:	20 91 21 04 	lds	r18, 0x0421	; 0x800421 <_ZN8SPIClass13interruptSaveE>
    4784:	fc 01       	movw	r30, r24
    4786:	20 83       	st	Z, r18
      }
    }
  }
    4788:	00 00       	nop
    478a:	0f 90       	pop	r0
    478c:	df 91       	pop	r29
    478e:	cf 91       	pop	r28
    4790:	08 95       	ret

00004792 <_ZNK12Adafruit_GFX5widthEv>:
  }
  if (maxy >= miny) {
    *y1 = miny;
    *h = maxy - miny + 1;
  }
}
    4792:	cf 93       	push	r28
    4794:	df 93       	push	r29
    4796:	1f 92       	push	r1
    4798:	1f 92       	push	r1
    479a:	cd b7       	in	r28, 0x3d	; 61
    479c:	de b7       	in	r29, 0x3e	; 62
    479e:	9a 83       	std	Y+2, r25	; 0x02
    47a0:	89 83       	std	Y+1, r24	; 0x01
    47a2:	89 81       	ldd	r24, Y+1	; 0x01
    47a4:	9a 81       	ldd	r25, Y+2	; 0x02
    47a6:	fc 01       	movw	r30, r24
    47a8:	80 85       	ldd	r24, Z+8	; 0x08
    47aa:	91 85       	ldd	r25, Z+9	; 0x09
    47ac:	0f 90       	pop	r0
    47ae:	0f 90       	pop	r0
    47b0:	df 91       	pop	r29
    47b2:	cf 91       	pop	r28
    47b4:	08 95       	ret

000047b6 <_ZNK12Adafruit_GFX6heightEv>:
    47b6:	cf 93       	push	r28
    47b8:	df 93       	push	r29
    47ba:	1f 92       	push	r1
    47bc:	1f 92       	push	r1
    47be:	cd b7       	in	r28, 0x3d	; 61
    47c0:	de b7       	in	r29, 0x3e	; 62
    47c2:	9a 83       	std	Y+2, r25	; 0x02
    47c4:	89 83       	std	Y+1, r24	; 0x01
    47c6:	89 81       	ldd	r24, Y+1	; 0x01
    47c8:	9a 81       	ldd	r25, Y+2	; 0x02
    47ca:	fc 01       	movw	r30, r24
    47cc:	82 85       	ldd	r24, Z+10	; 0x0a
    47ce:	93 85       	ldd	r25, Z+11	; 0x0b
    47d0:	0f 90       	pop	r0
    47d2:	0f 90       	pop	r0
    47d4:	df 91       	pop	r29
    47d6:	cf 91       	pop	r28
    47d8:	08 95       	ret

000047da <_ZNK12Adafruit_GFX11getRotationEv>:
    47da:	cf 93       	push	r28
    47dc:	df 93       	push	r29
    47de:	1f 92       	push	r1
    47e0:	1f 92       	push	r1
    47e2:	cd b7       	in	r28, 0x3d	; 61
    47e4:	de b7       	in	r29, 0x3e	; 62
    47e6:	9a 83       	std	Y+2, r25	; 0x02
    47e8:	89 83       	std	Y+1, r24	; 0x01
    47ea:	89 81       	ldd	r24, Y+1	; 0x01
    47ec:	9a 81       	ldd	r25, Y+2	; 0x02
    47ee:	fc 01       	movw	r30, r24
    47f0:	86 89       	ldd	r24, Z+22	; 0x16
    47f2:	0f 90       	pop	r0
    47f4:	0f 90       	pop	r0
    47f6:	df 91       	pop	r29
    47f8:	cf 91       	pop	r28
    47fa:	08 95       	ret

000047fc <_Z18pgm_read_glyph_ptrPK7GFXfonth>:
    47fc:	cf 93       	push	r28
    47fe:	df 93       	push	r29
    4800:	cd b7       	in	r28, 0x3d	; 61
    4802:	de b7       	in	r29, 0x3e	; 62
    4804:	27 97       	sbiw	r28, 0x07	; 7
    4806:	0f b6       	in	r0, 0x3f	; 63
    4808:	f8 94       	cli
    480a:	de bf       	out	0x3e, r29	; 62
    480c:	0f be       	out	0x3f, r0	; 63
    480e:	cd bf       	out	0x3d, r28	; 61
    4810:	9e 83       	std	Y+6, r25	; 0x06
    4812:	8d 83       	std	Y+5, r24	; 0x05
    4814:	6f 83       	std	Y+7, r22	; 0x07
    4816:	8f 81       	ldd	r24, Y+7	; 0x07
    4818:	28 2f       	mov	r18, r24
    481a:	30 e0       	ldi	r19, 0x00	; 0
    481c:	c9 01       	movw	r24, r18
    481e:	88 0f       	add	r24, r24
    4820:	99 1f       	adc	r25, r25
    4822:	88 0f       	add	r24, r24
    4824:	99 1f       	adc	r25, r25
    4826:	88 0f       	add	r24, r24
    4828:	99 1f       	adc	r25, r25
    482a:	ac 01       	movw	r20, r24
    482c:	42 1b       	sub	r20, r18
    482e:	53 0b       	sbc	r21, r19
    4830:	9a 01       	movw	r18, r20
    4832:	8d 81       	ldd	r24, Y+5	; 0x05
    4834:	9e 81       	ldd	r25, Y+6	; 0x06
    4836:	02 96       	adiw	r24, 0x02	; 2
    4838:	9a 83       	std	Y+2, r25	; 0x02
    483a:	89 83       	std	Y+1, r24	; 0x01
    483c:	89 81       	ldd	r24, Y+1	; 0x01
    483e:	9a 81       	ldd	r25, Y+2	; 0x02
    4840:	fc 01       	movw	r30, r24
    4842:	45 91       	lpm	r20, Z+
    4844:	54 91       	lpm	r21, Z
    4846:	cf 01       	movw	r24, r30
    4848:	5c 83       	std	Y+4, r21	; 0x04
    484a:	4b 83       	std	Y+3, r20	; 0x03
    484c:	9a 83       	std	Y+2, r25	; 0x02
    484e:	89 83       	std	Y+1, r24	; 0x01
    4850:	8b 81       	ldd	r24, Y+3	; 0x03
    4852:	9c 81       	ldd	r25, Y+4	; 0x04
    4854:	82 0f       	add	r24, r18
    4856:	93 1f       	adc	r25, r19
    4858:	27 96       	adiw	r28, 0x07	; 7
    485a:	0f b6       	in	r0, 0x3f	; 63
    485c:	f8 94       	cli
    485e:	de bf       	out	0x3e, r29	; 62
    4860:	0f be       	out	0x3f, r0	; 63
    4862:	cd bf       	out	0x3d, r28	; 61
    4864:	df 91       	pop	r29
    4866:	cf 91       	pop	r28
    4868:	08 95       	ret

0000486a <_Z19pgm_read_bitmap_ptrPK7GFXfont>:
    486a:	cf 93       	push	r28
    486c:	df 93       	push	r29
    486e:	00 d0       	rcall	.+0      	; 0x4870 <_Z19pgm_read_bitmap_ptrPK7GFXfont+0x6>
    4870:	00 d0       	rcall	.+0      	; 0x4872 <_Z19pgm_read_bitmap_ptrPK7GFXfont+0x8>
    4872:	cd b7       	in	r28, 0x3d	; 61
    4874:	de b7       	in	r29, 0x3e	; 62
    4876:	9e 83       	std	Y+6, r25	; 0x06
    4878:	8d 83       	std	Y+5, r24	; 0x05
    487a:	8d 81       	ldd	r24, Y+5	; 0x05
    487c:	9e 81       	ldd	r25, Y+6	; 0x06
    487e:	9a 83       	std	Y+2, r25	; 0x02
    4880:	89 83       	std	Y+1, r24	; 0x01
    4882:	89 81       	ldd	r24, Y+1	; 0x01
    4884:	9a 81       	ldd	r25, Y+2	; 0x02
    4886:	fc 01       	movw	r30, r24
    4888:	25 91       	lpm	r18, Z+
    488a:	34 91       	lpm	r19, Z
    488c:	cf 01       	movw	r24, r30
    488e:	3c 83       	std	Y+4, r19	; 0x04
    4890:	2b 83       	std	Y+3, r18	; 0x03
    4892:	9a 83       	std	Y+2, r25	; 0x02
    4894:	89 83       	std	Y+1, r24	; 0x01
    4896:	8b 81       	ldd	r24, Y+3	; 0x03
    4898:	9c 81       	ldd	r25, Y+4	; 0x04
    489a:	26 96       	adiw	r28, 0x06	; 6
    489c:	0f b6       	in	r0, 0x3f	; 63
    489e:	f8 94       	cli
    48a0:	de bf       	out	0x3e, r29	; 62
    48a2:	0f be       	out	0x3f, r0	; 63
    48a4:	cd bf       	out	0x3d, r28	; 61
    48a6:	df 91       	pop	r29
    48a8:	cf 91       	pop	r28
    48aa:	08 95       	ret

000048ac <_ZN12Adafruit_GFXC1Eii>:
    48ac:	cf 93       	push	r28
    48ae:	df 93       	push	r29
    48b0:	00 d0       	rcall	.+0      	; 0x48b2 <_ZN12Adafruit_GFXC1Eii+0x6>
    48b2:	00 d0       	rcall	.+0      	; 0x48b4 <_ZN12Adafruit_GFXC1Eii+0x8>
    48b4:	cd b7       	in	r28, 0x3d	; 61
    48b6:	de b7       	in	r29, 0x3e	; 62
    48b8:	9a 83       	std	Y+2, r25	; 0x02
    48ba:	89 83       	std	Y+1, r24	; 0x01
    48bc:	7c 83       	std	Y+4, r23	; 0x04
    48be:	6b 83       	std	Y+3, r22	; 0x03
    48c0:	5e 83       	std	Y+6, r21	; 0x06
    48c2:	4d 83       	std	Y+5, r20	; 0x05
    48c4:	89 81       	ldd	r24, Y+1	; 0x01
    48c6:	9a 81       	ldd	r25, Y+2	; 0x02
    48c8:	a8 db       	rcall	.-2224   	; 0x401a <_ZN5PrintC1Ev>
    48ca:	2d e5       	ldi	r18, 0x5D	; 93
    48cc:	32 e0       	ldi	r19, 0x02	; 2
    48ce:	89 81       	ldd	r24, Y+1	; 0x01
    48d0:	9a 81       	ldd	r25, Y+2	; 0x02
    48d2:	fc 01       	movw	r30, r24
    48d4:	31 83       	std	Z+1, r19	; 0x01
    48d6:	20 83       	st	Z, r18
    48d8:	89 81       	ldd	r24, Y+1	; 0x01
    48da:	9a 81       	ldd	r25, Y+2	; 0x02
    48dc:	2b 81       	ldd	r18, Y+3	; 0x03
    48de:	3c 81       	ldd	r19, Y+4	; 0x04
    48e0:	fc 01       	movw	r30, r24
    48e2:	35 83       	std	Z+5, r19	; 0x05
    48e4:	24 83       	std	Z+4, r18	; 0x04
    48e6:	89 81       	ldd	r24, Y+1	; 0x01
    48e8:	9a 81       	ldd	r25, Y+2	; 0x02
    48ea:	2d 81       	ldd	r18, Y+5	; 0x05
    48ec:	3e 81       	ldd	r19, Y+6	; 0x06
    48ee:	fc 01       	movw	r30, r24
    48f0:	37 83       	std	Z+7, r19	; 0x07
    48f2:	26 83       	std	Z+6, r18	; 0x06
    48f4:	89 81       	ldd	r24, Y+1	; 0x01
    48f6:	9a 81       	ldd	r25, Y+2	; 0x02
    48f8:	fc 01       	movw	r30, r24
    48fa:	24 81       	ldd	r18, Z+4	; 0x04
    48fc:	35 81       	ldd	r19, Z+5	; 0x05
    48fe:	89 81       	ldd	r24, Y+1	; 0x01
    4900:	9a 81       	ldd	r25, Y+2	; 0x02
    4902:	fc 01       	movw	r30, r24
    4904:	31 87       	std	Z+9, r19	; 0x09
    4906:	20 87       	std	Z+8, r18	; 0x08
    4908:	89 81       	ldd	r24, Y+1	; 0x01
    490a:	9a 81       	ldd	r25, Y+2	; 0x02
    490c:	fc 01       	movw	r30, r24
    490e:	26 81       	ldd	r18, Z+6	; 0x06
    4910:	37 81       	ldd	r19, Z+7	; 0x07
    4912:	89 81       	ldd	r24, Y+1	; 0x01
    4914:	9a 81       	ldd	r25, Y+2	; 0x02
    4916:	fc 01       	movw	r30, r24
    4918:	33 87       	std	Z+11, r19	; 0x0b
    491a:	22 87       	std	Z+10, r18	; 0x0a
    491c:	89 81       	ldd	r24, Y+1	; 0x01
    491e:	9a 81       	ldd	r25, Y+2	; 0x02
    4920:	fc 01       	movw	r30, r24
    4922:	16 8a       	std	Z+22, r1	; 0x16
    4924:	89 81       	ldd	r24, Y+1	; 0x01
    4926:	9a 81       	ldd	r25, Y+2	; 0x02
    4928:	fc 01       	movw	r30, r24
    492a:	15 86       	std	Z+13, r1	; 0x0d
    492c:	14 86       	std	Z+12, r1	; 0x0c
    492e:	89 81       	ldd	r24, Y+1	; 0x01
    4930:	9a 81       	ldd	r25, Y+2	; 0x02
    4932:	fc 01       	movw	r30, r24
    4934:	24 85       	ldd	r18, Z+12	; 0x0c
    4936:	35 85       	ldd	r19, Z+13	; 0x0d
    4938:	89 81       	ldd	r24, Y+1	; 0x01
    493a:	9a 81       	ldd	r25, Y+2	; 0x02
    493c:	fc 01       	movw	r30, r24
    493e:	37 87       	std	Z+15, r19	; 0x0f
    4940:	26 87       	std	Z+14, r18	; 0x0e
    4942:	89 81       	ldd	r24, Y+1	; 0x01
    4944:	9a 81       	ldd	r25, Y+2	; 0x02
    4946:	21 e0       	ldi	r18, 0x01	; 1
    4948:	fc 01       	movw	r30, r24
    494a:	25 8b       	std	Z+21, r18	; 0x15
    494c:	89 81       	ldd	r24, Y+1	; 0x01
    494e:	9a 81       	ldd	r25, Y+2	; 0x02
    4950:	fc 01       	movw	r30, r24
    4952:	25 89       	ldd	r18, Z+21	; 0x15
    4954:	89 81       	ldd	r24, Y+1	; 0x01
    4956:	9a 81       	ldd	r25, Y+2	; 0x02
    4958:	fc 01       	movw	r30, r24
    495a:	24 8b       	std	Z+20, r18	; 0x14
    495c:	89 81       	ldd	r24, Y+1	; 0x01
    495e:	9a 81       	ldd	r25, Y+2	; 0x02
    4960:	2f ef       	ldi	r18, 0xFF	; 255
    4962:	3f ef       	ldi	r19, 0xFF	; 255
    4964:	fc 01       	movw	r30, r24
    4966:	33 8b       	std	Z+19, r19	; 0x13
    4968:	22 8b       	std	Z+18, r18	; 0x12
    496a:	89 81       	ldd	r24, Y+1	; 0x01
    496c:	9a 81       	ldd	r25, Y+2	; 0x02
    496e:	fc 01       	movw	r30, r24
    4970:	22 89       	ldd	r18, Z+18	; 0x12
    4972:	33 89       	ldd	r19, Z+19	; 0x13
    4974:	89 81       	ldd	r24, Y+1	; 0x01
    4976:	9a 81       	ldd	r25, Y+2	; 0x02
    4978:	fc 01       	movw	r30, r24
    497a:	31 8b       	std	Z+17, r19	; 0x11
    497c:	20 8b       	std	Z+16, r18	; 0x10
    497e:	89 81       	ldd	r24, Y+1	; 0x01
    4980:	9a 81       	ldd	r25, Y+2	; 0x02
    4982:	21 e0       	ldi	r18, 0x01	; 1
    4984:	fc 01       	movw	r30, r24
    4986:	27 8b       	std	Z+23, r18	; 0x17
    4988:	89 81       	ldd	r24, Y+1	; 0x01
    498a:	9a 81       	ldd	r25, Y+2	; 0x02
    498c:	fc 01       	movw	r30, r24
    498e:	10 8e       	std	Z+24, r1	; 0x18
    4990:	89 81       	ldd	r24, Y+1	; 0x01
    4992:	9a 81       	ldd	r25, Y+2	; 0x02
    4994:	fc 01       	movw	r30, r24
    4996:	12 8e       	std	Z+26, r1	; 0x1a
    4998:	11 8e       	std	Z+25, r1	; 0x19
    499a:	00 00       	nop
    499c:	26 96       	adiw	r28, 0x06	; 6
    499e:	0f b6       	in	r0, 0x3f	; 63
    49a0:	f8 94       	cli
    49a2:	de bf       	out	0x3e, r29	; 62
    49a4:	0f be       	out	0x3f, r0	; 63
    49a6:	cd bf       	out	0x3d, r28	; 61
    49a8:	df 91       	pop	r29
    49aa:	cf 91       	pop	r28
    49ac:	08 95       	ret

000049ae <_ZN12Adafruit_GFX9writeLineEiiiij>:
    49ae:	ef 92       	push	r14
    49b0:	ff 92       	push	r15
    49b2:	0f 93       	push	r16
    49b4:	1f 93       	push	r17
    49b6:	cf 93       	push	r28
    49b8:	df 93       	push	r29
    49ba:	cd b7       	in	r28, 0x3d	; 61
    49bc:	de b7       	in	r29, 0x3e	; 62
    49be:	6e 97       	sbiw	r28, 0x1e	; 30
    49c0:	0f b6       	in	r0, 0x3f	; 63
    49c2:	f8 94       	cli
    49c4:	de bf       	out	0x3e, r29	; 62
    49c6:	0f be       	out	0x3f, r0	; 63
    49c8:	cd bf       	out	0x3d, r28	; 61
    49ca:	9c 8b       	std	Y+20, r25	; 0x14
    49cc:	8b 8b       	std	Y+19, r24	; 0x13
    49ce:	7e 8b       	std	Y+22, r23	; 0x16
    49d0:	6d 8b       	std	Y+21, r22	; 0x15
    49d2:	58 8f       	std	Y+24, r21	; 0x18
    49d4:	4f 8b       	std	Y+23, r20	; 0x17
    49d6:	3a 8f       	std	Y+26, r19	; 0x1a
    49d8:	29 8f       	std	Y+25, r18	; 0x19
    49da:	1c 8f       	std	Y+28, r17	; 0x1c
    49dc:	0b 8f       	std	Y+27, r16	; 0x1b
    49de:	fe 8e       	std	Y+30, r15	; 0x1e
    49e0:	ed 8e       	std	Y+29, r14	; 0x1d
    49e2:	2b 8d       	ldd	r18, Y+27	; 0x1b
    49e4:	3c 8d       	ldd	r19, Y+28	; 0x1c
    49e6:	8f 89       	ldd	r24, Y+23	; 0x17
    49e8:	98 8d       	ldd	r25, Y+24	; 0x18
    49ea:	a9 01       	movw	r20, r18
    49ec:	48 1b       	sub	r20, r24
    49ee:	59 0b       	sbc	r21, r25
    49f0:	ca 01       	movw	r24, r20
    49f2:	99 23       	and	r25, r25
    49f4:	1c f4       	brge	.+6      	; 0x49fc <_ZN12Adafruit_GFX9writeLineEiiiij+0x4e>
    49f6:	91 95       	neg	r25
    49f8:	81 95       	neg	r24
    49fa:	91 09       	sbc	r25, r1
    49fc:	ac 01       	movw	r20, r24
    49fe:	29 8d       	ldd	r18, Y+25	; 0x19
    4a00:	3a 8d       	ldd	r19, Y+26	; 0x1a
    4a02:	8d 89       	ldd	r24, Y+21	; 0x15
    4a04:	9e 89       	ldd	r25, Y+22	; 0x16
    4a06:	b9 01       	movw	r22, r18
    4a08:	68 1b       	sub	r22, r24
    4a0a:	79 0b       	sbc	r23, r25
    4a0c:	cb 01       	movw	r24, r22
    4a0e:	99 23       	and	r25, r25
    4a10:	1c f4       	brge	.+6      	; 0x4a18 <_ZN12Adafruit_GFX9writeLineEiiiij+0x6a>
    4a12:	91 95       	neg	r25
    4a14:	81 95       	neg	r24
    4a16:	91 09       	sbc	r25, r1
    4a18:	21 e0       	ldi	r18, 0x01	; 1
    4a1a:	84 17       	cp	r24, r20
    4a1c:	95 07       	cpc	r25, r21
    4a1e:	0c f0       	brlt	.+2      	; 0x4a22 <_ZN12Adafruit_GFX9writeLineEiiiij+0x74>
    4a20:	20 e0       	ldi	r18, 0x00	; 0
    4a22:	82 2f       	mov	r24, r18
    4a24:	90 e0       	ldi	r25, 0x00	; 0
    4a26:	9e 83       	std	Y+6, r25	; 0x06
    4a28:	8d 83       	std	Y+5, r24	; 0x05
    4a2a:	8d 81       	ldd	r24, Y+5	; 0x05
    4a2c:	9e 81       	ldd	r25, Y+6	; 0x06
    4a2e:	89 2b       	or	r24, r25
    4a30:	c1 f0       	breq	.+48     	; 0x4a62 <_ZN12Adafruit_GFX9writeLineEiiiij+0xb4>
    4a32:	8d 89       	ldd	r24, Y+21	; 0x15
    4a34:	9e 89       	ldd	r25, Y+22	; 0x16
    4a36:	98 87       	std	Y+8, r25	; 0x08
    4a38:	8f 83       	std	Y+7, r24	; 0x07
    4a3a:	8f 89       	ldd	r24, Y+23	; 0x17
    4a3c:	98 8d       	ldd	r25, Y+24	; 0x18
    4a3e:	9e 8b       	std	Y+22, r25	; 0x16
    4a40:	8d 8b       	std	Y+21, r24	; 0x15
    4a42:	8f 81       	ldd	r24, Y+7	; 0x07
    4a44:	98 85       	ldd	r25, Y+8	; 0x08
    4a46:	98 8f       	std	Y+24, r25	; 0x18
    4a48:	8f 8b       	std	Y+23, r24	; 0x17
    4a4a:	89 8d       	ldd	r24, Y+25	; 0x19
    4a4c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    4a4e:	9a 87       	std	Y+10, r25	; 0x0a
    4a50:	89 87       	std	Y+9, r24	; 0x09
    4a52:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4a54:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4a56:	9a 8f       	std	Y+26, r25	; 0x1a
    4a58:	89 8f       	std	Y+25, r24	; 0x19
    4a5a:	89 85       	ldd	r24, Y+9	; 0x09
    4a5c:	9a 85       	ldd	r25, Y+10	; 0x0a
    4a5e:	9c 8f       	std	Y+28, r25	; 0x1c
    4a60:	8b 8f       	std	Y+27, r24	; 0x1b
    4a62:	2d 89       	ldd	r18, Y+21	; 0x15
    4a64:	3e 89       	ldd	r19, Y+22	; 0x16
    4a66:	89 8d       	ldd	r24, Y+25	; 0x19
    4a68:	9a 8d       	ldd	r25, Y+26	; 0x1a
    4a6a:	82 17       	cp	r24, r18
    4a6c:	93 07       	cpc	r25, r19
    4a6e:	c4 f4       	brge	.+48     	; 0x4aa0 <_ZN12Adafruit_GFX9writeLineEiiiij+0xf2>
    4a70:	8d 89       	ldd	r24, Y+21	; 0x15
    4a72:	9e 89       	ldd	r25, Y+22	; 0x16
    4a74:	9c 87       	std	Y+12, r25	; 0x0c
    4a76:	8b 87       	std	Y+11, r24	; 0x0b
    4a78:	89 8d       	ldd	r24, Y+25	; 0x19
    4a7a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    4a7c:	9e 8b       	std	Y+22, r25	; 0x16
    4a7e:	8d 8b       	std	Y+21, r24	; 0x15
    4a80:	8b 85       	ldd	r24, Y+11	; 0x0b
    4a82:	9c 85       	ldd	r25, Y+12	; 0x0c
    4a84:	9a 8f       	std	Y+26, r25	; 0x1a
    4a86:	89 8f       	std	Y+25, r24	; 0x19
    4a88:	8f 89       	ldd	r24, Y+23	; 0x17
    4a8a:	98 8d       	ldd	r25, Y+24	; 0x18
    4a8c:	9e 87       	std	Y+14, r25	; 0x0e
    4a8e:	8d 87       	std	Y+13, r24	; 0x0d
    4a90:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4a92:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4a94:	98 8f       	std	Y+24, r25	; 0x18
    4a96:	8f 8b       	std	Y+23, r24	; 0x17
    4a98:	8d 85       	ldd	r24, Y+13	; 0x0d
    4a9a:	9e 85       	ldd	r25, Y+14	; 0x0e
    4a9c:	9c 8f       	std	Y+28, r25	; 0x1c
    4a9e:	8b 8f       	std	Y+27, r24	; 0x1b
    4aa0:	29 8d       	ldd	r18, Y+25	; 0x19
    4aa2:	3a 8d       	ldd	r19, Y+26	; 0x1a
    4aa4:	8d 89       	ldd	r24, Y+21	; 0x15
    4aa6:	9e 89       	ldd	r25, Y+22	; 0x16
    4aa8:	d9 01       	movw	r26, r18
    4aaa:	a8 1b       	sub	r26, r24
    4aac:	b9 0b       	sbc	r27, r25
    4aae:	cd 01       	movw	r24, r26
    4ab0:	98 8b       	std	Y+16, r25	; 0x10
    4ab2:	8f 87       	std	Y+15, r24	; 0x0f
    4ab4:	2b 8d       	ldd	r18, Y+27	; 0x1b
    4ab6:	3c 8d       	ldd	r19, Y+28	; 0x1c
    4ab8:	8f 89       	ldd	r24, Y+23	; 0x17
    4aba:	98 8d       	ldd	r25, Y+24	; 0x18
    4abc:	f9 01       	movw	r30, r18
    4abe:	e8 1b       	sub	r30, r24
    4ac0:	f9 0b       	sbc	r31, r25
    4ac2:	cf 01       	movw	r24, r30
    4ac4:	99 23       	and	r25, r25
    4ac6:	1c f4       	brge	.+6      	; 0x4ace <_ZN12Adafruit_GFX9writeLineEiiiij+0x120>
    4ac8:	91 95       	neg	r25
    4aca:	81 95       	neg	r24
    4acc:	91 09       	sbc	r25, r1
    4ace:	9a 8b       	std	Y+18, r25	; 0x12
    4ad0:	89 8b       	std	Y+17, r24	; 0x11
    4ad2:	8f 85       	ldd	r24, Y+15	; 0x0f
    4ad4:	98 89       	ldd	r25, Y+16	; 0x10
    4ad6:	99 23       	and	r25, r25
    4ad8:	0c f4       	brge	.+2      	; 0x4adc <_ZN12Adafruit_GFX9writeLineEiiiij+0x12e>
    4ada:	01 96       	adiw	r24, 0x01	; 1
    4adc:	95 95       	asr	r25
    4ade:	87 95       	ror	r24
    4ae0:	9a 83       	std	Y+2, r25	; 0x02
    4ae2:	89 83       	std	Y+1, r24	; 0x01
    4ae4:	2f 89       	ldd	r18, Y+23	; 0x17
    4ae6:	38 8d       	ldd	r19, Y+24	; 0x18
    4ae8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4aea:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4aec:	28 17       	cp	r18, r24
    4aee:	39 07       	cpc	r19, r25
    4af0:	2c f4       	brge	.+10     	; 0x4afc <_ZN12Adafruit_GFX9writeLineEiiiij+0x14e>
    4af2:	81 e0       	ldi	r24, 0x01	; 1
    4af4:	90 e0       	ldi	r25, 0x00	; 0
    4af6:	9c 83       	std	Y+4, r25	; 0x04
    4af8:	8b 83       	std	Y+3, r24	; 0x03
    4afa:	04 c0       	rjmp	.+8      	; 0x4b04 <_ZN12Adafruit_GFX9writeLineEiiiij+0x156>
    4afc:	8f ef       	ldi	r24, 0xFF	; 255
    4afe:	9f ef       	ldi	r25, 0xFF	; 255
    4b00:	9c 83       	std	Y+4, r25	; 0x04
    4b02:	8b 83       	std	Y+3, r24	; 0x03
    4b04:	2d 89       	ldd	r18, Y+21	; 0x15
    4b06:	3e 89       	ldd	r19, Y+22	; 0x16
    4b08:	89 8d       	ldd	r24, Y+25	; 0x19
    4b0a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    4b0c:	82 17       	cp	r24, r18
    4b0e:	93 07       	cpc	r25, r19
    4b10:	0c f4       	brge	.+2      	; 0x4b14 <_ZN12Adafruit_GFX9writeLineEiiiij+0x166>
    4b12:	4d c0       	rjmp	.+154    	; 0x4bae <_ZN12Adafruit_GFX9writeLineEiiiij+0x200>
    4b14:	8d 81       	ldd	r24, Y+5	; 0x05
    4b16:	9e 81       	ldd	r25, Y+6	; 0x06
    4b18:	89 2b       	or	r24, r25
    4b1a:	99 f0       	breq	.+38     	; 0x4b42 <_ZN12Adafruit_GFX9writeLineEiiiij+0x194>
    4b1c:	8b 89       	ldd	r24, Y+19	; 0x13
    4b1e:	9c 89       	ldd	r25, Y+20	; 0x14
    4b20:	dc 01       	movw	r26, r24
    4b22:	8d 91       	ld	r24, X+
    4b24:	9c 91       	ld	r25, X
    4b26:	0c 96       	adiw	r24, 0x0c	; 12
    4b28:	dc 01       	movw	r26, r24
    4b2a:	ed 91       	ld	r30, X+
    4b2c:	fc 91       	ld	r31, X
    4b2e:	2d 8d       	ldd	r18, Y+29	; 0x1d
    4b30:	3e 8d       	ldd	r19, Y+30	; 0x1e
    4b32:	4d 89       	ldd	r20, Y+21	; 0x15
    4b34:	5e 89       	ldd	r21, Y+22	; 0x16
    4b36:	6f 89       	ldd	r22, Y+23	; 0x17
    4b38:	78 8d       	ldd	r23, Y+24	; 0x18
    4b3a:	8b 89       	ldd	r24, Y+19	; 0x13
    4b3c:	9c 89       	ldd	r25, Y+20	; 0x14
    4b3e:	19 95       	eicall
    4b40:	12 c0       	rjmp	.+36     	; 0x4b66 <_ZN12Adafruit_GFX9writeLineEiiiij+0x1b8>
    4b42:	8b 89       	ldd	r24, Y+19	; 0x13
    4b44:	9c 89       	ldd	r25, Y+20	; 0x14
    4b46:	fc 01       	movw	r30, r24
    4b48:	80 81       	ld	r24, Z
    4b4a:	91 81       	ldd	r25, Z+1	; 0x01
    4b4c:	0c 96       	adiw	r24, 0x0c	; 12
    4b4e:	dc 01       	movw	r26, r24
    4b50:	ed 91       	ld	r30, X+
    4b52:	fc 91       	ld	r31, X
    4b54:	2d 8d       	ldd	r18, Y+29	; 0x1d
    4b56:	3e 8d       	ldd	r19, Y+30	; 0x1e
    4b58:	4f 89       	ldd	r20, Y+23	; 0x17
    4b5a:	58 8d       	ldd	r21, Y+24	; 0x18
    4b5c:	6d 89       	ldd	r22, Y+21	; 0x15
    4b5e:	7e 89       	ldd	r23, Y+22	; 0x16
    4b60:	8b 89       	ldd	r24, Y+19	; 0x13
    4b62:	9c 89       	ldd	r25, Y+20	; 0x14
    4b64:	19 95       	eicall
    4b66:	29 81       	ldd	r18, Y+1	; 0x01
    4b68:	3a 81       	ldd	r19, Y+2	; 0x02
    4b6a:	89 89       	ldd	r24, Y+17	; 0x11
    4b6c:	9a 89       	ldd	r25, Y+18	; 0x12
    4b6e:	f9 01       	movw	r30, r18
    4b70:	e8 1b       	sub	r30, r24
    4b72:	f9 0b       	sbc	r31, r25
    4b74:	cf 01       	movw	r24, r30
    4b76:	9a 83       	std	Y+2, r25	; 0x02
    4b78:	89 83       	std	Y+1, r24	; 0x01
    4b7a:	89 81       	ldd	r24, Y+1	; 0x01
    4b7c:	9a 81       	ldd	r25, Y+2	; 0x02
    4b7e:	99 23       	and	r25, r25
    4b80:	84 f4       	brge	.+32     	; 0x4ba2 <_ZN12Adafruit_GFX9writeLineEiiiij+0x1f4>
    4b82:	2f 89       	ldd	r18, Y+23	; 0x17
    4b84:	38 8d       	ldd	r19, Y+24	; 0x18
    4b86:	8b 81       	ldd	r24, Y+3	; 0x03
    4b88:	9c 81       	ldd	r25, Y+4	; 0x04
    4b8a:	82 0f       	add	r24, r18
    4b8c:	93 1f       	adc	r25, r19
    4b8e:	98 8f       	std	Y+24, r25	; 0x18
    4b90:	8f 8b       	std	Y+23, r24	; 0x17
    4b92:	29 81       	ldd	r18, Y+1	; 0x01
    4b94:	3a 81       	ldd	r19, Y+2	; 0x02
    4b96:	8f 85       	ldd	r24, Y+15	; 0x0f
    4b98:	98 89       	ldd	r25, Y+16	; 0x10
    4b9a:	82 0f       	add	r24, r18
    4b9c:	93 1f       	adc	r25, r19
    4b9e:	9a 83       	std	Y+2, r25	; 0x02
    4ba0:	89 83       	std	Y+1, r24	; 0x01
    4ba2:	8d 89       	ldd	r24, Y+21	; 0x15
    4ba4:	9e 89       	ldd	r25, Y+22	; 0x16
    4ba6:	01 96       	adiw	r24, 0x01	; 1
    4ba8:	9e 8b       	std	Y+22, r25	; 0x16
    4baa:	8d 8b       	std	Y+21, r24	; 0x15
    4bac:	ab cf       	rjmp	.-170    	; 0x4b04 <_ZN12Adafruit_GFX9writeLineEiiiij+0x156>
    4bae:	00 00       	nop
    4bb0:	6e 96       	adiw	r28, 0x1e	; 30
    4bb2:	0f b6       	in	r0, 0x3f	; 63
    4bb4:	f8 94       	cli
    4bb6:	de bf       	out	0x3e, r29	; 62
    4bb8:	0f be       	out	0x3f, r0	; 63
    4bba:	cd bf       	out	0x3d, r28	; 61
    4bbc:	df 91       	pop	r29
    4bbe:	cf 91       	pop	r28
    4bc0:	1f 91       	pop	r17
    4bc2:	0f 91       	pop	r16
    4bc4:	ff 90       	pop	r15
    4bc6:	ef 90       	pop	r14
    4bc8:	08 95       	ret

00004bca <_ZN12Adafruit_GFX10startWriteEv>:
    4bca:	cf 93       	push	r28
    4bcc:	df 93       	push	r29
    4bce:	1f 92       	push	r1
    4bd0:	1f 92       	push	r1
    4bd2:	cd b7       	in	r28, 0x3d	; 61
    4bd4:	de b7       	in	r29, 0x3e	; 62
    4bd6:	9a 83       	std	Y+2, r25	; 0x02
    4bd8:	89 83       	std	Y+1, r24	; 0x01
    4bda:	00 00       	nop
    4bdc:	0f 90       	pop	r0
    4bde:	0f 90       	pop	r0
    4be0:	df 91       	pop	r29
    4be2:	cf 91       	pop	r28
    4be4:	08 95       	ret

00004be6 <_ZN12Adafruit_GFX10writePixelEiij>:
    4be6:	cf 93       	push	r28
    4be8:	df 93       	push	r29
    4bea:	cd b7       	in	r28, 0x3d	; 61
    4bec:	de b7       	in	r29, 0x3e	; 62
    4bee:	28 97       	sbiw	r28, 0x08	; 8
    4bf0:	0f b6       	in	r0, 0x3f	; 63
    4bf2:	f8 94       	cli
    4bf4:	de bf       	out	0x3e, r29	; 62
    4bf6:	0f be       	out	0x3f, r0	; 63
    4bf8:	cd bf       	out	0x3d, r28	; 61
    4bfa:	9a 83       	std	Y+2, r25	; 0x02
    4bfc:	89 83       	std	Y+1, r24	; 0x01
    4bfe:	7c 83       	std	Y+4, r23	; 0x04
    4c00:	6b 83       	std	Y+3, r22	; 0x03
    4c02:	5e 83       	std	Y+6, r21	; 0x06
    4c04:	4d 83       	std	Y+5, r20	; 0x05
    4c06:	38 87       	std	Y+8, r19	; 0x08
    4c08:	2f 83       	std	Y+7, r18	; 0x07
    4c0a:	89 81       	ldd	r24, Y+1	; 0x01
    4c0c:	9a 81       	ldd	r25, Y+2	; 0x02
    4c0e:	dc 01       	movw	r26, r24
    4c10:	8d 91       	ld	r24, X+
    4c12:	9c 91       	ld	r25, X
    4c14:	08 96       	adiw	r24, 0x08	; 8
    4c16:	dc 01       	movw	r26, r24
    4c18:	ed 91       	ld	r30, X+
    4c1a:	fc 91       	ld	r31, X
    4c1c:	2f 81       	ldd	r18, Y+7	; 0x07
    4c1e:	38 85       	ldd	r19, Y+8	; 0x08
    4c20:	4d 81       	ldd	r20, Y+5	; 0x05
    4c22:	5e 81       	ldd	r21, Y+6	; 0x06
    4c24:	6b 81       	ldd	r22, Y+3	; 0x03
    4c26:	7c 81       	ldd	r23, Y+4	; 0x04
    4c28:	89 81       	ldd	r24, Y+1	; 0x01
    4c2a:	9a 81       	ldd	r25, Y+2	; 0x02
    4c2c:	19 95       	eicall
    4c2e:	00 00       	nop
    4c30:	28 96       	adiw	r28, 0x08	; 8
    4c32:	0f b6       	in	r0, 0x3f	; 63
    4c34:	f8 94       	cli
    4c36:	de bf       	out	0x3e, r29	; 62
    4c38:	0f be       	out	0x3f, r0	; 63
    4c3a:	cd bf       	out	0x3d, r28	; 61
    4c3c:	df 91       	pop	r29
    4c3e:	cf 91       	pop	r28
    4c40:	08 95       	ret

00004c42 <_ZN12Adafruit_GFX14writeFastVLineEiiij>:
    4c42:	0f 93       	push	r16
    4c44:	1f 93       	push	r17
    4c46:	cf 93       	push	r28
    4c48:	df 93       	push	r29
    4c4a:	cd b7       	in	r28, 0x3d	; 61
    4c4c:	de b7       	in	r29, 0x3e	; 62
    4c4e:	2a 97       	sbiw	r28, 0x0a	; 10
    4c50:	0f b6       	in	r0, 0x3f	; 63
    4c52:	f8 94       	cli
    4c54:	de bf       	out	0x3e, r29	; 62
    4c56:	0f be       	out	0x3f, r0	; 63
    4c58:	cd bf       	out	0x3d, r28	; 61
    4c5a:	9a 83       	std	Y+2, r25	; 0x02
    4c5c:	89 83       	std	Y+1, r24	; 0x01
    4c5e:	7c 83       	std	Y+4, r23	; 0x04
    4c60:	6b 83       	std	Y+3, r22	; 0x03
    4c62:	5e 83       	std	Y+6, r21	; 0x06
    4c64:	4d 83       	std	Y+5, r20	; 0x05
    4c66:	38 87       	std	Y+8, r19	; 0x08
    4c68:	2f 83       	std	Y+7, r18	; 0x07
    4c6a:	1a 87       	std	Y+10, r17	; 0x0a
    4c6c:	09 87       	std	Y+9, r16	; 0x09
    4c6e:	89 81       	ldd	r24, Y+1	; 0x01
    4c70:	9a 81       	ldd	r25, Y+2	; 0x02
    4c72:	dc 01       	movw	r26, r24
    4c74:	8d 91       	ld	r24, X+
    4c76:	9c 91       	ld	r25, X
    4c78:	4c 96       	adiw	r24, 0x1c	; 28
    4c7a:	dc 01       	movw	r26, r24
    4c7c:	ed 91       	ld	r30, X+
    4c7e:	fc 91       	ld	r31, X
    4c80:	a9 85       	ldd	r26, Y+9	; 0x09
    4c82:	ba 85       	ldd	r27, Y+10	; 0x0a
    4c84:	2f 81       	ldd	r18, Y+7	; 0x07
    4c86:	38 85       	ldd	r19, Y+8	; 0x08
    4c88:	4d 81       	ldd	r20, Y+5	; 0x05
    4c8a:	5e 81       	ldd	r21, Y+6	; 0x06
    4c8c:	6b 81       	ldd	r22, Y+3	; 0x03
    4c8e:	7c 81       	ldd	r23, Y+4	; 0x04
    4c90:	89 81       	ldd	r24, Y+1	; 0x01
    4c92:	9a 81       	ldd	r25, Y+2	; 0x02
    4c94:	8d 01       	movw	r16, r26
    4c96:	19 95       	eicall
    4c98:	00 00       	nop
    4c9a:	2a 96       	adiw	r28, 0x0a	; 10
    4c9c:	0f b6       	in	r0, 0x3f	; 63
    4c9e:	f8 94       	cli
    4ca0:	de bf       	out	0x3e, r29	; 62
    4ca2:	0f be       	out	0x3f, r0	; 63
    4ca4:	cd bf       	out	0x3d, r28	; 61
    4ca6:	df 91       	pop	r29
    4ca8:	cf 91       	pop	r28
    4caa:	1f 91       	pop	r17
    4cac:	0f 91       	pop	r16
    4cae:	08 95       	ret

00004cb0 <_ZN12Adafruit_GFX14writeFastHLineEiiij>:
    4cb0:	0f 93       	push	r16
    4cb2:	1f 93       	push	r17
    4cb4:	cf 93       	push	r28
    4cb6:	df 93       	push	r29
    4cb8:	cd b7       	in	r28, 0x3d	; 61
    4cba:	de b7       	in	r29, 0x3e	; 62
    4cbc:	2a 97       	sbiw	r28, 0x0a	; 10
    4cbe:	0f b6       	in	r0, 0x3f	; 63
    4cc0:	f8 94       	cli
    4cc2:	de bf       	out	0x3e, r29	; 62
    4cc4:	0f be       	out	0x3f, r0	; 63
    4cc6:	cd bf       	out	0x3d, r28	; 61
    4cc8:	9a 83       	std	Y+2, r25	; 0x02
    4cca:	89 83       	std	Y+1, r24	; 0x01
    4ccc:	7c 83       	std	Y+4, r23	; 0x04
    4cce:	6b 83       	std	Y+3, r22	; 0x03
    4cd0:	5e 83       	std	Y+6, r21	; 0x06
    4cd2:	4d 83       	std	Y+5, r20	; 0x05
    4cd4:	38 87       	std	Y+8, r19	; 0x08
    4cd6:	2f 83       	std	Y+7, r18	; 0x07
    4cd8:	1a 87       	std	Y+10, r17	; 0x0a
    4cda:	09 87       	std	Y+9, r16	; 0x09
    4cdc:	89 81       	ldd	r24, Y+1	; 0x01
    4cde:	9a 81       	ldd	r25, Y+2	; 0x02
    4ce0:	dc 01       	movw	r26, r24
    4ce2:	8d 91       	ld	r24, X+
    4ce4:	9c 91       	ld	r25, X
    4ce6:	4e 96       	adiw	r24, 0x1e	; 30
    4ce8:	dc 01       	movw	r26, r24
    4cea:	ed 91       	ld	r30, X+
    4cec:	fc 91       	ld	r31, X
    4cee:	a9 85       	ldd	r26, Y+9	; 0x09
    4cf0:	ba 85       	ldd	r27, Y+10	; 0x0a
    4cf2:	2f 81       	ldd	r18, Y+7	; 0x07
    4cf4:	38 85       	ldd	r19, Y+8	; 0x08
    4cf6:	4d 81       	ldd	r20, Y+5	; 0x05
    4cf8:	5e 81       	ldd	r21, Y+6	; 0x06
    4cfa:	6b 81       	ldd	r22, Y+3	; 0x03
    4cfc:	7c 81       	ldd	r23, Y+4	; 0x04
    4cfe:	89 81       	ldd	r24, Y+1	; 0x01
    4d00:	9a 81       	ldd	r25, Y+2	; 0x02
    4d02:	8d 01       	movw	r16, r26
    4d04:	19 95       	eicall
    4d06:	00 00       	nop
    4d08:	2a 96       	adiw	r28, 0x0a	; 10
    4d0a:	0f b6       	in	r0, 0x3f	; 63
    4d0c:	f8 94       	cli
    4d0e:	de bf       	out	0x3e, r29	; 62
    4d10:	0f be       	out	0x3f, r0	; 63
    4d12:	cd bf       	out	0x3d, r28	; 61
    4d14:	df 91       	pop	r29
    4d16:	cf 91       	pop	r28
    4d18:	1f 91       	pop	r17
    4d1a:	0f 91       	pop	r16
    4d1c:	08 95       	ret

00004d1e <_ZN12Adafruit_GFX13writeFillRectEiiiij>:
    4d1e:	ef 92       	push	r14
    4d20:	ff 92       	push	r15
    4d22:	0f 93       	push	r16
    4d24:	1f 93       	push	r17
    4d26:	cf 93       	push	r28
    4d28:	df 93       	push	r29
    4d2a:	cd b7       	in	r28, 0x3d	; 61
    4d2c:	de b7       	in	r29, 0x3e	; 62
    4d2e:	2c 97       	sbiw	r28, 0x0c	; 12
    4d30:	0f b6       	in	r0, 0x3f	; 63
    4d32:	f8 94       	cli
    4d34:	de bf       	out	0x3e, r29	; 62
    4d36:	0f be       	out	0x3f, r0	; 63
    4d38:	cd bf       	out	0x3d, r28	; 61
    4d3a:	9a 83       	std	Y+2, r25	; 0x02
    4d3c:	89 83       	std	Y+1, r24	; 0x01
    4d3e:	7c 83       	std	Y+4, r23	; 0x04
    4d40:	6b 83       	std	Y+3, r22	; 0x03
    4d42:	5e 83       	std	Y+6, r21	; 0x06
    4d44:	4d 83       	std	Y+5, r20	; 0x05
    4d46:	38 87       	std	Y+8, r19	; 0x08
    4d48:	2f 83       	std	Y+7, r18	; 0x07
    4d4a:	1a 87       	std	Y+10, r17	; 0x0a
    4d4c:	09 87       	std	Y+9, r16	; 0x09
    4d4e:	fc 86       	std	Y+12, r15	; 0x0c
    4d50:	eb 86       	std	Y+11, r14	; 0x0b
    4d52:	89 81       	ldd	r24, Y+1	; 0x01
    4d54:	9a 81       	ldd	r25, Y+2	; 0x02
    4d56:	dc 01       	movw	r26, r24
    4d58:	8d 91       	ld	r24, X+
    4d5a:	9c 91       	ld	r25, X
    4d5c:	80 96       	adiw	r24, 0x20	; 32
    4d5e:	dc 01       	movw	r26, r24
    4d60:	ed 91       	ld	r30, X+
    4d62:	fc 91       	ld	r31, X
    4d64:	0b 85       	ldd	r16, Y+11	; 0x0b
    4d66:	1c 85       	ldd	r17, Y+12	; 0x0c
    4d68:	a9 85       	ldd	r26, Y+9	; 0x09
    4d6a:	ba 85       	ldd	r27, Y+10	; 0x0a
    4d6c:	2f 81       	ldd	r18, Y+7	; 0x07
    4d6e:	38 85       	ldd	r19, Y+8	; 0x08
    4d70:	4d 81       	ldd	r20, Y+5	; 0x05
    4d72:	5e 81       	ldd	r21, Y+6	; 0x06
    4d74:	6b 81       	ldd	r22, Y+3	; 0x03
    4d76:	7c 81       	ldd	r23, Y+4	; 0x04
    4d78:	89 81       	ldd	r24, Y+1	; 0x01
    4d7a:	9a 81       	ldd	r25, Y+2	; 0x02
    4d7c:	78 01       	movw	r14, r16
    4d7e:	8d 01       	movw	r16, r26
    4d80:	19 95       	eicall
    4d82:	00 00       	nop
    4d84:	2c 96       	adiw	r28, 0x0c	; 12
    4d86:	0f b6       	in	r0, 0x3f	; 63
    4d88:	f8 94       	cli
    4d8a:	de bf       	out	0x3e, r29	; 62
    4d8c:	0f be       	out	0x3f, r0	; 63
    4d8e:	cd bf       	out	0x3d, r28	; 61
    4d90:	df 91       	pop	r29
    4d92:	cf 91       	pop	r28
    4d94:	1f 91       	pop	r17
    4d96:	0f 91       	pop	r16
    4d98:	ff 90       	pop	r15
    4d9a:	ef 90       	pop	r14
    4d9c:	08 95       	ret

00004d9e <_ZN12Adafruit_GFX8endWriteEv>:
    4d9e:	cf 93       	push	r28
    4da0:	df 93       	push	r29
    4da2:	1f 92       	push	r1
    4da4:	1f 92       	push	r1
    4da6:	cd b7       	in	r28, 0x3d	; 61
    4da8:	de b7       	in	r29, 0x3e	; 62
    4daa:	9a 83       	std	Y+2, r25	; 0x02
    4dac:	89 83       	std	Y+1, r24	; 0x01
    4dae:	00 00       	nop
    4db0:	0f 90       	pop	r0
    4db2:	0f 90       	pop	r0
    4db4:	df 91       	pop	r29
    4db6:	cf 91       	pop	r28
    4db8:	08 95       	ret

00004dba <_ZN12Adafruit_GFX13drawFastVLineEiiij>:
    4dba:	ef 92       	push	r14
    4dbc:	ff 92       	push	r15
    4dbe:	0f 93       	push	r16
    4dc0:	1f 93       	push	r17
    4dc2:	cf 93       	push	r28
    4dc4:	df 93       	push	r29
    4dc6:	cd b7       	in	r28, 0x3d	; 61
    4dc8:	de b7       	in	r29, 0x3e	; 62
    4dca:	2a 97       	sbiw	r28, 0x0a	; 10
    4dcc:	0f b6       	in	r0, 0x3f	; 63
    4dce:	f8 94       	cli
    4dd0:	de bf       	out	0x3e, r29	; 62
    4dd2:	0f be       	out	0x3f, r0	; 63
    4dd4:	cd bf       	out	0x3d, r28	; 61
    4dd6:	9a 83       	std	Y+2, r25	; 0x02
    4dd8:	89 83       	std	Y+1, r24	; 0x01
    4dda:	7c 83       	std	Y+4, r23	; 0x04
    4ddc:	6b 83       	std	Y+3, r22	; 0x03
    4dde:	5e 83       	std	Y+6, r21	; 0x06
    4de0:	4d 83       	std	Y+5, r20	; 0x05
    4de2:	38 87       	std	Y+8, r19	; 0x08
    4de4:	2f 83       	std	Y+7, r18	; 0x07
    4de6:	1a 87       	std	Y+10, r17	; 0x0a
    4de8:	09 87       	std	Y+9, r16	; 0x09
    4dea:	89 81       	ldd	r24, Y+1	; 0x01
    4dec:	9a 81       	ldd	r25, Y+2	; 0x02
    4dee:	dc 01       	movw	r26, r24
    4df0:	8d 91       	ld	r24, X+
    4df2:	9c 91       	ld	r25, X
    4df4:	0a 96       	adiw	r24, 0x0a	; 10
    4df6:	fc 01       	movw	r30, r24
    4df8:	20 81       	ld	r18, Z
    4dfa:	31 81       	ldd	r19, Z+1	; 0x01
    4dfc:	89 81       	ldd	r24, Y+1	; 0x01
    4dfe:	9a 81       	ldd	r25, Y+2	; 0x02
    4e00:	f9 01       	movw	r30, r18
    4e02:	19 95       	eicall
    4e04:	89 81       	ldd	r24, Y+1	; 0x01
    4e06:	9a 81       	ldd	r25, Y+2	; 0x02
    4e08:	dc 01       	movw	r26, r24
    4e0a:	8d 91       	ld	r24, X+
    4e0c:	9c 91       	ld	r25, X
    4e0e:	44 96       	adiw	r24, 0x14	; 20
    4e10:	dc 01       	movw	r26, r24
    4e12:	ed 91       	ld	r30, X+
    4e14:	fc 91       	ld	r31, X
    4e16:	2d 81       	ldd	r18, Y+5	; 0x05
    4e18:	3e 81       	ldd	r19, Y+6	; 0x06
    4e1a:	8f 81       	ldd	r24, Y+7	; 0x07
    4e1c:	98 85       	ldd	r25, Y+8	; 0x08
    4e1e:	82 0f       	add	r24, r18
    4e20:	93 1f       	adc	r25, r19
    4e22:	dc 01       	movw	r26, r24
    4e24:	11 97       	sbiw	r26, 0x01	; 1
    4e26:	09 85       	ldd	r16, Y+9	; 0x09
    4e28:	1a 85       	ldd	r17, Y+10	; 0x0a
    4e2a:	2b 81       	ldd	r18, Y+3	; 0x03
    4e2c:	3c 81       	ldd	r19, Y+4	; 0x04
    4e2e:	4d 81       	ldd	r20, Y+5	; 0x05
    4e30:	5e 81       	ldd	r21, Y+6	; 0x06
    4e32:	6b 81       	ldd	r22, Y+3	; 0x03
    4e34:	7c 81       	ldd	r23, Y+4	; 0x04
    4e36:	89 81       	ldd	r24, Y+1	; 0x01
    4e38:	9a 81       	ldd	r25, Y+2	; 0x02
    4e3a:	78 01       	movw	r14, r16
    4e3c:	8d 01       	movw	r16, r26
    4e3e:	19 95       	eicall
    4e40:	89 81       	ldd	r24, Y+1	; 0x01
    4e42:	9a 81       	ldd	r25, Y+2	; 0x02
    4e44:	fc 01       	movw	r30, r24
    4e46:	80 81       	ld	r24, Z
    4e48:	91 81       	ldd	r25, Z+1	; 0x01
    4e4a:	46 96       	adiw	r24, 0x16	; 22
    4e4c:	dc 01       	movw	r26, r24
    4e4e:	2d 91       	ld	r18, X+
    4e50:	3c 91       	ld	r19, X
    4e52:	89 81       	ldd	r24, Y+1	; 0x01
    4e54:	9a 81       	ldd	r25, Y+2	; 0x02
    4e56:	f9 01       	movw	r30, r18
    4e58:	19 95       	eicall
    4e5a:	00 00       	nop
    4e5c:	2a 96       	adiw	r28, 0x0a	; 10
    4e5e:	0f b6       	in	r0, 0x3f	; 63
    4e60:	f8 94       	cli
    4e62:	de bf       	out	0x3e, r29	; 62
    4e64:	0f be       	out	0x3f, r0	; 63
    4e66:	cd bf       	out	0x3d, r28	; 61
    4e68:	df 91       	pop	r29
    4e6a:	cf 91       	pop	r28
    4e6c:	1f 91       	pop	r17
    4e6e:	0f 91       	pop	r16
    4e70:	ff 90       	pop	r15
    4e72:	ef 90       	pop	r14
    4e74:	08 95       	ret

00004e76 <_ZN12Adafruit_GFX13drawFastHLineEiiij>:
    4e76:	ef 92       	push	r14
    4e78:	ff 92       	push	r15
    4e7a:	0f 93       	push	r16
    4e7c:	1f 93       	push	r17
    4e7e:	cf 93       	push	r28
    4e80:	df 93       	push	r29
    4e82:	cd b7       	in	r28, 0x3d	; 61
    4e84:	de b7       	in	r29, 0x3e	; 62
    4e86:	2a 97       	sbiw	r28, 0x0a	; 10
    4e88:	0f b6       	in	r0, 0x3f	; 63
    4e8a:	f8 94       	cli
    4e8c:	de bf       	out	0x3e, r29	; 62
    4e8e:	0f be       	out	0x3f, r0	; 63
    4e90:	cd bf       	out	0x3d, r28	; 61
    4e92:	9a 83       	std	Y+2, r25	; 0x02
    4e94:	89 83       	std	Y+1, r24	; 0x01
    4e96:	7c 83       	std	Y+4, r23	; 0x04
    4e98:	6b 83       	std	Y+3, r22	; 0x03
    4e9a:	5e 83       	std	Y+6, r21	; 0x06
    4e9c:	4d 83       	std	Y+5, r20	; 0x05
    4e9e:	38 87       	std	Y+8, r19	; 0x08
    4ea0:	2f 83       	std	Y+7, r18	; 0x07
    4ea2:	1a 87       	std	Y+10, r17	; 0x0a
    4ea4:	09 87       	std	Y+9, r16	; 0x09
    4ea6:	89 81       	ldd	r24, Y+1	; 0x01
    4ea8:	9a 81       	ldd	r25, Y+2	; 0x02
    4eaa:	dc 01       	movw	r26, r24
    4eac:	8d 91       	ld	r24, X+
    4eae:	9c 91       	ld	r25, X
    4eb0:	0a 96       	adiw	r24, 0x0a	; 10
    4eb2:	fc 01       	movw	r30, r24
    4eb4:	20 81       	ld	r18, Z
    4eb6:	31 81       	ldd	r19, Z+1	; 0x01
    4eb8:	89 81       	ldd	r24, Y+1	; 0x01
    4eba:	9a 81       	ldd	r25, Y+2	; 0x02
    4ebc:	f9 01       	movw	r30, r18
    4ebe:	19 95       	eicall
    4ec0:	89 81       	ldd	r24, Y+1	; 0x01
    4ec2:	9a 81       	ldd	r25, Y+2	; 0x02
    4ec4:	dc 01       	movw	r26, r24
    4ec6:	8d 91       	ld	r24, X+
    4ec8:	9c 91       	ld	r25, X
    4eca:	44 96       	adiw	r24, 0x14	; 20
    4ecc:	dc 01       	movw	r26, r24
    4ece:	ed 91       	ld	r30, X+
    4ed0:	fc 91       	ld	r31, X
    4ed2:	2b 81       	ldd	r18, Y+3	; 0x03
    4ed4:	3c 81       	ldd	r19, Y+4	; 0x04
    4ed6:	8f 81       	ldd	r24, Y+7	; 0x07
    4ed8:	98 85       	ldd	r25, Y+8	; 0x08
    4eda:	82 0f       	add	r24, r18
    4edc:	93 1f       	adc	r25, r19
    4ede:	9c 01       	movw	r18, r24
    4ee0:	21 50       	subi	r18, 0x01	; 1
    4ee2:	31 09       	sbc	r19, r1
    4ee4:	09 85       	ldd	r16, Y+9	; 0x09
    4ee6:	1a 85       	ldd	r17, Y+10	; 0x0a
    4ee8:	ad 81       	ldd	r26, Y+5	; 0x05
    4eea:	be 81       	ldd	r27, Y+6	; 0x06
    4eec:	4d 81       	ldd	r20, Y+5	; 0x05
    4eee:	5e 81       	ldd	r21, Y+6	; 0x06
    4ef0:	6b 81       	ldd	r22, Y+3	; 0x03
    4ef2:	7c 81       	ldd	r23, Y+4	; 0x04
    4ef4:	89 81       	ldd	r24, Y+1	; 0x01
    4ef6:	9a 81       	ldd	r25, Y+2	; 0x02
    4ef8:	78 01       	movw	r14, r16
    4efa:	8d 01       	movw	r16, r26
    4efc:	19 95       	eicall
    4efe:	89 81       	ldd	r24, Y+1	; 0x01
    4f00:	9a 81       	ldd	r25, Y+2	; 0x02
    4f02:	fc 01       	movw	r30, r24
    4f04:	80 81       	ld	r24, Z
    4f06:	91 81       	ldd	r25, Z+1	; 0x01
    4f08:	46 96       	adiw	r24, 0x16	; 22
    4f0a:	dc 01       	movw	r26, r24
    4f0c:	2d 91       	ld	r18, X+
    4f0e:	3c 91       	ld	r19, X
    4f10:	89 81       	ldd	r24, Y+1	; 0x01
    4f12:	9a 81       	ldd	r25, Y+2	; 0x02
    4f14:	f9 01       	movw	r30, r18
    4f16:	19 95       	eicall
    4f18:	00 00       	nop
    4f1a:	2a 96       	adiw	r28, 0x0a	; 10
    4f1c:	0f b6       	in	r0, 0x3f	; 63
    4f1e:	f8 94       	cli
    4f20:	de bf       	out	0x3e, r29	; 62
    4f22:	0f be       	out	0x3f, r0	; 63
    4f24:	cd bf       	out	0x3d, r28	; 61
    4f26:	df 91       	pop	r29
    4f28:	cf 91       	pop	r28
    4f2a:	1f 91       	pop	r17
    4f2c:	0f 91       	pop	r16
    4f2e:	ff 90       	pop	r15
    4f30:	ef 90       	pop	r14
    4f32:	08 95       	ret

00004f34 <_ZN12Adafruit_GFX8fillRectEiiiij>:
    4f34:	ef 92       	push	r14
    4f36:	ff 92       	push	r15
    4f38:	0f 93       	push	r16
    4f3a:	1f 93       	push	r17
    4f3c:	cf 93       	push	r28
    4f3e:	df 93       	push	r29
    4f40:	cd b7       	in	r28, 0x3d	; 61
    4f42:	de b7       	in	r29, 0x3e	; 62
    4f44:	2e 97       	sbiw	r28, 0x0e	; 14
    4f46:	0f b6       	in	r0, 0x3f	; 63
    4f48:	f8 94       	cli
    4f4a:	de bf       	out	0x3e, r29	; 62
    4f4c:	0f be       	out	0x3f, r0	; 63
    4f4e:	cd bf       	out	0x3d, r28	; 61
    4f50:	9c 83       	std	Y+4, r25	; 0x04
    4f52:	8b 83       	std	Y+3, r24	; 0x03
    4f54:	7e 83       	std	Y+6, r23	; 0x06
    4f56:	6d 83       	std	Y+5, r22	; 0x05
    4f58:	58 87       	std	Y+8, r21	; 0x08
    4f5a:	4f 83       	std	Y+7, r20	; 0x07
    4f5c:	3a 87       	std	Y+10, r19	; 0x0a
    4f5e:	29 87       	std	Y+9, r18	; 0x09
    4f60:	1c 87       	std	Y+12, r17	; 0x0c
    4f62:	0b 87       	std	Y+11, r16	; 0x0b
    4f64:	fe 86       	std	Y+14, r15	; 0x0e
    4f66:	ed 86       	std	Y+13, r14	; 0x0d
    4f68:	8b 81       	ldd	r24, Y+3	; 0x03
    4f6a:	9c 81       	ldd	r25, Y+4	; 0x04
    4f6c:	dc 01       	movw	r26, r24
    4f6e:	8d 91       	ld	r24, X+
    4f70:	9c 91       	ld	r25, X
    4f72:	0a 96       	adiw	r24, 0x0a	; 10
    4f74:	fc 01       	movw	r30, r24
    4f76:	20 81       	ld	r18, Z
    4f78:	31 81       	ldd	r19, Z+1	; 0x01
    4f7a:	8b 81       	ldd	r24, Y+3	; 0x03
    4f7c:	9c 81       	ldd	r25, Y+4	; 0x04
    4f7e:	f9 01       	movw	r30, r18
    4f80:	19 95       	eicall
    4f82:	8d 81       	ldd	r24, Y+5	; 0x05
    4f84:	9e 81       	ldd	r25, Y+6	; 0x06
    4f86:	9a 83       	std	Y+2, r25	; 0x02
    4f88:	89 83       	std	Y+1, r24	; 0x01
    4f8a:	2d 81       	ldd	r18, Y+5	; 0x05
    4f8c:	3e 81       	ldd	r19, Y+6	; 0x06
    4f8e:	89 85       	ldd	r24, Y+9	; 0x09
    4f90:	9a 85       	ldd	r25, Y+10	; 0x0a
    4f92:	28 0f       	add	r18, r24
    4f94:	39 1f       	adc	r19, r25
    4f96:	89 81       	ldd	r24, Y+1	; 0x01
    4f98:	9a 81       	ldd	r25, Y+2	; 0x02
    4f9a:	82 17       	cp	r24, r18
    4f9c:	93 07       	cpc	r25, r19
    4f9e:	dc f4       	brge	.+54     	; 0x4fd6 <_ZN12Adafruit_GFX8fillRectEiiiij+0xa2>
    4fa0:	8b 81       	ldd	r24, Y+3	; 0x03
    4fa2:	9c 81       	ldd	r25, Y+4	; 0x04
    4fa4:	dc 01       	movw	r26, r24
    4fa6:	8d 91       	ld	r24, X+
    4fa8:	9c 91       	ld	r25, X
    4faa:	40 96       	adiw	r24, 0x10	; 16
    4fac:	dc 01       	movw	r26, r24
    4fae:	ed 91       	ld	r30, X+
    4fb0:	fc 91       	ld	r31, X
    4fb2:	ad 85       	ldd	r26, Y+13	; 0x0d
    4fb4:	be 85       	ldd	r27, Y+14	; 0x0e
    4fb6:	2b 85       	ldd	r18, Y+11	; 0x0b
    4fb8:	3c 85       	ldd	r19, Y+12	; 0x0c
    4fba:	4f 81       	ldd	r20, Y+7	; 0x07
    4fbc:	58 85       	ldd	r21, Y+8	; 0x08
    4fbe:	69 81       	ldd	r22, Y+1	; 0x01
    4fc0:	7a 81       	ldd	r23, Y+2	; 0x02
    4fc2:	8b 81       	ldd	r24, Y+3	; 0x03
    4fc4:	9c 81       	ldd	r25, Y+4	; 0x04
    4fc6:	8d 01       	movw	r16, r26
    4fc8:	19 95       	eicall
    4fca:	89 81       	ldd	r24, Y+1	; 0x01
    4fcc:	9a 81       	ldd	r25, Y+2	; 0x02
    4fce:	01 96       	adiw	r24, 0x01	; 1
    4fd0:	9a 83       	std	Y+2, r25	; 0x02
    4fd2:	89 83       	std	Y+1, r24	; 0x01
    4fd4:	da cf       	rjmp	.-76     	; 0x4f8a <_ZN12Adafruit_GFX8fillRectEiiiij+0x56>
    4fd6:	8b 81       	ldd	r24, Y+3	; 0x03
    4fd8:	9c 81       	ldd	r25, Y+4	; 0x04
    4fda:	fc 01       	movw	r30, r24
    4fdc:	80 81       	ld	r24, Z
    4fde:	91 81       	ldd	r25, Z+1	; 0x01
    4fe0:	46 96       	adiw	r24, 0x16	; 22
    4fe2:	dc 01       	movw	r26, r24
    4fe4:	2d 91       	ld	r18, X+
    4fe6:	3c 91       	ld	r19, X
    4fe8:	8b 81       	ldd	r24, Y+3	; 0x03
    4fea:	9c 81       	ldd	r25, Y+4	; 0x04
    4fec:	f9 01       	movw	r30, r18
    4fee:	19 95       	eicall
    4ff0:	00 00       	nop
    4ff2:	2e 96       	adiw	r28, 0x0e	; 14
    4ff4:	0f b6       	in	r0, 0x3f	; 63
    4ff6:	f8 94       	cli
    4ff8:	de bf       	out	0x3e, r29	; 62
    4ffa:	0f be       	out	0x3f, r0	; 63
    4ffc:	cd bf       	out	0x3d, r28	; 61
    4ffe:	df 91       	pop	r29
    5000:	cf 91       	pop	r28
    5002:	1f 91       	pop	r17
    5004:	0f 91       	pop	r16
    5006:	ff 90       	pop	r15
    5008:	ef 90       	pop	r14
    500a:	08 95       	ret

0000500c <_ZN12Adafruit_GFX10fillScreenEj>:
    500c:	ef 92       	push	r14
    500e:	ff 92       	push	r15
    5010:	0f 93       	push	r16
    5012:	1f 93       	push	r17
    5014:	cf 93       	push	r28
    5016:	df 93       	push	r29
    5018:	00 d0       	rcall	.+0      	; 0x501a <_ZN12Adafruit_GFX10fillScreenEj+0xe>
    501a:	1f 92       	push	r1
    501c:	cd b7       	in	r28, 0x3d	; 61
    501e:	de b7       	in	r29, 0x3e	; 62
    5020:	9a 83       	std	Y+2, r25	; 0x02
    5022:	89 83       	std	Y+1, r24	; 0x01
    5024:	7c 83       	std	Y+4, r23	; 0x04
    5026:	6b 83       	std	Y+3, r22	; 0x03
    5028:	89 81       	ldd	r24, Y+1	; 0x01
    502a:	9a 81       	ldd	r25, Y+2	; 0x02
    502c:	dc 01       	movw	r26, r24
    502e:	8d 91       	ld	r24, X+
    5030:	9c 91       	ld	r25, X
    5032:	80 96       	adiw	r24, 0x20	; 32
    5034:	dc 01       	movw	r26, r24
    5036:	ed 91       	ld	r30, X+
    5038:	fc 91       	ld	r31, X
    503a:	89 81       	ldd	r24, Y+1	; 0x01
    503c:	9a 81       	ldd	r25, Y+2	; 0x02
    503e:	dc 01       	movw	r26, r24
    5040:	1a 96       	adiw	r26, 0x0a	; 10
    5042:	4d 91       	ld	r20, X+
    5044:	5c 91       	ld	r21, X
    5046:	1b 97       	sbiw	r26, 0x0b	; 11
    5048:	89 81       	ldd	r24, Y+1	; 0x01
    504a:	9a 81       	ldd	r25, Y+2	; 0x02
    504c:	dc 01       	movw	r26, r24
    504e:	18 96       	adiw	r26, 0x08	; 8
    5050:	2d 91       	ld	r18, X+
    5052:	3c 91       	ld	r19, X
    5054:	19 97       	sbiw	r26, 0x09	; 9
    5056:	6b 81       	ldd	r22, Y+3	; 0x03
    5058:	7c 81       	ldd	r23, Y+4	; 0x04
    505a:	89 81       	ldd	r24, Y+1	; 0x01
    505c:	9a 81       	ldd	r25, Y+2	; 0x02
    505e:	7b 01       	movw	r14, r22
    5060:	8a 01       	movw	r16, r20
    5062:	40 e0       	ldi	r20, 0x00	; 0
    5064:	50 e0       	ldi	r21, 0x00	; 0
    5066:	60 e0       	ldi	r22, 0x00	; 0
    5068:	70 e0       	ldi	r23, 0x00	; 0
    506a:	19 95       	eicall
    506c:	00 00       	nop
    506e:	0f 90       	pop	r0
    5070:	0f 90       	pop	r0
    5072:	0f 90       	pop	r0
    5074:	0f 90       	pop	r0
    5076:	df 91       	pop	r29
    5078:	cf 91       	pop	r28
    507a:	1f 91       	pop	r17
    507c:	0f 91       	pop	r16
    507e:	ff 90       	pop	r15
    5080:	ef 90       	pop	r14
    5082:	08 95       	ret

00005084 <_ZN12Adafruit_GFX8drawLineEiiiij>:
    5084:	ef 92       	push	r14
    5086:	ff 92       	push	r15
    5088:	0f 93       	push	r16
    508a:	1f 93       	push	r17
    508c:	cf 93       	push	r28
    508e:	df 93       	push	r29
    5090:	cd b7       	in	r28, 0x3d	; 61
    5092:	de b7       	in	r29, 0x3e	; 62
    5094:	60 97       	sbiw	r28, 0x10	; 16
    5096:	0f b6       	in	r0, 0x3f	; 63
    5098:	f8 94       	cli
    509a:	de bf       	out	0x3e, r29	; 62
    509c:	0f be       	out	0x3f, r0	; 63
    509e:	cd bf       	out	0x3d, r28	; 61
    50a0:	9e 83       	std	Y+6, r25	; 0x06
    50a2:	8d 83       	std	Y+5, r24	; 0x05
    50a4:	78 87       	std	Y+8, r23	; 0x08
    50a6:	6f 83       	std	Y+7, r22	; 0x07
    50a8:	5a 87       	std	Y+10, r21	; 0x0a
    50aa:	49 87       	std	Y+9, r20	; 0x09
    50ac:	3c 87       	std	Y+12, r19	; 0x0c
    50ae:	2b 87       	std	Y+11, r18	; 0x0b
    50b0:	1e 87       	std	Y+14, r17	; 0x0e
    50b2:	0d 87       	std	Y+13, r16	; 0x0d
    50b4:	f8 8a       	std	Y+16, r15	; 0x10
    50b6:	ef 86       	std	Y+15, r14	; 0x0f
    50b8:	2f 81       	ldd	r18, Y+7	; 0x07
    50ba:	38 85       	ldd	r19, Y+8	; 0x08
    50bc:	8b 85       	ldd	r24, Y+11	; 0x0b
    50be:	9c 85       	ldd	r25, Y+12	; 0x0c
    50c0:	28 17       	cp	r18, r24
    50c2:	39 07       	cpc	r19, r25
    50c4:	91 f5       	brne	.+100    	; 0x512a <_ZN12Adafruit_GFX8drawLineEiiiij+0xa6>
    50c6:	29 85       	ldd	r18, Y+9	; 0x09
    50c8:	3a 85       	ldd	r19, Y+10	; 0x0a
    50ca:	8d 85       	ldd	r24, Y+13	; 0x0d
    50cc:	9e 85       	ldd	r25, Y+14	; 0x0e
    50ce:	82 17       	cp	r24, r18
    50d0:	93 07       	cpc	r25, r19
    50d2:	64 f4       	brge	.+24     	; 0x50ec <_ZN12Adafruit_GFX8drawLineEiiiij+0x68>
    50d4:	89 85       	ldd	r24, Y+9	; 0x09
    50d6:	9a 85       	ldd	r25, Y+10	; 0x0a
    50d8:	9a 83       	std	Y+2, r25	; 0x02
    50da:	89 83       	std	Y+1, r24	; 0x01
    50dc:	8d 85       	ldd	r24, Y+13	; 0x0d
    50de:	9e 85       	ldd	r25, Y+14	; 0x0e
    50e0:	9a 87       	std	Y+10, r25	; 0x0a
    50e2:	89 87       	std	Y+9, r24	; 0x09
    50e4:	89 81       	ldd	r24, Y+1	; 0x01
    50e6:	9a 81       	ldd	r25, Y+2	; 0x02
    50e8:	9e 87       	std	Y+14, r25	; 0x0e
    50ea:	8d 87       	std	Y+13, r24	; 0x0d
    50ec:	8d 81       	ldd	r24, Y+5	; 0x05
    50ee:	9e 81       	ldd	r25, Y+6	; 0x06
    50f0:	dc 01       	movw	r26, r24
    50f2:	8d 91       	ld	r24, X+
    50f4:	9c 91       	ld	r25, X
    50f6:	4c 96       	adiw	r24, 0x1c	; 28
    50f8:	dc 01       	movw	r26, r24
    50fa:	ed 91       	ld	r30, X+
    50fc:	fc 91       	ld	r31, X
    50fe:	2d 85       	ldd	r18, Y+13	; 0x0d
    5100:	3e 85       	ldd	r19, Y+14	; 0x0e
    5102:	89 85       	ldd	r24, Y+9	; 0x09
    5104:	9a 85       	ldd	r25, Y+10	; 0x0a
    5106:	a9 01       	movw	r20, r18
    5108:	48 1b       	sub	r20, r24
    510a:	59 0b       	sbc	r21, r25
    510c:	ca 01       	movw	r24, r20
    510e:	9c 01       	movw	r18, r24
    5110:	2f 5f       	subi	r18, 0xFF	; 255
    5112:	3f 4f       	sbci	r19, 0xFF	; 255
    5114:	af 85       	ldd	r26, Y+15	; 0x0f
    5116:	b8 89       	ldd	r27, Y+16	; 0x10
    5118:	49 85       	ldd	r20, Y+9	; 0x09
    511a:	5a 85       	ldd	r21, Y+10	; 0x0a
    511c:	6f 81       	ldd	r22, Y+7	; 0x07
    511e:	78 85       	ldd	r23, Y+8	; 0x08
    5120:	8d 81       	ldd	r24, Y+5	; 0x05
    5122:	9e 81       	ldd	r25, Y+6	; 0x06
    5124:	8d 01       	movw	r16, r26
    5126:	19 95       	eicall
    5128:	6b c0       	rjmp	.+214    	; 0x5200 <_ZN12Adafruit_GFX8drawLineEiiiij+0x17c>
    512a:	29 85       	ldd	r18, Y+9	; 0x09
    512c:	3a 85       	ldd	r19, Y+10	; 0x0a
    512e:	8d 85       	ldd	r24, Y+13	; 0x0d
    5130:	9e 85       	ldd	r25, Y+14	; 0x0e
    5132:	28 17       	cp	r18, r24
    5134:	39 07       	cpc	r19, r25
    5136:	91 f5       	brne	.+100    	; 0x519c <_ZN12Adafruit_GFX8drawLineEiiiij+0x118>
    5138:	2f 81       	ldd	r18, Y+7	; 0x07
    513a:	38 85       	ldd	r19, Y+8	; 0x08
    513c:	8b 85       	ldd	r24, Y+11	; 0x0b
    513e:	9c 85       	ldd	r25, Y+12	; 0x0c
    5140:	82 17       	cp	r24, r18
    5142:	93 07       	cpc	r25, r19
    5144:	64 f4       	brge	.+24     	; 0x515e <_ZN12Adafruit_GFX8drawLineEiiiij+0xda>
    5146:	8f 81       	ldd	r24, Y+7	; 0x07
    5148:	98 85       	ldd	r25, Y+8	; 0x08
    514a:	9c 83       	std	Y+4, r25	; 0x04
    514c:	8b 83       	std	Y+3, r24	; 0x03
    514e:	8b 85       	ldd	r24, Y+11	; 0x0b
    5150:	9c 85       	ldd	r25, Y+12	; 0x0c
    5152:	98 87       	std	Y+8, r25	; 0x08
    5154:	8f 83       	std	Y+7, r24	; 0x07
    5156:	8b 81       	ldd	r24, Y+3	; 0x03
    5158:	9c 81       	ldd	r25, Y+4	; 0x04
    515a:	9c 87       	std	Y+12, r25	; 0x0c
    515c:	8b 87       	std	Y+11, r24	; 0x0b
    515e:	8d 81       	ldd	r24, Y+5	; 0x05
    5160:	9e 81       	ldd	r25, Y+6	; 0x06
    5162:	dc 01       	movw	r26, r24
    5164:	8d 91       	ld	r24, X+
    5166:	9c 91       	ld	r25, X
    5168:	4e 96       	adiw	r24, 0x1e	; 30
    516a:	dc 01       	movw	r26, r24
    516c:	ed 91       	ld	r30, X+
    516e:	fc 91       	ld	r31, X
    5170:	2b 85       	ldd	r18, Y+11	; 0x0b
    5172:	3c 85       	ldd	r19, Y+12	; 0x0c
    5174:	8f 81       	ldd	r24, Y+7	; 0x07
    5176:	98 85       	ldd	r25, Y+8	; 0x08
    5178:	a9 01       	movw	r20, r18
    517a:	48 1b       	sub	r20, r24
    517c:	59 0b       	sbc	r21, r25
    517e:	ca 01       	movw	r24, r20
    5180:	9c 01       	movw	r18, r24
    5182:	2f 5f       	subi	r18, 0xFF	; 255
    5184:	3f 4f       	sbci	r19, 0xFF	; 255
    5186:	af 85       	ldd	r26, Y+15	; 0x0f
    5188:	b8 89       	ldd	r27, Y+16	; 0x10
    518a:	49 85       	ldd	r20, Y+9	; 0x09
    518c:	5a 85       	ldd	r21, Y+10	; 0x0a
    518e:	6f 81       	ldd	r22, Y+7	; 0x07
    5190:	78 85       	ldd	r23, Y+8	; 0x08
    5192:	8d 81       	ldd	r24, Y+5	; 0x05
    5194:	9e 81       	ldd	r25, Y+6	; 0x06
    5196:	8d 01       	movw	r16, r26
    5198:	19 95       	eicall
    519a:	32 c0       	rjmp	.+100    	; 0x5200 <_ZN12Adafruit_GFX8drawLineEiiiij+0x17c>
    519c:	8d 81       	ldd	r24, Y+5	; 0x05
    519e:	9e 81       	ldd	r25, Y+6	; 0x06
    51a0:	dc 01       	movw	r26, r24
    51a2:	8d 91       	ld	r24, X+
    51a4:	9c 91       	ld	r25, X
    51a6:	0a 96       	adiw	r24, 0x0a	; 10
    51a8:	fc 01       	movw	r30, r24
    51aa:	20 81       	ld	r18, Z
    51ac:	31 81       	ldd	r19, Z+1	; 0x01
    51ae:	8d 81       	ldd	r24, Y+5	; 0x05
    51b0:	9e 81       	ldd	r25, Y+6	; 0x06
    51b2:	f9 01       	movw	r30, r18
    51b4:	19 95       	eicall
    51b6:	8d 81       	ldd	r24, Y+5	; 0x05
    51b8:	9e 81       	ldd	r25, Y+6	; 0x06
    51ba:	dc 01       	movw	r26, r24
    51bc:	8d 91       	ld	r24, X+
    51be:	9c 91       	ld	r25, X
    51c0:	44 96       	adiw	r24, 0x14	; 20
    51c2:	dc 01       	movw	r26, r24
    51c4:	ed 91       	ld	r30, X+
    51c6:	fc 91       	ld	r31, X
    51c8:	0f 85       	ldd	r16, Y+15	; 0x0f
    51ca:	18 89       	ldd	r17, Y+16	; 0x10
    51cc:	ad 85       	ldd	r26, Y+13	; 0x0d
    51ce:	be 85       	ldd	r27, Y+14	; 0x0e
    51d0:	2b 85       	ldd	r18, Y+11	; 0x0b
    51d2:	3c 85       	ldd	r19, Y+12	; 0x0c
    51d4:	49 85       	ldd	r20, Y+9	; 0x09
    51d6:	5a 85       	ldd	r21, Y+10	; 0x0a
    51d8:	6f 81       	ldd	r22, Y+7	; 0x07
    51da:	78 85       	ldd	r23, Y+8	; 0x08
    51dc:	8d 81       	ldd	r24, Y+5	; 0x05
    51de:	9e 81       	ldd	r25, Y+6	; 0x06
    51e0:	78 01       	movw	r14, r16
    51e2:	8d 01       	movw	r16, r26
    51e4:	19 95       	eicall
    51e6:	8d 81       	ldd	r24, Y+5	; 0x05
    51e8:	9e 81       	ldd	r25, Y+6	; 0x06
    51ea:	fc 01       	movw	r30, r24
    51ec:	80 81       	ld	r24, Z
    51ee:	91 81       	ldd	r25, Z+1	; 0x01
    51f0:	46 96       	adiw	r24, 0x16	; 22
    51f2:	dc 01       	movw	r26, r24
    51f4:	2d 91       	ld	r18, X+
    51f6:	3c 91       	ld	r19, X
    51f8:	8d 81       	ldd	r24, Y+5	; 0x05
    51fa:	9e 81       	ldd	r25, Y+6	; 0x06
    51fc:	f9 01       	movw	r30, r18
    51fe:	19 95       	eicall
    5200:	00 00       	nop
    5202:	60 96       	adiw	r28, 0x10	; 16
    5204:	0f b6       	in	r0, 0x3f	; 63
    5206:	f8 94       	cli
    5208:	de bf       	out	0x3e, r29	; 62
    520a:	0f be       	out	0x3f, r0	; 63
    520c:	cd bf       	out	0x3d, r28	; 61
    520e:	df 91       	pop	r29
    5210:	cf 91       	pop	r28
    5212:	1f 91       	pop	r17
    5214:	0f 91       	pop	r16
    5216:	ff 90       	pop	r15
    5218:	ef 90       	pop	r14
    521a:	08 95       	ret

0000521c <_ZN12Adafruit_GFX8drawRectEiiiij>:
    521c:	ef 92       	push	r14
    521e:	ff 92       	push	r15
    5220:	0f 93       	push	r16
    5222:	1f 93       	push	r17
    5224:	cf 93       	push	r28
    5226:	df 93       	push	r29
    5228:	cd b7       	in	r28, 0x3d	; 61
    522a:	de b7       	in	r29, 0x3e	; 62
    522c:	2c 97       	sbiw	r28, 0x0c	; 12
    522e:	0f b6       	in	r0, 0x3f	; 63
    5230:	f8 94       	cli
    5232:	de bf       	out	0x3e, r29	; 62
    5234:	0f be       	out	0x3f, r0	; 63
    5236:	cd bf       	out	0x3d, r28	; 61
    5238:	9a 83       	std	Y+2, r25	; 0x02
    523a:	89 83       	std	Y+1, r24	; 0x01
    523c:	7c 83       	std	Y+4, r23	; 0x04
    523e:	6b 83       	std	Y+3, r22	; 0x03
    5240:	5e 83       	std	Y+6, r21	; 0x06
    5242:	4d 83       	std	Y+5, r20	; 0x05
    5244:	38 87       	std	Y+8, r19	; 0x08
    5246:	2f 83       	std	Y+7, r18	; 0x07
    5248:	1a 87       	std	Y+10, r17	; 0x0a
    524a:	09 87       	std	Y+9, r16	; 0x09
    524c:	fc 86       	std	Y+12, r15	; 0x0c
    524e:	eb 86       	std	Y+11, r14	; 0x0b
    5250:	89 81       	ldd	r24, Y+1	; 0x01
    5252:	9a 81       	ldd	r25, Y+2	; 0x02
    5254:	dc 01       	movw	r26, r24
    5256:	8d 91       	ld	r24, X+
    5258:	9c 91       	ld	r25, X
    525a:	0a 96       	adiw	r24, 0x0a	; 10
    525c:	fc 01       	movw	r30, r24
    525e:	20 81       	ld	r18, Z
    5260:	31 81       	ldd	r19, Z+1	; 0x01
    5262:	89 81       	ldd	r24, Y+1	; 0x01
    5264:	9a 81       	ldd	r25, Y+2	; 0x02
    5266:	f9 01       	movw	r30, r18
    5268:	19 95       	eicall
    526a:	89 81       	ldd	r24, Y+1	; 0x01
    526c:	9a 81       	ldd	r25, Y+2	; 0x02
    526e:	dc 01       	movw	r26, r24
    5270:	8d 91       	ld	r24, X+
    5272:	9c 91       	ld	r25, X
    5274:	42 96       	adiw	r24, 0x12	; 18
    5276:	dc 01       	movw	r26, r24
    5278:	ed 91       	ld	r30, X+
    527a:	fc 91       	ld	r31, X
    527c:	ab 85       	ldd	r26, Y+11	; 0x0b
    527e:	bc 85       	ldd	r27, Y+12	; 0x0c
    5280:	2f 81       	ldd	r18, Y+7	; 0x07
    5282:	38 85       	ldd	r19, Y+8	; 0x08
    5284:	4d 81       	ldd	r20, Y+5	; 0x05
    5286:	5e 81       	ldd	r21, Y+6	; 0x06
    5288:	6b 81       	ldd	r22, Y+3	; 0x03
    528a:	7c 81       	ldd	r23, Y+4	; 0x04
    528c:	89 81       	ldd	r24, Y+1	; 0x01
    528e:	9a 81       	ldd	r25, Y+2	; 0x02
    5290:	8d 01       	movw	r16, r26
    5292:	19 95       	eicall
    5294:	89 81       	ldd	r24, Y+1	; 0x01
    5296:	9a 81       	ldd	r25, Y+2	; 0x02
    5298:	fc 01       	movw	r30, r24
    529a:	80 81       	ld	r24, Z
    529c:	91 81       	ldd	r25, Z+1	; 0x01
    529e:	42 96       	adiw	r24, 0x12	; 18
    52a0:	dc 01       	movw	r26, r24
    52a2:	ed 91       	ld	r30, X+
    52a4:	fc 91       	ld	r31, X
    52a6:	2d 81       	ldd	r18, Y+5	; 0x05
    52a8:	3e 81       	ldd	r19, Y+6	; 0x06
    52aa:	89 85       	ldd	r24, Y+9	; 0x09
    52ac:	9a 85       	ldd	r25, Y+10	; 0x0a
    52ae:	82 0f       	add	r24, r18
    52b0:	93 1f       	adc	r25, r19
    52b2:	ac 01       	movw	r20, r24
    52b4:	41 50       	subi	r20, 0x01	; 1
    52b6:	51 09       	sbc	r21, r1
    52b8:	ab 85       	ldd	r26, Y+11	; 0x0b
    52ba:	bc 85       	ldd	r27, Y+12	; 0x0c
    52bc:	2f 81       	ldd	r18, Y+7	; 0x07
    52be:	38 85       	ldd	r19, Y+8	; 0x08
    52c0:	6b 81       	ldd	r22, Y+3	; 0x03
    52c2:	7c 81       	ldd	r23, Y+4	; 0x04
    52c4:	89 81       	ldd	r24, Y+1	; 0x01
    52c6:	9a 81       	ldd	r25, Y+2	; 0x02
    52c8:	8d 01       	movw	r16, r26
    52ca:	19 95       	eicall
    52cc:	89 81       	ldd	r24, Y+1	; 0x01
    52ce:	9a 81       	ldd	r25, Y+2	; 0x02
    52d0:	fc 01       	movw	r30, r24
    52d2:	80 81       	ld	r24, Z
    52d4:	91 81       	ldd	r25, Z+1	; 0x01
    52d6:	40 96       	adiw	r24, 0x10	; 16
    52d8:	dc 01       	movw	r26, r24
    52da:	ed 91       	ld	r30, X+
    52dc:	fc 91       	ld	r31, X
    52de:	ab 85       	ldd	r26, Y+11	; 0x0b
    52e0:	bc 85       	ldd	r27, Y+12	; 0x0c
    52e2:	29 85       	ldd	r18, Y+9	; 0x09
    52e4:	3a 85       	ldd	r19, Y+10	; 0x0a
    52e6:	4d 81       	ldd	r20, Y+5	; 0x05
    52e8:	5e 81       	ldd	r21, Y+6	; 0x06
    52ea:	6b 81       	ldd	r22, Y+3	; 0x03
    52ec:	7c 81       	ldd	r23, Y+4	; 0x04
    52ee:	89 81       	ldd	r24, Y+1	; 0x01
    52f0:	9a 81       	ldd	r25, Y+2	; 0x02
    52f2:	8d 01       	movw	r16, r26
    52f4:	19 95       	eicall
    52f6:	89 81       	ldd	r24, Y+1	; 0x01
    52f8:	9a 81       	ldd	r25, Y+2	; 0x02
    52fa:	fc 01       	movw	r30, r24
    52fc:	80 81       	ld	r24, Z
    52fe:	91 81       	ldd	r25, Z+1	; 0x01
    5300:	40 96       	adiw	r24, 0x10	; 16
    5302:	dc 01       	movw	r26, r24
    5304:	ed 91       	ld	r30, X+
    5306:	fc 91       	ld	r31, X
    5308:	2b 81       	ldd	r18, Y+3	; 0x03
    530a:	3c 81       	ldd	r19, Y+4	; 0x04
    530c:	8f 81       	ldd	r24, Y+7	; 0x07
    530e:	98 85       	ldd	r25, Y+8	; 0x08
    5310:	82 0f       	add	r24, r18
    5312:	93 1f       	adc	r25, r19
    5314:	bc 01       	movw	r22, r24
    5316:	61 50       	subi	r22, 0x01	; 1
    5318:	71 09       	sbc	r23, r1
    531a:	ab 85       	ldd	r26, Y+11	; 0x0b
    531c:	bc 85       	ldd	r27, Y+12	; 0x0c
    531e:	29 85       	ldd	r18, Y+9	; 0x09
    5320:	3a 85       	ldd	r19, Y+10	; 0x0a
    5322:	4d 81       	ldd	r20, Y+5	; 0x05
    5324:	5e 81       	ldd	r21, Y+6	; 0x06
    5326:	89 81       	ldd	r24, Y+1	; 0x01
    5328:	9a 81       	ldd	r25, Y+2	; 0x02
    532a:	8d 01       	movw	r16, r26
    532c:	19 95       	eicall
    532e:	89 81       	ldd	r24, Y+1	; 0x01
    5330:	9a 81       	ldd	r25, Y+2	; 0x02
    5332:	fc 01       	movw	r30, r24
    5334:	80 81       	ld	r24, Z
    5336:	91 81       	ldd	r25, Z+1	; 0x01
    5338:	46 96       	adiw	r24, 0x16	; 22
    533a:	dc 01       	movw	r26, r24
    533c:	2d 91       	ld	r18, X+
    533e:	3c 91       	ld	r19, X
    5340:	89 81       	ldd	r24, Y+1	; 0x01
    5342:	9a 81       	ldd	r25, Y+2	; 0x02
    5344:	f9 01       	movw	r30, r18
    5346:	19 95       	eicall
    5348:	00 00       	nop
    534a:	2c 96       	adiw	r28, 0x0c	; 12
    534c:	0f b6       	in	r0, 0x3f	; 63
    534e:	f8 94       	cli
    5350:	de bf       	out	0x3e, r29	; 62
    5352:	0f be       	out	0x3f, r0	; 63
    5354:	cd bf       	out	0x3d, r28	; 61
    5356:	df 91       	pop	r29
    5358:	cf 91       	pop	r28
    535a:	1f 91       	pop	r17
    535c:	0f 91       	pop	r16
    535e:	ff 90       	pop	r15
    5360:	ef 90       	pop	r14
    5362:	08 95       	ret

00005364 <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij>:
    5364:	cf 92       	push	r12
    5366:	df 92       	push	r13
    5368:	ef 92       	push	r14
    536a:	ff 92       	push	r15
    536c:	0f 93       	push	r16
    536e:	1f 93       	push	r17
    5370:	cf 93       	push	r28
    5372:	df 93       	push	r29
    5374:	cd b7       	in	r28, 0x3d	; 61
    5376:	de b7       	in	r29, 0x3e	; 62
    5378:	68 97       	sbiw	r28, 0x18	; 24
    537a:	0f b6       	in	r0, 0x3f	; 63
    537c:	f8 94       	cli
    537e:	de bf       	out	0x3e, r29	; 62
    5380:	0f be       	out	0x3f, r0	; 63
    5382:	cd bf       	out	0x3d, r28	; 61
    5384:	9c 87       	std	Y+12, r25	; 0x0c
    5386:	8b 87       	std	Y+11, r24	; 0x0b
    5388:	7e 87       	std	Y+14, r23	; 0x0e
    538a:	6d 87       	std	Y+13, r22	; 0x0d
    538c:	58 8b       	std	Y+16, r21	; 0x10
    538e:	4f 87       	std	Y+15, r20	; 0x0f
    5390:	3a 8b       	std	Y+18, r19	; 0x12
    5392:	29 8b       	std	Y+17, r18	; 0x11
    5394:	1c 8b       	std	Y+20, r17	; 0x14
    5396:	0b 8b       	std	Y+19, r16	; 0x13
    5398:	fe 8a       	std	Y+22, r15	; 0x16
    539a:	ed 8a       	std	Y+21, r14	; 0x15
    539c:	d8 8e       	std	Y+24, r13	; 0x18
    539e:	cf 8a       	std	Y+23, r12	; 0x17
    53a0:	8b 89       	ldd	r24, Y+19	; 0x13
    53a2:	9c 89       	ldd	r25, Y+20	; 0x14
    53a4:	07 96       	adiw	r24, 0x07	; 7
    53a6:	99 23       	and	r25, r25
    53a8:	0c f4       	brge	.+2      	; 0x53ac <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij+0x48>
    53aa:	07 96       	adiw	r24, 0x07	; 7
    53ac:	95 95       	asr	r25
    53ae:	87 95       	ror	r24
    53b0:	95 95       	asr	r25
    53b2:	87 95       	ror	r24
    53b4:	95 95       	asr	r25
    53b6:	87 95       	ror	r24
    53b8:	9f 83       	std	Y+7, r25	; 0x07
    53ba:	8e 83       	std	Y+6, r24	; 0x06
    53bc:	19 82       	std	Y+1, r1	; 0x01
    53be:	8b 85       	ldd	r24, Y+11	; 0x0b
    53c0:	9c 85       	ldd	r25, Y+12	; 0x0c
    53c2:	dc 01       	movw	r26, r24
    53c4:	8d 91       	ld	r24, X+
    53c6:	9c 91       	ld	r25, X
    53c8:	0a 96       	adiw	r24, 0x0a	; 10
    53ca:	fc 01       	movw	r30, r24
    53cc:	20 81       	ld	r18, Z
    53ce:	31 81       	ldd	r19, Z+1	; 0x01
    53d0:	8b 85       	ldd	r24, Y+11	; 0x0b
    53d2:	9c 85       	ldd	r25, Y+12	; 0x0c
    53d4:	f9 01       	movw	r30, r18
    53d6:	19 95       	eicall
    53d8:	1b 82       	std	Y+3, r1	; 0x03
    53da:	1a 82       	std	Y+2, r1	; 0x02
    53dc:	2a 81       	ldd	r18, Y+2	; 0x02
    53de:	3b 81       	ldd	r19, Y+3	; 0x03
    53e0:	8d 89       	ldd	r24, Y+21	; 0x15
    53e2:	9e 89       	ldd	r25, Y+22	; 0x16
    53e4:	28 17       	cp	r18, r24
    53e6:	39 07       	cpc	r19, r25
    53e8:	0c f0       	brlt	.+2      	; 0x53ec <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij+0x88>
    53ea:	65 c0       	rjmp	.+202    	; 0x54b6 <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij+0x152>
    53ec:	1d 82       	std	Y+5, r1	; 0x05
    53ee:	1c 82       	std	Y+4, r1	; 0x04
    53f0:	2c 81       	ldd	r18, Y+4	; 0x04
    53f2:	3d 81       	ldd	r19, Y+5	; 0x05
    53f4:	8b 89       	ldd	r24, Y+19	; 0x13
    53f6:	9c 89       	ldd	r25, Y+20	; 0x14
    53f8:	28 17       	cp	r18, r24
    53fa:	39 07       	cpc	r19, r25
    53fc:	0c f0       	brlt	.+2      	; 0x5400 <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij+0x9c>
    53fe:	50 c0       	rjmp	.+160    	; 0x54a0 <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij+0x13c>
    5400:	8c 81       	ldd	r24, Y+4	; 0x04
    5402:	9d 81       	ldd	r25, Y+5	; 0x05
    5404:	87 70       	andi	r24, 0x07	; 7
    5406:	99 27       	eor	r25, r25
    5408:	89 2b       	or	r24, r25
    540a:	21 f0       	breq	.+8      	; 0x5414 <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij+0xb0>
    540c:	89 81       	ldd	r24, Y+1	; 0x01
    540e:	88 0f       	add	r24, r24
    5410:	89 83       	std	Y+1, r24	; 0x01
    5412:	26 c0       	rjmp	.+76     	; 0x5460 <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij+0xfc>
    5414:	4a 81       	ldd	r20, Y+2	; 0x02
    5416:	5b 81       	ldd	r21, Y+3	; 0x03
    5418:	8e 81       	ldd	r24, Y+6	; 0x06
    541a:	9f 81       	ldd	r25, Y+7	; 0x07
    541c:	48 9f       	mul	r20, r24
    541e:	90 01       	movw	r18, r0
    5420:	49 9f       	mul	r20, r25
    5422:	30 0d       	add	r19, r0
    5424:	58 9f       	mul	r21, r24
    5426:	30 0d       	add	r19, r0
    5428:	11 24       	eor	r1, r1
    542a:	8c 81       	ldd	r24, Y+4	; 0x04
    542c:	9d 81       	ldd	r25, Y+5	; 0x05
    542e:	99 23       	and	r25, r25
    5430:	0c f4       	brge	.+2      	; 0x5434 <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij+0xd0>
    5432:	07 96       	adiw	r24, 0x07	; 7
    5434:	95 95       	asr	r25
    5436:	87 95       	ror	r24
    5438:	95 95       	asr	r25
    543a:	87 95       	ror	r24
    543c:	95 95       	asr	r25
    543e:	87 95       	ror	r24
    5440:	82 0f       	add	r24, r18
    5442:	93 1f       	adc	r25, r19
    5444:	9c 01       	movw	r18, r24
    5446:	89 89       	ldd	r24, Y+17	; 0x11
    5448:	9a 89       	ldd	r25, Y+18	; 0x12
    544a:	82 0f       	add	r24, r18
    544c:	93 1f       	adc	r25, r19
    544e:	99 87       	std	Y+9, r25	; 0x09
    5450:	88 87       	std	Y+8, r24	; 0x08
    5452:	88 85       	ldd	r24, Y+8	; 0x08
    5454:	99 85       	ldd	r25, Y+9	; 0x09
    5456:	fc 01       	movw	r30, r24
    5458:	84 91       	lpm	r24, Z
    545a:	8a 87       	std	Y+10, r24	; 0x0a
    545c:	8a 85       	ldd	r24, Y+10	; 0x0a
    545e:	89 83       	std	Y+1, r24	; 0x01
    5460:	89 81       	ldd	r24, Y+1	; 0x01
    5462:	88 23       	and	r24, r24
    5464:	bc f4       	brge	.+46     	; 0x5494 <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij+0x130>
    5466:	8b 85       	ldd	r24, Y+11	; 0x0b
    5468:	9c 85       	ldd	r25, Y+12	; 0x0c
    546a:	dc 01       	movw	r26, r24
    546c:	8d 91       	ld	r24, X+
    546e:	9c 91       	ld	r25, X
    5470:	0c 96       	adiw	r24, 0x0c	; 12
    5472:	dc 01       	movw	r26, r24
    5474:	ed 91       	ld	r30, X+
    5476:	fc 91       	ld	r31, X
    5478:	2d 85       	ldd	r18, Y+13	; 0x0d
    547a:	3e 85       	ldd	r19, Y+14	; 0x0e
    547c:	8c 81       	ldd	r24, Y+4	; 0x04
    547e:	9d 81       	ldd	r25, Y+5	; 0x05
    5480:	b9 01       	movw	r22, r18
    5482:	68 0f       	add	r22, r24
    5484:	79 1f       	adc	r23, r25
    5486:	2f 89       	ldd	r18, Y+23	; 0x17
    5488:	38 8d       	ldd	r19, Y+24	; 0x18
    548a:	4f 85       	ldd	r20, Y+15	; 0x0f
    548c:	58 89       	ldd	r21, Y+16	; 0x10
    548e:	8b 85       	ldd	r24, Y+11	; 0x0b
    5490:	9c 85       	ldd	r25, Y+12	; 0x0c
    5492:	19 95       	eicall
    5494:	8c 81       	ldd	r24, Y+4	; 0x04
    5496:	9d 81       	ldd	r25, Y+5	; 0x05
    5498:	01 96       	adiw	r24, 0x01	; 1
    549a:	9d 83       	std	Y+5, r25	; 0x05
    549c:	8c 83       	std	Y+4, r24	; 0x04
    549e:	a8 cf       	rjmp	.-176    	; 0x53f0 <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij+0x8c>
    54a0:	8a 81       	ldd	r24, Y+2	; 0x02
    54a2:	9b 81       	ldd	r25, Y+3	; 0x03
    54a4:	01 96       	adiw	r24, 0x01	; 1
    54a6:	9b 83       	std	Y+3, r25	; 0x03
    54a8:	8a 83       	std	Y+2, r24	; 0x02
    54aa:	8f 85       	ldd	r24, Y+15	; 0x0f
    54ac:	98 89       	ldd	r25, Y+16	; 0x10
    54ae:	01 96       	adiw	r24, 0x01	; 1
    54b0:	98 8b       	std	Y+16, r25	; 0x10
    54b2:	8f 87       	std	Y+15, r24	; 0x0f
    54b4:	93 cf       	rjmp	.-218    	; 0x53dc <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij+0x78>
    54b6:	8b 85       	ldd	r24, Y+11	; 0x0b
    54b8:	9c 85       	ldd	r25, Y+12	; 0x0c
    54ba:	fc 01       	movw	r30, r24
    54bc:	80 81       	ld	r24, Z
    54be:	91 81       	ldd	r25, Z+1	; 0x01
    54c0:	46 96       	adiw	r24, 0x16	; 22
    54c2:	dc 01       	movw	r26, r24
    54c4:	2d 91       	ld	r18, X+
    54c6:	3c 91       	ld	r19, X
    54c8:	8b 85       	ldd	r24, Y+11	; 0x0b
    54ca:	9c 85       	ldd	r25, Y+12	; 0x0c
    54cc:	f9 01       	movw	r30, r18
    54ce:	19 95       	eicall
    54d0:	00 00       	nop
    54d2:	68 96       	adiw	r28, 0x18	; 24
    54d4:	0f b6       	in	r0, 0x3f	; 63
    54d6:	f8 94       	cli
    54d8:	de bf       	out	0x3e, r29	; 62
    54da:	0f be       	out	0x3f, r0	; 63
    54dc:	cd bf       	out	0x3d, r28	; 61
    54de:	df 91       	pop	r29
    54e0:	cf 91       	pop	r28
    54e2:	1f 91       	pop	r17
    54e4:	0f 91       	pop	r16
    54e6:	ff 90       	pop	r15
    54e8:	ef 90       	pop	r14
    54ea:	df 90       	pop	r13
    54ec:	cf 90       	pop	r12
    54ee:	08 95       	ret

000054f0 <_ZN12Adafruit_GFX8drawCharEiihjjhh>:
    54f0:	af 92       	push	r10
    54f2:	cf 92       	push	r12
    54f4:	df 92       	push	r13
    54f6:	ef 92       	push	r14
    54f8:	ff 92       	push	r15
    54fa:	0f 93       	push	r16
    54fc:	1f 93       	push	r17
    54fe:	cf 93       	push	r28
    5500:	df 93       	push	r29
    5502:	cd b7       	in	r28, 0x3d	; 61
    5504:	de b7       	in	r29, 0x3e	; 62
    5506:	eb 97       	sbiw	r28, 0x3b	; 59
    5508:	0f b6       	in	r0, 0x3f	; 63
    550a:	f8 94       	cli
    550c:	de bf       	out	0x3e, r29	; 62
    550e:	0f be       	out	0x3f, r0	; 63
    5510:	cd bf       	out	0x3d, r28	; 61
    5512:	98 ab       	std	Y+48, r25	; 0x30
    5514:	8f a7       	std	Y+47, r24	; 0x2f
    5516:	7a ab       	std	Y+50, r23	; 0x32
    5518:	69 ab       	std	Y+49, r22	; 0x31
    551a:	5c ab       	std	Y+52, r21	; 0x34
    551c:	4b ab       	std	Y+51, r20	; 0x33
    551e:	2d ab       	std	Y+53, r18	; 0x35
    5520:	1f ab       	std	Y+55, r17	; 0x37
    5522:	0e ab       	std	Y+54, r16	; 0x36
    5524:	f9 ae       	std	Y+57, r15	; 0x39
    5526:	e8 ae       	std	Y+56, r14	; 0x38
    5528:	ca ae       	std	Y+58, r12	; 0x3a
    552a:	ab ae       	std	Y+59, r10	; 0x3b
    552c:	8f a5       	ldd	r24, Y+47	; 0x2f
    552e:	98 a9       	ldd	r25, Y+48	; 0x30
    5530:	dc 01       	movw	r26, r24
    5532:	59 96       	adiw	r26, 0x19	; 25
    5534:	8d 91       	ld	r24, X+
    5536:	9c 91       	ld	r25, X
    5538:	5a 97       	sbiw	r26, 0x1a	; 26
    553a:	89 2b       	or	r24, r25
    553c:	09 f0       	breq	.+2      	; 0x5540 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x50>
    553e:	c7 c1       	rjmp	.+910    	; 0x58ce <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x3de>
    5540:	8f a5       	ldd	r24, Y+47	; 0x2f
    5542:	98 a9       	ldd	r25, Y+48	; 0x30
    5544:	fc 01       	movw	r30, r24
    5546:	20 85       	ldd	r18, Z+8	; 0x08
    5548:	31 85       	ldd	r19, Z+9	; 0x09
    554a:	89 a9       	ldd	r24, Y+49	; 0x31
    554c:	9a a9       	ldd	r25, Y+50	; 0x32
    554e:	82 17       	cp	r24, r18
    5550:	93 07       	cpc	r25, r19
    5552:	0c f0       	brlt	.+2      	; 0x5556 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x66>
    5554:	0e c3       	rjmp	.+1564   	; 0x5b72 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x682>
    5556:	8f a5       	ldd	r24, Y+47	; 0x2f
    5558:	98 a9       	ldd	r25, Y+48	; 0x30
    555a:	dc 01       	movw	r26, r24
    555c:	1a 96       	adiw	r26, 0x0a	; 10
    555e:	2d 91       	ld	r18, X+
    5560:	3c 91       	ld	r19, X
    5562:	1b 97       	sbiw	r26, 0x0b	; 11
    5564:	8b a9       	ldd	r24, Y+51	; 0x33
    5566:	9c a9       	ldd	r25, Y+52	; 0x34
    5568:	82 17       	cp	r24, r18
    556a:	93 07       	cpc	r25, r19
    556c:	0c f0       	brlt	.+2      	; 0x5570 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x80>
    556e:	01 c3       	rjmp	.+1538   	; 0x5b72 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x682>
    5570:	8a ad       	ldd	r24, Y+58	; 0x3a
    5572:	28 2f       	mov	r18, r24
    5574:	30 e0       	ldi	r19, 0x00	; 0
    5576:	c9 01       	movw	r24, r18
    5578:	88 0f       	add	r24, r24
    557a:	99 1f       	adc	r25, r25
    557c:	82 0f       	add	r24, r18
    557e:	93 1f       	adc	r25, r19
    5580:	88 0f       	add	r24, r24
    5582:	99 1f       	adc	r25, r25
    5584:	9c 01       	movw	r18, r24
    5586:	89 a9       	ldd	r24, Y+49	; 0x31
    5588:	9a a9       	ldd	r25, Y+50	; 0x32
    558a:	82 0f       	add	r24, r18
    558c:	93 1f       	adc	r25, r19
    558e:	01 97       	sbiw	r24, 0x01	; 1
    5590:	99 23       	and	r25, r25
    5592:	0c f4       	brge	.+2      	; 0x5596 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0xa6>
    5594:	ee c2       	rjmp	.+1500   	; 0x5b72 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x682>
    5596:	8b ad       	ldd	r24, Y+59	; 0x3b
    5598:	88 2f       	mov	r24, r24
    559a:	90 e0       	ldi	r25, 0x00	; 0
    559c:	9c 01       	movw	r18, r24
    559e:	22 0f       	add	r18, r18
    55a0:	33 1f       	adc	r19, r19
    55a2:	22 0f       	add	r18, r18
    55a4:	33 1f       	adc	r19, r19
    55a6:	22 0f       	add	r18, r18
    55a8:	33 1f       	adc	r19, r19
    55aa:	8b a9       	ldd	r24, Y+51	; 0x33
    55ac:	9c a9       	ldd	r25, Y+52	; 0x34
    55ae:	82 0f       	add	r24, r18
    55b0:	93 1f       	adc	r25, r19
    55b2:	01 97       	sbiw	r24, 0x01	; 1
    55b4:	99 23       	and	r25, r25
    55b6:	0c f4       	brge	.+2      	; 0x55ba <_ZN12Adafruit_GFX8drawCharEiihjjhh+0xca>
    55b8:	dc c2       	rjmp	.+1464   	; 0x5b72 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x682>
    55ba:	8f a5       	ldd	r24, Y+47	; 0x2f
    55bc:	98 a9       	ldd	r25, Y+48	; 0x30
    55be:	fc 01       	movw	r30, r24
    55c0:	90 8d       	ldd	r25, Z+24	; 0x18
    55c2:	81 e0       	ldi	r24, 0x01	; 1
    55c4:	89 27       	eor	r24, r25
    55c6:	88 23       	and	r24, r24
    55c8:	31 f0       	breq	.+12     	; 0x55d6 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0xe6>
    55ca:	8d a9       	ldd	r24, Y+53	; 0x35
    55cc:	80 3b       	cpi	r24, 0xB0	; 176
    55ce:	18 f0       	brcs	.+6      	; 0x55d6 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0xe6>
    55d0:	8d a9       	ldd	r24, Y+53	; 0x35
    55d2:	8f 5f       	subi	r24, 0xFF	; 255
    55d4:	8d ab       	std	Y+53, r24	; 0x35
    55d6:	8f a5       	ldd	r24, Y+47	; 0x2f
    55d8:	98 a9       	ldd	r25, Y+48	; 0x30
    55da:	dc 01       	movw	r26, r24
    55dc:	8d 91       	ld	r24, X+
    55de:	9c 91       	ld	r25, X
    55e0:	0a 96       	adiw	r24, 0x0a	; 10
    55e2:	fc 01       	movw	r30, r24
    55e4:	20 81       	ld	r18, Z
    55e6:	31 81       	ldd	r19, Z+1	; 0x01
    55e8:	8f a5       	ldd	r24, Y+47	; 0x2f
    55ea:	98 a9       	ldd	r25, Y+48	; 0x30
    55ec:	f9 01       	movw	r30, r18
    55ee:	19 95       	eicall
    55f0:	19 82       	std	Y+1, r1	; 0x01
    55f2:	89 81       	ldd	r24, Y+1	; 0x01
    55f4:	85 30       	cpi	r24, 0x05	; 5
    55f6:	0c f0       	brlt	.+2      	; 0x55fa <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x10a>
    55f8:	07 c1       	rjmp	.+526    	; 0x5808 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x318>
    55fa:	8d a9       	ldd	r24, Y+53	; 0x35
    55fc:	28 2f       	mov	r18, r24
    55fe:	30 e0       	ldi	r19, 0x00	; 0
    5600:	c9 01       	movw	r24, r18
    5602:	88 0f       	add	r24, r24
    5604:	99 1f       	adc	r25, r25
    5606:	88 0f       	add	r24, r24
    5608:	99 1f       	adc	r25, r25
    560a:	28 0f       	add	r18, r24
    560c:	39 1f       	adc	r19, r25
    560e:	89 81       	ldd	r24, Y+1	; 0x01
    5610:	08 2e       	mov	r0, r24
    5612:	00 0c       	add	r0, r0
    5614:	99 0b       	sbc	r25, r25
    5616:	82 0f       	add	r24, r18
    5618:	93 1f       	adc	r25, r19
    561a:	8a 5d       	subi	r24, 0xDA	; 218
    561c:	9b 4f       	sbci	r25, 0xFB	; 251
    561e:	9f 87       	std	Y+15, r25	; 0x0f
    5620:	8e 87       	std	Y+14, r24	; 0x0e
    5622:	8e 85       	ldd	r24, Y+14	; 0x0e
    5624:	9f 85       	ldd	r25, Y+15	; 0x0f
    5626:	fc 01       	movw	r30, r24
    5628:	84 91       	lpm	r24, Z
    562a:	88 8b       	std	Y+16, r24	; 0x10
    562c:	88 89       	ldd	r24, Y+16	; 0x10
    562e:	8a 83       	std	Y+2, r24	; 0x02
    5630:	1b 82       	std	Y+3, r1	; 0x03
    5632:	8b 81       	ldd	r24, Y+3	; 0x03
    5634:	88 30       	cpi	r24, 0x08	; 8
    5636:	0c f0       	brlt	.+2      	; 0x563a <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x14a>
    5638:	e3 c0       	rjmp	.+454    	; 0x5800 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x310>
    563a:	8a 81       	ldd	r24, Y+2	; 0x02
    563c:	88 2f       	mov	r24, r24
    563e:	90 e0       	ldi	r25, 0x00	; 0
    5640:	81 70       	andi	r24, 0x01	; 1
    5642:	99 27       	eor	r25, r25
    5644:	89 2b       	or	r24, r25
    5646:	09 f4       	brne	.+2      	; 0x564a <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x15a>
    5648:	65 c0       	rjmp	.+202    	; 0x5714 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x224>
    564a:	8a ad       	ldd	r24, Y+58	; 0x3a
    564c:	81 30       	cpi	r24, 0x01	; 1
    564e:	21 f5       	brne	.+72     	; 0x5698 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x1a8>
    5650:	8b ad       	ldd	r24, Y+59	; 0x3b
    5652:	81 30       	cpi	r24, 0x01	; 1
    5654:	09 f5       	brne	.+66     	; 0x5698 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x1a8>
    5656:	8f a5       	ldd	r24, Y+47	; 0x2f
    5658:	98 a9       	ldd	r25, Y+48	; 0x30
    565a:	dc 01       	movw	r26, r24
    565c:	8d 91       	ld	r24, X+
    565e:	9c 91       	ld	r25, X
    5660:	0c 96       	adiw	r24, 0x0c	; 12
    5662:	dc 01       	movw	r26, r24
    5664:	ed 91       	ld	r30, X+
    5666:	fc 91       	ld	r31, X
    5668:	8b 81       	ldd	r24, Y+3	; 0x03
    566a:	28 2f       	mov	r18, r24
    566c:	88 0f       	add	r24, r24
    566e:	33 0b       	sbc	r19, r19
    5670:	8b a9       	ldd	r24, Y+51	; 0x33
    5672:	9c a9       	ldd	r25, Y+52	; 0x34
    5674:	a9 01       	movw	r20, r18
    5676:	48 0f       	add	r20, r24
    5678:	59 1f       	adc	r21, r25
    567a:	89 81       	ldd	r24, Y+1	; 0x01
    567c:	28 2f       	mov	r18, r24
    567e:	88 0f       	add	r24, r24
    5680:	33 0b       	sbc	r19, r19
    5682:	89 a9       	ldd	r24, Y+49	; 0x31
    5684:	9a a9       	ldd	r25, Y+50	; 0x32
    5686:	b9 01       	movw	r22, r18
    5688:	68 0f       	add	r22, r24
    568a:	79 1f       	adc	r23, r25
    568c:	2e a9       	ldd	r18, Y+54	; 0x36
    568e:	3f a9       	ldd	r19, Y+55	; 0x37
    5690:	8f a5       	ldd	r24, Y+47	; 0x2f
    5692:	98 a9       	ldd	r25, Y+48	; 0x30
    5694:	19 95       	eicall
    5696:	aa c0       	rjmp	.+340    	; 0x57ec <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x2fc>
    5698:	8f a5       	ldd	r24, Y+47	; 0x2f
    569a:	98 a9       	ldd	r25, Y+48	; 0x30
    569c:	fc 01       	movw	r30, r24
    569e:	80 81       	ld	r24, Z
    56a0:	91 81       	ldd	r25, Z+1	; 0x01
    56a2:	0e 96       	adiw	r24, 0x0e	; 14
    56a4:	dc 01       	movw	r26, r24
    56a6:	ed 91       	ld	r30, X+
    56a8:	fc 91       	ld	r31, X
    56aa:	8b ad       	ldd	r24, Y+59	; 0x3b
    56ac:	08 2f       	mov	r16, r24
    56ae:	10 e0       	ldi	r17, 0x00	; 0
    56b0:	8a ad       	ldd	r24, Y+58	; 0x3a
    56b2:	c8 2e       	mov	r12, r24
    56b4:	d1 2c       	mov	r13, r1
    56b6:	8b 81       	ldd	r24, Y+3	; 0x03
    56b8:	48 2f       	mov	r20, r24
    56ba:	88 0f       	add	r24, r24
    56bc:	55 0b       	sbc	r21, r21
    56be:	8b ad       	ldd	r24, Y+59	; 0x3b
    56c0:	88 2f       	mov	r24, r24
    56c2:	90 e0       	ldi	r25, 0x00	; 0
    56c4:	48 9f       	mul	r20, r24
    56c6:	90 01       	movw	r18, r0
    56c8:	49 9f       	mul	r20, r25
    56ca:	30 0d       	add	r19, r0
    56cc:	58 9f       	mul	r21, r24
    56ce:	30 0d       	add	r19, r0
    56d0:	11 24       	eor	r1, r1
    56d2:	8b a9       	ldd	r24, Y+51	; 0x33
    56d4:	9c a9       	ldd	r25, Y+52	; 0x34
    56d6:	d9 01       	movw	r26, r18
    56d8:	a8 0f       	add	r26, r24
    56da:	b9 1f       	adc	r27, r25
    56dc:	89 81       	ldd	r24, Y+1	; 0x01
    56de:	48 2f       	mov	r20, r24
    56e0:	88 0f       	add	r24, r24
    56e2:	55 0b       	sbc	r21, r21
    56e4:	8a ad       	ldd	r24, Y+58	; 0x3a
    56e6:	88 2f       	mov	r24, r24
    56e8:	90 e0       	ldi	r25, 0x00	; 0
    56ea:	48 9f       	mul	r20, r24
    56ec:	90 01       	movw	r18, r0
    56ee:	49 9f       	mul	r20, r25
    56f0:	30 0d       	add	r19, r0
    56f2:	58 9f       	mul	r21, r24
    56f4:	30 0d       	add	r19, r0
    56f6:	11 24       	eor	r1, r1
    56f8:	89 a9       	ldd	r24, Y+49	; 0x31
    56fa:	9a a9       	ldd	r25, Y+50	; 0x32
    56fc:	b9 01       	movw	r22, r18
    56fe:	68 0f       	add	r22, r24
    5700:	79 1f       	adc	r23, r25
    5702:	2e a9       	ldd	r18, Y+54	; 0x36
    5704:	3f a9       	ldd	r19, Y+55	; 0x37
    5706:	8f a5       	ldd	r24, Y+47	; 0x2f
    5708:	98 a9       	ldd	r25, Y+48	; 0x30
    570a:	79 01       	movw	r14, r18
    570c:	96 01       	movw	r18, r12
    570e:	ad 01       	movw	r20, r26
    5710:	19 95       	eicall
    5712:	6c c0       	rjmp	.+216    	; 0x57ec <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x2fc>
    5714:	28 ad       	ldd	r18, Y+56	; 0x38
    5716:	39 ad       	ldd	r19, Y+57	; 0x39
    5718:	8e a9       	ldd	r24, Y+54	; 0x36
    571a:	9f a9       	ldd	r25, Y+55	; 0x37
    571c:	28 17       	cp	r18, r24
    571e:	39 07       	cpc	r19, r25
    5720:	09 f4       	brne	.+2      	; 0x5724 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x234>
    5722:	64 c0       	rjmp	.+200    	; 0x57ec <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x2fc>
    5724:	8a ad       	ldd	r24, Y+58	; 0x3a
    5726:	81 30       	cpi	r24, 0x01	; 1
    5728:	21 f5       	brne	.+72     	; 0x5772 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x282>
    572a:	8b ad       	ldd	r24, Y+59	; 0x3b
    572c:	81 30       	cpi	r24, 0x01	; 1
    572e:	09 f5       	brne	.+66     	; 0x5772 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x282>
    5730:	8f a5       	ldd	r24, Y+47	; 0x2f
    5732:	98 a9       	ldd	r25, Y+48	; 0x30
    5734:	fc 01       	movw	r30, r24
    5736:	80 81       	ld	r24, Z
    5738:	91 81       	ldd	r25, Z+1	; 0x01
    573a:	0c 96       	adiw	r24, 0x0c	; 12
    573c:	dc 01       	movw	r26, r24
    573e:	ed 91       	ld	r30, X+
    5740:	fc 91       	ld	r31, X
    5742:	8b 81       	ldd	r24, Y+3	; 0x03
    5744:	28 2f       	mov	r18, r24
    5746:	88 0f       	add	r24, r24
    5748:	33 0b       	sbc	r19, r19
    574a:	8b a9       	ldd	r24, Y+51	; 0x33
    574c:	9c a9       	ldd	r25, Y+52	; 0x34
    574e:	a9 01       	movw	r20, r18
    5750:	48 0f       	add	r20, r24
    5752:	59 1f       	adc	r21, r25
    5754:	89 81       	ldd	r24, Y+1	; 0x01
    5756:	28 2f       	mov	r18, r24
    5758:	88 0f       	add	r24, r24
    575a:	33 0b       	sbc	r19, r19
    575c:	89 a9       	ldd	r24, Y+49	; 0x31
    575e:	9a a9       	ldd	r25, Y+50	; 0x32
    5760:	b9 01       	movw	r22, r18
    5762:	68 0f       	add	r22, r24
    5764:	79 1f       	adc	r23, r25
    5766:	28 ad       	ldd	r18, Y+56	; 0x38
    5768:	39 ad       	ldd	r19, Y+57	; 0x39
    576a:	8f a5       	ldd	r24, Y+47	; 0x2f
    576c:	98 a9       	ldd	r25, Y+48	; 0x30
    576e:	19 95       	eicall
    5770:	3d c0       	rjmp	.+122    	; 0x57ec <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x2fc>
    5772:	8f a5       	ldd	r24, Y+47	; 0x2f
    5774:	98 a9       	ldd	r25, Y+48	; 0x30
    5776:	fc 01       	movw	r30, r24
    5778:	80 81       	ld	r24, Z
    577a:	91 81       	ldd	r25, Z+1	; 0x01
    577c:	0e 96       	adiw	r24, 0x0e	; 14
    577e:	dc 01       	movw	r26, r24
    5780:	ed 91       	ld	r30, X+
    5782:	fc 91       	ld	r31, X
    5784:	8b ad       	ldd	r24, Y+59	; 0x3b
    5786:	08 2f       	mov	r16, r24
    5788:	10 e0       	ldi	r17, 0x00	; 0
    578a:	8a ad       	ldd	r24, Y+58	; 0x3a
    578c:	c8 2e       	mov	r12, r24
    578e:	d1 2c       	mov	r13, r1
    5790:	8b 81       	ldd	r24, Y+3	; 0x03
    5792:	48 2f       	mov	r20, r24
    5794:	88 0f       	add	r24, r24
    5796:	55 0b       	sbc	r21, r21
    5798:	8b ad       	ldd	r24, Y+59	; 0x3b
    579a:	88 2f       	mov	r24, r24
    579c:	90 e0       	ldi	r25, 0x00	; 0
    579e:	48 9f       	mul	r20, r24
    57a0:	90 01       	movw	r18, r0
    57a2:	49 9f       	mul	r20, r25
    57a4:	30 0d       	add	r19, r0
    57a6:	58 9f       	mul	r21, r24
    57a8:	30 0d       	add	r19, r0
    57aa:	11 24       	eor	r1, r1
    57ac:	8b a9       	ldd	r24, Y+51	; 0x33
    57ae:	9c a9       	ldd	r25, Y+52	; 0x34
    57b0:	d9 01       	movw	r26, r18
    57b2:	a8 0f       	add	r26, r24
    57b4:	b9 1f       	adc	r27, r25
    57b6:	89 81       	ldd	r24, Y+1	; 0x01
    57b8:	48 2f       	mov	r20, r24
    57ba:	88 0f       	add	r24, r24
    57bc:	55 0b       	sbc	r21, r21
    57be:	8a ad       	ldd	r24, Y+58	; 0x3a
    57c0:	88 2f       	mov	r24, r24
    57c2:	90 e0       	ldi	r25, 0x00	; 0
    57c4:	48 9f       	mul	r20, r24
    57c6:	90 01       	movw	r18, r0
    57c8:	49 9f       	mul	r20, r25
    57ca:	30 0d       	add	r19, r0
    57cc:	58 9f       	mul	r21, r24
    57ce:	30 0d       	add	r19, r0
    57d0:	11 24       	eor	r1, r1
    57d2:	89 a9       	ldd	r24, Y+49	; 0x31
    57d4:	9a a9       	ldd	r25, Y+50	; 0x32
    57d6:	b9 01       	movw	r22, r18
    57d8:	68 0f       	add	r22, r24
    57da:	79 1f       	adc	r23, r25
    57dc:	28 ad       	ldd	r18, Y+56	; 0x38
    57de:	39 ad       	ldd	r19, Y+57	; 0x39
    57e0:	8f a5       	ldd	r24, Y+47	; 0x2f
    57e2:	98 a9       	ldd	r25, Y+48	; 0x30
    57e4:	79 01       	movw	r14, r18
    57e6:	96 01       	movw	r18, r12
    57e8:	ad 01       	movw	r20, r26
    57ea:	19 95       	eicall
    57ec:	8b 81       	ldd	r24, Y+3	; 0x03
    57ee:	8f 5f       	subi	r24, 0xFF	; 255
    57f0:	8b 83       	std	Y+3, r24	; 0x03
    57f2:	8a 81       	ldd	r24, Y+2	; 0x02
    57f4:	88 2f       	mov	r24, r24
    57f6:	90 e0       	ldi	r25, 0x00	; 0
    57f8:	95 95       	asr	r25
    57fa:	87 95       	ror	r24
    57fc:	8a 83       	std	Y+2, r24	; 0x02
    57fe:	19 cf       	rjmp	.-462    	; 0x5632 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x142>
    5800:	89 81       	ldd	r24, Y+1	; 0x01
    5802:	8f 5f       	subi	r24, 0xFF	; 255
    5804:	89 83       	std	Y+1, r24	; 0x01
    5806:	f5 ce       	rjmp	.-534    	; 0x55f2 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x102>
    5808:	28 ad       	ldd	r18, Y+56	; 0x38
    580a:	39 ad       	ldd	r19, Y+57	; 0x39
    580c:	8e a9       	ldd	r24, Y+54	; 0x36
    580e:	9f a9       	ldd	r25, Y+55	; 0x37
    5810:	28 17       	cp	r18, r24
    5812:	39 07       	cpc	r19, r25
    5814:	09 f4       	brne	.+2      	; 0x5818 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x328>
    5816:	4d c0       	rjmp	.+154    	; 0x58b2 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x3c2>
    5818:	8a ad       	ldd	r24, Y+58	; 0x3a
    581a:	81 30       	cpi	r24, 0x01	; 1
    581c:	e1 f4       	brne	.+56     	; 0x5856 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x366>
    581e:	8b ad       	ldd	r24, Y+59	; 0x3b
    5820:	81 30       	cpi	r24, 0x01	; 1
    5822:	c9 f4       	brne	.+50     	; 0x5856 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x366>
    5824:	8f a5       	ldd	r24, Y+47	; 0x2f
    5826:	98 a9       	ldd	r25, Y+48	; 0x30
    5828:	fc 01       	movw	r30, r24
    582a:	80 81       	ld	r24, Z
    582c:	91 81       	ldd	r25, Z+1	; 0x01
    582e:	40 96       	adiw	r24, 0x10	; 16
    5830:	dc 01       	movw	r26, r24
    5832:	ed 91       	ld	r30, X+
    5834:	fc 91       	ld	r31, X
    5836:	89 a9       	ldd	r24, Y+49	; 0x31
    5838:	9a a9       	ldd	r25, Y+50	; 0x32
    583a:	bc 01       	movw	r22, r24
    583c:	6b 5f       	subi	r22, 0xFB	; 251
    583e:	7f 4f       	sbci	r23, 0xFF	; 255
    5840:	28 ad       	ldd	r18, Y+56	; 0x38
    5842:	39 ad       	ldd	r19, Y+57	; 0x39
    5844:	4b a9       	ldd	r20, Y+51	; 0x33
    5846:	5c a9       	ldd	r21, Y+52	; 0x34
    5848:	8f a5       	ldd	r24, Y+47	; 0x2f
    584a:	98 a9       	ldd	r25, Y+48	; 0x30
    584c:	89 01       	movw	r16, r18
    584e:	28 e0       	ldi	r18, 0x08	; 8
    5850:	30 e0       	ldi	r19, 0x00	; 0
    5852:	19 95       	eicall
    5854:	2e c0       	rjmp	.+92     	; 0x58b2 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x3c2>
    5856:	8f a5       	ldd	r24, Y+47	; 0x2f
    5858:	98 a9       	ldd	r25, Y+48	; 0x30
    585a:	fc 01       	movw	r30, r24
    585c:	80 81       	ld	r24, Z
    585e:	91 81       	ldd	r25, Z+1	; 0x01
    5860:	0e 96       	adiw	r24, 0x0e	; 14
    5862:	dc 01       	movw	r26, r24
    5864:	ed 91       	ld	r30, X+
    5866:	fc 91       	ld	r31, X
    5868:	8b ad       	ldd	r24, Y+59	; 0x3b
    586a:	88 2f       	mov	r24, r24
    586c:	90 e0       	ldi	r25, 0x00	; 0
    586e:	8c 01       	movw	r16, r24
    5870:	00 0f       	add	r16, r16
    5872:	11 1f       	adc	r17, r17
    5874:	00 0f       	add	r16, r16
    5876:	11 1f       	adc	r17, r17
    5878:	00 0f       	add	r16, r16
    587a:	11 1f       	adc	r17, r17
    587c:	8a ad       	ldd	r24, Y+58	; 0x3a
    587e:	a8 2f       	mov	r26, r24
    5880:	b0 e0       	ldi	r27, 0x00	; 0
    5882:	8a ad       	ldd	r24, Y+58	; 0x3a
    5884:	28 2f       	mov	r18, r24
    5886:	30 e0       	ldi	r19, 0x00	; 0
    5888:	c9 01       	movw	r24, r18
    588a:	88 0f       	add	r24, r24
    588c:	99 1f       	adc	r25, r25
    588e:	88 0f       	add	r24, r24
    5890:	99 1f       	adc	r25, r25
    5892:	28 0f       	add	r18, r24
    5894:	39 1f       	adc	r19, r25
    5896:	89 a9       	ldd	r24, Y+49	; 0x31
    5898:	9a a9       	ldd	r25, Y+50	; 0x32
    589a:	b9 01       	movw	r22, r18
    589c:	68 0f       	add	r22, r24
    589e:	79 1f       	adc	r23, r25
    58a0:	28 ad       	ldd	r18, Y+56	; 0x38
    58a2:	39 ad       	ldd	r19, Y+57	; 0x39
    58a4:	4b a9       	ldd	r20, Y+51	; 0x33
    58a6:	5c a9       	ldd	r21, Y+52	; 0x34
    58a8:	8f a5       	ldd	r24, Y+47	; 0x2f
    58aa:	98 a9       	ldd	r25, Y+48	; 0x30
    58ac:	79 01       	movw	r14, r18
    58ae:	9d 01       	movw	r18, r26
    58b0:	19 95       	eicall
    58b2:	8f a5       	ldd	r24, Y+47	; 0x2f
    58b4:	98 a9       	ldd	r25, Y+48	; 0x30
    58b6:	fc 01       	movw	r30, r24
    58b8:	80 81       	ld	r24, Z
    58ba:	91 81       	ldd	r25, Z+1	; 0x01
    58bc:	46 96       	adiw	r24, 0x16	; 22
    58be:	dc 01       	movw	r26, r24
    58c0:	2d 91       	ld	r18, X+
    58c2:	3c 91       	ld	r19, X
    58c4:	8f a5       	ldd	r24, Y+47	; 0x2f
    58c6:	98 a9       	ldd	r25, Y+48	; 0x30
    58c8:	f9 01       	movw	r30, r18
    58ca:	19 95       	eicall
    58cc:	53 c1       	rjmp	.+678    	; 0x5b74 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x684>
    58ce:	8f a5       	ldd	r24, Y+47	; 0x2f
    58d0:	98 a9       	ldd	r25, Y+48	; 0x30
    58d2:	dc 01       	movw	r26, r24
    58d4:	59 96       	adiw	r26, 0x19	; 25
    58d6:	8d 91       	ld	r24, X+
    58d8:	9c 91       	ld	r25, X
    58da:	5a 97       	sbiw	r26, 0x1a	; 26
    58dc:	04 96       	adiw	r24, 0x04	; 4
    58de:	9a 8b       	std	Y+18, r25	; 0x12
    58e0:	89 8b       	std	Y+17, r24	; 0x11
    58e2:	89 89       	ldd	r24, Y+17	; 0x11
    58e4:	9a 89       	ldd	r25, Y+18	; 0x12
    58e6:	fc 01       	movw	r30, r24
    58e8:	84 91       	lpm	r24, Z
    58ea:	8b 8b       	std	Y+19, r24	; 0x13
    58ec:	8b 89       	ldd	r24, Y+19	; 0x13
    58ee:	9d a9       	ldd	r25, Y+53	; 0x35
    58f0:	f9 2f       	mov	r31, r25
    58f2:	f8 1b       	sub	r31, r24
    58f4:	8f 2f       	mov	r24, r31
    58f6:	8d ab       	std	Y+53, r24	; 0x35
    58f8:	8f a5       	ldd	r24, Y+47	; 0x2f
    58fa:	98 a9       	ldd	r25, Y+48	; 0x30
    58fc:	dc 01       	movw	r26, r24
    58fe:	59 96       	adiw	r26, 0x19	; 25
    5900:	8d 91       	ld	r24, X+
    5902:	9c 91       	ld	r25, X
    5904:	5a 97       	sbiw	r26, 0x1a	; 26
    5906:	6d a9       	ldd	r22, Y+53	; 0x35
    5908:	0e 94 fe 23 	call	0x47fc	; 0x47fc <_Z18pgm_read_glyph_ptrPK7GFXfonth>
    590c:	9d 8b       	std	Y+21, r25	; 0x15
    590e:	8c 8b       	std	Y+20, r24	; 0x14
    5910:	8f a5       	ldd	r24, Y+47	; 0x2f
    5912:	98 a9       	ldd	r25, Y+48	; 0x30
    5914:	fc 01       	movw	r30, r24
    5916:	81 8d       	ldd	r24, Z+25	; 0x19
    5918:	92 8d       	ldd	r25, Z+26	; 0x1a
    591a:	0e 94 35 24 	call	0x486a	; 0x486a <_Z19pgm_read_bitmap_ptrPK7GFXfont>
    591e:	9f 8b       	std	Y+23, r25	; 0x17
    5920:	8e 8b       	std	Y+22, r24	; 0x16
    5922:	8c 89       	ldd	r24, Y+20	; 0x14
    5924:	9d 89       	ldd	r25, Y+21	; 0x15
    5926:	99 8f       	std	Y+25, r25	; 0x19
    5928:	88 8f       	std	Y+24, r24	; 0x18
    592a:	88 8d       	ldd	r24, Y+24	; 0x18
    592c:	99 8d       	ldd	r25, Y+25	; 0x19
    592e:	fc 01       	movw	r30, r24
    5930:	25 91       	lpm	r18, Z+
    5932:	34 91       	lpm	r19, Z
    5934:	cf 01       	movw	r24, r30
    5936:	3b 8f       	std	Y+27, r19	; 0x1b
    5938:	2a 8f       	std	Y+26, r18	; 0x1a
    593a:	99 8f       	std	Y+25, r25	; 0x19
    593c:	88 8f       	std	Y+24, r24	; 0x18
    593e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    5940:	9b 8d       	ldd	r25, Y+27	; 0x1b
    5942:	9d 83       	std	Y+5, r25	; 0x05
    5944:	8c 83       	std	Y+4, r24	; 0x04
    5946:	8c 89       	ldd	r24, Y+20	; 0x14
    5948:	9d 89       	ldd	r25, Y+21	; 0x15
    594a:	02 96       	adiw	r24, 0x02	; 2
    594c:	9d 8f       	std	Y+29, r25	; 0x1d
    594e:	8c 8f       	std	Y+28, r24	; 0x1c
    5950:	8c 8d       	ldd	r24, Y+28	; 0x1c
    5952:	9d 8d       	ldd	r25, Y+29	; 0x1d
    5954:	fc 01       	movw	r30, r24
    5956:	84 91       	lpm	r24, Z
    5958:	8e 8f       	std	Y+30, r24	; 0x1e
    595a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    595c:	8f 8f       	std	Y+31, r24	; 0x1f
    595e:	8c 89       	ldd	r24, Y+20	; 0x14
    5960:	9d 89       	ldd	r25, Y+21	; 0x15
    5962:	03 96       	adiw	r24, 0x03	; 3
    5964:	99 a3       	std	Y+33, r25	; 0x21
    5966:	88 a3       	std	Y+32, r24	; 0x20
    5968:	88 a1       	ldd	r24, Y+32	; 0x20
    596a:	99 a1       	ldd	r25, Y+33	; 0x21
    596c:	fc 01       	movw	r30, r24
    596e:	84 91       	lpm	r24, Z
    5970:	8a a3       	std	Y+34, r24	; 0x22
    5972:	8a a1       	ldd	r24, Y+34	; 0x22
    5974:	8b a3       	std	Y+35, r24	; 0x23
    5976:	8c 89       	ldd	r24, Y+20	; 0x14
    5978:	9d 89       	ldd	r25, Y+21	; 0x15
    597a:	05 96       	adiw	r24, 0x05	; 5
    597c:	9d a3       	std	Y+37, r25	; 0x25
    597e:	8c a3       	std	Y+36, r24	; 0x24
    5980:	8c a1       	ldd	r24, Y+36	; 0x24
    5982:	9d a1       	ldd	r25, Y+37	; 0x25
    5984:	fc 01       	movw	r30, r24
    5986:	84 91       	lpm	r24, Z
    5988:	8e a3       	std	Y+38, r24	; 0x26
    598a:	8e a1       	ldd	r24, Y+38	; 0x26
    598c:	8f a3       	std	Y+39, r24	; 0x27
    598e:	8c 89       	ldd	r24, Y+20	; 0x14
    5990:	9d 89       	ldd	r25, Y+21	; 0x15
    5992:	06 96       	adiw	r24, 0x06	; 6
    5994:	99 a7       	std	Y+41, r25	; 0x29
    5996:	88 a7       	std	Y+40, r24	; 0x28
    5998:	88 a5       	ldd	r24, Y+40	; 0x28
    599a:	99 a5       	ldd	r25, Y+41	; 0x29
    599c:	fc 01       	movw	r30, r24
    599e:	84 91       	lpm	r24, Z
    59a0:	8a a7       	std	Y+42, r24	; 0x2a
    59a2:	8a a5       	ldd	r24, Y+42	; 0x2a
    59a4:	8b a7       	std	Y+43, r24	; 0x2b
    59a6:	18 86       	std	Y+8, r1	; 0x08
    59a8:	19 86       	std	Y+9, r1	; 0x09
    59aa:	1b 86       	std	Y+11, r1	; 0x0b
    59ac:	1a 86       	std	Y+10, r1	; 0x0a
    59ae:	1d 86       	std	Y+13, r1	; 0x0d
    59b0:	1c 86       	std	Y+12, r1	; 0x0c
    59b2:	8a ad       	ldd	r24, Y+58	; 0x3a
    59b4:	82 30       	cpi	r24, 0x02	; 2
    59b6:	18 f4       	brcc	.+6      	; 0x59be <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x4ce>
    59b8:	8b ad       	ldd	r24, Y+59	; 0x3b
    59ba:	82 30       	cpi	r24, 0x02	; 2
    59bc:	60 f0       	brcs	.+24     	; 0x59d6 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x4e6>
    59be:	8f a1       	ldd	r24, Y+39	; 0x27
    59c0:	08 2e       	mov	r0, r24
    59c2:	00 0c       	add	r0, r0
    59c4:	99 0b       	sbc	r25, r25
    59c6:	9b 87       	std	Y+11, r25	; 0x0b
    59c8:	8a 87       	std	Y+10, r24	; 0x0a
    59ca:	8b a5       	ldd	r24, Y+43	; 0x2b
    59cc:	08 2e       	mov	r0, r24
    59ce:	00 0c       	add	r0, r0
    59d0:	99 0b       	sbc	r25, r25
    59d2:	9d 87       	std	Y+13, r25	; 0x0d
    59d4:	8c 87       	std	Y+12, r24	; 0x0c
    59d6:	8f a5       	ldd	r24, Y+47	; 0x2f
    59d8:	98 a9       	ldd	r25, Y+48	; 0x30
    59da:	dc 01       	movw	r26, r24
    59dc:	8d 91       	ld	r24, X+
    59de:	9c 91       	ld	r25, X
    59e0:	0a 96       	adiw	r24, 0x0a	; 10
    59e2:	fc 01       	movw	r30, r24
    59e4:	20 81       	ld	r18, Z
    59e6:	31 81       	ldd	r19, Z+1	; 0x01
    59e8:	8f a5       	ldd	r24, Y+47	; 0x2f
    59ea:	98 a9       	ldd	r25, Y+48	; 0x30
    59ec:	f9 01       	movw	r30, r18
    59ee:	19 95       	eicall
    59f0:	1f 82       	std	Y+7, r1	; 0x07
    59f2:	9f 81       	ldd	r25, Y+7	; 0x07
    59f4:	8b a1       	ldd	r24, Y+35	; 0x23
    59f6:	98 17       	cp	r25, r24
    59f8:	08 f0       	brcs	.+2      	; 0x59fc <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x50c>
    59fa:	ad c0       	rjmp	.+346    	; 0x5b56 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x666>
    59fc:	1e 82       	std	Y+6, r1	; 0x06
    59fe:	9e 81       	ldd	r25, Y+6	; 0x06
    5a00:	8f 8d       	ldd	r24, Y+31	; 0x1f
    5a02:	98 17       	cp	r25, r24
    5a04:	08 f0       	brcs	.+2      	; 0x5a08 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x518>
    5a06:	a3 c0       	rjmp	.+326    	; 0x5b4e <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x65e>
    5a08:	89 85       	ldd	r24, Y+9	; 0x09
    5a0a:	91 e0       	ldi	r25, 0x01	; 1
    5a0c:	98 0f       	add	r25, r24
    5a0e:	99 87       	std	Y+9, r25	; 0x09
    5a10:	88 2f       	mov	r24, r24
    5a12:	90 e0       	ldi	r25, 0x00	; 0
    5a14:	87 70       	andi	r24, 0x07	; 7
    5a16:	99 27       	eor	r25, r25
    5a18:	21 e0       	ldi	r18, 0x01	; 1
    5a1a:	89 2b       	or	r24, r25
    5a1c:	09 f0       	breq	.+2      	; 0x5a20 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x530>
    5a1e:	20 e0       	ldi	r18, 0x00	; 0
    5a20:	22 23       	and	r18, r18
    5a22:	a1 f0       	breq	.+40     	; 0x5a4c <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x55c>
    5a24:	8c 81       	ldd	r24, Y+4	; 0x04
    5a26:	9d 81       	ldd	r25, Y+5	; 0x05
    5a28:	9c 01       	movw	r18, r24
    5a2a:	2f 5f       	subi	r18, 0xFF	; 255
    5a2c:	3f 4f       	sbci	r19, 0xFF	; 255
    5a2e:	3d 83       	std	Y+5, r19	; 0x05
    5a30:	2c 83       	std	Y+4, r18	; 0x04
    5a32:	2e 89       	ldd	r18, Y+22	; 0x16
    5a34:	3f 89       	ldd	r19, Y+23	; 0x17
    5a36:	82 0f       	add	r24, r18
    5a38:	93 1f       	adc	r25, r19
    5a3a:	9d a7       	std	Y+45, r25	; 0x2d
    5a3c:	8c a7       	std	Y+44, r24	; 0x2c
    5a3e:	8c a5       	ldd	r24, Y+44	; 0x2c
    5a40:	9d a5       	ldd	r25, Y+45	; 0x2d
    5a42:	fc 01       	movw	r30, r24
    5a44:	84 91       	lpm	r24, Z
    5a46:	8e a7       	std	Y+46, r24	; 0x2e
    5a48:	8e a5       	ldd	r24, Y+46	; 0x2e
    5a4a:	88 87       	std	Y+8, r24	; 0x08
    5a4c:	88 85       	ldd	r24, Y+8	; 0x08
    5a4e:	88 23       	and	r24, r24
    5a50:	0c f0       	brlt	.+2      	; 0x5a54 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x564>
    5a52:	76 c0       	rjmp	.+236    	; 0x5b40 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x650>
    5a54:	8a ad       	ldd	r24, Y+58	; 0x3a
    5a56:	81 30       	cpi	r24, 0x01	; 1
    5a58:	71 f5       	brne	.+92     	; 0x5ab6 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x5c6>
    5a5a:	8b ad       	ldd	r24, Y+59	; 0x3b
    5a5c:	81 30       	cpi	r24, 0x01	; 1
    5a5e:	59 f5       	brne	.+86     	; 0x5ab6 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x5c6>
    5a60:	8f a5       	ldd	r24, Y+47	; 0x2f
    5a62:	98 a9       	ldd	r25, Y+48	; 0x30
    5a64:	dc 01       	movw	r26, r24
    5a66:	8d 91       	ld	r24, X+
    5a68:	9c 91       	ld	r25, X
    5a6a:	0c 96       	adiw	r24, 0x0c	; 12
    5a6c:	dc 01       	movw	r26, r24
    5a6e:	ed 91       	ld	r30, X+
    5a70:	fc 91       	ld	r31, X
    5a72:	8b a5       	ldd	r24, Y+43	; 0x2b
    5a74:	28 2f       	mov	r18, r24
    5a76:	88 0f       	add	r24, r24
    5a78:	33 0b       	sbc	r19, r19
    5a7a:	8b a9       	ldd	r24, Y+51	; 0x33
    5a7c:	9c a9       	ldd	r25, Y+52	; 0x34
    5a7e:	28 0f       	add	r18, r24
    5a80:	39 1f       	adc	r19, r25
    5a82:	8f 81       	ldd	r24, Y+7	; 0x07
    5a84:	88 2f       	mov	r24, r24
    5a86:	90 e0       	ldi	r25, 0x00	; 0
    5a88:	a9 01       	movw	r20, r18
    5a8a:	48 0f       	add	r20, r24
    5a8c:	59 1f       	adc	r21, r25
    5a8e:	8f a1       	ldd	r24, Y+39	; 0x27
    5a90:	28 2f       	mov	r18, r24
    5a92:	88 0f       	add	r24, r24
    5a94:	33 0b       	sbc	r19, r19
    5a96:	89 a9       	ldd	r24, Y+49	; 0x31
    5a98:	9a a9       	ldd	r25, Y+50	; 0x32
    5a9a:	28 0f       	add	r18, r24
    5a9c:	39 1f       	adc	r19, r25
    5a9e:	8e 81       	ldd	r24, Y+6	; 0x06
    5aa0:	88 2f       	mov	r24, r24
    5aa2:	90 e0       	ldi	r25, 0x00	; 0
    5aa4:	b9 01       	movw	r22, r18
    5aa6:	68 0f       	add	r22, r24
    5aa8:	79 1f       	adc	r23, r25
    5aaa:	2e a9       	ldd	r18, Y+54	; 0x36
    5aac:	3f a9       	ldd	r19, Y+55	; 0x37
    5aae:	8f a5       	ldd	r24, Y+47	; 0x2f
    5ab0:	98 a9       	ldd	r25, Y+48	; 0x30
    5ab2:	19 95       	eicall
    5ab4:	45 c0       	rjmp	.+138    	; 0x5b40 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x650>
    5ab6:	8f a5       	ldd	r24, Y+47	; 0x2f
    5ab8:	98 a9       	ldd	r25, Y+48	; 0x30
    5aba:	fc 01       	movw	r30, r24
    5abc:	80 81       	ld	r24, Z
    5abe:	91 81       	ldd	r25, Z+1	; 0x01
    5ac0:	0e 96       	adiw	r24, 0x0e	; 14
    5ac2:	dc 01       	movw	r26, r24
    5ac4:	ed 91       	ld	r30, X+
    5ac6:	fc 91       	ld	r31, X
    5ac8:	8b ad       	ldd	r24, Y+59	; 0x3b
    5aca:	08 2f       	mov	r16, r24
    5acc:	10 e0       	ldi	r17, 0x00	; 0
    5ace:	8a ad       	ldd	r24, Y+58	; 0x3a
    5ad0:	c8 2e       	mov	r12, r24
    5ad2:	d1 2c       	mov	r13, r1
    5ad4:	8f 81       	ldd	r24, Y+7	; 0x07
    5ad6:	28 2f       	mov	r18, r24
    5ad8:	30 e0       	ldi	r19, 0x00	; 0
    5ada:	8c 85       	ldd	r24, Y+12	; 0x0c
    5adc:	9d 85       	ldd	r25, Y+13	; 0x0d
    5ade:	a9 01       	movw	r20, r18
    5ae0:	48 0f       	add	r20, r24
    5ae2:	59 1f       	adc	r21, r25
    5ae4:	8b ad       	ldd	r24, Y+59	; 0x3b
    5ae6:	88 2f       	mov	r24, r24
    5ae8:	90 e0       	ldi	r25, 0x00	; 0
    5aea:	48 9f       	mul	r20, r24
    5aec:	90 01       	movw	r18, r0
    5aee:	49 9f       	mul	r20, r25
    5af0:	30 0d       	add	r19, r0
    5af2:	58 9f       	mul	r21, r24
    5af4:	30 0d       	add	r19, r0
    5af6:	11 24       	eor	r1, r1
    5af8:	8b a9       	ldd	r24, Y+51	; 0x33
    5afa:	9c a9       	ldd	r25, Y+52	; 0x34
    5afc:	d9 01       	movw	r26, r18
    5afe:	a8 0f       	add	r26, r24
    5b00:	b9 1f       	adc	r27, r25
    5b02:	8e 81       	ldd	r24, Y+6	; 0x06
    5b04:	28 2f       	mov	r18, r24
    5b06:	30 e0       	ldi	r19, 0x00	; 0
    5b08:	8a 85       	ldd	r24, Y+10	; 0x0a
    5b0a:	9b 85       	ldd	r25, Y+11	; 0x0b
    5b0c:	a9 01       	movw	r20, r18
    5b0e:	48 0f       	add	r20, r24
    5b10:	59 1f       	adc	r21, r25
    5b12:	8a ad       	ldd	r24, Y+58	; 0x3a
    5b14:	88 2f       	mov	r24, r24
    5b16:	90 e0       	ldi	r25, 0x00	; 0
    5b18:	48 9f       	mul	r20, r24
    5b1a:	90 01       	movw	r18, r0
    5b1c:	49 9f       	mul	r20, r25
    5b1e:	30 0d       	add	r19, r0
    5b20:	58 9f       	mul	r21, r24
    5b22:	30 0d       	add	r19, r0
    5b24:	11 24       	eor	r1, r1
    5b26:	89 a9       	ldd	r24, Y+49	; 0x31
    5b28:	9a a9       	ldd	r25, Y+50	; 0x32
    5b2a:	b9 01       	movw	r22, r18
    5b2c:	68 0f       	add	r22, r24
    5b2e:	79 1f       	adc	r23, r25
    5b30:	2e a9       	ldd	r18, Y+54	; 0x36
    5b32:	3f a9       	ldd	r19, Y+55	; 0x37
    5b34:	8f a5       	ldd	r24, Y+47	; 0x2f
    5b36:	98 a9       	ldd	r25, Y+48	; 0x30
    5b38:	79 01       	movw	r14, r18
    5b3a:	96 01       	movw	r18, r12
    5b3c:	ad 01       	movw	r20, r26
    5b3e:	19 95       	eicall
    5b40:	88 85       	ldd	r24, Y+8	; 0x08
    5b42:	88 0f       	add	r24, r24
    5b44:	88 87       	std	Y+8, r24	; 0x08
    5b46:	8e 81       	ldd	r24, Y+6	; 0x06
    5b48:	8f 5f       	subi	r24, 0xFF	; 255
    5b4a:	8e 83       	std	Y+6, r24	; 0x06
    5b4c:	58 cf       	rjmp	.-336    	; 0x59fe <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x50e>
    5b4e:	8f 81       	ldd	r24, Y+7	; 0x07
    5b50:	8f 5f       	subi	r24, 0xFF	; 255
    5b52:	8f 83       	std	Y+7, r24	; 0x07
    5b54:	4e cf       	rjmp	.-356    	; 0x59f2 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x502>
    5b56:	8f a5       	ldd	r24, Y+47	; 0x2f
    5b58:	98 a9       	ldd	r25, Y+48	; 0x30
    5b5a:	fc 01       	movw	r30, r24
    5b5c:	80 81       	ld	r24, Z
    5b5e:	91 81       	ldd	r25, Z+1	; 0x01
    5b60:	46 96       	adiw	r24, 0x16	; 22
    5b62:	dc 01       	movw	r26, r24
    5b64:	2d 91       	ld	r18, X+
    5b66:	3c 91       	ld	r19, X
    5b68:	8f a5       	ldd	r24, Y+47	; 0x2f
    5b6a:	98 a9       	ldd	r25, Y+48	; 0x30
    5b6c:	f9 01       	movw	r30, r18
    5b6e:	19 95       	eicall
    5b70:	01 c0       	rjmp	.+2      	; 0x5b74 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x684>
    5b72:	00 00       	nop
    5b74:	eb 96       	adiw	r28, 0x3b	; 59
    5b76:	0f b6       	in	r0, 0x3f	; 63
    5b78:	f8 94       	cli
    5b7a:	de bf       	out	0x3e, r29	; 62
    5b7c:	0f be       	out	0x3f, r0	; 63
    5b7e:	cd bf       	out	0x3d, r28	; 61
    5b80:	df 91       	pop	r29
    5b82:	cf 91       	pop	r28
    5b84:	1f 91       	pop	r17
    5b86:	0f 91       	pop	r16
    5b88:	ff 90       	pop	r15
    5b8a:	ef 90       	pop	r14
    5b8c:	df 90       	pop	r13
    5b8e:	cf 90       	pop	r12
    5b90:	af 90       	pop	r10
    5b92:	08 95       	ret

00005b94 <_ZN12Adafruit_GFX5writeEh>:
    5b94:	af 92       	push	r10
    5b96:	cf 92       	push	r12
    5b98:	ef 92       	push	r14
    5b9a:	ff 92       	push	r15
    5b9c:	0f 93       	push	r16
    5b9e:	1f 93       	push	r17
    5ba0:	cf 93       	push	r28
    5ba2:	df 93       	push	r29
    5ba4:	cd b7       	in	r28, 0x3d	; 61
    5ba6:	de b7       	in	r29, 0x3e	; 62
    5ba8:	a4 97       	sbiw	r28, 0x24	; 36
    5baa:	0f b6       	in	r0, 0x3f	; 63
    5bac:	f8 94       	cli
    5bae:	de bf       	out	0x3e, r29	; 62
    5bb0:	0f be       	out	0x3f, r0	; 63
    5bb2:	cd bf       	out	0x3d, r28	; 61
    5bb4:	99 a3       	std	Y+33, r25	; 0x21
    5bb6:	88 a3       	std	Y+32, r24	; 0x20
    5bb8:	6a a3       	std	Y+34, r22	; 0x22
    5bba:	88 a1       	ldd	r24, Y+32	; 0x20
    5bbc:	99 a1       	ldd	r25, Y+33	; 0x21
    5bbe:	fc 01       	movw	r30, r24
    5bc0:	81 8d       	ldd	r24, Z+25	; 0x19
    5bc2:	92 8d       	ldd	r25, Z+26	; 0x1a
    5bc4:	89 2b       	or	r24, r25
    5bc6:	09 f0       	breq	.+2      	; 0x5bca <_ZN12Adafruit_GFX5writeEh+0x36>
    5bc8:	a8 c0       	rjmp	.+336    	; 0x5d1a <_ZN12Adafruit_GFX5writeEh+0x186>
    5bca:	8a a1       	ldd	r24, Y+34	; 0x22
    5bcc:	8a 30       	cpi	r24, 0x0A	; 10
    5bce:	f1 f4       	brne	.+60     	; 0x5c0c <_ZN12Adafruit_GFX5writeEh+0x78>
    5bd0:	88 a1       	ldd	r24, Y+32	; 0x20
    5bd2:	99 a1       	ldd	r25, Y+33	; 0x21
    5bd4:	fc 01       	movw	r30, r24
    5bd6:	15 86       	std	Z+13, r1	; 0x0d
    5bd8:	14 86       	std	Z+12, r1	; 0x0c
    5bda:	88 a1       	ldd	r24, Y+32	; 0x20
    5bdc:	99 a1       	ldd	r25, Y+33	; 0x21
    5bde:	fc 01       	movw	r30, r24
    5be0:	26 85       	ldd	r18, Z+14	; 0x0e
    5be2:	37 85       	ldd	r19, Z+15	; 0x0f
    5be4:	88 a1       	ldd	r24, Y+32	; 0x20
    5be6:	99 a1       	ldd	r25, Y+33	; 0x21
    5be8:	fc 01       	movw	r30, r24
    5bea:	85 89       	ldd	r24, Z+21	; 0x15
    5bec:	88 2f       	mov	r24, r24
    5bee:	90 e0       	ldi	r25, 0x00	; 0
    5bf0:	88 0f       	add	r24, r24
    5bf2:	99 1f       	adc	r25, r25
    5bf4:	88 0f       	add	r24, r24
    5bf6:	99 1f       	adc	r25, r25
    5bf8:	88 0f       	add	r24, r24
    5bfa:	99 1f       	adc	r25, r25
    5bfc:	28 0f       	add	r18, r24
    5bfe:	39 1f       	adc	r19, r25
    5c00:	88 a1       	ldd	r24, Y+32	; 0x20
    5c02:	99 a1       	ldd	r25, Y+33	; 0x21
    5c04:	fc 01       	movw	r30, r24
    5c06:	37 87       	std	Z+15, r19	; 0x0f
    5c08:	26 87       	std	Z+14, r18	; 0x0e
    5c0a:	cb c1       	rjmp	.+918    	; 0x5fa2 <_ZN12Adafruit_GFX5writeEh+0x40e>
    5c0c:	8a a1       	ldd	r24, Y+34	; 0x22
    5c0e:	8d 30       	cpi	r24, 0x0D	; 13
    5c10:	09 f4       	brne	.+2      	; 0x5c14 <_ZN12Adafruit_GFX5writeEh+0x80>
    5c12:	c7 c1       	rjmp	.+910    	; 0x5fa2 <_ZN12Adafruit_GFX5writeEh+0x40e>
    5c14:	88 a1       	ldd	r24, Y+32	; 0x20
    5c16:	99 a1       	ldd	r25, Y+33	; 0x21
    5c18:	fc 01       	movw	r30, r24
    5c1a:	87 89       	ldd	r24, Z+23	; 0x17
    5c1c:	88 23       	and	r24, r24
    5c1e:	d1 f1       	breq	.+116    	; 0x5c94 <_ZN12Adafruit_GFX5writeEh+0x100>
    5c20:	88 a1       	ldd	r24, Y+32	; 0x20
    5c22:	99 a1       	ldd	r25, Y+33	; 0x21
    5c24:	fc 01       	movw	r30, r24
    5c26:	44 85       	ldd	r20, Z+12	; 0x0c
    5c28:	55 85       	ldd	r21, Z+13	; 0x0d
    5c2a:	88 a1       	ldd	r24, Y+32	; 0x20
    5c2c:	99 a1       	ldd	r25, Y+33	; 0x21
    5c2e:	fc 01       	movw	r30, r24
    5c30:	84 89       	ldd	r24, Z+20	; 0x14
    5c32:	28 2f       	mov	r18, r24
    5c34:	30 e0       	ldi	r19, 0x00	; 0
    5c36:	c9 01       	movw	r24, r18
    5c38:	88 0f       	add	r24, r24
    5c3a:	99 1f       	adc	r25, r25
    5c3c:	82 0f       	add	r24, r18
    5c3e:	93 1f       	adc	r25, r19
    5c40:	88 0f       	add	r24, r24
    5c42:	99 1f       	adc	r25, r25
    5c44:	9a 01       	movw	r18, r20
    5c46:	28 0f       	add	r18, r24
    5c48:	39 1f       	adc	r19, r25
    5c4a:	88 a1       	ldd	r24, Y+32	; 0x20
    5c4c:	99 a1       	ldd	r25, Y+33	; 0x21
    5c4e:	fc 01       	movw	r30, r24
    5c50:	80 85       	ldd	r24, Z+8	; 0x08
    5c52:	91 85       	ldd	r25, Z+9	; 0x09
    5c54:	82 17       	cp	r24, r18
    5c56:	93 07       	cpc	r25, r19
    5c58:	ec f4       	brge	.+58     	; 0x5c94 <_ZN12Adafruit_GFX5writeEh+0x100>
    5c5a:	88 a1       	ldd	r24, Y+32	; 0x20
    5c5c:	99 a1       	ldd	r25, Y+33	; 0x21
    5c5e:	fc 01       	movw	r30, r24
    5c60:	15 86       	std	Z+13, r1	; 0x0d
    5c62:	14 86       	std	Z+12, r1	; 0x0c
    5c64:	88 a1       	ldd	r24, Y+32	; 0x20
    5c66:	99 a1       	ldd	r25, Y+33	; 0x21
    5c68:	fc 01       	movw	r30, r24
    5c6a:	26 85       	ldd	r18, Z+14	; 0x0e
    5c6c:	37 85       	ldd	r19, Z+15	; 0x0f
    5c6e:	88 a1       	ldd	r24, Y+32	; 0x20
    5c70:	99 a1       	ldd	r25, Y+33	; 0x21
    5c72:	fc 01       	movw	r30, r24
    5c74:	85 89       	ldd	r24, Z+21	; 0x15
    5c76:	88 2f       	mov	r24, r24
    5c78:	90 e0       	ldi	r25, 0x00	; 0
    5c7a:	88 0f       	add	r24, r24
    5c7c:	99 1f       	adc	r25, r25
    5c7e:	88 0f       	add	r24, r24
    5c80:	99 1f       	adc	r25, r25
    5c82:	88 0f       	add	r24, r24
    5c84:	99 1f       	adc	r25, r25
    5c86:	28 0f       	add	r18, r24
    5c88:	39 1f       	adc	r19, r25
    5c8a:	88 a1       	ldd	r24, Y+32	; 0x20
    5c8c:	99 a1       	ldd	r25, Y+33	; 0x21
    5c8e:	fc 01       	movw	r30, r24
    5c90:	37 87       	std	Z+15, r19	; 0x0f
    5c92:	26 87       	std	Z+14, r18	; 0x0e
    5c94:	88 a1       	ldd	r24, Y+32	; 0x20
    5c96:	99 a1       	ldd	r25, Y+33	; 0x21
    5c98:	fc 01       	movw	r30, r24
    5c9a:	b5 89       	ldd	r27, Z+21	; 0x15
    5c9c:	88 a1       	ldd	r24, Y+32	; 0x20
    5c9e:	99 a1       	ldd	r25, Y+33	; 0x21
    5ca0:	fc 01       	movw	r30, r24
    5ca2:	a4 89       	ldd	r26, Z+20	; 0x14
    5ca4:	88 a1       	ldd	r24, Y+32	; 0x20
    5ca6:	99 a1       	ldd	r25, Y+33	; 0x21
    5ca8:	fc 01       	movw	r30, r24
    5caa:	02 88       	ldd	r0, Z+18	; 0x12
    5cac:	f3 89       	ldd	r31, Z+19	; 0x13
    5cae:	e0 2d       	mov	r30, r0
    5cb0:	fc a3       	std	Y+36, r31	; 0x24
    5cb2:	eb a3       	std	Y+35, r30	; 0x23
    5cb4:	88 a1       	ldd	r24, Y+32	; 0x20
    5cb6:	99 a1       	ldd	r25, Y+33	; 0x21
    5cb8:	fc 01       	movw	r30, r24
    5cba:	20 89       	ldd	r18, Z+16	; 0x10
    5cbc:	31 89       	ldd	r19, Z+17	; 0x11
    5cbe:	88 a1       	ldd	r24, Y+32	; 0x20
    5cc0:	99 a1       	ldd	r25, Y+33	; 0x21
    5cc2:	fc 01       	movw	r30, r24
    5cc4:	46 85       	ldd	r20, Z+14	; 0x0e
    5cc6:	57 85       	ldd	r21, Z+15	; 0x0f
    5cc8:	88 a1       	ldd	r24, Y+32	; 0x20
    5cca:	99 a1       	ldd	r25, Y+33	; 0x21
    5ccc:	fc 01       	movw	r30, r24
    5cce:	64 85       	ldd	r22, Z+12	; 0x0c
    5cd0:	75 85       	ldd	r23, Z+13	; 0x0d
    5cd2:	88 a1       	ldd	r24, Y+32	; 0x20
    5cd4:	99 a1       	ldd	r25, Y+33	; 0x21
    5cd6:	ab 2e       	mov	r10, r27
    5cd8:	ca 2e       	mov	r12, r26
    5cda:	eb a0       	ldd	r14, Y+35	; 0x23
    5cdc:	fc a0       	ldd	r15, Y+36	; 0x24
    5cde:	89 01       	movw	r16, r18
    5ce0:	2a a1       	ldd	r18, Y+34	; 0x22
    5ce2:	06 dc       	rcall	.-2036   	; 0x54f0 <_ZN12Adafruit_GFX8drawCharEiihjjhh>
    5ce4:	88 a1       	ldd	r24, Y+32	; 0x20
    5ce6:	99 a1       	ldd	r25, Y+33	; 0x21
    5ce8:	fc 01       	movw	r30, r24
    5cea:	44 85       	ldd	r20, Z+12	; 0x0c
    5cec:	55 85       	ldd	r21, Z+13	; 0x0d
    5cee:	88 a1       	ldd	r24, Y+32	; 0x20
    5cf0:	99 a1       	ldd	r25, Y+33	; 0x21
    5cf2:	fc 01       	movw	r30, r24
    5cf4:	84 89       	ldd	r24, Z+20	; 0x14
    5cf6:	28 2f       	mov	r18, r24
    5cf8:	30 e0       	ldi	r19, 0x00	; 0
    5cfa:	c9 01       	movw	r24, r18
    5cfc:	88 0f       	add	r24, r24
    5cfe:	99 1f       	adc	r25, r25
    5d00:	82 0f       	add	r24, r18
    5d02:	93 1f       	adc	r25, r19
    5d04:	88 0f       	add	r24, r24
    5d06:	99 1f       	adc	r25, r25
    5d08:	9a 01       	movw	r18, r20
    5d0a:	28 0f       	add	r18, r24
    5d0c:	39 1f       	adc	r19, r25
    5d0e:	88 a1       	ldd	r24, Y+32	; 0x20
    5d10:	99 a1       	ldd	r25, Y+33	; 0x21
    5d12:	fc 01       	movw	r30, r24
    5d14:	35 87       	std	Z+13, r19	; 0x0d
    5d16:	24 87       	std	Z+12, r18	; 0x0c
    5d18:	44 c1       	rjmp	.+648    	; 0x5fa2 <_ZN12Adafruit_GFX5writeEh+0x40e>
    5d1a:	8a a1       	ldd	r24, Y+34	; 0x22
    5d1c:	8a 30       	cpi	r24, 0x0A	; 10
    5d1e:	79 f5       	brne	.+94     	; 0x5d7e <_ZN12Adafruit_GFX5writeEh+0x1ea>
    5d20:	88 a1       	ldd	r24, Y+32	; 0x20
    5d22:	99 a1       	ldd	r25, Y+33	; 0x21
    5d24:	fc 01       	movw	r30, r24
    5d26:	15 86       	std	Z+13, r1	; 0x0d
    5d28:	14 86       	std	Z+12, r1	; 0x0c
    5d2a:	88 a1       	ldd	r24, Y+32	; 0x20
    5d2c:	99 a1       	ldd	r25, Y+33	; 0x21
    5d2e:	fc 01       	movw	r30, r24
    5d30:	85 89       	ldd	r24, Z+21	; 0x15
    5d32:	48 2f       	mov	r20, r24
    5d34:	50 e0       	ldi	r21, 0x00	; 0
    5d36:	88 a1       	ldd	r24, Y+32	; 0x20
    5d38:	99 a1       	ldd	r25, Y+33	; 0x21
    5d3a:	fc 01       	movw	r30, r24
    5d3c:	81 8d       	ldd	r24, Z+25	; 0x19
    5d3e:	92 8d       	ldd	r25, Z+26	; 0x1a
    5d40:	08 96       	adiw	r24, 0x08	; 8
    5d42:	9a 83       	std	Y+2, r25	; 0x02
    5d44:	89 83       	std	Y+1, r24	; 0x01
    5d46:	89 81       	ldd	r24, Y+1	; 0x01
    5d48:	9a 81       	ldd	r25, Y+2	; 0x02
    5d4a:	fc 01       	movw	r30, r24
    5d4c:	84 91       	lpm	r24, Z
    5d4e:	8b 83       	std	Y+3, r24	; 0x03
    5d50:	8b 81       	ldd	r24, Y+3	; 0x03
    5d52:	28 2f       	mov	r18, r24
    5d54:	30 e0       	ldi	r19, 0x00	; 0
    5d56:	42 9f       	mul	r20, r18
    5d58:	c0 01       	movw	r24, r0
    5d5a:	43 9f       	mul	r20, r19
    5d5c:	90 0d       	add	r25, r0
    5d5e:	52 9f       	mul	r21, r18
    5d60:	90 0d       	add	r25, r0
    5d62:	11 24       	eor	r1, r1
    5d64:	28 a1       	ldd	r18, Y+32	; 0x20
    5d66:	39 a1       	ldd	r19, Y+33	; 0x21
    5d68:	f9 01       	movw	r30, r18
    5d6a:	26 85       	ldd	r18, Z+14	; 0x0e
    5d6c:	37 85       	ldd	r19, Z+15	; 0x0f
    5d6e:	28 0f       	add	r18, r24
    5d70:	39 1f       	adc	r19, r25
    5d72:	88 a1       	ldd	r24, Y+32	; 0x20
    5d74:	99 a1       	ldd	r25, Y+33	; 0x21
    5d76:	fc 01       	movw	r30, r24
    5d78:	37 87       	std	Z+15, r19	; 0x0f
    5d7a:	26 87       	std	Z+14, r18	; 0x0e
    5d7c:	12 c1       	rjmp	.+548    	; 0x5fa2 <_ZN12Adafruit_GFX5writeEh+0x40e>
    5d7e:	8a a1       	ldd	r24, Y+34	; 0x22
    5d80:	8d 30       	cpi	r24, 0x0D	; 13
    5d82:	09 f4       	brne	.+2      	; 0x5d86 <_ZN12Adafruit_GFX5writeEh+0x1f2>
    5d84:	0e c1       	rjmp	.+540    	; 0x5fa2 <_ZN12Adafruit_GFX5writeEh+0x40e>
    5d86:	88 a1       	ldd	r24, Y+32	; 0x20
    5d88:	99 a1       	ldd	r25, Y+33	; 0x21
    5d8a:	fc 01       	movw	r30, r24
    5d8c:	81 8d       	ldd	r24, Z+25	; 0x19
    5d8e:	92 8d       	ldd	r25, Z+26	; 0x1a
    5d90:	04 96       	adiw	r24, 0x04	; 4
    5d92:	9d 83       	std	Y+5, r25	; 0x05
    5d94:	8c 83       	std	Y+4, r24	; 0x04
    5d96:	8c 81       	ldd	r24, Y+4	; 0x04
    5d98:	9d 81       	ldd	r25, Y+5	; 0x05
    5d9a:	fc 01       	movw	r30, r24
    5d9c:	84 91       	lpm	r24, Z
    5d9e:	8e 83       	std	Y+6, r24	; 0x06
    5da0:	8e 81       	ldd	r24, Y+6	; 0x06
    5da2:	8f 83       	std	Y+7, r24	; 0x07
    5da4:	9a a1       	ldd	r25, Y+34	; 0x22
    5da6:	8f 81       	ldd	r24, Y+7	; 0x07
    5da8:	98 17       	cp	r25, r24
    5daa:	98 f0       	brcs	.+38     	; 0x5dd2 <_ZN12Adafruit_GFX5writeEh+0x23e>
    5dac:	88 a1       	ldd	r24, Y+32	; 0x20
    5dae:	99 a1       	ldd	r25, Y+33	; 0x21
    5db0:	fc 01       	movw	r30, r24
    5db2:	81 8d       	ldd	r24, Z+25	; 0x19
    5db4:	92 8d       	ldd	r25, Z+26	; 0x1a
    5db6:	06 96       	adiw	r24, 0x06	; 6
    5db8:	99 87       	std	Y+9, r25	; 0x09
    5dba:	88 87       	std	Y+8, r24	; 0x08
    5dbc:	88 85       	ldd	r24, Y+8	; 0x08
    5dbe:	99 85       	ldd	r25, Y+9	; 0x09
    5dc0:	fc 01       	movw	r30, r24
    5dc2:	84 91       	lpm	r24, Z
    5dc4:	8a 87       	std	Y+10, r24	; 0x0a
    5dc6:	9a 85       	ldd	r25, Y+10	; 0x0a
    5dc8:	8a a1       	ldd	r24, Y+34	; 0x22
    5dca:	98 17       	cp	r25, r24
    5dcc:	10 f0       	brcs	.+4      	; 0x5dd2 <_ZN12Adafruit_GFX5writeEh+0x23e>
    5dce:	81 e0       	ldi	r24, 0x01	; 1
    5dd0:	01 c0       	rjmp	.+2      	; 0x5dd4 <_ZN12Adafruit_GFX5writeEh+0x240>
    5dd2:	80 e0       	ldi	r24, 0x00	; 0
    5dd4:	88 23       	and	r24, r24
    5dd6:	09 f4       	brne	.+2      	; 0x5dda <_ZN12Adafruit_GFX5writeEh+0x246>
    5dd8:	e4 c0       	rjmp	.+456    	; 0x5fa2 <_ZN12Adafruit_GFX5writeEh+0x40e>
    5dda:	9a a1       	ldd	r25, Y+34	; 0x22
    5ddc:	8f 81       	ldd	r24, Y+7	; 0x07
    5dde:	29 2f       	mov	r18, r25
    5de0:	28 1b       	sub	r18, r24
    5de2:	88 a1       	ldd	r24, Y+32	; 0x20
    5de4:	99 a1       	ldd	r25, Y+33	; 0x21
    5de6:	fc 01       	movw	r30, r24
    5de8:	81 8d       	ldd	r24, Z+25	; 0x19
    5dea:	92 8d       	ldd	r25, Z+26	; 0x1a
    5dec:	62 2f       	mov	r22, r18
    5dee:	0e 94 fe 23 	call	0x47fc	; 0x47fc <_Z18pgm_read_glyph_ptrPK7GFXfonth>
    5df2:	9c 87       	std	Y+12, r25	; 0x0c
    5df4:	8b 87       	std	Y+11, r24	; 0x0b
    5df6:	8b 85       	ldd	r24, Y+11	; 0x0b
    5df8:	9c 85       	ldd	r25, Y+12	; 0x0c
    5dfa:	02 96       	adiw	r24, 0x02	; 2
    5dfc:	9e 87       	std	Y+14, r25	; 0x0e
    5dfe:	8d 87       	std	Y+13, r24	; 0x0d
    5e00:	8d 85       	ldd	r24, Y+13	; 0x0d
    5e02:	9e 85       	ldd	r25, Y+14	; 0x0e
    5e04:	fc 01       	movw	r30, r24
    5e06:	84 91       	lpm	r24, Z
    5e08:	8f 87       	std	Y+15, r24	; 0x0f
    5e0a:	8f 85       	ldd	r24, Y+15	; 0x0f
    5e0c:	88 8b       	std	Y+16, r24	; 0x10
    5e0e:	8b 85       	ldd	r24, Y+11	; 0x0b
    5e10:	9c 85       	ldd	r25, Y+12	; 0x0c
    5e12:	03 96       	adiw	r24, 0x03	; 3
    5e14:	9a 8b       	std	Y+18, r25	; 0x12
    5e16:	89 8b       	std	Y+17, r24	; 0x11
    5e18:	89 89       	ldd	r24, Y+17	; 0x11
    5e1a:	9a 89       	ldd	r25, Y+18	; 0x12
    5e1c:	fc 01       	movw	r30, r24
    5e1e:	84 91       	lpm	r24, Z
    5e20:	8b 8b       	std	Y+19, r24	; 0x13
    5e22:	8b 89       	ldd	r24, Y+19	; 0x13
    5e24:	8c 8b       	std	Y+20, r24	; 0x14
    5e26:	88 89       	ldd	r24, Y+16	; 0x10
    5e28:	88 23       	and	r24, r24
    5e2a:	09 f4       	brne	.+2      	; 0x5e2e <_ZN12Adafruit_GFX5writeEh+0x29a>
    5e2c:	94 c0       	rjmp	.+296    	; 0x5f56 <_ZN12Adafruit_GFX5writeEh+0x3c2>
    5e2e:	8c 89       	ldd	r24, Y+20	; 0x14
    5e30:	88 23       	and	r24, r24
    5e32:	09 f4       	brne	.+2      	; 0x5e36 <_ZN12Adafruit_GFX5writeEh+0x2a2>
    5e34:	90 c0       	rjmp	.+288    	; 0x5f56 <_ZN12Adafruit_GFX5writeEh+0x3c2>
    5e36:	8b 85       	ldd	r24, Y+11	; 0x0b
    5e38:	9c 85       	ldd	r25, Y+12	; 0x0c
    5e3a:	05 96       	adiw	r24, 0x05	; 5
    5e3c:	9e 8b       	std	Y+22, r25	; 0x16
    5e3e:	8d 8b       	std	Y+21, r24	; 0x15
    5e40:	8d 89       	ldd	r24, Y+21	; 0x15
    5e42:	9e 89       	ldd	r25, Y+22	; 0x16
    5e44:	fc 01       	movw	r30, r24
    5e46:	84 91       	lpm	r24, Z
    5e48:	8f 8b       	std	Y+23, r24	; 0x17
    5e4a:	8f 89       	ldd	r24, Y+23	; 0x17
    5e4c:	08 2e       	mov	r0, r24
    5e4e:	00 0c       	add	r0, r0
    5e50:	99 0b       	sbc	r25, r25
    5e52:	99 8f       	std	Y+25, r25	; 0x19
    5e54:	88 8f       	std	Y+24, r24	; 0x18
    5e56:	88 a1       	ldd	r24, Y+32	; 0x20
    5e58:	99 a1       	ldd	r25, Y+33	; 0x21
    5e5a:	fc 01       	movw	r30, r24
    5e5c:	87 89       	ldd	r24, Z+23	; 0x17
    5e5e:	88 23       	and	r24, r24
    5e60:	09 f4       	brne	.+2      	; 0x5e64 <_ZN12Adafruit_GFX5writeEh+0x2d0>
    5e62:	51 c0       	rjmp	.+162    	; 0x5f06 <_ZN12Adafruit_GFX5writeEh+0x372>
    5e64:	88 a1       	ldd	r24, Y+32	; 0x20
    5e66:	99 a1       	ldd	r25, Y+33	; 0x21
    5e68:	fc 01       	movw	r30, r24
    5e6a:	24 85       	ldd	r18, Z+12	; 0x0c
    5e6c:	35 85       	ldd	r19, Z+13	; 0x0d
    5e6e:	88 a1       	ldd	r24, Y+32	; 0x20
    5e70:	99 a1       	ldd	r25, Y+33	; 0x21
    5e72:	fc 01       	movw	r30, r24
    5e74:	84 89       	ldd	r24, Z+20	; 0x14
    5e76:	68 2f       	mov	r22, r24
    5e78:	70 e0       	ldi	r23, 0x00	; 0
    5e7a:	88 89       	ldd	r24, Y+16	; 0x10
    5e7c:	48 2f       	mov	r20, r24
    5e7e:	50 e0       	ldi	r21, 0x00	; 0
    5e80:	88 8d       	ldd	r24, Y+24	; 0x18
    5e82:	99 8d       	ldd	r25, Y+25	; 0x19
    5e84:	48 0f       	add	r20, r24
    5e86:	59 1f       	adc	r21, r25
    5e88:	64 9f       	mul	r22, r20
    5e8a:	c0 01       	movw	r24, r0
    5e8c:	65 9f       	mul	r22, r21
    5e8e:	90 0d       	add	r25, r0
    5e90:	74 9f       	mul	r23, r20
    5e92:	90 0d       	add	r25, r0
    5e94:	11 24       	eor	r1, r1
    5e96:	28 0f       	add	r18, r24
    5e98:	39 1f       	adc	r19, r25
    5e9a:	88 a1       	ldd	r24, Y+32	; 0x20
    5e9c:	99 a1       	ldd	r25, Y+33	; 0x21
    5e9e:	fc 01       	movw	r30, r24
    5ea0:	80 85       	ldd	r24, Z+8	; 0x08
    5ea2:	91 85       	ldd	r25, Z+9	; 0x09
    5ea4:	82 17       	cp	r24, r18
    5ea6:	93 07       	cpc	r25, r19
    5ea8:	74 f5       	brge	.+92     	; 0x5f06 <_ZN12Adafruit_GFX5writeEh+0x372>
    5eaa:	88 a1       	ldd	r24, Y+32	; 0x20
    5eac:	99 a1       	ldd	r25, Y+33	; 0x21
    5eae:	fc 01       	movw	r30, r24
    5eb0:	15 86       	std	Z+13, r1	; 0x0d
    5eb2:	14 86       	std	Z+12, r1	; 0x0c
    5eb4:	88 a1       	ldd	r24, Y+32	; 0x20
    5eb6:	99 a1       	ldd	r25, Y+33	; 0x21
    5eb8:	fc 01       	movw	r30, r24
    5eba:	85 89       	ldd	r24, Z+21	; 0x15
    5ebc:	48 2f       	mov	r20, r24
    5ebe:	50 e0       	ldi	r21, 0x00	; 0
    5ec0:	88 a1       	ldd	r24, Y+32	; 0x20
    5ec2:	99 a1       	ldd	r25, Y+33	; 0x21
    5ec4:	fc 01       	movw	r30, r24
    5ec6:	81 8d       	ldd	r24, Z+25	; 0x19
    5ec8:	92 8d       	ldd	r25, Z+26	; 0x1a
    5eca:	08 96       	adiw	r24, 0x08	; 8
    5ecc:	9b 8f       	std	Y+27, r25	; 0x1b
    5ece:	8a 8f       	std	Y+26, r24	; 0x1a
    5ed0:	8a 8d       	ldd	r24, Y+26	; 0x1a
    5ed2:	9b 8d       	ldd	r25, Y+27	; 0x1b
    5ed4:	fc 01       	movw	r30, r24
    5ed6:	84 91       	lpm	r24, Z
    5ed8:	8c 8f       	std	Y+28, r24	; 0x1c
    5eda:	8c 8d       	ldd	r24, Y+28	; 0x1c
    5edc:	28 2f       	mov	r18, r24
    5ede:	30 e0       	ldi	r19, 0x00	; 0
    5ee0:	42 9f       	mul	r20, r18
    5ee2:	c0 01       	movw	r24, r0
    5ee4:	43 9f       	mul	r20, r19
    5ee6:	90 0d       	add	r25, r0
    5ee8:	52 9f       	mul	r21, r18
    5eea:	90 0d       	add	r25, r0
    5eec:	11 24       	eor	r1, r1
    5eee:	28 a1       	ldd	r18, Y+32	; 0x20
    5ef0:	39 a1       	ldd	r19, Y+33	; 0x21
    5ef2:	f9 01       	movw	r30, r18
    5ef4:	26 85       	ldd	r18, Z+14	; 0x0e
    5ef6:	37 85       	ldd	r19, Z+15	; 0x0f
    5ef8:	28 0f       	add	r18, r24
    5efa:	39 1f       	adc	r19, r25
    5efc:	88 a1       	ldd	r24, Y+32	; 0x20
    5efe:	99 a1       	ldd	r25, Y+33	; 0x21
    5f00:	fc 01       	movw	r30, r24
    5f02:	37 87       	std	Z+15, r19	; 0x0f
    5f04:	26 87       	std	Z+14, r18	; 0x0e
    5f06:	88 a1       	ldd	r24, Y+32	; 0x20
    5f08:	99 a1       	ldd	r25, Y+33	; 0x21
    5f0a:	fc 01       	movw	r30, r24
    5f0c:	b5 89       	ldd	r27, Z+21	; 0x15
    5f0e:	88 a1       	ldd	r24, Y+32	; 0x20
    5f10:	99 a1       	ldd	r25, Y+33	; 0x21
    5f12:	fc 01       	movw	r30, r24
    5f14:	a4 89       	ldd	r26, Z+20	; 0x14
    5f16:	88 a1       	ldd	r24, Y+32	; 0x20
    5f18:	99 a1       	ldd	r25, Y+33	; 0x21
    5f1a:	fc 01       	movw	r30, r24
    5f1c:	02 88       	ldd	r0, Z+18	; 0x12
    5f1e:	f3 89       	ldd	r31, Z+19	; 0x13
    5f20:	e0 2d       	mov	r30, r0
    5f22:	fc a3       	std	Y+36, r31	; 0x24
    5f24:	eb a3       	std	Y+35, r30	; 0x23
    5f26:	88 a1       	ldd	r24, Y+32	; 0x20
    5f28:	99 a1       	ldd	r25, Y+33	; 0x21
    5f2a:	fc 01       	movw	r30, r24
    5f2c:	20 89       	ldd	r18, Z+16	; 0x10
    5f2e:	31 89       	ldd	r19, Z+17	; 0x11
    5f30:	88 a1       	ldd	r24, Y+32	; 0x20
    5f32:	99 a1       	ldd	r25, Y+33	; 0x21
    5f34:	fc 01       	movw	r30, r24
    5f36:	46 85       	ldd	r20, Z+14	; 0x0e
    5f38:	57 85       	ldd	r21, Z+15	; 0x0f
    5f3a:	88 a1       	ldd	r24, Y+32	; 0x20
    5f3c:	99 a1       	ldd	r25, Y+33	; 0x21
    5f3e:	fc 01       	movw	r30, r24
    5f40:	64 85       	ldd	r22, Z+12	; 0x0c
    5f42:	75 85       	ldd	r23, Z+13	; 0x0d
    5f44:	88 a1       	ldd	r24, Y+32	; 0x20
    5f46:	99 a1       	ldd	r25, Y+33	; 0x21
    5f48:	ab 2e       	mov	r10, r27
    5f4a:	ca 2e       	mov	r12, r26
    5f4c:	eb a0       	ldd	r14, Y+35	; 0x23
    5f4e:	fc a0       	ldd	r15, Y+36	; 0x24
    5f50:	89 01       	movw	r16, r18
    5f52:	2a a1       	ldd	r18, Y+34	; 0x22
    5f54:	cd da       	rcall	.-2662   	; 0x54f0 <_ZN12Adafruit_GFX8drawCharEiihjjhh>
    5f56:	8b 85       	ldd	r24, Y+11	; 0x0b
    5f58:	9c 85       	ldd	r25, Y+12	; 0x0c
    5f5a:	04 96       	adiw	r24, 0x04	; 4
    5f5c:	9e 8f       	std	Y+30, r25	; 0x1e
    5f5e:	8d 8f       	std	Y+29, r24	; 0x1d
    5f60:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5f62:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5f64:	fc 01       	movw	r30, r24
    5f66:	84 91       	lpm	r24, Z
    5f68:	8f 8f       	std	Y+31, r24	; 0x1f
    5f6a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    5f6c:	48 2f       	mov	r20, r24
    5f6e:	50 e0       	ldi	r21, 0x00	; 0
    5f70:	88 a1       	ldd	r24, Y+32	; 0x20
    5f72:	99 a1       	ldd	r25, Y+33	; 0x21
    5f74:	fc 01       	movw	r30, r24
    5f76:	84 89       	ldd	r24, Z+20	; 0x14
    5f78:	28 2f       	mov	r18, r24
    5f7a:	30 e0       	ldi	r19, 0x00	; 0
    5f7c:	42 9f       	mul	r20, r18
    5f7e:	c0 01       	movw	r24, r0
    5f80:	43 9f       	mul	r20, r19
    5f82:	90 0d       	add	r25, r0
    5f84:	52 9f       	mul	r21, r18
    5f86:	90 0d       	add	r25, r0
    5f88:	11 24       	eor	r1, r1
    5f8a:	28 a1       	ldd	r18, Y+32	; 0x20
    5f8c:	39 a1       	ldd	r19, Y+33	; 0x21
    5f8e:	f9 01       	movw	r30, r18
    5f90:	24 85       	ldd	r18, Z+12	; 0x0c
    5f92:	35 85       	ldd	r19, Z+13	; 0x0d
    5f94:	28 0f       	add	r18, r24
    5f96:	39 1f       	adc	r19, r25
    5f98:	88 a1       	ldd	r24, Y+32	; 0x20
    5f9a:	99 a1       	ldd	r25, Y+33	; 0x21
    5f9c:	fc 01       	movw	r30, r24
    5f9e:	35 87       	std	Z+13, r19	; 0x0d
    5fa0:	24 87       	std	Z+12, r18	; 0x0c
    5fa2:	81 e0       	ldi	r24, 0x01	; 1
    5fa4:	90 e0       	ldi	r25, 0x00	; 0
    5fa6:	a4 96       	adiw	r28, 0x24	; 36
    5fa8:	0f b6       	in	r0, 0x3f	; 63
    5faa:	f8 94       	cli
    5fac:	de bf       	out	0x3e, r29	; 62
    5fae:	0f be       	out	0x3f, r0	; 63
    5fb0:	cd bf       	out	0x3d, r28	; 61
    5fb2:	df 91       	pop	r29
    5fb4:	cf 91       	pop	r28
    5fb6:	1f 91       	pop	r17
    5fb8:	0f 91       	pop	r16
    5fba:	ff 90       	pop	r15
    5fbc:	ef 90       	pop	r14
    5fbe:	cf 90       	pop	r12
    5fc0:	af 90       	pop	r10
    5fc2:	08 95       	ret

00005fc4 <_ZN12Adafruit_GFX11setTextSizeEh>:
    5fc4:	cf 93       	push	r28
    5fc6:	df 93       	push	r29
    5fc8:	00 d0       	rcall	.+0      	; 0x5fca <_ZN12Adafruit_GFX11setTextSizeEh+0x6>
    5fca:	cd b7       	in	r28, 0x3d	; 61
    5fcc:	de b7       	in	r29, 0x3e	; 62
    5fce:	9a 83       	std	Y+2, r25	; 0x02
    5fd0:	89 83       	std	Y+1, r24	; 0x01
    5fd2:	6b 83       	std	Y+3, r22	; 0x03
    5fd4:	89 81       	ldd	r24, Y+1	; 0x01
    5fd6:	9a 81       	ldd	r25, Y+2	; 0x02
    5fd8:	4b 81       	ldd	r20, Y+3	; 0x03
    5fda:	6b 81       	ldd	r22, Y+3	; 0x03
    5fdc:	07 d0       	rcall	.+14     	; 0x5fec <_ZN12Adafruit_GFX11setTextSizeEhh>
    5fde:	00 00       	nop
    5fe0:	0f 90       	pop	r0
    5fe2:	0f 90       	pop	r0
    5fe4:	0f 90       	pop	r0
    5fe6:	df 91       	pop	r29
    5fe8:	cf 91       	pop	r28
    5fea:	08 95       	ret

00005fec <_ZN12Adafruit_GFX11setTextSizeEhh>:
    5fec:	cf 93       	push	r28
    5fee:	df 93       	push	r29
    5ff0:	00 d0       	rcall	.+0      	; 0x5ff2 <_ZN12Adafruit_GFX11setTextSizeEhh+0x6>
    5ff2:	1f 92       	push	r1
    5ff4:	cd b7       	in	r28, 0x3d	; 61
    5ff6:	de b7       	in	r29, 0x3e	; 62
    5ff8:	9a 83       	std	Y+2, r25	; 0x02
    5ffa:	89 83       	std	Y+1, r24	; 0x01
    5ffc:	6b 83       	std	Y+3, r22	; 0x03
    5ffe:	4c 83       	std	Y+4, r20	; 0x04
    6000:	8b 81       	ldd	r24, Y+3	; 0x03
    6002:	88 23       	and	r24, r24
    6004:	11 f0       	breq	.+4      	; 0x600a <_ZN12Adafruit_GFX11setTextSizeEhh+0x1e>
    6006:	2b 81       	ldd	r18, Y+3	; 0x03
    6008:	01 c0       	rjmp	.+2      	; 0x600c <_ZN12Adafruit_GFX11setTextSizeEhh+0x20>
    600a:	21 e0       	ldi	r18, 0x01	; 1
    600c:	89 81       	ldd	r24, Y+1	; 0x01
    600e:	9a 81       	ldd	r25, Y+2	; 0x02
    6010:	fc 01       	movw	r30, r24
    6012:	24 8b       	std	Z+20, r18	; 0x14
    6014:	8c 81       	ldd	r24, Y+4	; 0x04
    6016:	88 23       	and	r24, r24
    6018:	11 f0       	breq	.+4      	; 0x601e <_ZN12Adafruit_GFX11setTextSizeEhh+0x32>
    601a:	2c 81       	ldd	r18, Y+4	; 0x04
    601c:	01 c0       	rjmp	.+2      	; 0x6020 <_ZN12Adafruit_GFX11setTextSizeEhh+0x34>
    601e:	21 e0       	ldi	r18, 0x01	; 1
    6020:	89 81       	ldd	r24, Y+1	; 0x01
    6022:	9a 81       	ldd	r25, Y+2	; 0x02
    6024:	fc 01       	movw	r30, r24
    6026:	25 8b       	std	Z+21, r18	; 0x15
    6028:	00 00       	nop
    602a:	0f 90       	pop	r0
    602c:	0f 90       	pop	r0
    602e:	0f 90       	pop	r0
    6030:	0f 90       	pop	r0
    6032:	df 91       	pop	r29
    6034:	cf 91       	pop	r28
    6036:	08 95       	ret

00006038 <_ZN12Adafruit_GFX11setRotationEh>:
    6038:	cf 93       	push	r28
    603a:	df 93       	push	r29
    603c:	00 d0       	rcall	.+0      	; 0x603e <_ZN12Adafruit_GFX11setRotationEh+0x6>
    603e:	cd b7       	in	r28, 0x3d	; 61
    6040:	de b7       	in	r29, 0x3e	; 62
    6042:	9a 83       	std	Y+2, r25	; 0x02
    6044:	89 83       	std	Y+1, r24	; 0x01
    6046:	6b 83       	std	Y+3, r22	; 0x03
    6048:	8b 81       	ldd	r24, Y+3	; 0x03
    604a:	28 2f       	mov	r18, r24
    604c:	23 70       	andi	r18, 0x03	; 3
    604e:	89 81       	ldd	r24, Y+1	; 0x01
    6050:	9a 81       	ldd	r25, Y+2	; 0x02
    6052:	fc 01       	movw	r30, r24
    6054:	26 8b       	std	Z+22, r18	; 0x16
    6056:	89 81       	ldd	r24, Y+1	; 0x01
    6058:	9a 81       	ldd	r25, Y+2	; 0x02
    605a:	fc 01       	movw	r30, r24
    605c:	86 89       	ldd	r24, Z+22	; 0x16
    605e:	88 2f       	mov	r24, r24
    6060:	90 e0       	ldi	r25, 0x00	; 0
    6062:	81 30       	cpi	r24, 0x01	; 1
    6064:	91 05       	cpc	r25, r1
    6066:	09 f1       	breq	.+66     	; 0x60aa <_ZN12Adafruit_GFX11setRotationEh+0x72>
    6068:	82 30       	cpi	r24, 0x02	; 2
    606a:	91 05       	cpc	r25, r1
    606c:	1c f4       	brge	.+6      	; 0x6074 <_ZN12Adafruit_GFX11setRotationEh+0x3c>
    606e:	89 2b       	or	r24, r25
    6070:	39 f0       	breq	.+14     	; 0x6080 <_ZN12Adafruit_GFX11setRotationEh+0x48>
    6072:	30 c0       	rjmp	.+96     	; 0x60d4 <_ZN12Adafruit_GFX11setRotationEh+0x9c>
    6074:	82 30       	cpi	r24, 0x02	; 2
    6076:	91 05       	cpc	r25, r1
    6078:	19 f0       	breq	.+6      	; 0x6080 <_ZN12Adafruit_GFX11setRotationEh+0x48>
    607a:	03 97       	sbiw	r24, 0x03	; 3
    607c:	b1 f0       	breq	.+44     	; 0x60aa <_ZN12Adafruit_GFX11setRotationEh+0x72>
    607e:	2a c0       	rjmp	.+84     	; 0x60d4 <_ZN12Adafruit_GFX11setRotationEh+0x9c>
    6080:	89 81       	ldd	r24, Y+1	; 0x01
    6082:	9a 81       	ldd	r25, Y+2	; 0x02
    6084:	fc 01       	movw	r30, r24
    6086:	24 81       	ldd	r18, Z+4	; 0x04
    6088:	35 81       	ldd	r19, Z+5	; 0x05
    608a:	89 81       	ldd	r24, Y+1	; 0x01
    608c:	9a 81       	ldd	r25, Y+2	; 0x02
    608e:	fc 01       	movw	r30, r24
    6090:	31 87       	std	Z+9, r19	; 0x09
    6092:	20 87       	std	Z+8, r18	; 0x08
    6094:	89 81       	ldd	r24, Y+1	; 0x01
    6096:	9a 81       	ldd	r25, Y+2	; 0x02
    6098:	fc 01       	movw	r30, r24
    609a:	26 81       	ldd	r18, Z+6	; 0x06
    609c:	37 81       	ldd	r19, Z+7	; 0x07
    609e:	89 81       	ldd	r24, Y+1	; 0x01
    60a0:	9a 81       	ldd	r25, Y+2	; 0x02
    60a2:	fc 01       	movw	r30, r24
    60a4:	33 87       	std	Z+11, r19	; 0x0b
    60a6:	22 87       	std	Z+10, r18	; 0x0a
    60a8:	15 c0       	rjmp	.+42     	; 0x60d4 <_ZN12Adafruit_GFX11setRotationEh+0x9c>
    60aa:	89 81       	ldd	r24, Y+1	; 0x01
    60ac:	9a 81       	ldd	r25, Y+2	; 0x02
    60ae:	fc 01       	movw	r30, r24
    60b0:	26 81       	ldd	r18, Z+6	; 0x06
    60b2:	37 81       	ldd	r19, Z+7	; 0x07
    60b4:	89 81       	ldd	r24, Y+1	; 0x01
    60b6:	9a 81       	ldd	r25, Y+2	; 0x02
    60b8:	fc 01       	movw	r30, r24
    60ba:	31 87       	std	Z+9, r19	; 0x09
    60bc:	20 87       	std	Z+8, r18	; 0x08
    60be:	89 81       	ldd	r24, Y+1	; 0x01
    60c0:	9a 81       	ldd	r25, Y+2	; 0x02
    60c2:	fc 01       	movw	r30, r24
    60c4:	24 81       	ldd	r18, Z+4	; 0x04
    60c6:	35 81       	ldd	r19, Z+5	; 0x05
    60c8:	89 81       	ldd	r24, Y+1	; 0x01
    60ca:	9a 81       	ldd	r25, Y+2	; 0x02
    60cc:	fc 01       	movw	r30, r24
    60ce:	33 87       	std	Z+11, r19	; 0x0b
    60d0:	22 87       	std	Z+10, r18	; 0x0a
    60d2:	00 00       	nop
    60d4:	00 00       	nop
    60d6:	0f 90       	pop	r0
    60d8:	0f 90       	pop	r0
    60da:	0f 90       	pop	r0
    60dc:	df 91       	pop	r29
    60de:	cf 91       	pop	r28
    60e0:	08 95       	ret

000060e2 <_ZN12Adafruit_GFX13invertDisplayEb>:
/*!
    @brief      Invert the display (ideally using built-in hardware command)
    @param   i  True if you want to invert, false to make 'normal'
*/
/**************************************************************************/
void Adafruit_GFX::invertDisplay(bool i) {
    60e2:	cf 93       	push	r28
    60e4:	df 93       	push	r29
    60e6:	00 d0       	rcall	.+0      	; 0x60e8 <_ZN12Adafruit_GFX13invertDisplayEb+0x6>
    60e8:	cd b7       	in	r28, 0x3d	; 61
    60ea:	de b7       	in	r29, 0x3e	; 62
    60ec:	9a 83       	std	Y+2, r25	; 0x02
    60ee:	89 83       	std	Y+1, r24	; 0x01
    60f0:	6b 83       	std	Y+3, r22	; 0x03
  // Do nothing, must be subclassed if supported by hardware
  (void)i; // disable -Wunused-parameter warning
}
    60f2:	00 00       	nop
    60f4:	0f 90       	pop	r0
    60f6:	0f 90       	pop	r0
    60f8:	0f 90       	pop	r0
    60fa:	df 91       	pop	r29
    60fc:	cf 91       	pop	r28
    60fe:	08 95       	ret

00006100 <_ZN8SPIClass8transferEh>:
    SPCR = settings.spcr;
    SPSR = settings.spsr;
  }

  // Write to the SPI bus (MOSI pin) and also receive (MISO pin)
  inline static uint8_t transfer(uint8_t data) {
    6100:	cf 93       	push	r28
    6102:	df 93       	push	r29
    6104:	1f 92       	push	r1
    6106:	cd b7       	in	r28, 0x3d	; 61
    6108:	de b7       	in	r29, 0x3e	; 62
    610a:	89 83       	std	Y+1, r24	; 0x01
    SPDR = data;
    610c:	8e e4       	ldi	r24, 0x4E	; 78
    610e:	90 e0       	ldi	r25, 0x00	; 0
    6110:	29 81       	ldd	r18, Y+1	; 0x01
    6112:	fc 01       	movw	r30, r24
    6114:	20 83       	st	Z, r18
     * The following NOP introduces a small delay that can prevent the wait
     * loop form iterating when running at the maximum speed. This gives
     * about 10% more speed, even if it seems counter-intuitive. At lower
     * speeds it is unnoticed.
     */
    asm volatile("nop");
    6116:	00 00       	nop
    while (!(SPSR & _BV(SPIF))) ; // wait
    6118:	8d e4       	ldi	r24, 0x4D	; 77
    611a:	90 e0       	ldi	r25, 0x00	; 0
    611c:	fc 01       	movw	r30, r24
    611e:	80 81       	ld	r24, Z
    6120:	80 95       	com	r24
    6122:	88 1f       	adc	r24, r24
    6124:	88 27       	eor	r24, r24
    6126:	88 1f       	adc	r24, r24
    6128:	88 23       	and	r24, r24
    612a:	09 f0       	breq	.+2      	; 0x612e <_ZN8SPIClass8transferEh+0x2e>
    612c:	f5 cf       	rjmp	.-22     	; 0x6118 <_ZN8SPIClass8transferEh+0x18>
    return SPDR;
    612e:	8e e4       	ldi	r24, 0x4E	; 78
    6130:	90 e0       	ldi	r25, 0x00	; 0
    6132:	fc 01       	movw	r30, r24
    6134:	80 81       	ld	r24, Z
  }
    6136:	0f 90       	pop	r0
    6138:	df 91       	pop	r29
    613a:	cf 91       	pop	r28
    613c:	08 95       	ret

0000613e <_ZN11SPISettingsC1Ev>:
*/
void Adafruit_SSD1306::stopscroll(void) {
  TRANSACTION_START
  ssd1306_command1(SSD1306_DEACTIVATE_SCROLL);
  TRANSACTION_END
}
    613e:	cf 93       	push	r28
    6140:	df 93       	push	r29
    6142:	cd b7       	in	r28, 0x3d	; 61
    6144:	de b7       	in	r29, 0x3e	; 62
    6146:	2f 97       	sbiw	r28, 0x0f	; 15
    6148:	0f b6       	in	r0, 0x3f	; 63
    614a:	f8 94       	cli
    614c:	de bf       	out	0x3e, r29	; 62
    614e:	0f be       	out	0x3f, r0	; 63
    6150:	cd bf       	out	0x3d, r28	; 61
    6152:	9f 87       	std	Y+15, r25	; 0x0f
    6154:	8e 87       	std	Y+14, r24	; 0x0e
    6156:	8e 85       	ldd	r24, Y+14	; 0x0e
    6158:	9f 85       	ldd	r25, Y+15	; 0x0f
    615a:	9a 83       	std	Y+2, r25	; 0x02
    615c:	89 83       	std	Y+1, r24	; 0x01
    615e:	80 e0       	ldi	r24, 0x00	; 0
    6160:	99 e0       	ldi	r25, 0x09	; 9
    6162:	ad e3       	ldi	r26, 0x3D	; 61
    6164:	b0 e0       	ldi	r27, 0x00	; 0
    6166:	8b 83       	std	Y+3, r24	; 0x03
    6168:	9c 83       	std	Y+4, r25	; 0x04
    616a:	ad 83       	std	Y+5, r26	; 0x05
    616c:	be 83       	std	Y+6, r27	; 0x06
    616e:	81 e0       	ldi	r24, 0x01	; 1
    6170:	8f 83       	std	Y+7, r24	; 0x07
    6172:	18 86       	std	Y+8, r1	; 0x08
    6174:	80 e0       	ldi	r24, 0x00	; 0
    6176:	92 e1       	ldi	r25, 0x12	; 18
    6178:	aa e7       	ldi	r26, 0x7A	; 122
    617a:	b0 e0       	ldi	r27, 0x00	; 0
    617c:	89 87       	std	Y+9, r24	; 0x09
    617e:	9a 87       	std	Y+10, r25	; 0x0a
    6180:	ab 87       	std	Y+11, r26	; 0x0b
    6182:	bc 87       	std	Y+12, r27	; 0x0c
    6184:	1d 86       	std	Y+13, r1	; 0x0d
    6186:	8d 85       	ldd	r24, Y+13	; 0x0d
    6188:	86 30       	cpi	r24, 0x06	; 6
    618a:	e8 f4       	brcc	.+58     	; 0x61c6 <_ZN11SPISettingsC1Ev+0x88>
    618c:	2b 81       	ldd	r18, Y+3	; 0x03
    618e:	3c 81       	ldd	r19, Y+4	; 0x04
    6190:	4d 81       	ldd	r20, Y+5	; 0x05
    6192:	5e 81       	ldd	r21, Y+6	; 0x06
    6194:	89 85       	ldd	r24, Y+9	; 0x09
    6196:	9a 85       	ldd	r25, Y+10	; 0x0a
    6198:	ab 85       	ldd	r26, Y+11	; 0x0b
    619a:	bc 85       	ldd	r27, Y+12	; 0x0c
    619c:	28 17       	cp	r18, r24
    619e:	39 07       	cpc	r19, r25
    61a0:	4a 07       	cpc	r20, r26
    61a2:	5b 07       	cpc	r21, r27
    61a4:	80 f4       	brcc	.+32     	; 0x61c6 <_ZN11SPISettingsC1Ev+0x88>
    61a6:	89 85       	ldd	r24, Y+9	; 0x09
    61a8:	9a 85       	ldd	r25, Y+10	; 0x0a
    61aa:	ab 85       	ldd	r26, Y+11	; 0x0b
    61ac:	bc 85       	ldd	r27, Y+12	; 0x0c
    61ae:	b6 95       	lsr	r27
    61b0:	a7 95       	ror	r26
    61b2:	97 95       	ror	r25
    61b4:	87 95       	ror	r24
    61b6:	89 87       	std	Y+9, r24	; 0x09
    61b8:	9a 87       	std	Y+10, r25	; 0x0a
    61ba:	ab 87       	std	Y+11, r26	; 0x0b
    61bc:	bc 87       	std	Y+12, r27	; 0x0c
    61be:	8d 85       	ldd	r24, Y+13	; 0x0d
    61c0:	8f 5f       	subi	r24, 0xFF	; 255
    61c2:	8d 87       	std	Y+13, r24	; 0x0d
    61c4:	e0 cf       	rjmp	.-64     	; 0x6186 <_ZN11SPISettingsC1Ev+0x48>
    61c6:	8d 85       	ldd	r24, Y+13	; 0x0d
    61c8:	86 30       	cpi	r24, 0x06	; 6
    61ca:	11 f4       	brne	.+4      	; 0x61d0 <_ZN11SPISettingsC1Ev+0x92>
    61cc:	87 e0       	ldi	r24, 0x07	; 7
    61ce:	8d 87       	std	Y+13, r24	; 0x0d
    61d0:	9d 85       	ldd	r25, Y+13	; 0x0d
    61d2:	81 e0       	ldi	r24, 0x01	; 1
    61d4:	89 27       	eor	r24, r25
    61d6:	8d 87       	std	Y+13, r24	; 0x0d
    61d8:	8f 81       	ldd	r24, Y+7	; 0x07
    61da:	88 23       	and	r24, r24
    61dc:	11 f4       	brne	.+4      	; 0x61e2 <_ZN11SPISettingsC1Ev+0xa4>
    61de:	80 e7       	ldi	r24, 0x70	; 112
    61e0:	01 c0       	rjmp	.+2      	; 0x61e4 <_ZN11SPISettingsC1Ev+0xa6>
    61e2:	80 e5       	ldi	r24, 0x50	; 80
    61e4:	98 85       	ldd	r25, Y+8	; 0x08
    61e6:	9c 70       	andi	r25, 0x0C	; 12
    61e8:	29 2f       	mov	r18, r25
    61ea:	28 2b       	or	r18, r24
    61ec:	8d 85       	ldd	r24, Y+13	; 0x0d
    61ee:	88 2f       	mov	r24, r24
    61f0:	90 e0       	ldi	r25, 0x00	; 0
    61f2:	95 95       	asr	r25
    61f4:	87 95       	ror	r24
    61f6:	83 70       	andi	r24, 0x03	; 3
    61f8:	82 2b       	or	r24, r18
    61fa:	28 2f       	mov	r18, r24
    61fc:	89 81       	ldd	r24, Y+1	; 0x01
    61fe:	9a 81       	ldd	r25, Y+2	; 0x02
    6200:	fc 01       	movw	r30, r24
    6202:	20 83       	st	Z, r18
    6204:	8d 85       	ldd	r24, Y+13	; 0x0d
    6206:	28 2f       	mov	r18, r24
    6208:	21 70       	andi	r18, 0x01	; 1
    620a:	89 81       	ldd	r24, Y+1	; 0x01
    620c:	9a 81       	ldd	r25, Y+2	; 0x02
    620e:	fc 01       	movw	r30, r24
    6210:	21 83       	std	Z+1, r18	; 0x01
    6212:	00 00       	nop
    6214:	2f 96       	adiw	r28, 0x0f	; 15
    6216:	0f b6       	in	r0, 0x3f	; 63
    6218:	f8 94       	cli
    621a:	de bf       	out	0x3e, r29	; 62
    621c:	0f be       	out	0x3f, r0	; 63
    621e:	cd bf       	out	0x3d, r28	; 61
    6220:	df 91       	pop	r29
    6222:	cf 91       	pop	r28
    6224:	08 95       	ret

00006226 <_ZN16Adafruit_SSD1306C1EhhP7TwoWireamm>:
    6226:	8f 92       	push	r8
    6228:	9f 92       	push	r9
    622a:	af 92       	push	r10
    622c:	bf 92       	push	r11
    622e:	cf 92       	push	r12
    6230:	df 92       	push	r13
    6232:	ef 92       	push	r14
    6234:	ff 92       	push	r15
    6236:	0f 93       	push	r16
    6238:	cf 93       	push	r28
    623a:	df 93       	push	r29
    623c:	cd b7       	in	r28, 0x3d	; 61
    623e:	de b7       	in	r29, 0x3e	; 62
    6240:	2f 97       	sbiw	r28, 0x0f	; 15
    6242:	0f b6       	in	r0, 0x3f	; 63
    6244:	f8 94       	cli
    6246:	de bf       	out	0x3e, r29	; 62
    6248:	0f be       	out	0x3f, r0	; 63
    624a:	cd bf       	out	0x3d, r28	; 61
    624c:	9a 83       	std	Y+2, r25	; 0x02
    624e:	89 83       	std	Y+1, r24	; 0x01
    6250:	6b 83       	std	Y+3, r22	; 0x03
    6252:	4c 83       	std	Y+4, r20	; 0x04
    6254:	3e 83       	std	Y+6, r19	; 0x06
    6256:	2d 83       	std	Y+5, r18	; 0x05
    6258:	0f 83       	std	Y+7, r16	; 0x07
    625a:	c8 86       	std	Y+8, r12	; 0x08
    625c:	d9 86       	std	Y+9, r13	; 0x09
    625e:	ea 86       	std	Y+10, r14	; 0x0a
    6260:	fb 86       	std	Y+11, r15	; 0x0b
    6262:	8c 86       	std	Y+12, r8	; 0x0c
    6264:	9d 86       	std	Y+13, r9	; 0x0d
    6266:	ae 86       	std	Y+14, r10	; 0x0e
    6268:	bf 86       	std	Y+15, r11	; 0x0f
    626a:	8c 81       	ldd	r24, Y+4	; 0x04
    626c:	48 2f       	mov	r20, r24
    626e:	50 e0       	ldi	r21, 0x00	; 0
    6270:	8b 81       	ldd	r24, Y+3	; 0x03
    6272:	28 2f       	mov	r18, r24
    6274:	30 e0       	ldi	r19, 0x00	; 0
    6276:	89 81       	ldd	r24, Y+1	; 0x01
    6278:	9a 81       	ldd	r25, Y+2	; 0x02
    627a:	b9 01       	movw	r22, r18
    627c:	0e 94 56 24 	call	0x48ac	; 0x48ac <_ZN12Adafruit_GFXC1Eii>
    6280:	29 e8       	ldi	r18, 0x89	; 137
    6282:	32 e0       	ldi	r19, 0x02	; 2
    6284:	89 81       	ldd	r24, Y+1	; 0x01
    6286:	9a 81       	ldd	r25, Y+2	; 0x02
    6288:	fc 01       	movw	r30, r24
    628a:	31 83       	std	Z+1, r19	; 0x01
    628c:	20 83       	st	Z, r18
    628e:	89 81       	ldd	r24, Y+1	; 0x01
    6290:	9a 81       	ldd	r25, Y+2	; 0x02
    6292:	fc 01       	movw	r30, r24
    6294:	14 8e       	std	Z+28, r1	; 0x1c
    6296:	13 8e       	std	Z+27, r1	; 0x1b
    6298:	8d 81       	ldd	r24, Y+5	; 0x05
    629a:	9e 81       	ldd	r25, Y+6	; 0x06
    629c:	89 2b       	or	r24, r25
    629e:	19 f0       	breq	.+6      	; 0x62a6 <_ZN16Adafruit_SSD1306C1EhhP7TwoWireamm+0x80>
    62a0:	8d 81       	ldd	r24, Y+5	; 0x05
    62a2:	9e 81       	ldd	r25, Y+6	; 0x06
    62a4:	02 c0       	rjmp	.+4      	; 0x62aa <_ZN16Adafruit_SSD1306C1EhhP7TwoWireamm+0x84>
    62a6:	82 e1       	ldi	r24, 0x12	; 18
    62a8:	94 e0       	ldi	r25, 0x04	; 4
    62aa:	29 81       	ldd	r18, Y+1	; 0x01
    62ac:	3a 81       	ldd	r19, Y+2	; 0x02
    62ae:	f9 01       	movw	r30, r18
    62b0:	96 8f       	std	Z+30, r25	; 0x1e
    62b2:	85 8f       	std	Z+29, r24	; 0x1d
    62b4:	89 81       	ldd	r24, Y+1	; 0x01
    62b6:	9a 81       	ldd	r25, Y+2	; 0x02
    62b8:	fc 01       	movw	r30, r24
    62ba:	10 a2       	std	Z+32, r1	; 0x20
    62bc:	17 8e       	std	Z+31, r1	; 0x1f
    62be:	89 81       	ldd	r24, Y+1	; 0x01
    62c0:	9a 81       	ldd	r25, Y+2	; 0x02
    62c2:	2f ef       	ldi	r18, 0xFF	; 255
    62c4:	fc 01       	movw	r30, r24
    62c6:	24 a3       	std	Z+36, r18	; 0x24
    62c8:	89 81       	ldd	r24, Y+1	; 0x01
    62ca:	9a 81       	ldd	r25, Y+2	; 0x02
    62cc:	2f ef       	ldi	r18, 0xFF	; 255
    62ce:	fc 01       	movw	r30, r24
    62d0:	25 a3       	std	Z+37, r18	; 0x25
    62d2:	89 81       	ldd	r24, Y+1	; 0x01
    62d4:	9a 81       	ldd	r25, Y+2	; 0x02
    62d6:	2f ef       	ldi	r18, 0xFF	; 255
    62d8:	fc 01       	movw	r30, r24
    62da:	26 a3       	std	Z+38, r18	; 0x26
    62dc:	89 81       	ldd	r24, Y+1	; 0x01
    62de:	9a 81       	ldd	r25, Y+2	; 0x02
    62e0:	2f ef       	ldi	r18, 0xFF	; 255
    62e2:	fc 01       	movw	r30, r24
    62e4:	27 a3       	std	Z+39, r18	; 0x27
    62e6:	89 81       	ldd	r24, Y+1	; 0x01
    62e8:	9a 81       	ldd	r25, Y+2	; 0x02
    62ea:	2f 81       	ldd	r18, Y+7	; 0x07
    62ec:	fc 01       	movw	r30, r24
    62ee:	20 a7       	std	Z+40, r18	; 0x28
    62f0:	29 81       	ldd	r18, Y+1	; 0x01
    62f2:	3a 81       	ldd	r19, Y+2	; 0x02
    62f4:	88 85       	ldd	r24, Y+8	; 0x08
    62f6:	99 85       	ldd	r25, Y+9	; 0x09
    62f8:	aa 85       	ldd	r26, Y+10	; 0x0a
    62fa:	bb 85       	ldd	r27, Y+11	; 0x0b
    62fc:	f9 01       	movw	r30, r18
    62fe:	85 ab       	std	Z+53, r24	; 0x35
    6300:	96 ab       	std	Z+54, r25	; 0x36
    6302:	a7 ab       	std	Z+55, r26	; 0x37
    6304:	b0 af       	std	Z+56, r27	; 0x38
    6306:	29 81       	ldd	r18, Y+1	; 0x01
    6308:	3a 81       	ldd	r19, Y+2	; 0x02
    630a:	8c 85       	ldd	r24, Y+12	; 0x0c
    630c:	9d 85       	ldd	r25, Y+13	; 0x0d
    630e:	ae 85       	ldd	r26, Y+14	; 0x0e
    6310:	bf 85       	ldd	r27, Y+15	; 0x0f
    6312:	f9 01       	movw	r30, r18
    6314:	81 af       	std	Z+57, r24	; 0x39
    6316:	92 af       	std	Z+58, r25	; 0x3a
    6318:	a3 af       	std	Z+59, r26	; 0x3b
    631a:	b4 af       	std	Z+60, r27	; 0x3c
    631c:	89 81       	ldd	r24, Y+1	; 0x01
    631e:	9a 81       	ldd	r25, Y+2	; 0x02
    6320:	ce 96       	adiw	r24, 0x3e	; 62
    6322:	0d df       	rcall	.-486    	; 0x613e <_ZN11SPISettingsC1Ev>
    6324:	00 00       	nop
    6326:	2f 96       	adiw	r28, 0x0f	; 15
    6328:	0f b6       	in	r0, 0x3f	; 63
    632a:	f8 94       	cli
    632c:	de bf       	out	0x3e, r29	; 62
    632e:	0f be       	out	0x3f, r0	; 63
    6330:	cd bf       	out	0x3d, r28	; 61
    6332:	df 91       	pop	r29
    6334:	cf 91       	pop	r28
    6336:	0f 91       	pop	r16
    6338:	ff 90       	pop	r15
    633a:	ef 90       	pop	r14
    633c:	df 90       	pop	r13
    633e:	cf 90       	pop	r12
    6340:	bf 90       	pop	r11
    6342:	af 90       	pop	r10
    6344:	9f 90       	pop	r9
    6346:	8f 90       	pop	r8
    6348:	08 95       	ret

0000634a <_ZN16Adafruit_SSD1306D1Ev>:
    634a:	cf 93       	push	r28
    634c:	df 93       	push	r29
    634e:	1f 92       	push	r1
    6350:	1f 92       	push	r1
    6352:	cd b7       	in	r28, 0x3d	; 61
    6354:	de b7       	in	r29, 0x3e	; 62
    6356:	9a 83       	std	Y+2, r25	; 0x02
    6358:	89 83       	std	Y+1, r24	; 0x01
    635a:	29 e8       	ldi	r18, 0x89	; 137
    635c:	32 e0       	ldi	r19, 0x02	; 2
    635e:	89 81       	ldd	r24, Y+1	; 0x01
    6360:	9a 81       	ldd	r25, Y+2	; 0x02
    6362:	fc 01       	movw	r30, r24
    6364:	31 83       	std	Z+1, r19	; 0x01
    6366:	20 83       	st	Z, r18
    6368:	89 81       	ldd	r24, Y+1	; 0x01
    636a:	9a 81       	ldd	r25, Y+2	; 0x02
    636c:	fc 01       	movw	r30, r24
    636e:	87 8d       	ldd	r24, Z+31	; 0x1f
    6370:	90 a1       	ldd	r25, Z+32	; 0x20
    6372:	89 2b       	or	r24, r25
    6374:	61 f0       	breq	.+24     	; 0x638e <_ZN16Adafruit_SSD1306D1Ev+0x44>
    6376:	89 81       	ldd	r24, Y+1	; 0x01
    6378:	9a 81       	ldd	r25, Y+2	; 0x02
    637a:	fc 01       	movw	r30, r24
    637c:	87 8d       	ldd	r24, Z+31	; 0x1f
    637e:	90 a1       	ldd	r25, Z+32	; 0x20
    6380:	0e 94 52 4e 	call	0x9ca4	; 0x9ca4 <free>
    6384:	89 81       	ldd	r24, Y+1	; 0x01
    6386:	9a 81       	ldd	r25, Y+2	; 0x02
    6388:	fc 01       	movw	r30, r24
    638a:	10 a2       	std	Z+32, r1	; 0x20
    638c:	17 8e       	std	Z+31, r1	; 0x1f
    638e:	00 00       	nop
    6390:	0f 90       	pop	r0
    6392:	0f 90       	pop	r0
    6394:	df 91       	pop	r29
    6396:	cf 91       	pop	r28
    6398:	08 95       	ret

0000639a <_ZN16Adafruit_SSD130616ssd1306_command1Eh>:
    639a:	cf 93       	push	r28
    639c:	df 93       	push	r29
    639e:	cd b7       	in	r28, 0x3d	; 61
    63a0:	de b7       	in	r29, 0x3e	; 62
    63a2:	27 97       	sbiw	r28, 0x07	; 7
    63a4:	0f b6       	in	r0, 0x3f	; 63
    63a6:	f8 94       	cli
    63a8:	de bf       	out	0x3e, r29	; 62
    63aa:	0f be       	out	0x3f, r0	; 63
    63ac:	cd bf       	out	0x3d, r28	; 61
    63ae:	9e 83       	std	Y+6, r25	; 0x06
    63b0:	8d 83       	std	Y+5, r24	; 0x05
    63b2:	6f 83       	std	Y+7, r22	; 0x07
    63b4:	8d 81       	ldd	r24, Y+5	; 0x05
    63b6:	9e 81       	ldd	r25, Y+6	; 0x06
    63b8:	fc 01       	movw	r30, r24
    63ba:	85 8d       	ldd	r24, Z+29	; 0x1d
    63bc:	96 8d       	ldd	r25, Z+30	; 0x1e
    63be:	89 2b       	or	r24, r25
    63c0:	e9 f1       	breq	.+122    	; 0x643c <_ZN16Adafruit_SSD130616ssd1306_command1Eh+0xa2>
    63c2:	8d 81       	ldd	r24, Y+5	; 0x05
    63c4:	9e 81       	ldd	r25, Y+6	; 0x06
    63c6:	fc 01       	movw	r30, r24
    63c8:	81 a1       	ldd	r24, Z+33	; 0x21
    63ca:	28 2f       	mov	r18, r24
    63cc:	88 0f       	add	r24, r24
    63ce:	33 0b       	sbc	r19, r19
    63d0:	8d 81       	ldd	r24, Y+5	; 0x05
    63d2:	9e 81       	ldd	r25, Y+6	; 0x06
    63d4:	fc 01       	movw	r30, r24
    63d6:	85 8d       	ldd	r24, Z+29	; 0x1d
    63d8:	96 8d       	ldd	r25, Z+30	; 0x1e
    63da:	b9 01       	movw	r22, r18
    63dc:	0e 94 89 21 	call	0x4312	; 0x4312 <_ZN7TwoWire17beginTransmissionEi>
    63e0:	8d 81       	ldd	r24, Y+5	; 0x05
    63e2:	9e 81       	ldd	r25, Y+6	; 0x06
    63e4:	fc 01       	movw	r30, r24
    63e6:	85 8d       	ldd	r24, Z+29	; 0x1d
    63e8:	96 8d       	ldd	r25, Z+30	; 0x1e
    63ea:	fc 01       	movw	r30, r24
    63ec:	80 81       	ld	r24, Z
    63ee:	91 81       	ldd	r25, Z+1	; 0x01
    63f0:	fc 01       	movw	r30, r24
    63f2:	20 81       	ld	r18, Z
    63f4:	31 81       	ldd	r19, Z+1	; 0x01
    63f6:	8d 81       	ldd	r24, Y+5	; 0x05
    63f8:	9e 81       	ldd	r25, Y+6	; 0x06
    63fa:	fc 01       	movw	r30, r24
    63fc:	85 8d       	ldd	r24, Z+29	; 0x1d
    63fe:	96 8d       	ldd	r25, Z+30	; 0x1e
    6400:	60 e0       	ldi	r22, 0x00	; 0
    6402:	f9 01       	movw	r30, r18
    6404:	19 95       	eicall
    6406:	8d 81       	ldd	r24, Y+5	; 0x05
    6408:	9e 81       	ldd	r25, Y+6	; 0x06
    640a:	fc 01       	movw	r30, r24
    640c:	85 8d       	ldd	r24, Z+29	; 0x1d
    640e:	96 8d       	ldd	r25, Z+30	; 0x1e
    6410:	fc 01       	movw	r30, r24
    6412:	80 81       	ld	r24, Z
    6414:	91 81       	ldd	r25, Z+1	; 0x01
    6416:	fc 01       	movw	r30, r24
    6418:	20 81       	ld	r18, Z
    641a:	31 81       	ldd	r19, Z+1	; 0x01
    641c:	8d 81       	ldd	r24, Y+5	; 0x05
    641e:	9e 81       	ldd	r25, Y+6	; 0x06
    6420:	fc 01       	movw	r30, r24
    6422:	85 8d       	ldd	r24, Z+29	; 0x1d
    6424:	96 8d       	ldd	r25, Z+30	; 0x1e
    6426:	6f 81       	ldd	r22, Y+7	; 0x07
    6428:	f9 01       	movw	r30, r18
    642a:	19 95       	eicall
    642c:	8d 81       	ldd	r24, Y+5	; 0x05
    642e:	9e 81       	ldd	r25, Y+6	; 0x06
    6430:	fc 01       	movw	r30, r24
    6432:	85 8d       	ldd	r24, Z+29	; 0x1d
    6434:	96 8d       	ldd	r25, Z+30	; 0x1e
    6436:	0e 94 c4 21 	call	0x4388	; 0x4388 <_ZN7TwoWire15endTransmissionEv>
    643a:	88 c0       	rjmp	.+272    	; 0x654c <_ZN16Adafruit_SSD130616ssd1306_command1Eh+0x1b2>
    643c:	8d 81       	ldd	r24, Y+5	; 0x05
    643e:	9e 81       	ldd	r25, Y+6	; 0x06
    6440:	fc 01       	movw	r30, r24
    6442:	85 a5       	ldd	r24, Z+45	; 0x2d
    6444:	96 a5       	ldd	r25, Z+46	; 0x2e
    6446:	2d 81       	ldd	r18, Y+5	; 0x05
    6448:	3e 81       	ldd	r19, Y+6	; 0x06
    644a:	f9 01       	movw	r30, r18
    644c:	25 a5       	ldd	r18, Z+45	; 0x2d
    644e:	36 a5       	ldd	r19, Z+46	; 0x2e
    6450:	f9 01       	movw	r30, r18
    6452:	20 81       	ld	r18, Z
    6454:	42 2f       	mov	r20, r18
    6456:	2d 81       	ldd	r18, Y+5	; 0x05
    6458:	3e 81       	ldd	r19, Y+6	; 0x06
    645a:	f9 01       	movw	r30, r18
    645c:	23 a9       	ldd	r18, Z+51	; 0x33
    645e:	20 95       	com	r18
    6460:	24 23       	and	r18, r20
    6462:	fc 01       	movw	r30, r24
    6464:	20 83       	st	Z, r18
    6466:	8d 81       	ldd	r24, Y+5	; 0x05
    6468:	9e 81       	ldd	r25, Y+6	; 0x06
    646a:	9a 83       	std	Y+2, r25	; 0x02
    646c:	89 83       	std	Y+1, r24	; 0x01
    646e:	8f 81       	ldd	r24, Y+7	; 0x07
    6470:	8b 83       	std	Y+3, r24	; 0x03
    6472:	89 81       	ldd	r24, Y+1	; 0x01
    6474:	9a 81       	ldd	r25, Y+2	; 0x02
    6476:	fc 01       	movw	r30, r24
    6478:	83 8d       	ldd	r24, Z+27	; 0x1b
    647a:	94 8d       	ldd	r25, Z+28	; 0x1c
    647c:	89 2b       	or	r24, r25
    647e:	19 f0       	breq	.+6      	; 0x6486 <_ZN16Adafruit_SSD130616ssd1306_command1Eh+0xec>
    6480:	8b 81       	ldd	r24, Y+3	; 0x03
    6482:	3e de       	rcall	.-900    	; 0x6100 <_ZN8SPIClass8transferEh>
    6484:	63 c0       	rjmp	.+198    	; 0x654c <_ZN16Adafruit_SSD130616ssd1306_command1Eh+0x1b2>
    6486:	80 e8       	ldi	r24, 0x80	; 128
    6488:	8c 83       	std	Y+4, r24	; 0x04
    648a:	8c 81       	ldd	r24, Y+4	; 0x04
    648c:	88 23       	and	r24, r24
    648e:	09 f4       	brne	.+2      	; 0x6492 <_ZN16Adafruit_SSD130616ssd1306_command1Eh+0xf8>
    6490:	5d c0       	rjmp	.+186    	; 0x654c <_ZN16Adafruit_SSD130616ssd1306_command1Eh+0x1b2>
    6492:	9b 81       	ldd	r25, Y+3	; 0x03
    6494:	8c 81       	ldd	r24, Y+4	; 0x04
    6496:	89 23       	and	r24, r25
    6498:	88 23       	and	r24, r24
    649a:	a1 f0       	breq	.+40     	; 0x64c4 <_ZN16Adafruit_SSD130616ssd1306_command1Eh+0x12a>
    649c:	89 81       	ldd	r24, Y+1	; 0x01
    649e:	9a 81       	ldd	r25, Y+2	; 0x02
    64a0:	fc 01       	movw	r30, r24
    64a2:	81 a5       	ldd	r24, Z+41	; 0x29
    64a4:	92 a5       	ldd	r25, Z+42	; 0x2a
    64a6:	29 81       	ldd	r18, Y+1	; 0x01
    64a8:	3a 81       	ldd	r19, Y+2	; 0x02
    64aa:	f9 01       	movw	r30, r18
    64ac:	21 a5       	ldd	r18, Z+41	; 0x29
    64ae:	32 a5       	ldd	r19, Z+42	; 0x2a
    64b0:	f9 01       	movw	r30, r18
    64b2:	40 81       	ld	r20, Z
    64b4:	29 81       	ldd	r18, Y+1	; 0x01
    64b6:	3a 81       	ldd	r19, Y+2	; 0x02
    64b8:	f9 01       	movw	r30, r18
    64ba:	21 a9       	ldd	r18, Z+49	; 0x31
    64bc:	24 2b       	or	r18, r20
    64be:	fc 01       	movw	r30, r24
    64c0:	20 83       	st	Z, r18
    64c2:	15 c0       	rjmp	.+42     	; 0x64ee <_ZN16Adafruit_SSD130616ssd1306_command1Eh+0x154>
    64c4:	89 81       	ldd	r24, Y+1	; 0x01
    64c6:	9a 81       	ldd	r25, Y+2	; 0x02
    64c8:	fc 01       	movw	r30, r24
    64ca:	81 a5       	ldd	r24, Z+41	; 0x29
    64cc:	92 a5       	ldd	r25, Z+42	; 0x2a
    64ce:	29 81       	ldd	r18, Y+1	; 0x01
    64d0:	3a 81       	ldd	r19, Y+2	; 0x02
    64d2:	f9 01       	movw	r30, r18
    64d4:	21 a5       	ldd	r18, Z+41	; 0x29
    64d6:	32 a5       	ldd	r19, Z+42	; 0x2a
    64d8:	f9 01       	movw	r30, r18
    64da:	20 81       	ld	r18, Z
    64dc:	42 2f       	mov	r20, r18
    64de:	29 81       	ldd	r18, Y+1	; 0x01
    64e0:	3a 81       	ldd	r19, Y+2	; 0x02
    64e2:	f9 01       	movw	r30, r18
    64e4:	21 a9       	ldd	r18, Z+49	; 0x31
    64e6:	20 95       	com	r18
    64e8:	24 23       	and	r18, r20
    64ea:	fc 01       	movw	r30, r24
    64ec:	20 83       	st	Z, r18
    64ee:	89 81       	ldd	r24, Y+1	; 0x01
    64f0:	9a 81       	ldd	r25, Y+2	; 0x02
    64f2:	fc 01       	movw	r30, r24
    64f4:	83 a5       	ldd	r24, Z+43	; 0x2b
    64f6:	94 a5       	ldd	r25, Z+44	; 0x2c
    64f8:	29 81       	ldd	r18, Y+1	; 0x01
    64fa:	3a 81       	ldd	r19, Y+2	; 0x02
    64fc:	f9 01       	movw	r30, r18
    64fe:	23 a5       	ldd	r18, Z+43	; 0x2b
    6500:	34 a5       	ldd	r19, Z+44	; 0x2c
    6502:	f9 01       	movw	r30, r18
    6504:	40 81       	ld	r20, Z
    6506:	29 81       	ldd	r18, Y+1	; 0x01
    6508:	3a 81       	ldd	r19, Y+2	; 0x02
    650a:	f9 01       	movw	r30, r18
    650c:	22 a9       	ldd	r18, Z+50	; 0x32
    650e:	24 2b       	or	r18, r20
    6510:	fc 01       	movw	r30, r24
    6512:	20 83       	st	Z, r18
    6514:	89 81       	ldd	r24, Y+1	; 0x01
    6516:	9a 81       	ldd	r25, Y+2	; 0x02
    6518:	fc 01       	movw	r30, r24
    651a:	83 a5       	ldd	r24, Z+43	; 0x2b
    651c:	94 a5       	ldd	r25, Z+44	; 0x2c
    651e:	29 81       	ldd	r18, Y+1	; 0x01
    6520:	3a 81       	ldd	r19, Y+2	; 0x02
    6522:	f9 01       	movw	r30, r18
    6524:	23 a5       	ldd	r18, Z+43	; 0x2b
    6526:	34 a5       	ldd	r19, Z+44	; 0x2c
    6528:	f9 01       	movw	r30, r18
    652a:	20 81       	ld	r18, Z
    652c:	42 2f       	mov	r20, r18
    652e:	29 81       	ldd	r18, Y+1	; 0x01
    6530:	3a 81       	ldd	r19, Y+2	; 0x02
    6532:	f9 01       	movw	r30, r18
    6534:	22 a9       	ldd	r18, Z+50	; 0x32
    6536:	20 95       	com	r18
    6538:	24 23       	and	r18, r20
    653a:	fc 01       	movw	r30, r24
    653c:	20 83       	st	Z, r18
    653e:	8c 81       	ldd	r24, Y+4	; 0x04
    6540:	88 2f       	mov	r24, r24
    6542:	90 e0       	ldi	r25, 0x00	; 0
    6544:	95 95       	asr	r25
    6546:	87 95       	ror	r24
    6548:	8c 83       	std	Y+4, r24	; 0x04
    654a:	9f cf       	rjmp	.-194    	; 0x648a <_ZN16Adafruit_SSD130616ssd1306_command1Eh+0xf0>
    654c:	00 00       	nop
    654e:	27 96       	adiw	r28, 0x07	; 7
    6550:	0f b6       	in	r0, 0x3f	; 63
    6552:	f8 94       	cli
    6554:	de bf       	out	0x3e, r29	; 62
    6556:	0f be       	out	0x3f, r0	; 63
    6558:	cd bf       	out	0x3d, r28	; 61
    655a:	df 91       	pop	r29
    655c:	cf 91       	pop	r28
    655e:	08 95       	ret

00006560 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh>:
    6560:	cf 93       	push	r28
    6562:	df 93       	push	r29
    6564:	cd b7       	in	r28, 0x3d	; 61
    6566:	de b7       	in	r29, 0x3e	; 62
    6568:	61 97       	sbiw	r28, 0x11	; 17
    656a:	0f b6       	in	r0, 0x3f	; 63
    656c:	f8 94       	cli
    656e:	de bf       	out	0x3e, r29	; 62
    6570:	0f be       	out	0x3f, r0	; 63
    6572:	cd bf       	out	0x3d, r28	; 61
    6574:	9e 87       	std	Y+14, r25	; 0x0e
    6576:	8d 87       	std	Y+13, r24	; 0x0d
    6578:	78 8b       	std	Y+16, r23	; 0x10
    657a:	6f 87       	std	Y+15, r22	; 0x0f
    657c:	49 8b       	std	Y+17, r20	; 0x11
    657e:	8d 85       	ldd	r24, Y+13	; 0x0d
    6580:	9e 85       	ldd	r25, Y+14	; 0x0e
    6582:	fc 01       	movw	r30, r24
    6584:	85 8d       	ldd	r24, Z+29	; 0x1d
    6586:	96 8d       	ldd	r25, Z+30	; 0x1e
    6588:	89 2b       	or	r24, r25
    658a:	09 f4       	brne	.+2      	; 0x658e <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x2e>
    658c:	92 c0       	rjmp	.+292    	; 0x66b2 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x152>
    658e:	8d 85       	ldd	r24, Y+13	; 0x0d
    6590:	9e 85       	ldd	r25, Y+14	; 0x0e
    6592:	fc 01       	movw	r30, r24
    6594:	81 a1       	ldd	r24, Z+33	; 0x21
    6596:	28 2f       	mov	r18, r24
    6598:	88 0f       	add	r24, r24
    659a:	33 0b       	sbc	r19, r19
    659c:	8d 85       	ldd	r24, Y+13	; 0x0d
    659e:	9e 85       	ldd	r25, Y+14	; 0x0e
    65a0:	fc 01       	movw	r30, r24
    65a2:	85 8d       	ldd	r24, Z+29	; 0x1d
    65a4:	96 8d       	ldd	r25, Z+30	; 0x1e
    65a6:	b9 01       	movw	r22, r18
    65a8:	0e 94 89 21 	call	0x4312	; 0x4312 <_ZN7TwoWire17beginTransmissionEi>
    65ac:	8d 85       	ldd	r24, Y+13	; 0x0d
    65ae:	9e 85       	ldd	r25, Y+14	; 0x0e
    65b0:	fc 01       	movw	r30, r24
    65b2:	85 8d       	ldd	r24, Z+29	; 0x1d
    65b4:	96 8d       	ldd	r25, Z+30	; 0x1e
    65b6:	fc 01       	movw	r30, r24
    65b8:	80 81       	ld	r24, Z
    65ba:	91 81       	ldd	r25, Z+1	; 0x01
    65bc:	fc 01       	movw	r30, r24
    65be:	20 81       	ld	r18, Z
    65c0:	31 81       	ldd	r19, Z+1	; 0x01
    65c2:	8d 85       	ldd	r24, Y+13	; 0x0d
    65c4:	9e 85       	ldd	r25, Y+14	; 0x0e
    65c6:	fc 01       	movw	r30, r24
    65c8:	85 8d       	ldd	r24, Z+29	; 0x1d
    65ca:	96 8d       	ldd	r25, Z+30	; 0x1e
    65cc:	60 e0       	ldi	r22, 0x00	; 0
    65ce:	f9 01       	movw	r30, r18
    65d0:	19 95       	eicall
    65d2:	81 e0       	ldi	r24, 0x01	; 1
    65d4:	90 e0       	ldi	r25, 0x00	; 0
    65d6:	9a 83       	std	Y+2, r25	; 0x02
    65d8:	89 83       	std	Y+1, r24	; 0x01
    65da:	89 89       	ldd	r24, Y+17	; 0x11
    65dc:	9f ef       	ldi	r25, 0xFF	; 255
    65de:	98 0f       	add	r25, r24
    65e0:	99 8b       	std	Y+17, r25	; 0x11
    65e2:	91 e0       	ldi	r25, 0x01	; 1
    65e4:	88 23       	and	r24, r24
    65e6:	09 f4       	brne	.+2      	; 0x65ea <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x8a>
    65e8:	90 e0       	ldi	r25, 0x00	; 0
    65ea:	99 23       	and	r25, r25
    65ec:	09 f4       	brne	.+2      	; 0x65f0 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x90>
    65ee:	59 c0       	rjmp	.+178    	; 0x66a2 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x142>
    65f0:	89 81       	ldd	r24, Y+1	; 0x01
    65f2:	9a 81       	ldd	r25, Y+2	; 0x02
    65f4:	80 97       	sbiw	r24, 0x20	; 32
    65f6:	68 f1       	brcs	.+90     	; 0x6652 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0xf2>
    65f8:	8d 85       	ldd	r24, Y+13	; 0x0d
    65fa:	9e 85       	ldd	r25, Y+14	; 0x0e
    65fc:	fc 01       	movw	r30, r24
    65fe:	85 8d       	ldd	r24, Z+29	; 0x1d
    6600:	96 8d       	ldd	r25, Z+30	; 0x1e
    6602:	0e 94 c4 21 	call	0x4388	; 0x4388 <_ZN7TwoWire15endTransmissionEv>
    6606:	8d 85       	ldd	r24, Y+13	; 0x0d
    6608:	9e 85       	ldd	r25, Y+14	; 0x0e
    660a:	fc 01       	movw	r30, r24
    660c:	81 a1       	ldd	r24, Z+33	; 0x21
    660e:	28 2f       	mov	r18, r24
    6610:	88 0f       	add	r24, r24
    6612:	33 0b       	sbc	r19, r19
    6614:	8d 85       	ldd	r24, Y+13	; 0x0d
    6616:	9e 85       	ldd	r25, Y+14	; 0x0e
    6618:	fc 01       	movw	r30, r24
    661a:	85 8d       	ldd	r24, Z+29	; 0x1d
    661c:	96 8d       	ldd	r25, Z+30	; 0x1e
    661e:	b9 01       	movw	r22, r18
    6620:	0e 94 89 21 	call	0x4312	; 0x4312 <_ZN7TwoWire17beginTransmissionEi>
    6624:	8d 85       	ldd	r24, Y+13	; 0x0d
    6626:	9e 85       	ldd	r25, Y+14	; 0x0e
    6628:	fc 01       	movw	r30, r24
    662a:	85 8d       	ldd	r24, Z+29	; 0x1d
    662c:	96 8d       	ldd	r25, Z+30	; 0x1e
    662e:	fc 01       	movw	r30, r24
    6630:	80 81       	ld	r24, Z
    6632:	91 81       	ldd	r25, Z+1	; 0x01
    6634:	fc 01       	movw	r30, r24
    6636:	20 81       	ld	r18, Z
    6638:	31 81       	ldd	r19, Z+1	; 0x01
    663a:	8d 85       	ldd	r24, Y+13	; 0x0d
    663c:	9e 85       	ldd	r25, Y+14	; 0x0e
    663e:	fc 01       	movw	r30, r24
    6640:	85 8d       	ldd	r24, Z+29	; 0x1d
    6642:	96 8d       	ldd	r25, Z+30	; 0x1e
    6644:	60 e0       	ldi	r22, 0x00	; 0
    6646:	f9 01       	movw	r30, r18
    6648:	19 95       	eicall
    664a:	81 e0       	ldi	r24, 0x01	; 1
    664c:	90 e0       	ldi	r25, 0x00	; 0
    664e:	9a 83       	std	Y+2, r25	; 0x02
    6650:	89 83       	std	Y+1, r24	; 0x01
    6652:	8d 85       	ldd	r24, Y+13	; 0x0d
    6654:	9e 85       	ldd	r25, Y+14	; 0x0e
    6656:	fc 01       	movw	r30, r24
    6658:	85 8d       	ldd	r24, Z+29	; 0x1d
    665a:	96 8d       	ldd	r25, Z+30	; 0x1e
    665c:	fc 01       	movw	r30, r24
    665e:	80 81       	ld	r24, Z
    6660:	91 81       	ldd	r25, Z+1	; 0x01
    6662:	fc 01       	movw	r30, r24
    6664:	20 81       	ld	r18, Z
    6666:	31 81       	ldd	r19, Z+1	; 0x01
    6668:	8f 85       	ldd	r24, Y+15	; 0x0f
    666a:	98 89       	ldd	r25, Y+16	; 0x10
    666c:	ac 01       	movw	r20, r24
    666e:	4f 5f       	subi	r20, 0xFF	; 255
    6670:	5f 4f       	sbci	r21, 0xFF	; 255
    6672:	58 8b       	std	Y+16, r21	; 0x10
    6674:	4f 87       	std	Y+15, r20	; 0x0f
    6676:	9c 83       	std	Y+4, r25	; 0x04
    6678:	8b 83       	std	Y+3, r24	; 0x03
    667a:	8b 81       	ldd	r24, Y+3	; 0x03
    667c:	9c 81       	ldd	r25, Y+4	; 0x04
    667e:	fc 01       	movw	r30, r24
    6680:	84 91       	lpm	r24, Z
    6682:	8d 83       	std	Y+5, r24	; 0x05
    6684:	4d 81       	ldd	r20, Y+5	; 0x05
    6686:	8d 85       	ldd	r24, Y+13	; 0x0d
    6688:	9e 85       	ldd	r25, Y+14	; 0x0e
    668a:	fc 01       	movw	r30, r24
    668c:	85 8d       	ldd	r24, Z+29	; 0x1d
    668e:	96 8d       	ldd	r25, Z+30	; 0x1e
    6690:	64 2f       	mov	r22, r20
    6692:	f9 01       	movw	r30, r18
    6694:	19 95       	eicall
    6696:	89 81       	ldd	r24, Y+1	; 0x01
    6698:	9a 81       	ldd	r25, Y+2	; 0x02
    669a:	01 96       	adiw	r24, 0x01	; 1
    669c:	9a 83       	std	Y+2, r25	; 0x02
    669e:	89 83       	std	Y+1, r24	; 0x01
    66a0:	9c cf       	rjmp	.-200    	; 0x65da <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x7a>
    66a2:	8d 85       	ldd	r24, Y+13	; 0x0d
    66a4:	9e 85       	ldd	r25, Y+14	; 0x0e
    66a6:	fc 01       	movw	r30, r24
    66a8:	85 8d       	ldd	r24, Z+29	; 0x1d
    66aa:	96 8d       	ldd	r25, Z+30	; 0x1e
    66ac:	0e 94 c4 21 	call	0x4388	; 0x4388 <_ZN7TwoWire15endTransmissionEv>
    66b0:	a0 c0       	rjmp	.+320    	; 0x67f2 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x292>
    66b2:	8d 85       	ldd	r24, Y+13	; 0x0d
    66b4:	9e 85       	ldd	r25, Y+14	; 0x0e
    66b6:	fc 01       	movw	r30, r24
    66b8:	85 a5       	ldd	r24, Z+45	; 0x2d
    66ba:	96 a5       	ldd	r25, Z+46	; 0x2e
    66bc:	2d 85       	ldd	r18, Y+13	; 0x0d
    66be:	3e 85       	ldd	r19, Y+14	; 0x0e
    66c0:	f9 01       	movw	r30, r18
    66c2:	25 a5       	ldd	r18, Z+45	; 0x2d
    66c4:	36 a5       	ldd	r19, Z+46	; 0x2e
    66c6:	f9 01       	movw	r30, r18
    66c8:	20 81       	ld	r18, Z
    66ca:	42 2f       	mov	r20, r18
    66cc:	2d 85       	ldd	r18, Y+13	; 0x0d
    66ce:	3e 85       	ldd	r19, Y+14	; 0x0e
    66d0:	f9 01       	movw	r30, r18
    66d2:	23 a9       	ldd	r18, Z+51	; 0x33
    66d4:	20 95       	com	r18
    66d6:	24 23       	and	r18, r20
    66d8:	fc 01       	movw	r30, r24
    66da:	20 83       	st	Z, r18
    66dc:	89 89       	ldd	r24, Y+17	; 0x11
    66de:	9f ef       	ldi	r25, 0xFF	; 255
    66e0:	98 0f       	add	r25, r24
    66e2:	99 8b       	std	Y+17, r25	; 0x11
    66e4:	91 e0       	ldi	r25, 0x01	; 1
    66e6:	88 23       	and	r24, r24
    66e8:	09 f4       	brne	.+2      	; 0x66ec <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x18c>
    66ea:	90 e0       	ldi	r25, 0x00	; 0
    66ec:	99 23       	and	r25, r25
    66ee:	09 f4       	brne	.+2      	; 0x66f2 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x192>
    66f0:	80 c0       	rjmp	.+256    	; 0x67f2 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x292>
    66f2:	8f 85       	ldd	r24, Y+15	; 0x0f
    66f4:	98 89       	ldd	r25, Y+16	; 0x10
    66f6:	9c 01       	movw	r18, r24
    66f8:	2f 5f       	subi	r18, 0xFF	; 255
    66fa:	3f 4f       	sbci	r19, 0xFF	; 255
    66fc:	38 8b       	std	Y+16, r19	; 0x10
    66fe:	2f 87       	std	Y+15, r18	; 0x0f
    6700:	9f 83       	std	Y+7, r25	; 0x07
    6702:	8e 83       	std	Y+6, r24	; 0x06
    6704:	8e 81       	ldd	r24, Y+6	; 0x06
    6706:	9f 81       	ldd	r25, Y+7	; 0x07
    6708:	fc 01       	movw	r30, r24
    670a:	84 91       	lpm	r24, Z
    670c:	88 87       	std	Y+8, r24	; 0x08
    670e:	28 85       	ldd	r18, Y+8	; 0x08
    6710:	8d 85       	ldd	r24, Y+13	; 0x0d
    6712:	9e 85       	ldd	r25, Y+14	; 0x0e
    6714:	9a 87       	std	Y+10, r25	; 0x0a
    6716:	89 87       	std	Y+9, r24	; 0x09
    6718:	2b 87       	std	Y+11, r18	; 0x0b
    671a:	89 85       	ldd	r24, Y+9	; 0x09
    671c:	9a 85       	ldd	r25, Y+10	; 0x0a
    671e:	fc 01       	movw	r30, r24
    6720:	83 8d       	ldd	r24, Z+27	; 0x1b
    6722:	94 8d       	ldd	r25, Z+28	; 0x1c
    6724:	89 2b       	or	r24, r25
    6726:	19 f0       	breq	.+6      	; 0x672e <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x1ce>
    6728:	8b 85       	ldd	r24, Y+11	; 0x0b
    672a:	ea dc       	rcall	.-1580   	; 0x6100 <_ZN8SPIClass8transferEh>
    672c:	d7 cf       	rjmp	.-82     	; 0x66dc <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x17c>
    672e:	80 e8       	ldi	r24, 0x80	; 128
    6730:	8c 87       	std	Y+12, r24	; 0x0c
    6732:	8c 85       	ldd	r24, Y+12	; 0x0c
    6734:	88 23       	and	r24, r24
    6736:	91 f2       	breq	.-92     	; 0x66dc <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x17c>
    6738:	9b 85       	ldd	r25, Y+11	; 0x0b
    673a:	8c 85       	ldd	r24, Y+12	; 0x0c
    673c:	89 23       	and	r24, r25
    673e:	88 23       	and	r24, r24
    6740:	a1 f0       	breq	.+40     	; 0x676a <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x20a>
    6742:	89 85       	ldd	r24, Y+9	; 0x09
    6744:	9a 85       	ldd	r25, Y+10	; 0x0a
    6746:	fc 01       	movw	r30, r24
    6748:	81 a5       	ldd	r24, Z+41	; 0x29
    674a:	92 a5       	ldd	r25, Z+42	; 0x2a
    674c:	29 85       	ldd	r18, Y+9	; 0x09
    674e:	3a 85       	ldd	r19, Y+10	; 0x0a
    6750:	f9 01       	movw	r30, r18
    6752:	21 a5       	ldd	r18, Z+41	; 0x29
    6754:	32 a5       	ldd	r19, Z+42	; 0x2a
    6756:	f9 01       	movw	r30, r18
    6758:	40 81       	ld	r20, Z
    675a:	29 85       	ldd	r18, Y+9	; 0x09
    675c:	3a 85       	ldd	r19, Y+10	; 0x0a
    675e:	f9 01       	movw	r30, r18
    6760:	21 a9       	ldd	r18, Z+49	; 0x31
    6762:	24 2b       	or	r18, r20
    6764:	fc 01       	movw	r30, r24
    6766:	20 83       	st	Z, r18
    6768:	15 c0       	rjmp	.+42     	; 0x6794 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x234>
    676a:	89 85       	ldd	r24, Y+9	; 0x09
    676c:	9a 85       	ldd	r25, Y+10	; 0x0a
    676e:	fc 01       	movw	r30, r24
    6770:	81 a5       	ldd	r24, Z+41	; 0x29
    6772:	92 a5       	ldd	r25, Z+42	; 0x2a
    6774:	29 85       	ldd	r18, Y+9	; 0x09
    6776:	3a 85       	ldd	r19, Y+10	; 0x0a
    6778:	f9 01       	movw	r30, r18
    677a:	21 a5       	ldd	r18, Z+41	; 0x29
    677c:	32 a5       	ldd	r19, Z+42	; 0x2a
    677e:	f9 01       	movw	r30, r18
    6780:	20 81       	ld	r18, Z
    6782:	42 2f       	mov	r20, r18
    6784:	29 85       	ldd	r18, Y+9	; 0x09
    6786:	3a 85       	ldd	r19, Y+10	; 0x0a
    6788:	f9 01       	movw	r30, r18
    678a:	21 a9       	ldd	r18, Z+49	; 0x31
    678c:	20 95       	com	r18
    678e:	24 23       	and	r18, r20
    6790:	fc 01       	movw	r30, r24
    6792:	20 83       	st	Z, r18
    6794:	89 85       	ldd	r24, Y+9	; 0x09
    6796:	9a 85       	ldd	r25, Y+10	; 0x0a
    6798:	fc 01       	movw	r30, r24
    679a:	83 a5       	ldd	r24, Z+43	; 0x2b
    679c:	94 a5       	ldd	r25, Z+44	; 0x2c
    679e:	29 85       	ldd	r18, Y+9	; 0x09
    67a0:	3a 85       	ldd	r19, Y+10	; 0x0a
    67a2:	f9 01       	movw	r30, r18
    67a4:	23 a5       	ldd	r18, Z+43	; 0x2b
    67a6:	34 a5       	ldd	r19, Z+44	; 0x2c
    67a8:	f9 01       	movw	r30, r18
    67aa:	40 81       	ld	r20, Z
    67ac:	29 85       	ldd	r18, Y+9	; 0x09
    67ae:	3a 85       	ldd	r19, Y+10	; 0x0a
    67b0:	f9 01       	movw	r30, r18
    67b2:	22 a9       	ldd	r18, Z+50	; 0x32
    67b4:	24 2b       	or	r18, r20
    67b6:	fc 01       	movw	r30, r24
    67b8:	20 83       	st	Z, r18
    67ba:	89 85       	ldd	r24, Y+9	; 0x09
    67bc:	9a 85       	ldd	r25, Y+10	; 0x0a
    67be:	fc 01       	movw	r30, r24
    67c0:	83 a5       	ldd	r24, Z+43	; 0x2b
    67c2:	94 a5       	ldd	r25, Z+44	; 0x2c
    67c4:	29 85       	ldd	r18, Y+9	; 0x09
    67c6:	3a 85       	ldd	r19, Y+10	; 0x0a
    67c8:	f9 01       	movw	r30, r18
    67ca:	23 a5       	ldd	r18, Z+43	; 0x2b
    67cc:	34 a5       	ldd	r19, Z+44	; 0x2c
    67ce:	f9 01       	movw	r30, r18
    67d0:	20 81       	ld	r18, Z
    67d2:	42 2f       	mov	r20, r18
    67d4:	29 85       	ldd	r18, Y+9	; 0x09
    67d6:	3a 85       	ldd	r19, Y+10	; 0x0a
    67d8:	f9 01       	movw	r30, r18
    67da:	22 a9       	ldd	r18, Z+50	; 0x32
    67dc:	20 95       	com	r18
    67de:	24 23       	and	r18, r20
    67e0:	fc 01       	movw	r30, r24
    67e2:	20 83       	st	Z, r18
    67e4:	8c 85       	ldd	r24, Y+12	; 0x0c
    67e6:	88 2f       	mov	r24, r24
    67e8:	90 e0       	ldi	r25, 0x00	; 0
    67ea:	95 95       	asr	r25
    67ec:	87 95       	ror	r24
    67ee:	8c 87       	std	Y+12, r24	; 0x0c
    67f0:	a0 cf       	rjmp	.-192    	; 0x6732 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x1d2>
    67f2:	00 00       	nop
    67f4:	61 96       	adiw	r28, 0x11	; 17
    67f6:	0f b6       	in	r0, 0x3f	; 63
    67f8:	f8 94       	cli
    67fa:	de bf       	out	0x3e, r29	; 62
    67fc:	0f be       	out	0x3f, r0	; 63
    67fe:	cd bf       	out	0x3d, r28	; 61
    6800:	df 91       	pop	r29
    6802:	cf 91       	pop	r28
    6804:	08 95       	ret

00006806 <_ZN16Adafruit_SSD13065beginEhhbb>:
    6806:	cf 92       	push	r12
    6808:	df 92       	push	r13
    680a:	ef 92       	push	r14
    680c:	ff 92       	push	r15
    680e:	0f 93       	push	r16
    6810:	1f 93       	push	r17
    6812:	cf 93       	push	r28
    6814:	df 93       	push	r29
    6816:	cd b7       	in	r28, 0x3d	; 61
    6818:	de b7       	in	r29, 0x3e	; 62
    681a:	af 97       	sbiw	r28, 0x2f	; 47
    681c:	0f b6       	in	r0, 0x3f	; 63
    681e:	f8 94       	cli
    6820:	de bf       	out	0x3e, r29	; 62
    6822:	0f be       	out	0x3f, r0	; 63
    6824:	cd bf       	out	0x3d, r28	; 61
    6826:	9b a7       	std	Y+43, r25	; 0x2b
    6828:	8a a7       	std	Y+42, r24	; 0x2a
    682a:	6c a7       	std	Y+44, r22	; 0x2c
    682c:	4d a7       	std	Y+45, r20	; 0x2d
    682e:	2e a7       	std	Y+46, r18	; 0x2e
    6830:	0f a7       	std	Y+47, r16	; 0x2f
    6832:	8a a5       	ldd	r24, Y+42	; 0x2a
    6834:	9b a5       	ldd	r25, Y+43	; 0x2b
    6836:	fc 01       	movw	r30, r24
    6838:	87 8d       	ldd	r24, Z+31	; 0x1f
    683a:	90 a1       	ldd	r25, Z+32	; 0x20
    683c:	89 2b       	or	r24, r25
    683e:	69 f5       	brne	.+90     	; 0x689a <_ZN16Adafruit_SSD13065beginEhhbb+0x94>
    6840:	8a a5       	ldd	r24, Y+42	; 0x2a
    6842:	9b a5       	ldd	r25, Y+43	; 0x2b
    6844:	fc 01       	movw	r30, r24
    6846:	24 81       	ldd	r18, Z+4	; 0x04
    6848:	35 81       	ldd	r19, Z+5	; 0x05
    684a:	8a a5       	ldd	r24, Y+42	; 0x2a
    684c:	9b a5       	ldd	r25, Y+43	; 0x2b
    684e:	fc 01       	movw	r30, r24
    6850:	86 81       	ldd	r24, Z+6	; 0x06
    6852:	97 81       	ldd	r25, Z+7	; 0x07
    6854:	07 96       	adiw	r24, 0x07	; 7
    6856:	99 23       	and	r25, r25
    6858:	0c f4       	brge	.+2      	; 0x685c <_ZN16Adafruit_SSD13065beginEhhbb+0x56>
    685a:	07 96       	adiw	r24, 0x07	; 7
    685c:	95 95       	asr	r25
    685e:	87 95       	ror	r24
    6860:	95 95       	asr	r25
    6862:	87 95       	ror	r24
    6864:	95 95       	asr	r25
    6866:	87 95       	ror	r24
    6868:	ac 01       	movw	r20, r24
    686a:	24 9f       	mul	r18, r20
    686c:	c0 01       	movw	r24, r0
    686e:	25 9f       	mul	r18, r21
    6870:	90 0d       	add	r25, r0
    6872:	34 9f       	mul	r19, r20
    6874:	90 0d       	add	r25, r0
    6876:	11 24       	eor	r1, r1
    6878:	0e 94 ba 4d 	call	0x9b74	; 0x9b74 <malloc>
    687c:	9c 01       	movw	r18, r24
    687e:	8a a5       	ldd	r24, Y+42	; 0x2a
    6880:	9b a5       	ldd	r25, Y+43	; 0x2b
    6882:	fc 01       	movw	r30, r24
    6884:	30 a3       	std	Z+32, r19	; 0x20
    6886:	27 8f       	std	Z+31, r18	; 0x1f
    6888:	8a a5       	ldd	r24, Y+42	; 0x2a
    688a:	9b a5       	ldd	r25, Y+43	; 0x2b
    688c:	fc 01       	movw	r30, r24
    688e:	87 8d       	ldd	r24, Z+31	; 0x1f
    6890:	90 a1       	ldd	r25, Z+32	; 0x20
    6892:	89 2b       	or	r24, r25
    6894:	11 f4       	brne	.+4      	; 0x689a <_ZN16Adafruit_SSD13065beginEhhbb+0x94>
    6896:	81 e0       	ldi	r24, 0x01	; 1
    6898:	01 c0       	rjmp	.+2      	; 0x689c <_ZN16Adafruit_SSD13065beginEhhbb+0x96>
    689a:	80 e0       	ldi	r24, 0x00	; 0
    689c:	88 23       	and	r24, r24
    689e:	11 f0       	breq	.+4      	; 0x68a4 <_ZN16Adafruit_SSD13065beginEhhbb+0x9e>
    68a0:	80 e0       	ldi	r24, 0x00	; 0
    68a2:	31 c3       	rjmp	.+1634   	; 0x6f06 <_ZN16Adafruit_SSD13065beginEhhbb+0x700>
    68a4:	8a a5       	ldd	r24, Y+42	; 0x2a
    68a6:	9b a5       	ldd	r25, Y+43	; 0x2b
    68a8:	fe d4       	rcall	.+2556   	; 0x72a6 <_ZN16Adafruit_SSD130612clearDisplayEv>
    68aa:	8a a5       	ldd	r24, Y+42	; 0x2a
    68ac:	9b a5       	ldd	r25, Y+43	; 0x2b
    68ae:	fc 01       	movw	r30, r24
    68b0:	86 81       	ldd	r24, Z+6	; 0x06
    68b2:	97 81       	ldd	r25, Z+7	; 0x07
    68b4:	81 97       	sbiw	r24, 0x21	; 33
    68b6:	54 f1       	brlt	.+84     	; 0x690c <_ZN16Adafruit_SSD13065beginEhhbb+0x106>
    68b8:	8a a5       	ldd	r24, Y+42	; 0x2a
    68ba:	9b a5       	ldd	r25, Y+43	; 0x2b
    68bc:	fc 01       	movw	r30, r24
    68be:	86 81       	ldd	r24, Z+6	; 0x06
    68c0:	97 81       	ldd	r25, Z+7	; 0x07
    68c2:	80 54       	subi	r24, 0x40	; 64
    68c4:	91 09       	sbc	r25, r1
    68c6:	99 23       	and	r25, r25
    68c8:	0c f4       	brge	.+2      	; 0x68cc <_ZN16Adafruit_SSD13065beginEhhbb+0xc6>
    68ca:	01 96       	adiw	r24, 0x01	; 1
    68cc:	95 95       	asr	r25
    68ce:	87 95       	ror	r24
    68d0:	ac 01       	movw	r20, r24
    68d2:	8a a5       	ldd	r24, Y+42	; 0x2a
    68d4:	9b a5       	ldd	r25, Y+43	; 0x2b
    68d6:	fc 01       	movw	r30, r24
    68d8:	84 81       	ldd	r24, Z+4	; 0x04
    68da:	95 81       	ldd	r25, Z+5	; 0x05
    68dc:	82 55       	subi	r24, 0x52	; 82
    68de:	91 09       	sbc	r25, r1
    68e0:	99 23       	and	r25, r25
    68e2:	0c f4       	brge	.+2      	; 0x68e6 <_ZN16Adafruit_SSD13065beginEhhbb+0xe0>
    68e4:	01 96       	adiw	r24, 0x01	; 1
    68e6:	95 95       	asr	r25
    68e8:	87 95       	ror	r24
    68ea:	bc 01       	movw	r22, r24
    68ec:	8a a5       	ldd	r24, Y+42	; 0x2a
    68ee:	9b a5       	ldd	r25, Y+43	; 0x2b
    68f0:	cc 24       	eor	r12, r12
    68f2:	c3 94       	inc	r12
    68f4:	d1 2c       	mov	r13, r1
    68f6:	68 94       	set
    68f8:	ee 24       	eor	r14, r14
    68fa:	e6 f8       	bld	r14, 6
    68fc:	f1 2c       	mov	r15, r1
    68fe:	02 e5       	ldi	r16, 0x52	; 82
    6900:	10 e0       	ldi	r17, 0x00	; 0
    6902:	26 e2       	ldi	r18, 0x26	; 38
    6904:	39 e0       	ldi	r19, 0x09	; 9
    6906:	0e 94 b2 29 	call	0x5364	; 0x5364 <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij>
    690a:	28 c0       	rjmp	.+80     	; 0x695c <_ZN16Adafruit_SSD13065beginEhhbb+0x156>
    690c:	8a a5       	ldd	r24, Y+42	; 0x2a
    690e:	9b a5       	ldd	r25, Y+43	; 0x2b
    6910:	fc 01       	movw	r30, r24
    6912:	86 81       	ldd	r24, Z+6	; 0x06
    6914:	97 81       	ldd	r25, Z+7	; 0x07
    6916:	80 97       	sbiw	r24, 0x20	; 32
    6918:	99 23       	and	r25, r25
    691a:	0c f4       	brge	.+2      	; 0x691e <_ZN16Adafruit_SSD13065beginEhhbb+0x118>
    691c:	01 96       	adiw	r24, 0x01	; 1
    691e:	95 95       	asr	r25
    6920:	87 95       	ror	r24
    6922:	ac 01       	movw	r20, r24
    6924:	8a a5       	ldd	r24, Y+42	; 0x2a
    6926:	9b a5       	ldd	r25, Y+43	; 0x2b
    6928:	fc 01       	movw	r30, r24
    692a:	84 81       	ldd	r24, Z+4	; 0x04
    692c:	95 81       	ldd	r25, Z+5	; 0x05
    692e:	83 57       	subi	r24, 0x73	; 115
    6930:	91 09       	sbc	r25, r1
    6932:	99 23       	and	r25, r25
    6934:	0c f4       	brge	.+2      	; 0x6938 <_ZN16Adafruit_SSD13065beginEhhbb+0x132>
    6936:	01 96       	adiw	r24, 0x01	; 1
    6938:	95 95       	asr	r25
    693a:	87 95       	ror	r24
    693c:	bc 01       	movw	r22, r24
    693e:	8a a5       	ldd	r24, Y+42	; 0x2a
    6940:	9b a5       	ldd	r25, Y+43	; 0x2b
    6942:	cc 24       	eor	r12, r12
    6944:	c3 94       	inc	r12
    6946:	d1 2c       	mov	r13, r1
    6948:	68 94       	set
    694a:	ee 24       	eor	r14, r14
    694c:	e5 f8       	bld	r14, 5
    694e:	f1 2c       	mov	r15, r1
    6950:	03 e7       	ldi	r16, 0x73	; 115
    6952:	10 e0       	ldi	r17, 0x00	; 0
    6954:	26 ee       	ldi	r18, 0xE6	; 230
    6956:	3b e0       	ldi	r19, 0x0B	; 11
    6958:	0e 94 b2 29 	call	0x5364	; 0x5364 <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij>
    695c:	2c a5       	ldd	r18, Y+44	; 0x2c
    695e:	8a a5       	ldd	r24, Y+42	; 0x2a
    6960:	9b a5       	ldd	r25, Y+43	; 0x2b
    6962:	fc 01       	movw	r30, r24
    6964:	22 a3       	std	Z+34, r18	; 0x22
    6966:	8a a5       	ldd	r24, Y+42	; 0x2a
    6968:	9b a5       	ldd	r25, Y+43	; 0x2b
    696a:	fc 01       	movw	r30, r24
    696c:	85 8d       	ldd	r24, Z+29	; 0x1d
    696e:	96 8d       	ldd	r25, Z+30	; 0x1e
    6970:	89 2b       	or	r24, r25
    6972:	f9 f0       	breq	.+62     	; 0x69b2 <_ZN16Adafruit_SSD13065beginEhhbb+0x1ac>
    6974:	8d a5       	ldd	r24, Y+45	; 0x2d
    6976:	88 23       	and	r24, r24
    6978:	59 f4       	brne	.+22     	; 0x6990 <_ZN16Adafruit_SSD13065beginEhhbb+0x18a>
    697a:	8a a5       	ldd	r24, Y+42	; 0x2a
    697c:	9b a5       	ldd	r25, Y+43	; 0x2b
    697e:	fc 01       	movw	r30, r24
    6980:	86 81       	ldd	r24, Z+6	; 0x06
    6982:	97 81       	ldd	r25, Z+7	; 0x07
    6984:	80 97       	sbiw	r24, 0x20	; 32
    6986:	11 f4       	brne	.+4      	; 0x698c <_ZN16Adafruit_SSD13065beginEhhbb+0x186>
    6988:	2c e3       	ldi	r18, 0x3C	; 60
    698a:	03 c0       	rjmp	.+6      	; 0x6992 <_ZN16Adafruit_SSD13065beginEhhbb+0x18c>
    698c:	2d e3       	ldi	r18, 0x3D	; 61
    698e:	01 c0       	rjmp	.+2      	; 0x6992 <_ZN16Adafruit_SSD13065beginEhhbb+0x18c>
    6990:	2d a5       	ldd	r18, Y+45	; 0x2d
    6992:	8a a5       	ldd	r24, Y+42	; 0x2a
    6994:	9b a5       	ldd	r25, Y+43	; 0x2b
    6996:	fc 01       	movw	r30, r24
    6998:	21 a3       	std	Z+33, r18	; 0x21
    699a:	8f a5       	ldd	r24, Y+47	; 0x2f
    699c:	88 23       	and	r24, r24
    699e:	09 f4       	brne	.+2      	; 0x69a2 <_ZN16Adafruit_SSD13065beginEhhbb+0x19c>
    69a0:	5a c1       	rjmp	.+692    	; 0x6c56 <_ZN16Adafruit_SSD13065beginEhhbb+0x450>
    69a2:	8a a5       	ldd	r24, Y+42	; 0x2a
    69a4:	9b a5       	ldd	r25, Y+43	; 0x2b
    69a6:	fc 01       	movw	r30, r24
    69a8:	85 8d       	ldd	r24, Z+29	; 0x1d
    69aa:	96 8d       	ldd	r25, Z+30	; 0x1e
    69ac:	0e 94 7f 20 	call	0x40fe	; 0x40fe <_ZN7TwoWire5beginEv>
    69b0:	52 c1       	rjmp	.+676    	; 0x6c56 <_ZN16Adafruit_SSD13065beginEhhbb+0x450>
    69b2:	8a a5       	ldd	r24, Y+42	; 0x2a
    69b4:	9b a5       	ldd	r25, Y+43	; 0x2b
    69b6:	fc 01       	movw	r30, r24
    69b8:	86 a1       	ldd	r24, Z+38	; 0x26
    69ba:	61 e0       	ldi	r22, 0x01	; 1
    69bc:	0e 94 ae 4b 	call	0x975c	; 0x975c <pinMode>
    69c0:	8a a5       	ldd	r24, Y+42	; 0x2a
    69c2:	9b a5       	ldd	r25, Y+43	; 0x2b
    69c4:	fc 01       	movw	r30, r24
    69c6:	87 a1       	ldd	r24, Z+39	; 0x27
    69c8:	61 e0       	ldi	r22, 0x01	; 1
    69ca:	0e 94 ae 4b 	call	0x975c	; 0x975c <pinMode>
    69ce:	8a a5       	ldd	r24, Y+42	; 0x2a
    69d0:	9b a5       	ldd	r25, Y+43	; 0x2b
    69d2:	fc 01       	movw	r30, r24
    69d4:	86 a1       	ldd	r24, Z+38	; 0x26
    69d6:	08 2e       	mov	r0, r24
    69d8:	00 0c       	add	r0, r0
    69da:	99 0b       	sbc	r25, r25
    69dc:	87 58       	subi	r24, 0x87	; 135
    69de:	91 4f       	sbci	r25, 0xF1	; 241
    69e0:	9b 83       	std	Y+3, r25	; 0x03
    69e2:	8a 83       	std	Y+2, r24	; 0x02
    69e4:	8a 81       	ldd	r24, Y+2	; 0x02
    69e6:	9b 81       	ldd	r25, Y+3	; 0x03
    69e8:	fc 01       	movw	r30, r24
    69ea:	84 91       	lpm	r24, Z
    69ec:	8c 83       	std	Y+4, r24	; 0x04
    69ee:	8c 81       	ldd	r24, Y+4	; 0x04
    69f0:	88 2f       	mov	r24, r24
    69f2:	90 e0       	ldi	r25, 0x00	; 0
    69f4:	88 0f       	add	r24, r24
    69f6:	99 1f       	adc	r25, r25
    69f8:	87 52       	subi	r24, 0x27	; 39
    69fa:	91 4f       	sbci	r25, 0xF1	; 241
    69fc:	9e 83       	std	Y+6, r25	; 0x06
    69fe:	8d 83       	std	Y+5, r24	; 0x05
    6a00:	8d 81       	ldd	r24, Y+5	; 0x05
    6a02:	9e 81       	ldd	r25, Y+6	; 0x06
    6a04:	fc 01       	movw	r30, r24
    6a06:	25 91       	lpm	r18, Z+
    6a08:	34 91       	lpm	r19, Z
    6a0a:	cf 01       	movw	r24, r30
    6a0c:	38 87       	std	Y+8, r19	; 0x08
    6a0e:	2f 83       	std	Y+7, r18	; 0x07
    6a10:	9e 83       	std	Y+6, r25	; 0x06
    6a12:	8d 83       	std	Y+5, r24	; 0x05
    6a14:	8f 81       	ldd	r24, Y+7	; 0x07
    6a16:	98 85       	ldd	r25, Y+8	; 0x08
    6a18:	9c 01       	movw	r18, r24
    6a1a:	8a a5       	ldd	r24, Y+42	; 0x2a
    6a1c:	9b a5       	ldd	r25, Y+43	; 0x2b
    6a1e:	fc 01       	movw	r30, r24
    6a20:	36 a7       	std	Z+46, r19	; 0x2e
    6a22:	25 a7       	std	Z+45, r18	; 0x2d
    6a24:	8a a5       	ldd	r24, Y+42	; 0x2a
    6a26:	9b a5       	ldd	r25, Y+43	; 0x2b
    6a28:	fc 01       	movw	r30, r24
    6a2a:	86 a1       	ldd	r24, Z+38	; 0x26
    6a2c:	08 2e       	mov	r0, r24
    6a2e:	00 0c       	add	r0, r0
    6a30:	99 0b       	sbc	r25, r25
    6a32:	8d 5c       	subi	r24, 0xCD	; 205
    6a34:	91 4f       	sbci	r25, 0xF1	; 241
    6a36:	9a 87       	std	Y+10, r25	; 0x0a
    6a38:	89 87       	std	Y+9, r24	; 0x09
    6a3a:	89 85       	ldd	r24, Y+9	; 0x09
    6a3c:	9a 85       	ldd	r25, Y+10	; 0x0a
    6a3e:	fc 01       	movw	r30, r24
    6a40:	84 91       	lpm	r24, Z
    6a42:	8b 87       	std	Y+11, r24	; 0x0b
    6a44:	8a a5       	ldd	r24, Y+42	; 0x2a
    6a46:	9b a5       	ldd	r25, Y+43	; 0x2b
    6a48:	2b 85       	ldd	r18, Y+11	; 0x0b
    6a4a:	fc 01       	movw	r30, r24
    6a4c:	23 ab       	std	Z+51, r18	; 0x33
    6a4e:	8a a5       	ldd	r24, Y+42	; 0x2a
    6a50:	9b a5       	ldd	r25, Y+43	; 0x2b
    6a52:	fc 01       	movw	r30, r24
    6a54:	87 a1       	ldd	r24, Z+39	; 0x27
    6a56:	08 2e       	mov	r0, r24
    6a58:	00 0c       	add	r0, r0
    6a5a:	99 0b       	sbc	r25, r25
    6a5c:	87 58       	subi	r24, 0x87	; 135
    6a5e:	91 4f       	sbci	r25, 0xF1	; 241
    6a60:	9d 87       	std	Y+13, r25	; 0x0d
    6a62:	8c 87       	std	Y+12, r24	; 0x0c
    6a64:	8c 85       	ldd	r24, Y+12	; 0x0c
    6a66:	9d 85       	ldd	r25, Y+13	; 0x0d
    6a68:	fc 01       	movw	r30, r24
    6a6a:	84 91       	lpm	r24, Z
    6a6c:	8e 87       	std	Y+14, r24	; 0x0e
    6a6e:	8e 85       	ldd	r24, Y+14	; 0x0e
    6a70:	88 2f       	mov	r24, r24
    6a72:	90 e0       	ldi	r25, 0x00	; 0
    6a74:	88 0f       	add	r24, r24
    6a76:	99 1f       	adc	r25, r25
    6a78:	87 52       	subi	r24, 0x27	; 39
    6a7a:	91 4f       	sbci	r25, 0xF1	; 241
    6a7c:	98 8b       	std	Y+16, r25	; 0x10
    6a7e:	8f 87       	std	Y+15, r24	; 0x0f
    6a80:	8f 85       	ldd	r24, Y+15	; 0x0f
    6a82:	98 89       	ldd	r25, Y+16	; 0x10
    6a84:	fc 01       	movw	r30, r24
    6a86:	25 91       	lpm	r18, Z+
    6a88:	34 91       	lpm	r19, Z
    6a8a:	cf 01       	movw	r24, r30
    6a8c:	3a 8b       	std	Y+18, r19	; 0x12
    6a8e:	29 8b       	std	Y+17, r18	; 0x11
    6a90:	98 8b       	std	Y+16, r25	; 0x10
    6a92:	8f 87       	std	Y+15, r24	; 0x0f
    6a94:	89 89       	ldd	r24, Y+17	; 0x11
    6a96:	9a 89       	ldd	r25, Y+18	; 0x12
    6a98:	9c 01       	movw	r18, r24
    6a9a:	8a a5       	ldd	r24, Y+42	; 0x2a
    6a9c:	9b a5       	ldd	r25, Y+43	; 0x2b
    6a9e:	fc 01       	movw	r30, r24
    6aa0:	30 ab       	std	Z+48, r19	; 0x30
    6aa2:	27 a7       	std	Z+47, r18	; 0x2f
    6aa4:	8a a5       	ldd	r24, Y+42	; 0x2a
    6aa6:	9b a5       	ldd	r25, Y+43	; 0x2b
    6aa8:	fc 01       	movw	r30, r24
    6aaa:	87 a1       	ldd	r24, Z+39	; 0x27
    6aac:	08 2e       	mov	r0, r24
    6aae:	00 0c       	add	r0, r0
    6ab0:	99 0b       	sbc	r25, r25
    6ab2:	8d 5c       	subi	r24, 0xCD	; 205
    6ab4:	91 4f       	sbci	r25, 0xF1	; 241
    6ab6:	9c 8b       	std	Y+20, r25	; 0x14
    6ab8:	8b 8b       	std	Y+19, r24	; 0x13
    6aba:	8b 89       	ldd	r24, Y+19	; 0x13
    6abc:	9c 89       	ldd	r25, Y+20	; 0x14
    6abe:	fc 01       	movw	r30, r24
    6ac0:	84 91       	lpm	r24, Z
    6ac2:	8d 8b       	std	Y+21, r24	; 0x15
    6ac4:	8a a5       	ldd	r24, Y+42	; 0x2a
    6ac6:	9b a5       	ldd	r25, Y+43	; 0x2b
    6ac8:	2d 89       	ldd	r18, Y+21	; 0x15
    6aca:	fc 01       	movw	r30, r24
    6acc:	24 ab       	std	Z+52, r18	; 0x34
    6ace:	8a a5       	ldd	r24, Y+42	; 0x2a
    6ad0:	9b a5       	ldd	r25, Y+43	; 0x2b
    6ad2:	fc 01       	movw	r30, r24
    6ad4:	87 a5       	ldd	r24, Z+47	; 0x2f
    6ad6:	90 a9       	ldd	r25, Z+48	; 0x30
    6ad8:	2a a5       	ldd	r18, Y+42	; 0x2a
    6ada:	3b a5       	ldd	r19, Y+43	; 0x2b
    6adc:	f9 01       	movw	r30, r18
    6ade:	27 a5       	ldd	r18, Z+47	; 0x2f
    6ae0:	30 a9       	ldd	r19, Z+48	; 0x30
    6ae2:	f9 01       	movw	r30, r18
    6ae4:	40 81       	ld	r20, Z
    6ae6:	2a a5       	ldd	r18, Y+42	; 0x2a
    6ae8:	3b a5       	ldd	r19, Y+43	; 0x2b
    6aea:	f9 01       	movw	r30, r18
    6aec:	24 a9       	ldd	r18, Z+52	; 0x34
    6aee:	24 2b       	or	r18, r20
    6af0:	fc 01       	movw	r30, r24
    6af2:	20 83       	st	Z, r18
    6af4:	8a a5       	ldd	r24, Y+42	; 0x2a
    6af6:	9b a5       	ldd	r25, Y+43	; 0x2b
    6af8:	fc 01       	movw	r30, r24
    6afa:	83 8d       	ldd	r24, Z+27	; 0x1b
    6afc:	94 8d       	ldd	r25, Z+28	; 0x1c
    6afe:	89 2b       	or	r24, r25
    6b00:	39 f0       	breq	.+14     	; 0x6b10 <_ZN16Adafruit_SSD13065beginEhhbb+0x30a>
    6b02:	8f a5       	ldd	r24, Y+47	; 0x2f
    6b04:	88 23       	and	r24, r24
    6b06:	09 f4       	brne	.+2      	; 0x6b0a <_ZN16Adafruit_SSD13065beginEhhbb+0x304>
    6b08:	a6 c0       	rjmp	.+332    	; 0x6c56 <_ZN16Adafruit_SSD13065beginEhhbb+0x450>
    6b0a:	0e 94 2f 40 	call	0x805e	; 0x805e <_ZN8SPIClass5beginEv>
    6b0e:	a3 c0       	rjmp	.+326    	; 0x6c56 <_ZN16Adafruit_SSD13065beginEhhbb+0x450>
    6b10:	8a a5       	ldd	r24, Y+42	; 0x2a
    6b12:	9b a5       	ldd	r25, Y+43	; 0x2b
    6b14:	fc 01       	movw	r30, r24
    6b16:	84 a1       	ldd	r24, Z+36	; 0x24
    6b18:	61 e0       	ldi	r22, 0x01	; 1
    6b1a:	0e 94 ae 4b 	call	0x975c	; 0x975c <pinMode>
    6b1e:	8a a5       	ldd	r24, Y+42	; 0x2a
    6b20:	9b a5       	ldd	r25, Y+43	; 0x2b
    6b22:	fc 01       	movw	r30, r24
    6b24:	85 a1       	ldd	r24, Z+37	; 0x25
    6b26:	61 e0       	ldi	r22, 0x01	; 1
    6b28:	0e 94 ae 4b 	call	0x975c	; 0x975c <pinMode>
    6b2c:	8a a5       	ldd	r24, Y+42	; 0x2a
    6b2e:	9b a5       	ldd	r25, Y+43	; 0x2b
    6b30:	fc 01       	movw	r30, r24
    6b32:	84 a1       	ldd	r24, Z+36	; 0x24
    6b34:	08 2e       	mov	r0, r24
    6b36:	00 0c       	add	r0, r0
    6b38:	99 0b       	sbc	r25, r25
    6b3a:	87 58       	subi	r24, 0x87	; 135
    6b3c:	91 4f       	sbci	r25, 0xF1	; 241
    6b3e:	9f 8b       	std	Y+23, r25	; 0x17
    6b40:	8e 8b       	std	Y+22, r24	; 0x16
    6b42:	8e 89       	ldd	r24, Y+22	; 0x16
    6b44:	9f 89       	ldd	r25, Y+23	; 0x17
    6b46:	fc 01       	movw	r30, r24
    6b48:	84 91       	lpm	r24, Z
    6b4a:	88 8f       	std	Y+24, r24	; 0x18
    6b4c:	88 8d       	ldd	r24, Y+24	; 0x18
    6b4e:	88 2f       	mov	r24, r24
    6b50:	90 e0       	ldi	r25, 0x00	; 0
    6b52:	88 0f       	add	r24, r24
    6b54:	99 1f       	adc	r25, r25
    6b56:	87 52       	subi	r24, 0x27	; 39
    6b58:	91 4f       	sbci	r25, 0xF1	; 241
    6b5a:	9a 8f       	std	Y+26, r25	; 0x1a
    6b5c:	89 8f       	std	Y+25, r24	; 0x19
    6b5e:	89 8d       	ldd	r24, Y+25	; 0x19
    6b60:	9a 8d       	ldd	r25, Y+26	; 0x1a
    6b62:	fc 01       	movw	r30, r24
    6b64:	25 91       	lpm	r18, Z+
    6b66:	34 91       	lpm	r19, Z
    6b68:	cf 01       	movw	r24, r30
    6b6a:	3c 8f       	std	Y+28, r19	; 0x1c
    6b6c:	2b 8f       	std	Y+27, r18	; 0x1b
    6b6e:	9a 8f       	std	Y+26, r25	; 0x1a
    6b70:	89 8f       	std	Y+25, r24	; 0x19
    6b72:	8b 8d       	ldd	r24, Y+27	; 0x1b
    6b74:	9c 8d       	ldd	r25, Y+28	; 0x1c
    6b76:	9c 01       	movw	r18, r24
    6b78:	8a a5       	ldd	r24, Y+42	; 0x2a
    6b7a:	9b a5       	ldd	r25, Y+43	; 0x2b
    6b7c:	fc 01       	movw	r30, r24
    6b7e:	32 a7       	std	Z+42, r19	; 0x2a
    6b80:	21 a7       	std	Z+41, r18	; 0x29
    6b82:	8a a5       	ldd	r24, Y+42	; 0x2a
    6b84:	9b a5       	ldd	r25, Y+43	; 0x2b
    6b86:	fc 01       	movw	r30, r24
    6b88:	84 a1       	ldd	r24, Z+36	; 0x24
    6b8a:	08 2e       	mov	r0, r24
    6b8c:	00 0c       	add	r0, r0
    6b8e:	99 0b       	sbc	r25, r25
    6b90:	8d 5c       	subi	r24, 0xCD	; 205
    6b92:	91 4f       	sbci	r25, 0xF1	; 241
    6b94:	9e 8f       	std	Y+30, r25	; 0x1e
    6b96:	8d 8f       	std	Y+29, r24	; 0x1d
    6b98:	8d 8d       	ldd	r24, Y+29	; 0x1d
    6b9a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    6b9c:	fc 01       	movw	r30, r24
    6b9e:	84 91       	lpm	r24, Z
    6ba0:	8f 8f       	std	Y+31, r24	; 0x1f
    6ba2:	8a a5       	ldd	r24, Y+42	; 0x2a
    6ba4:	9b a5       	ldd	r25, Y+43	; 0x2b
    6ba6:	2f 8d       	ldd	r18, Y+31	; 0x1f
    6ba8:	fc 01       	movw	r30, r24
    6baa:	21 ab       	std	Z+49, r18	; 0x31
    6bac:	8a a5       	ldd	r24, Y+42	; 0x2a
    6bae:	9b a5       	ldd	r25, Y+43	; 0x2b
    6bb0:	fc 01       	movw	r30, r24
    6bb2:	85 a1       	ldd	r24, Z+37	; 0x25
    6bb4:	08 2e       	mov	r0, r24
    6bb6:	00 0c       	add	r0, r0
    6bb8:	99 0b       	sbc	r25, r25
    6bba:	87 58       	subi	r24, 0x87	; 135
    6bbc:	91 4f       	sbci	r25, 0xF1	; 241
    6bbe:	99 a3       	std	Y+33, r25	; 0x21
    6bc0:	88 a3       	std	Y+32, r24	; 0x20
    6bc2:	88 a1       	ldd	r24, Y+32	; 0x20
    6bc4:	99 a1       	ldd	r25, Y+33	; 0x21
    6bc6:	fc 01       	movw	r30, r24
    6bc8:	84 91       	lpm	r24, Z
    6bca:	8a a3       	std	Y+34, r24	; 0x22
    6bcc:	8a a1       	ldd	r24, Y+34	; 0x22
    6bce:	88 2f       	mov	r24, r24
    6bd0:	90 e0       	ldi	r25, 0x00	; 0
    6bd2:	88 0f       	add	r24, r24
    6bd4:	99 1f       	adc	r25, r25
    6bd6:	87 52       	subi	r24, 0x27	; 39
    6bd8:	91 4f       	sbci	r25, 0xF1	; 241
    6bda:	9c a3       	std	Y+36, r25	; 0x24
    6bdc:	8b a3       	std	Y+35, r24	; 0x23
    6bde:	8b a1       	ldd	r24, Y+35	; 0x23
    6be0:	9c a1       	ldd	r25, Y+36	; 0x24
    6be2:	fc 01       	movw	r30, r24
    6be4:	25 91       	lpm	r18, Z+
    6be6:	34 91       	lpm	r19, Z
    6be8:	cf 01       	movw	r24, r30
    6bea:	3e a3       	std	Y+38, r19	; 0x26
    6bec:	2d a3       	std	Y+37, r18	; 0x25
    6bee:	9c a3       	std	Y+36, r25	; 0x24
    6bf0:	8b a3       	std	Y+35, r24	; 0x23
    6bf2:	8d a1       	ldd	r24, Y+37	; 0x25
    6bf4:	9e a1       	ldd	r25, Y+38	; 0x26
    6bf6:	9c 01       	movw	r18, r24
    6bf8:	8a a5       	ldd	r24, Y+42	; 0x2a
    6bfa:	9b a5       	ldd	r25, Y+43	; 0x2b
    6bfc:	fc 01       	movw	r30, r24
    6bfe:	34 a7       	std	Z+44, r19	; 0x2c
    6c00:	23 a7       	std	Z+43, r18	; 0x2b
    6c02:	8a a5       	ldd	r24, Y+42	; 0x2a
    6c04:	9b a5       	ldd	r25, Y+43	; 0x2b
    6c06:	fc 01       	movw	r30, r24
    6c08:	85 a1       	ldd	r24, Z+37	; 0x25
    6c0a:	08 2e       	mov	r0, r24
    6c0c:	00 0c       	add	r0, r0
    6c0e:	99 0b       	sbc	r25, r25
    6c10:	8d 5c       	subi	r24, 0xCD	; 205
    6c12:	91 4f       	sbci	r25, 0xF1	; 241
    6c14:	98 a7       	std	Y+40, r25	; 0x28
    6c16:	8f a3       	std	Y+39, r24	; 0x27
    6c18:	8f a1       	ldd	r24, Y+39	; 0x27
    6c1a:	98 a5       	ldd	r25, Y+40	; 0x28
    6c1c:	fc 01       	movw	r30, r24
    6c1e:	84 91       	lpm	r24, Z
    6c20:	89 a7       	std	Y+41, r24	; 0x29
    6c22:	8a a5       	ldd	r24, Y+42	; 0x2a
    6c24:	9b a5       	ldd	r25, Y+43	; 0x2b
    6c26:	29 a5       	ldd	r18, Y+41	; 0x29
    6c28:	fc 01       	movw	r30, r24
    6c2a:	22 ab       	std	Z+50, r18	; 0x32
    6c2c:	8a a5       	ldd	r24, Y+42	; 0x2a
    6c2e:	9b a5       	ldd	r25, Y+43	; 0x2b
    6c30:	fc 01       	movw	r30, r24
    6c32:	83 a5       	ldd	r24, Z+43	; 0x2b
    6c34:	94 a5       	ldd	r25, Z+44	; 0x2c
    6c36:	2a a5       	ldd	r18, Y+42	; 0x2a
    6c38:	3b a5       	ldd	r19, Y+43	; 0x2b
    6c3a:	f9 01       	movw	r30, r18
    6c3c:	23 a5       	ldd	r18, Z+43	; 0x2b
    6c3e:	34 a5       	ldd	r19, Z+44	; 0x2c
    6c40:	f9 01       	movw	r30, r18
    6c42:	20 81       	ld	r18, Z
    6c44:	42 2f       	mov	r20, r18
    6c46:	2a a5       	ldd	r18, Y+42	; 0x2a
    6c48:	3b a5       	ldd	r19, Y+43	; 0x2b
    6c4a:	f9 01       	movw	r30, r18
    6c4c:	22 a9       	ldd	r18, Z+50	; 0x32
    6c4e:	20 95       	com	r18
    6c50:	24 23       	and	r18, r20
    6c52:	fc 01       	movw	r30, r24
    6c54:	20 83       	st	Z, r18
    6c56:	8e a5       	ldd	r24, Y+46	; 0x2e
    6c58:	88 23       	and	r24, r24
    6c5a:	71 f1       	breq	.+92     	; 0x6cb8 <_ZN16Adafruit_SSD13065beginEhhbb+0x4b2>
    6c5c:	8a a5       	ldd	r24, Y+42	; 0x2a
    6c5e:	9b a5       	ldd	r25, Y+43	; 0x2b
    6c60:	fc 01       	movw	r30, r24
    6c62:	80 a5       	ldd	r24, Z+40	; 0x28
    6c64:	88 23       	and	r24, r24
    6c66:	44 f1       	brlt	.+80     	; 0x6cb8 <_ZN16Adafruit_SSD13065beginEhhbb+0x4b2>
    6c68:	8a a5       	ldd	r24, Y+42	; 0x2a
    6c6a:	9b a5       	ldd	r25, Y+43	; 0x2b
    6c6c:	fc 01       	movw	r30, r24
    6c6e:	80 a5       	ldd	r24, Z+40	; 0x28
    6c70:	61 e0       	ldi	r22, 0x01	; 1
    6c72:	0e 94 ae 4b 	call	0x975c	; 0x975c <pinMode>
    6c76:	8a a5       	ldd	r24, Y+42	; 0x2a
    6c78:	9b a5       	ldd	r25, Y+43	; 0x2b
    6c7a:	fc 01       	movw	r30, r24
    6c7c:	80 a5       	ldd	r24, Z+40	; 0x28
    6c7e:	61 e0       	ldi	r22, 0x01	; 1
    6c80:	0e 94 ea 4b 	call	0x97d4	; 0x97d4 <digitalWrite>
    6c84:	61 e0       	ldi	r22, 0x01	; 1
    6c86:	70 e0       	ldi	r23, 0x00	; 0
    6c88:	80 e0       	ldi	r24, 0x00	; 0
    6c8a:	90 e0       	ldi	r25, 0x00	; 0
    6c8c:	0e 94 b3 4a 	call	0x9566	; 0x9566 <delay>
    6c90:	8a a5       	ldd	r24, Y+42	; 0x2a
    6c92:	9b a5       	ldd	r25, Y+43	; 0x2b
    6c94:	fc 01       	movw	r30, r24
    6c96:	80 a5       	ldd	r24, Z+40	; 0x28
    6c98:	60 e0       	ldi	r22, 0x00	; 0
    6c9a:	0e 94 ea 4b 	call	0x97d4	; 0x97d4 <digitalWrite>
    6c9e:	6a e0       	ldi	r22, 0x0A	; 10
    6ca0:	70 e0       	ldi	r23, 0x00	; 0
    6ca2:	80 e0       	ldi	r24, 0x00	; 0
    6ca4:	90 e0       	ldi	r25, 0x00	; 0
    6ca6:	0e 94 b3 4a 	call	0x9566	; 0x9566 <delay>
    6caa:	8a a5       	ldd	r24, Y+42	; 0x2a
    6cac:	9b a5       	ldd	r25, Y+43	; 0x2b
    6cae:	fc 01       	movw	r30, r24
    6cb0:	80 a5       	ldd	r24, Z+40	; 0x28
    6cb2:	61 e0       	ldi	r22, 0x01	; 1
    6cb4:	0e 94 ea 4b 	call	0x97d4	; 0x97d4 <digitalWrite>
    6cb8:	8a a5       	ldd	r24, Y+42	; 0x2a
    6cba:	9b a5       	ldd	r25, Y+43	; 0x2b
    6cbc:	fc 01       	movw	r30, r24
    6cbe:	85 8d       	ldd	r24, Z+29	; 0x1d
    6cc0:	96 8d       	ldd	r25, Z+30	; 0x1e
    6cc2:	89 2b       	or	r24, r25
    6cc4:	91 f0       	breq	.+36     	; 0x6cea <_ZN16Adafruit_SSD13065beginEhhbb+0x4e4>
    6cc6:	8a a5       	ldd	r24, Y+42	; 0x2a
    6cc8:	9b a5       	ldd	r25, Y+43	; 0x2b
    6cca:	fc 01       	movw	r30, r24
    6ccc:	85 a9       	ldd	r24, Z+53	; 0x35
    6cce:	96 a9       	ldd	r25, Z+54	; 0x36
    6cd0:	a7 a9       	ldd	r26, Z+55	; 0x37
    6cd2:	b0 ad       	ldd	r27, Z+56	; 0x38
    6cd4:	2a a5       	ldd	r18, Y+42	; 0x2a
    6cd6:	3b a5       	ldd	r19, Y+43	; 0x2b
    6cd8:	f9 01       	movw	r30, r18
    6cda:	25 8d       	ldd	r18, Z+29	; 0x1d
    6cdc:	36 8d       	ldd	r19, Z+30	; 0x1e
    6cde:	ac 01       	movw	r20, r24
    6ce0:	bd 01       	movw	r22, r26
    6ce2:	c9 01       	movw	r24, r18
    6ce4:	0e 94 9c 20 	call	0x4138	; 0x4138 <_ZN7TwoWire8setClockEm>
    6ce8:	23 c0       	rjmp	.+70     	; 0x6d30 <_ZN16Adafruit_SSD13065beginEhhbb+0x52a>
    6cea:	8a a5       	ldd	r24, Y+42	; 0x2a
    6cec:	9b a5       	ldd	r25, Y+43	; 0x2b
    6cee:	fc 01       	movw	r30, r24
    6cf0:	83 8d       	ldd	r24, Z+27	; 0x1b
    6cf2:	94 8d       	ldd	r25, Z+28	; 0x1c
    6cf4:	89 2b       	or	r24, r25
    6cf6:	39 f0       	breq	.+14     	; 0x6d06 <_ZN16Adafruit_SSD13065beginEhhbb+0x500>
    6cf8:	8a a5       	ldd	r24, Y+42	; 0x2a
    6cfa:	9b a5       	ldd	r25, Y+43	; 0x2b
    6cfc:	fc 01       	movw	r30, r24
    6cfe:	86 ad       	ldd	r24, Z+62	; 0x3e
    6d00:	97 ad       	ldd	r25, Z+63	; 0x3f
    6d02:	0e 94 5d 23 	call	0x46ba	; 0x46ba <_ZN8SPIClass16beginTransactionE11SPISettings>
    6d06:	8a a5       	ldd	r24, Y+42	; 0x2a
    6d08:	9b a5       	ldd	r25, Y+43	; 0x2b
    6d0a:	fc 01       	movw	r30, r24
    6d0c:	87 a5       	ldd	r24, Z+47	; 0x2f
    6d0e:	90 a9       	ldd	r25, Z+48	; 0x30
    6d10:	2a a5       	ldd	r18, Y+42	; 0x2a
    6d12:	3b a5       	ldd	r19, Y+43	; 0x2b
    6d14:	f9 01       	movw	r30, r18
    6d16:	27 a5       	ldd	r18, Z+47	; 0x2f
    6d18:	30 a9       	ldd	r19, Z+48	; 0x30
    6d1a:	f9 01       	movw	r30, r18
    6d1c:	20 81       	ld	r18, Z
    6d1e:	42 2f       	mov	r20, r18
    6d20:	2a a5       	ldd	r18, Y+42	; 0x2a
    6d22:	3b a5       	ldd	r19, Y+43	; 0x2b
    6d24:	f9 01       	movw	r30, r18
    6d26:	24 a9       	ldd	r18, Z+52	; 0x34
    6d28:	20 95       	com	r18
    6d2a:	24 23       	and	r18, r20
    6d2c:	fc 01       	movw	r30, r24
    6d2e:	20 83       	st	Z, r18
    6d30:	24 e0       	ldi	r18, 0x04	; 4
    6d32:	8a a5       	ldd	r24, Y+42	; 0x2a
    6d34:	9b a5       	ldd	r25, Y+43	; 0x2b
    6d36:	42 2f       	mov	r20, r18
    6d38:	66 ec       	ldi	r22, 0xC6	; 198
    6d3a:	7d e0       	ldi	r23, 0x0D	; 13
    6d3c:	11 dc       	rcall	.-2014   	; 0x6560 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh>
    6d3e:	8a a5       	ldd	r24, Y+42	; 0x2a
    6d40:	9b a5       	ldd	r25, Y+43	; 0x2b
    6d42:	fc 01       	movw	r30, r24
    6d44:	86 81       	ldd	r24, Z+6	; 0x06
    6d46:	97 81       	ldd	r25, Z+7	; 0x07
    6d48:	2f ef       	ldi	r18, 0xFF	; 255
    6d4a:	28 0f       	add	r18, r24
    6d4c:	8a a5       	ldd	r24, Y+42	; 0x2a
    6d4e:	9b a5       	ldd	r25, Y+43	; 0x2b
    6d50:	62 2f       	mov	r22, r18
    6d52:	23 db       	rcall	.-2490   	; 0x639a <_ZN16Adafruit_SSD130616ssd1306_command1Eh>
    6d54:	24 e0       	ldi	r18, 0x04	; 4
    6d56:	8a a5       	ldd	r24, Y+42	; 0x2a
    6d58:	9b a5       	ldd	r25, Y+43	; 0x2b
    6d5a:	42 2f       	mov	r20, r18
    6d5c:	6a ec       	ldi	r22, 0xCA	; 202
    6d5e:	7d e0       	ldi	r23, 0x0D	; 13
    6d60:	ff db       	rcall	.-2050   	; 0x6560 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh>
    6d62:	8a a5       	ldd	r24, Y+42	; 0x2a
    6d64:	9b a5       	ldd	r25, Y+43	; 0x2b
    6d66:	fc 01       	movw	r30, r24
    6d68:	82 a1       	ldd	r24, Z+34	; 0x22
    6d6a:	81 30       	cpi	r24, 0x01	; 1
    6d6c:	11 f4       	brne	.+4      	; 0x6d72 <_ZN16Adafruit_SSD13065beginEhhbb+0x56c>
    6d6e:	20 e1       	ldi	r18, 0x10	; 16
    6d70:	01 c0       	rjmp	.+2      	; 0x6d74 <_ZN16Adafruit_SSD13065beginEhhbb+0x56e>
    6d72:	24 e1       	ldi	r18, 0x14	; 20
    6d74:	8a a5       	ldd	r24, Y+42	; 0x2a
    6d76:	9b a5       	ldd	r25, Y+43	; 0x2b
    6d78:	62 2f       	mov	r22, r18
    6d7a:	0f db       	rcall	.-2530   	; 0x639a <_ZN16Adafruit_SSD130616ssd1306_command1Eh>
    6d7c:	24 e0       	ldi	r18, 0x04	; 4
    6d7e:	8a a5       	ldd	r24, Y+42	; 0x2a
    6d80:	9b a5       	ldd	r25, Y+43	; 0x2b
    6d82:	42 2f       	mov	r20, r18
    6d84:	6e ec       	ldi	r22, 0xCE	; 206
    6d86:	7d e0       	ldi	r23, 0x0D	; 13
    6d88:	eb db       	rcall	.-2090   	; 0x6560 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh>
    6d8a:	82 e0       	ldi	r24, 0x02	; 2
    6d8c:	89 83       	std	Y+1, r24	; 0x01
    6d8e:	8a a5       	ldd	r24, Y+42	; 0x2a
    6d90:	9b a5       	ldd	r25, Y+43	; 0x2b
    6d92:	2f e8       	ldi	r18, 0x8F	; 143
    6d94:	fc 01       	movw	r30, r24
    6d96:	25 af       	std	Z+61, r18	; 0x3d
    6d98:	8a a5       	ldd	r24, Y+42	; 0x2a
    6d9a:	9b a5       	ldd	r25, Y+43	; 0x2b
    6d9c:	fc 01       	movw	r30, r24
    6d9e:	84 81       	ldd	r24, Z+4	; 0x04
    6da0:	95 81       	ldd	r25, Z+5	; 0x05
    6da2:	80 38       	cpi	r24, 0x80	; 128
    6da4:	91 05       	cpc	r25, r1
    6da6:	79 f4       	brne	.+30     	; 0x6dc6 <_ZN16Adafruit_SSD13065beginEhhbb+0x5c0>
    6da8:	8a a5       	ldd	r24, Y+42	; 0x2a
    6daa:	9b a5       	ldd	r25, Y+43	; 0x2b
    6dac:	fc 01       	movw	r30, r24
    6dae:	86 81       	ldd	r24, Z+6	; 0x06
    6db0:	97 81       	ldd	r25, Z+7	; 0x07
    6db2:	80 97       	sbiw	r24, 0x20	; 32
    6db4:	41 f4       	brne	.+16     	; 0x6dc6 <_ZN16Adafruit_SSD13065beginEhhbb+0x5c0>
    6db6:	82 e0       	ldi	r24, 0x02	; 2
    6db8:	89 83       	std	Y+1, r24	; 0x01
    6dba:	8a a5       	ldd	r24, Y+42	; 0x2a
    6dbc:	9b a5       	ldd	r25, Y+43	; 0x2b
    6dbe:	2f e8       	ldi	r18, 0x8F	; 143
    6dc0:	fc 01       	movw	r30, r24
    6dc2:	25 af       	std	Z+61, r18	; 0x3d
    6dc4:	3e c0       	rjmp	.+124    	; 0x6e42 <_ZN16Adafruit_SSD13065beginEhhbb+0x63c>
    6dc6:	8a a5       	ldd	r24, Y+42	; 0x2a
    6dc8:	9b a5       	ldd	r25, Y+43	; 0x2b
    6dca:	fc 01       	movw	r30, r24
    6dcc:	84 81       	ldd	r24, Z+4	; 0x04
    6dce:	95 81       	ldd	r25, Z+5	; 0x05
    6dd0:	80 38       	cpi	r24, 0x80	; 128
    6dd2:	91 05       	cpc	r25, r1
    6dd4:	c1 f4       	brne	.+48     	; 0x6e06 <_ZN16Adafruit_SSD13065beginEhhbb+0x600>
    6dd6:	8a a5       	ldd	r24, Y+42	; 0x2a
    6dd8:	9b a5       	ldd	r25, Y+43	; 0x2b
    6dda:	fc 01       	movw	r30, r24
    6ddc:	86 81       	ldd	r24, Z+6	; 0x06
    6dde:	97 81       	ldd	r25, Z+7	; 0x07
    6de0:	80 34       	cpi	r24, 0x40	; 64
    6de2:	91 05       	cpc	r25, r1
    6de4:	81 f4       	brne	.+32     	; 0x6e06 <_ZN16Adafruit_SSD13065beginEhhbb+0x600>
    6de6:	82 e1       	ldi	r24, 0x12	; 18
    6de8:	89 83       	std	Y+1, r24	; 0x01
    6dea:	8a a5       	ldd	r24, Y+42	; 0x2a
    6dec:	9b a5       	ldd	r25, Y+43	; 0x2b
    6dee:	fc 01       	movw	r30, r24
    6df0:	82 a1       	ldd	r24, Z+34	; 0x22
    6df2:	81 30       	cpi	r24, 0x01	; 1
    6df4:	11 f4       	brne	.+4      	; 0x6dfa <_ZN16Adafruit_SSD13065beginEhhbb+0x5f4>
    6df6:	2f e9       	ldi	r18, 0x9F	; 159
    6df8:	01 c0       	rjmp	.+2      	; 0x6dfc <_ZN16Adafruit_SSD13065beginEhhbb+0x5f6>
    6dfa:	2f ec       	ldi	r18, 0xCF	; 207
    6dfc:	8a a5       	ldd	r24, Y+42	; 0x2a
    6dfe:	9b a5       	ldd	r25, Y+43	; 0x2b
    6e00:	fc 01       	movw	r30, r24
    6e02:	25 af       	std	Z+61, r18	; 0x3d
    6e04:	1e c0       	rjmp	.+60     	; 0x6e42 <_ZN16Adafruit_SSD13065beginEhhbb+0x63c>
    6e06:	8a a5       	ldd	r24, Y+42	; 0x2a
    6e08:	9b a5       	ldd	r25, Y+43	; 0x2b
    6e0a:	fc 01       	movw	r30, r24
    6e0c:	84 81       	ldd	r24, Z+4	; 0x04
    6e0e:	95 81       	ldd	r25, Z+5	; 0x05
    6e10:	80 36       	cpi	r24, 0x60	; 96
    6e12:	91 05       	cpc	r25, r1
    6e14:	b1 f4       	brne	.+44     	; 0x6e42 <_ZN16Adafruit_SSD13065beginEhhbb+0x63c>
    6e16:	8a a5       	ldd	r24, Y+42	; 0x2a
    6e18:	9b a5       	ldd	r25, Y+43	; 0x2b
    6e1a:	fc 01       	movw	r30, r24
    6e1c:	86 81       	ldd	r24, Z+6	; 0x06
    6e1e:	97 81       	ldd	r25, Z+7	; 0x07
    6e20:	40 97       	sbiw	r24, 0x10	; 16
    6e22:	79 f4       	brne	.+30     	; 0x6e42 <_ZN16Adafruit_SSD13065beginEhhbb+0x63c>
    6e24:	82 e0       	ldi	r24, 0x02	; 2
    6e26:	89 83       	std	Y+1, r24	; 0x01
    6e28:	8a a5       	ldd	r24, Y+42	; 0x2a
    6e2a:	9b a5       	ldd	r25, Y+43	; 0x2b
    6e2c:	fc 01       	movw	r30, r24
    6e2e:	82 a1       	ldd	r24, Z+34	; 0x22
    6e30:	81 30       	cpi	r24, 0x01	; 1
    6e32:	11 f4       	brne	.+4      	; 0x6e38 <_ZN16Adafruit_SSD13065beginEhhbb+0x632>
    6e34:	20 e1       	ldi	r18, 0x10	; 16
    6e36:	01 c0       	rjmp	.+2      	; 0x6e3a <_ZN16Adafruit_SSD13065beginEhhbb+0x634>
    6e38:	2f ea       	ldi	r18, 0xAF	; 175
    6e3a:	8a a5       	ldd	r24, Y+42	; 0x2a
    6e3c:	9b a5       	ldd	r25, Y+43	; 0x2b
    6e3e:	fc 01       	movw	r30, r24
    6e40:	25 af       	std	Z+61, r18	; 0x3d
    6e42:	8a a5       	ldd	r24, Y+42	; 0x2a
    6e44:	9b a5       	ldd	r25, Y+43	; 0x2b
    6e46:	6a ed       	ldi	r22, 0xDA	; 218
    6e48:	a8 da       	rcall	.-2736   	; 0x639a <_ZN16Adafruit_SSD130616ssd1306_command1Eh>
    6e4a:	8a a5       	ldd	r24, Y+42	; 0x2a
    6e4c:	9b a5       	ldd	r25, Y+43	; 0x2b
    6e4e:	69 81       	ldd	r22, Y+1	; 0x01
    6e50:	a4 da       	rcall	.-2744   	; 0x639a <_ZN16Adafruit_SSD130616ssd1306_command1Eh>
    6e52:	8a a5       	ldd	r24, Y+42	; 0x2a
    6e54:	9b a5       	ldd	r25, Y+43	; 0x2b
    6e56:	61 e8       	ldi	r22, 0x81	; 129
    6e58:	a0 da       	rcall	.-2752   	; 0x639a <_ZN16Adafruit_SSD130616ssd1306_command1Eh>
    6e5a:	8a a5       	ldd	r24, Y+42	; 0x2a
    6e5c:	9b a5       	ldd	r25, Y+43	; 0x2b
    6e5e:	fc 01       	movw	r30, r24
    6e60:	25 ad       	ldd	r18, Z+61	; 0x3d
    6e62:	8a a5       	ldd	r24, Y+42	; 0x2a
    6e64:	9b a5       	ldd	r25, Y+43	; 0x2b
    6e66:	62 2f       	mov	r22, r18
    6e68:	98 da       	rcall	.-2768   	; 0x639a <_ZN16Adafruit_SSD130616ssd1306_command1Eh>
    6e6a:	8a a5       	ldd	r24, Y+42	; 0x2a
    6e6c:	9b a5       	ldd	r25, Y+43	; 0x2b
    6e6e:	69 ed       	ldi	r22, 0xD9	; 217
    6e70:	94 da       	rcall	.-2776   	; 0x639a <_ZN16Adafruit_SSD130616ssd1306_command1Eh>
    6e72:	8a a5       	ldd	r24, Y+42	; 0x2a
    6e74:	9b a5       	ldd	r25, Y+43	; 0x2b
    6e76:	fc 01       	movw	r30, r24
    6e78:	82 a1       	ldd	r24, Z+34	; 0x22
    6e7a:	81 30       	cpi	r24, 0x01	; 1
    6e7c:	11 f4       	brne	.+4      	; 0x6e82 <_ZN16Adafruit_SSD13065beginEhhbb+0x67c>
    6e7e:	22 e2       	ldi	r18, 0x22	; 34
    6e80:	01 c0       	rjmp	.+2      	; 0x6e84 <_ZN16Adafruit_SSD13065beginEhhbb+0x67e>
    6e82:	21 ef       	ldi	r18, 0xF1	; 241
    6e84:	8a a5       	ldd	r24, Y+42	; 0x2a
    6e86:	9b a5       	ldd	r25, Y+43	; 0x2b
    6e88:	62 2f       	mov	r22, r18
    6e8a:	87 da       	rcall	.-2802   	; 0x639a <_ZN16Adafruit_SSD130616ssd1306_command1Eh>
    6e8c:	26 e0       	ldi	r18, 0x06	; 6
    6e8e:	8a a5       	ldd	r24, Y+42	; 0x2a
    6e90:	9b a5       	ldd	r25, Y+43	; 0x2b
    6e92:	42 2f       	mov	r20, r18
    6e94:	62 ed       	ldi	r22, 0xD2	; 210
    6e96:	7d e0       	ldi	r23, 0x0D	; 13
    6e98:	63 db       	rcall	.-2362   	; 0x6560 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh>
    6e9a:	8a a5       	ldd	r24, Y+42	; 0x2a
    6e9c:	9b a5       	ldd	r25, Y+43	; 0x2b
    6e9e:	fc 01       	movw	r30, r24
    6ea0:	85 8d       	ldd	r24, Z+29	; 0x1d
    6ea2:	96 8d       	ldd	r25, Z+30	; 0x1e
    6ea4:	89 2b       	or	r24, r25
    6ea6:	91 f0       	breq	.+36     	; 0x6ecc <_ZN16Adafruit_SSD13065beginEhhbb+0x6c6>
    6ea8:	8a a5       	ldd	r24, Y+42	; 0x2a
    6eaa:	9b a5       	ldd	r25, Y+43	; 0x2b
    6eac:	fc 01       	movw	r30, r24
    6eae:	81 ad       	ldd	r24, Z+57	; 0x39
    6eb0:	92 ad       	ldd	r25, Z+58	; 0x3a
    6eb2:	a3 ad       	ldd	r26, Z+59	; 0x3b
    6eb4:	b4 ad       	ldd	r27, Z+60	; 0x3c
    6eb6:	2a a5       	ldd	r18, Y+42	; 0x2a
    6eb8:	3b a5       	ldd	r19, Y+43	; 0x2b
    6eba:	f9 01       	movw	r30, r18
    6ebc:	25 8d       	ldd	r18, Z+29	; 0x1d
    6ebe:	36 8d       	ldd	r19, Z+30	; 0x1e
    6ec0:	ac 01       	movw	r20, r24
    6ec2:	bd 01       	movw	r22, r26
    6ec4:	c9 01       	movw	r24, r18
    6ec6:	0e 94 9c 20 	call	0x4138	; 0x4138 <_ZN7TwoWire8setClockEm>
    6eca:	1c c0       	rjmp	.+56     	; 0x6f04 <_ZN16Adafruit_SSD13065beginEhhbb+0x6fe>
    6ecc:	8a a5       	ldd	r24, Y+42	; 0x2a
    6ece:	9b a5       	ldd	r25, Y+43	; 0x2b
    6ed0:	fc 01       	movw	r30, r24
    6ed2:	87 a5       	ldd	r24, Z+47	; 0x2f
    6ed4:	90 a9       	ldd	r25, Z+48	; 0x30
    6ed6:	2a a5       	ldd	r18, Y+42	; 0x2a
    6ed8:	3b a5       	ldd	r19, Y+43	; 0x2b
    6eda:	f9 01       	movw	r30, r18
    6edc:	27 a5       	ldd	r18, Z+47	; 0x2f
    6ede:	30 a9       	ldd	r19, Z+48	; 0x30
    6ee0:	f9 01       	movw	r30, r18
    6ee2:	40 81       	ld	r20, Z
    6ee4:	2a a5       	ldd	r18, Y+42	; 0x2a
    6ee6:	3b a5       	ldd	r19, Y+43	; 0x2b
    6ee8:	f9 01       	movw	r30, r18
    6eea:	24 a9       	ldd	r18, Z+52	; 0x34
    6eec:	24 2b       	or	r18, r20
    6eee:	fc 01       	movw	r30, r24
    6ef0:	20 83       	st	Z, r18
    6ef2:	8a a5       	ldd	r24, Y+42	; 0x2a
    6ef4:	9b a5       	ldd	r25, Y+43	; 0x2b
    6ef6:	fc 01       	movw	r30, r24
    6ef8:	83 8d       	ldd	r24, Z+27	; 0x1b
    6efa:	94 8d       	ldd	r25, Z+28	; 0x1c
    6efc:	89 2b       	or	r24, r25
    6efe:	11 f0       	breq	.+4      	; 0x6f04 <_ZN16Adafruit_SSD13065beginEhhbb+0x6fe>
    6f00:	0e 94 9f 23 	call	0x473e	; 0x473e <_ZN8SPIClass14endTransactionEv>
    6f04:	81 e0       	ldi	r24, 0x01	; 1
    6f06:	af 96       	adiw	r28, 0x2f	; 47
    6f08:	0f b6       	in	r0, 0x3f	; 63
    6f0a:	f8 94       	cli
    6f0c:	de bf       	out	0x3e, r29	; 62
    6f0e:	0f be       	out	0x3f, r0	; 63
    6f10:	cd bf       	out	0x3d, r28	; 61
    6f12:	df 91       	pop	r29
    6f14:	cf 91       	pop	r28
    6f16:	1f 91       	pop	r17
    6f18:	0f 91       	pop	r16
    6f1a:	ff 90       	pop	r15
    6f1c:	ef 90       	pop	r14
    6f1e:	df 90       	pop	r13
    6f20:	cf 90       	pop	r12
    6f22:	08 95       	ret

00006f24 <_ZN16Adafruit_SSD13069drawPixelEiij>:
    6f24:	cf 93       	push	r28
    6f26:	df 93       	push	r29
    6f28:	cd b7       	in	r28, 0x3d	; 61
    6f2a:	de b7       	in	r29, 0x3e	; 62
    6f2c:	28 97       	sbiw	r28, 0x08	; 8
    6f2e:	0f b6       	in	r0, 0x3f	; 63
    6f30:	f8 94       	cli
    6f32:	de bf       	out	0x3e, r29	; 62
    6f34:	0f be       	out	0x3f, r0	; 63
    6f36:	cd bf       	out	0x3d, r28	; 61
    6f38:	9a 83       	std	Y+2, r25	; 0x02
    6f3a:	89 83       	std	Y+1, r24	; 0x01
    6f3c:	7c 83       	std	Y+4, r23	; 0x04
    6f3e:	6b 83       	std	Y+3, r22	; 0x03
    6f40:	5e 83       	std	Y+6, r21	; 0x06
    6f42:	4d 83       	std	Y+5, r20	; 0x05
    6f44:	38 87       	std	Y+8, r19	; 0x08
    6f46:	2f 83       	std	Y+7, r18	; 0x07
    6f48:	8b 81       	ldd	r24, Y+3	; 0x03
    6f4a:	9c 81       	ldd	r25, Y+4	; 0x04
    6f4c:	99 23       	and	r25, r25
    6f4e:	d4 f0       	brlt	.+52     	; 0x6f84 <_ZN16Adafruit_SSD13069drawPixelEiij+0x60>
    6f50:	89 81       	ldd	r24, Y+1	; 0x01
    6f52:	9a 81       	ldd	r25, Y+2	; 0x02
    6f54:	0e 94 c9 23 	call	0x4792	; 0x4792 <_ZNK12Adafruit_GFX5widthEv>
    6f58:	9c 01       	movw	r18, r24
    6f5a:	8b 81       	ldd	r24, Y+3	; 0x03
    6f5c:	9c 81       	ldd	r25, Y+4	; 0x04
    6f5e:	82 17       	cp	r24, r18
    6f60:	93 07       	cpc	r25, r19
    6f62:	84 f4       	brge	.+32     	; 0x6f84 <_ZN16Adafruit_SSD13069drawPixelEiij+0x60>
    6f64:	8d 81       	ldd	r24, Y+5	; 0x05
    6f66:	9e 81       	ldd	r25, Y+6	; 0x06
    6f68:	99 23       	and	r25, r25
    6f6a:	64 f0       	brlt	.+24     	; 0x6f84 <_ZN16Adafruit_SSD13069drawPixelEiij+0x60>
    6f6c:	89 81       	ldd	r24, Y+1	; 0x01
    6f6e:	9a 81       	ldd	r25, Y+2	; 0x02
    6f70:	0e 94 db 23 	call	0x47b6	; 0x47b6 <_ZNK12Adafruit_GFX6heightEv>
    6f74:	9c 01       	movw	r18, r24
    6f76:	8d 81       	ldd	r24, Y+5	; 0x05
    6f78:	9e 81       	ldd	r25, Y+6	; 0x06
    6f7a:	82 17       	cp	r24, r18
    6f7c:	93 07       	cpc	r25, r19
    6f7e:	14 f4       	brge	.+4      	; 0x6f84 <_ZN16Adafruit_SSD13069drawPixelEiij+0x60>
    6f80:	81 e0       	ldi	r24, 0x01	; 1
    6f82:	01 c0       	rjmp	.+2      	; 0x6f86 <_ZN16Adafruit_SSD13069drawPixelEiij+0x62>
    6f84:	80 e0       	ldi	r24, 0x00	; 0
    6f86:	88 23       	and	r24, r24
    6f88:	09 f4       	brne	.+2      	; 0x6f8c <_ZN16Adafruit_SSD13069drawPixelEiij+0x68>
    6f8a:	83 c1       	rjmp	.+774    	; 0x7292 <_ZN16Adafruit_SSD13069drawPixelEiij+0x36e>
    6f8c:	89 81       	ldd	r24, Y+1	; 0x01
    6f8e:	9a 81       	ldd	r25, Y+2	; 0x02
    6f90:	0e 94 ed 23 	call	0x47da	; 0x47da <_ZNK12Adafruit_GFX11getRotationEv>
    6f94:	88 2f       	mov	r24, r24
    6f96:	90 e0       	ldi	r25, 0x00	; 0
    6f98:	82 30       	cpi	r24, 0x02	; 2
    6f9a:	91 05       	cpc	r25, r1
    6f9c:	81 f1       	breq	.+96     	; 0x6ffe <_ZN16Adafruit_SSD13069drawPixelEiij+0xda>
    6f9e:	83 30       	cpi	r24, 0x03	; 3
    6fa0:	91 05       	cpc	r25, r1
    6fa2:	09 f4       	brne	.+2      	; 0x6fa6 <_ZN16Adafruit_SSD13069drawPixelEiij+0x82>
    6fa4:	4d c0       	rjmp	.+154    	; 0x7040 <_ZN16Adafruit_SSD13069drawPixelEiij+0x11c>
    6fa6:	01 97       	sbiw	r24, 0x01	; 1
    6fa8:	09 f0       	breq	.+2      	; 0x6fac <_ZN16Adafruit_SSD13069drawPixelEiij+0x88>
    6faa:	73 c0       	rjmp	.+230    	; 0x7092 <_ZN16Adafruit_SSD13069drawPixelEiij+0x16e>
    6fac:	2b 81       	ldd	r18, Y+3	; 0x03
    6fae:	3c 81       	ldd	r19, Y+4	; 0x04
    6fb0:	8d 81       	ldd	r24, Y+5	; 0x05
    6fb2:	9e 81       	ldd	r25, Y+6	; 0x06
    6fb4:	82 27       	eor	r24, r18
    6fb6:	93 27       	eor	r25, r19
    6fb8:	9c 83       	std	Y+4, r25	; 0x04
    6fba:	8b 83       	std	Y+3, r24	; 0x03
    6fbc:	2d 81       	ldd	r18, Y+5	; 0x05
    6fbe:	3e 81       	ldd	r19, Y+6	; 0x06
    6fc0:	8b 81       	ldd	r24, Y+3	; 0x03
    6fc2:	9c 81       	ldd	r25, Y+4	; 0x04
    6fc4:	82 27       	eor	r24, r18
    6fc6:	93 27       	eor	r25, r19
    6fc8:	9e 83       	std	Y+6, r25	; 0x06
    6fca:	8d 83       	std	Y+5, r24	; 0x05
    6fcc:	2b 81       	ldd	r18, Y+3	; 0x03
    6fce:	3c 81       	ldd	r19, Y+4	; 0x04
    6fd0:	8d 81       	ldd	r24, Y+5	; 0x05
    6fd2:	9e 81       	ldd	r25, Y+6	; 0x06
    6fd4:	82 27       	eor	r24, r18
    6fd6:	93 27       	eor	r25, r19
    6fd8:	9c 83       	std	Y+4, r25	; 0x04
    6fda:	8b 83       	std	Y+3, r24	; 0x03
    6fdc:	89 81       	ldd	r24, Y+1	; 0x01
    6fde:	9a 81       	ldd	r25, Y+2	; 0x02
    6fe0:	dc 01       	movw	r26, r24
    6fe2:	14 96       	adiw	r26, 0x04	; 4
    6fe4:	2d 91       	ld	r18, X+
    6fe6:	3c 91       	ld	r19, X
    6fe8:	15 97       	sbiw	r26, 0x05	; 5
    6fea:	8b 81       	ldd	r24, Y+3	; 0x03
    6fec:	9c 81       	ldd	r25, Y+4	; 0x04
    6fee:	f9 01       	movw	r30, r18
    6ff0:	e8 1b       	sub	r30, r24
    6ff2:	f9 0b       	sbc	r31, r25
    6ff4:	cf 01       	movw	r24, r30
    6ff6:	01 97       	sbiw	r24, 0x01	; 1
    6ff8:	9c 83       	std	Y+4, r25	; 0x04
    6ffa:	8b 83       	std	Y+3, r24	; 0x03
    6ffc:	4a c0       	rjmp	.+148    	; 0x7092 <_ZN16Adafruit_SSD13069drawPixelEiij+0x16e>
    6ffe:	89 81       	ldd	r24, Y+1	; 0x01
    7000:	9a 81       	ldd	r25, Y+2	; 0x02
    7002:	dc 01       	movw	r26, r24
    7004:	14 96       	adiw	r26, 0x04	; 4
    7006:	2d 91       	ld	r18, X+
    7008:	3c 91       	ld	r19, X
    700a:	15 97       	sbiw	r26, 0x05	; 5
    700c:	8b 81       	ldd	r24, Y+3	; 0x03
    700e:	9c 81       	ldd	r25, Y+4	; 0x04
    7010:	f9 01       	movw	r30, r18
    7012:	e8 1b       	sub	r30, r24
    7014:	f9 0b       	sbc	r31, r25
    7016:	cf 01       	movw	r24, r30
    7018:	01 97       	sbiw	r24, 0x01	; 1
    701a:	9c 83       	std	Y+4, r25	; 0x04
    701c:	8b 83       	std	Y+3, r24	; 0x03
    701e:	89 81       	ldd	r24, Y+1	; 0x01
    7020:	9a 81       	ldd	r25, Y+2	; 0x02
    7022:	dc 01       	movw	r26, r24
    7024:	16 96       	adiw	r26, 0x06	; 6
    7026:	2d 91       	ld	r18, X+
    7028:	3c 91       	ld	r19, X
    702a:	17 97       	sbiw	r26, 0x07	; 7
    702c:	8d 81       	ldd	r24, Y+5	; 0x05
    702e:	9e 81       	ldd	r25, Y+6	; 0x06
    7030:	f9 01       	movw	r30, r18
    7032:	e8 1b       	sub	r30, r24
    7034:	f9 0b       	sbc	r31, r25
    7036:	cf 01       	movw	r24, r30
    7038:	01 97       	sbiw	r24, 0x01	; 1
    703a:	9e 83       	std	Y+6, r25	; 0x06
    703c:	8d 83       	std	Y+5, r24	; 0x05
    703e:	29 c0       	rjmp	.+82     	; 0x7092 <_ZN16Adafruit_SSD13069drawPixelEiij+0x16e>
    7040:	2b 81       	ldd	r18, Y+3	; 0x03
    7042:	3c 81       	ldd	r19, Y+4	; 0x04
    7044:	8d 81       	ldd	r24, Y+5	; 0x05
    7046:	9e 81       	ldd	r25, Y+6	; 0x06
    7048:	82 27       	eor	r24, r18
    704a:	93 27       	eor	r25, r19
    704c:	9c 83       	std	Y+4, r25	; 0x04
    704e:	8b 83       	std	Y+3, r24	; 0x03
    7050:	2d 81       	ldd	r18, Y+5	; 0x05
    7052:	3e 81       	ldd	r19, Y+6	; 0x06
    7054:	8b 81       	ldd	r24, Y+3	; 0x03
    7056:	9c 81       	ldd	r25, Y+4	; 0x04
    7058:	82 27       	eor	r24, r18
    705a:	93 27       	eor	r25, r19
    705c:	9e 83       	std	Y+6, r25	; 0x06
    705e:	8d 83       	std	Y+5, r24	; 0x05
    7060:	2b 81       	ldd	r18, Y+3	; 0x03
    7062:	3c 81       	ldd	r19, Y+4	; 0x04
    7064:	8d 81       	ldd	r24, Y+5	; 0x05
    7066:	9e 81       	ldd	r25, Y+6	; 0x06
    7068:	82 27       	eor	r24, r18
    706a:	93 27       	eor	r25, r19
    706c:	9c 83       	std	Y+4, r25	; 0x04
    706e:	8b 83       	std	Y+3, r24	; 0x03
    7070:	89 81       	ldd	r24, Y+1	; 0x01
    7072:	9a 81       	ldd	r25, Y+2	; 0x02
    7074:	dc 01       	movw	r26, r24
    7076:	16 96       	adiw	r26, 0x06	; 6
    7078:	2d 91       	ld	r18, X+
    707a:	3c 91       	ld	r19, X
    707c:	17 97       	sbiw	r26, 0x07	; 7
    707e:	8d 81       	ldd	r24, Y+5	; 0x05
    7080:	9e 81       	ldd	r25, Y+6	; 0x06
    7082:	f9 01       	movw	r30, r18
    7084:	e8 1b       	sub	r30, r24
    7086:	f9 0b       	sbc	r31, r25
    7088:	cf 01       	movw	r24, r30
    708a:	01 97       	sbiw	r24, 0x01	; 1
    708c:	9e 83       	std	Y+6, r25	; 0x06
    708e:	8d 83       	std	Y+5, r24	; 0x05
    7090:	00 00       	nop
    7092:	8f 81       	ldd	r24, Y+7	; 0x07
    7094:	98 85       	ldd	r25, Y+8	; 0x08
    7096:	81 30       	cpi	r24, 0x01	; 1
    7098:	91 05       	cpc	r25, r1
    709a:	41 f0       	breq	.+16     	; 0x70ac <_ZN16Adafruit_SSD13069drawPixelEiij+0x188>
    709c:	81 30       	cpi	r24, 0x01	; 1
    709e:	91 05       	cpc	r25, r1
    70a0:	08 f4       	brcc	.+2      	; 0x70a4 <_ZN16Adafruit_SSD13069drawPixelEiij+0x180>
    70a2:	56 c0       	rjmp	.+172    	; 0x7150 <_ZN16Adafruit_SSD13069drawPixelEiij+0x22c>
    70a4:	02 97       	sbiw	r24, 0x02	; 2
    70a6:	09 f4       	brne	.+2      	; 0x70aa <_ZN16Adafruit_SSD13069drawPixelEiij+0x186>
    70a8:	a4 c0       	rjmp	.+328    	; 0x71f2 <_ZN16Adafruit_SSD13069drawPixelEiij+0x2ce>
    70aa:	f3 c0       	rjmp	.+486    	; 0x7292 <_ZN16Adafruit_SSD13069drawPixelEiij+0x36e>
    70ac:	89 81       	ldd	r24, Y+1	; 0x01
    70ae:	9a 81       	ldd	r25, Y+2	; 0x02
    70b0:	dc 01       	movw	r26, r24
    70b2:	5f 96       	adiw	r26, 0x1f	; 31
    70b4:	2d 91       	ld	r18, X+
    70b6:	3c 91       	ld	r19, X
    70b8:	90 97       	sbiw	r26, 0x20	; 32
    70ba:	8d 81       	ldd	r24, Y+5	; 0x05
    70bc:	9e 81       	ldd	r25, Y+6	; 0x06
    70be:	99 23       	and	r25, r25
    70c0:	0c f4       	brge	.+2      	; 0x70c4 <_ZN16Adafruit_SSD13069drawPixelEiij+0x1a0>
    70c2:	07 96       	adiw	r24, 0x07	; 7
    70c4:	95 95       	asr	r25
    70c6:	87 95       	ror	r24
    70c8:	95 95       	asr	r25
    70ca:	87 95       	ror	r24
    70cc:	95 95       	asr	r25
    70ce:	87 95       	ror	r24
    70d0:	49 81       	ldd	r20, Y+1	; 0x01
    70d2:	5a 81       	ldd	r21, Y+2	; 0x02
    70d4:	fa 01       	movw	r30, r20
    70d6:	44 81       	ldd	r20, Z+4	; 0x04
    70d8:	55 81       	ldd	r21, Z+5	; 0x05
    70da:	84 9f       	mul	r24, r20
    70dc:	b0 01       	movw	r22, r0
    70de:	85 9f       	mul	r24, r21
    70e0:	70 0d       	add	r23, r0
    70e2:	94 9f       	mul	r25, r20
    70e4:	70 0d       	add	r23, r0
    70e6:	11 24       	eor	r1, r1
    70e8:	4b 81       	ldd	r20, Y+3	; 0x03
    70ea:	5c 81       	ldd	r21, Y+4	; 0x04
    70ec:	46 0f       	add	r20, r22
    70ee:	57 1f       	adc	r21, r23
    70f0:	24 0f       	add	r18, r20
    70f2:	35 1f       	adc	r19, r21
    70f4:	49 81       	ldd	r20, Y+1	; 0x01
    70f6:	5a 81       	ldd	r21, Y+2	; 0x02
    70f8:	da 01       	movw	r26, r20
    70fa:	5f 96       	adiw	r26, 0x1f	; 31
    70fc:	4d 91       	ld	r20, X+
    70fe:	5c 91       	ld	r21, X
    7100:	90 97       	sbiw	r26, 0x20	; 32
    7102:	69 81       	ldd	r22, Y+1	; 0x01
    7104:	7a 81       	ldd	r23, Y+2	; 0x02
    7106:	db 01       	movw	r26, r22
    7108:	14 96       	adiw	r26, 0x04	; 4
    710a:	ed 91       	ld	r30, X+
    710c:	fc 91       	ld	r31, X
    710e:	15 97       	sbiw	r26, 0x05	; 5
    7110:	8e 9f       	mul	r24, r30
    7112:	b0 01       	movw	r22, r0
    7114:	8f 9f       	mul	r24, r31
    7116:	70 0d       	add	r23, r0
    7118:	9e 9f       	mul	r25, r30
    711a:	70 0d       	add	r23, r0
    711c:	11 24       	eor	r1, r1
    711e:	8b 81       	ldd	r24, Y+3	; 0x03
    7120:	9c 81       	ldd	r25, Y+4	; 0x04
    7122:	86 0f       	add	r24, r22
    7124:	97 1f       	adc	r25, r23
    7126:	84 0f       	add	r24, r20
    7128:	95 1f       	adc	r25, r21
    712a:	fc 01       	movw	r30, r24
    712c:	80 81       	ld	r24, Z
    712e:	68 2f       	mov	r22, r24
    7130:	8d 81       	ldd	r24, Y+5	; 0x05
    7132:	9e 81       	ldd	r25, Y+6	; 0x06
    7134:	ac 01       	movw	r20, r24
    7136:	47 70       	andi	r20, 0x07	; 7
    7138:	55 27       	eor	r21, r21
    713a:	81 e0       	ldi	r24, 0x01	; 1
    713c:	90 e0       	ldi	r25, 0x00	; 0
    713e:	02 c0       	rjmp	.+4      	; 0x7144 <_ZN16Adafruit_SSD13069drawPixelEiij+0x220>
    7140:	88 0f       	add	r24, r24
    7142:	99 1f       	adc	r25, r25
    7144:	4a 95       	dec	r20
    7146:	e2 f7       	brpl	.-8      	; 0x7140 <_ZN16Adafruit_SSD13069drawPixelEiij+0x21c>
    7148:	86 2b       	or	r24, r22
    714a:	d9 01       	movw	r26, r18
    714c:	8c 93       	st	X, r24
    714e:	a1 c0       	rjmp	.+322    	; 0x7292 <_ZN16Adafruit_SSD13069drawPixelEiij+0x36e>
    7150:	89 81       	ldd	r24, Y+1	; 0x01
    7152:	9a 81       	ldd	r25, Y+2	; 0x02
    7154:	fc 01       	movw	r30, r24
    7156:	27 8d       	ldd	r18, Z+31	; 0x1f
    7158:	30 a1       	ldd	r19, Z+32	; 0x20
    715a:	8d 81       	ldd	r24, Y+5	; 0x05
    715c:	9e 81       	ldd	r25, Y+6	; 0x06
    715e:	99 23       	and	r25, r25
    7160:	0c f4       	brge	.+2      	; 0x7164 <_ZN16Adafruit_SSD13069drawPixelEiij+0x240>
    7162:	07 96       	adiw	r24, 0x07	; 7
    7164:	95 95       	asr	r25
    7166:	87 95       	ror	r24
    7168:	95 95       	asr	r25
    716a:	87 95       	ror	r24
    716c:	95 95       	asr	r25
    716e:	87 95       	ror	r24
    7170:	49 81       	ldd	r20, Y+1	; 0x01
    7172:	5a 81       	ldd	r21, Y+2	; 0x02
    7174:	da 01       	movw	r26, r20
    7176:	14 96       	adiw	r26, 0x04	; 4
    7178:	4d 91       	ld	r20, X+
    717a:	5c 91       	ld	r21, X
    717c:	15 97       	sbiw	r26, 0x05	; 5
    717e:	84 9f       	mul	r24, r20
    7180:	b0 01       	movw	r22, r0
    7182:	85 9f       	mul	r24, r21
    7184:	70 0d       	add	r23, r0
    7186:	94 9f       	mul	r25, r20
    7188:	70 0d       	add	r23, r0
    718a:	11 24       	eor	r1, r1
    718c:	4b 81       	ldd	r20, Y+3	; 0x03
    718e:	5c 81       	ldd	r21, Y+4	; 0x04
    7190:	46 0f       	add	r20, r22
    7192:	57 1f       	adc	r21, r23
    7194:	24 0f       	add	r18, r20
    7196:	35 1f       	adc	r19, r21
    7198:	49 81       	ldd	r20, Y+1	; 0x01
    719a:	5a 81       	ldd	r21, Y+2	; 0x02
    719c:	fa 01       	movw	r30, r20
    719e:	47 8d       	ldd	r20, Z+31	; 0x1f
    71a0:	50 a1       	ldd	r21, Z+32	; 0x20
    71a2:	69 81       	ldd	r22, Y+1	; 0x01
    71a4:	7a 81       	ldd	r23, Y+2	; 0x02
    71a6:	db 01       	movw	r26, r22
    71a8:	14 96       	adiw	r26, 0x04	; 4
    71aa:	ed 91       	ld	r30, X+
    71ac:	fc 91       	ld	r31, X
    71ae:	15 97       	sbiw	r26, 0x05	; 5
    71b0:	8e 9f       	mul	r24, r30
    71b2:	b0 01       	movw	r22, r0
    71b4:	8f 9f       	mul	r24, r31
    71b6:	70 0d       	add	r23, r0
    71b8:	9e 9f       	mul	r25, r30
    71ba:	70 0d       	add	r23, r0
    71bc:	11 24       	eor	r1, r1
    71be:	8b 81       	ldd	r24, Y+3	; 0x03
    71c0:	9c 81       	ldd	r25, Y+4	; 0x04
    71c2:	86 0f       	add	r24, r22
    71c4:	97 1f       	adc	r25, r23
    71c6:	84 0f       	add	r24, r20
    71c8:	95 1f       	adc	r25, r21
    71ca:	fc 01       	movw	r30, r24
    71cc:	80 81       	ld	r24, Z
    71ce:	68 2f       	mov	r22, r24
    71d0:	8d 81       	ldd	r24, Y+5	; 0x05
    71d2:	9e 81       	ldd	r25, Y+6	; 0x06
    71d4:	ac 01       	movw	r20, r24
    71d6:	47 70       	andi	r20, 0x07	; 7
    71d8:	55 27       	eor	r21, r21
    71da:	81 e0       	ldi	r24, 0x01	; 1
    71dc:	90 e0       	ldi	r25, 0x00	; 0
    71de:	02 c0       	rjmp	.+4      	; 0x71e4 <_ZN16Adafruit_SSD13069drawPixelEiij+0x2c0>
    71e0:	88 0f       	add	r24, r24
    71e2:	99 1f       	adc	r25, r25
    71e4:	4a 95       	dec	r20
    71e6:	e2 f7       	brpl	.-8      	; 0x71e0 <_ZN16Adafruit_SSD13069drawPixelEiij+0x2bc>
    71e8:	80 95       	com	r24
    71ea:	86 23       	and	r24, r22
    71ec:	d9 01       	movw	r26, r18
    71ee:	8c 93       	st	X, r24
    71f0:	50 c0       	rjmp	.+160    	; 0x7292 <_ZN16Adafruit_SSD13069drawPixelEiij+0x36e>
    71f2:	89 81       	ldd	r24, Y+1	; 0x01
    71f4:	9a 81       	ldd	r25, Y+2	; 0x02
    71f6:	fc 01       	movw	r30, r24
    71f8:	27 8d       	ldd	r18, Z+31	; 0x1f
    71fa:	30 a1       	ldd	r19, Z+32	; 0x20
    71fc:	8d 81       	ldd	r24, Y+5	; 0x05
    71fe:	9e 81       	ldd	r25, Y+6	; 0x06
    7200:	99 23       	and	r25, r25
    7202:	0c f4       	brge	.+2      	; 0x7206 <_ZN16Adafruit_SSD13069drawPixelEiij+0x2e2>
    7204:	07 96       	adiw	r24, 0x07	; 7
    7206:	95 95       	asr	r25
    7208:	87 95       	ror	r24
    720a:	95 95       	asr	r25
    720c:	87 95       	ror	r24
    720e:	95 95       	asr	r25
    7210:	87 95       	ror	r24
    7212:	49 81       	ldd	r20, Y+1	; 0x01
    7214:	5a 81       	ldd	r21, Y+2	; 0x02
    7216:	da 01       	movw	r26, r20
    7218:	14 96       	adiw	r26, 0x04	; 4
    721a:	4d 91       	ld	r20, X+
    721c:	5c 91       	ld	r21, X
    721e:	15 97       	sbiw	r26, 0x05	; 5
    7220:	84 9f       	mul	r24, r20
    7222:	b0 01       	movw	r22, r0
    7224:	85 9f       	mul	r24, r21
    7226:	70 0d       	add	r23, r0
    7228:	94 9f       	mul	r25, r20
    722a:	70 0d       	add	r23, r0
    722c:	11 24       	eor	r1, r1
    722e:	4b 81       	ldd	r20, Y+3	; 0x03
    7230:	5c 81       	ldd	r21, Y+4	; 0x04
    7232:	46 0f       	add	r20, r22
    7234:	57 1f       	adc	r21, r23
    7236:	24 0f       	add	r18, r20
    7238:	35 1f       	adc	r19, r21
    723a:	49 81       	ldd	r20, Y+1	; 0x01
    723c:	5a 81       	ldd	r21, Y+2	; 0x02
    723e:	fa 01       	movw	r30, r20
    7240:	47 8d       	ldd	r20, Z+31	; 0x1f
    7242:	50 a1       	ldd	r21, Z+32	; 0x20
    7244:	69 81       	ldd	r22, Y+1	; 0x01
    7246:	7a 81       	ldd	r23, Y+2	; 0x02
    7248:	db 01       	movw	r26, r22
    724a:	14 96       	adiw	r26, 0x04	; 4
    724c:	ed 91       	ld	r30, X+
    724e:	fc 91       	ld	r31, X
    7250:	15 97       	sbiw	r26, 0x05	; 5
    7252:	8e 9f       	mul	r24, r30
    7254:	b0 01       	movw	r22, r0
    7256:	8f 9f       	mul	r24, r31
    7258:	70 0d       	add	r23, r0
    725a:	9e 9f       	mul	r25, r30
    725c:	70 0d       	add	r23, r0
    725e:	11 24       	eor	r1, r1
    7260:	8b 81       	ldd	r24, Y+3	; 0x03
    7262:	9c 81       	ldd	r25, Y+4	; 0x04
    7264:	86 0f       	add	r24, r22
    7266:	97 1f       	adc	r25, r23
    7268:	84 0f       	add	r24, r20
    726a:	95 1f       	adc	r25, r21
    726c:	fc 01       	movw	r30, r24
    726e:	80 81       	ld	r24, Z
    7270:	68 2f       	mov	r22, r24
    7272:	8d 81       	ldd	r24, Y+5	; 0x05
    7274:	9e 81       	ldd	r25, Y+6	; 0x06
    7276:	ac 01       	movw	r20, r24
    7278:	47 70       	andi	r20, 0x07	; 7
    727a:	55 27       	eor	r21, r21
    727c:	81 e0       	ldi	r24, 0x01	; 1
    727e:	90 e0       	ldi	r25, 0x00	; 0
    7280:	02 c0       	rjmp	.+4      	; 0x7286 <_ZN16Adafruit_SSD13069drawPixelEiij+0x362>
    7282:	88 0f       	add	r24, r24
    7284:	99 1f       	adc	r25, r25
    7286:	4a 95       	dec	r20
    7288:	e2 f7       	brpl	.-8      	; 0x7282 <_ZN16Adafruit_SSD13069drawPixelEiij+0x35e>
    728a:	86 27       	eor	r24, r22
    728c:	d9 01       	movw	r26, r18
    728e:	8c 93       	st	X, r24
    7290:	00 00       	nop
    7292:	00 00       	nop
    7294:	28 96       	adiw	r28, 0x08	; 8
    7296:	0f b6       	in	r0, 0x3f	; 63
    7298:	f8 94       	cli
    729a:	de bf       	out	0x3e, r29	; 62
    729c:	0f be       	out	0x3f, r0	; 63
    729e:	cd bf       	out	0x3d, r28	; 61
    72a0:	df 91       	pop	r29
    72a2:	cf 91       	pop	r28
    72a4:	08 95       	ret

000072a6 <_ZN16Adafruit_SSD130612clearDisplayEv>:
    72a6:	cf 93       	push	r28
    72a8:	df 93       	push	r29
    72aa:	1f 92       	push	r1
    72ac:	1f 92       	push	r1
    72ae:	cd b7       	in	r28, 0x3d	; 61
    72b0:	de b7       	in	r29, 0x3e	; 62
    72b2:	9a 83       	std	Y+2, r25	; 0x02
    72b4:	89 83       	std	Y+1, r24	; 0x01
    72b6:	89 81       	ldd	r24, Y+1	; 0x01
    72b8:	9a 81       	ldd	r25, Y+2	; 0x02
    72ba:	fc 01       	movw	r30, r24
    72bc:	24 81       	ldd	r18, Z+4	; 0x04
    72be:	35 81       	ldd	r19, Z+5	; 0x05
    72c0:	89 81       	ldd	r24, Y+1	; 0x01
    72c2:	9a 81       	ldd	r25, Y+2	; 0x02
    72c4:	fc 01       	movw	r30, r24
    72c6:	86 81       	ldd	r24, Z+6	; 0x06
    72c8:	97 81       	ldd	r25, Z+7	; 0x07
    72ca:	07 96       	adiw	r24, 0x07	; 7
    72cc:	99 23       	and	r25, r25
    72ce:	0c f4       	brge	.+2      	; 0x72d2 <_ZN16Adafruit_SSD130612clearDisplayEv+0x2c>
    72d0:	07 96       	adiw	r24, 0x07	; 7
    72d2:	95 95       	asr	r25
    72d4:	87 95       	ror	r24
    72d6:	95 95       	asr	r25
    72d8:	87 95       	ror	r24
    72da:	95 95       	asr	r25
    72dc:	87 95       	ror	r24
    72de:	ac 01       	movw	r20, r24
    72e0:	24 9f       	mul	r18, r20
    72e2:	c0 01       	movw	r24, r0
    72e4:	25 9f       	mul	r18, r21
    72e6:	90 0d       	add	r25, r0
    72e8:	34 9f       	mul	r19, r20
    72ea:	90 0d       	add	r25, r0
    72ec:	11 24       	eor	r1, r1
    72ee:	9c 01       	movw	r18, r24
    72f0:	89 81       	ldd	r24, Y+1	; 0x01
    72f2:	9a 81       	ldd	r25, Y+2	; 0x02
    72f4:	fc 01       	movw	r30, r24
    72f6:	87 8d       	ldd	r24, Z+31	; 0x1f
    72f8:	90 a1       	ldd	r25, Z+32	; 0x20
    72fa:	a9 01       	movw	r20, r18
    72fc:	60 e0       	ldi	r22, 0x00	; 0
    72fe:	70 e0       	ldi	r23, 0x00	; 0
    7300:	0e 94 c8 4f 	call	0x9f90	; 0x9f90 <memset>
    7304:	00 00       	nop
    7306:	0f 90       	pop	r0
    7308:	0f 90       	pop	r0
    730a:	df 91       	pop	r29
    730c:	cf 91       	pop	r28
    730e:	08 95       	ret

00007310 <_ZN16Adafruit_SSD130613drawFastHLineEiiij>:
    7310:	0f 93       	push	r16
    7312:	1f 93       	push	r17
    7314:	cf 93       	push	r28
    7316:	df 93       	push	r29
    7318:	cd b7       	in	r28, 0x3d	; 61
    731a:	de b7       	in	r29, 0x3e	; 62
    731c:	2b 97       	sbiw	r28, 0x0b	; 11
    731e:	0f b6       	in	r0, 0x3f	; 63
    7320:	f8 94       	cli
    7322:	de bf       	out	0x3e, r29	; 62
    7324:	0f be       	out	0x3f, r0	; 63
    7326:	cd bf       	out	0x3d, r28	; 61
    7328:	9b 83       	std	Y+3, r25	; 0x03
    732a:	8a 83       	std	Y+2, r24	; 0x02
    732c:	7d 83       	std	Y+5, r23	; 0x05
    732e:	6c 83       	std	Y+4, r22	; 0x04
    7330:	5f 83       	std	Y+7, r21	; 0x07
    7332:	4e 83       	std	Y+6, r20	; 0x06
    7334:	39 87       	std	Y+9, r19	; 0x09
    7336:	28 87       	std	Y+8, r18	; 0x08
    7338:	1b 87       	std	Y+11, r17	; 0x0b
    733a:	0a 87       	std	Y+10, r16	; 0x0a
    733c:	19 82       	std	Y+1, r1	; 0x01
    733e:	8a 81       	ldd	r24, Y+2	; 0x02
    7340:	9b 81       	ldd	r25, Y+3	; 0x03
    7342:	fc 01       	movw	r30, r24
    7344:	86 89       	ldd	r24, Z+22	; 0x16
    7346:	88 2f       	mov	r24, r24
    7348:	90 e0       	ldi	r25, 0x00	; 0
    734a:	82 30       	cpi	r24, 0x02	; 2
    734c:	91 05       	cpc	r25, r1
    734e:	81 f1       	breq	.+96     	; 0x73b0 <_ZN16Adafruit_SSD130613drawFastHLineEiiij+0xa0>
    7350:	83 30       	cpi	r24, 0x03	; 3
    7352:	91 05       	cpc	r25, r1
    7354:	09 f4       	brne	.+2      	; 0x7358 <_ZN16Adafruit_SSD130613drawFastHLineEiiij+0x48>
    7356:	54 c0       	rjmp	.+168    	; 0x7400 <_ZN16Adafruit_SSD130613drawFastHLineEiiij+0xf0>
    7358:	01 97       	sbiw	r24, 0x01	; 1
    735a:	09 f0       	breq	.+2      	; 0x735e <_ZN16Adafruit_SSD130613drawFastHLineEiiij+0x4e>
    735c:	85 c0       	rjmp	.+266    	; 0x7468 <_ZN16Adafruit_SSD130613drawFastHLineEiiij+0x158>
    735e:	81 e0       	ldi	r24, 0x01	; 1
    7360:	89 83       	std	Y+1, r24	; 0x01
    7362:	2c 81       	ldd	r18, Y+4	; 0x04
    7364:	3d 81       	ldd	r19, Y+5	; 0x05
    7366:	8e 81       	ldd	r24, Y+6	; 0x06
    7368:	9f 81       	ldd	r25, Y+7	; 0x07
    736a:	82 27       	eor	r24, r18
    736c:	93 27       	eor	r25, r19
    736e:	9d 83       	std	Y+5, r25	; 0x05
    7370:	8c 83       	std	Y+4, r24	; 0x04
    7372:	2e 81       	ldd	r18, Y+6	; 0x06
    7374:	3f 81       	ldd	r19, Y+7	; 0x07
    7376:	8c 81       	ldd	r24, Y+4	; 0x04
    7378:	9d 81       	ldd	r25, Y+5	; 0x05
    737a:	82 27       	eor	r24, r18
    737c:	93 27       	eor	r25, r19
    737e:	9f 83       	std	Y+7, r25	; 0x07
    7380:	8e 83       	std	Y+6, r24	; 0x06
    7382:	2c 81       	ldd	r18, Y+4	; 0x04
    7384:	3d 81       	ldd	r19, Y+5	; 0x05
    7386:	8e 81       	ldd	r24, Y+6	; 0x06
    7388:	9f 81       	ldd	r25, Y+7	; 0x07
    738a:	82 27       	eor	r24, r18
    738c:	93 27       	eor	r25, r19
    738e:	9d 83       	std	Y+5, r25	; 0x05
    7390:	8c 83       	std	Y+4, r24	; 0x04
    7392:	8a 81       	ldd	r24, Y+2	; 0x02
    7394:	9b 81       	ldd	r25, Y+3	; 0x03
    7396:	fc 01       	movw	r30, r24
    7398:	24 81       	ldd	r18, Z+4	; 0x04
    739a:	35 81       	ldd	r19, Z+5	; 0x05
    739c:	8c 81       	ldd	r24, Y+4	; 0x04
    739e:	9d 81       	ldd	r25, Y+5	; 0x05
    73a0:	a9 01       	movw	r20, r18
    73a2:	48 1b       	sub	r20, r24
    73a4:	59 0b       	sbc	r21, r25
    73a6:	ca 01       	movw	r24, r20
    73a8:	01 97       	sbiw	r24, 0x01	; 1
    73aa:	9d 83       	std	Y+5, r25	; 0x05
    73ac:	8c 83       	std	Y+4, r24	; 0x04
    73ae:	5c c0       	rjmp	.+184    	; 0x7468 <_ZN16Adafruit_SSD130613drawFastHLineEiiij+0x158>
    73b0:	8a 81       	ldd	r24, Y+2	; 0x02
    73b2:	9b 81       	ldd	r25, Y+3	; 0x03
    73b4:	fc 01       	movw	r30, r24
    73b6:	24 81       	ldd	r18, Z+4	; 0x04
    73b8:	35 81       	ldd	r19, Z+5	; 0x05
    73ba:	8c 81       	ldd	r24, Y+4	; 0x04
    73bc:	9d 81       	ldd	r25, Y+5	; 0x05
    73be:	a9 01       	movw	r20, r18
    73c0:	48 1b       	sub	r20, r24
    73c2:	59 0b       	sbc	r21, r25
    73c4:	ca 01       	movw	r24, r20
    73c6:	01 97       	sbiw	r24, 0x01	; 1
    73c8:	9d 83       	std	Y+5, r25	; 0x05
    73ca:	8c 83       	std	Y+4, r24	; 0x04
    73cc:	8a 81       	ldd	r24, Y+2	; 0x02
    73ce:	9b 81       	ldd	r25, Y+3	; 0x03
    73d0:	fc 01       	movw	r30, r24
    73d2:	26 81       	ldd	r18, Z+6	; 0x06
    73d4:	37 81       	ldd	r19, Z+7	; 0x07
    73d6:	8e 81       	ldd	r24, Y+6	; 0x06
    73d8:	9f 81       	ldd	r25, Y+7	; 0x07
    73da:	a9 01       	movw	r20, r18
    73dc:	48 1b       	sub	r20, r24
    73de:	59 0b       	sbc	r21, r25
    73e0:	ca 01       	movw	r24, r20
    73e2:	01 97       	sbiw	r24, 0x01	; 1
    73e4:	9f 83       	std	Y+7, r25	; 0x07
    73e6:	8e 83       	std	Y+6, r24	; 0x06
    73e8:	88 85       	ldd	r24, Y+8	; 0x08
    73ea:	99 85       	ldd	r25, Y+9	; 0x09
    73ec:	01 97       	sbiw	r24, 0x01	; 1
    73ee:	2c 81       	ldd	r18, Y+4	; 0x04
    73f0:	3d 81       	ldd	r19, Y+5	; 0x05
    73f2:	f9 01       	movw	r30, r18
    73f4:	e8 1b       	sub	r30, r24
    73f6:	f9 0b       	sbc	r31, r25
    73f8:	cf 01       	movw	r24, r30
    73fa:	9d 83       	std	Y+5, r25	; 0x05
    73fc:	8c 83       	std	Y+4, r24	; 0x04
    73fe:	34 c0       	rjmp	.+104    	; 0x7468 <_ZN16Adafruit_SSD130613drawFastHLineEiiij+0x158>
    7400:	81 e0       	ldi	r24, 0x01	; 1
    7402:	89 83       	std	Y+1, r24	; 0x01
    7404:	2c 81       	ldd	r18, Y+4	; 0x04
    7406:	3d 81       	ldd	r19, Y+5	; 0x05
    7408:	8e 81       	ldd	r24, Y+6	; 0x06
    740a:	9f 81       	ldd	r25, Y+7	; 0x07
    740c:	82 27       	eor	r24, r18
    740e:	93 27       	eor	r25, r19
    7410:	9d 83       	std	Y+5, r25	; 0x05
    7412:	8c 83       	std	Y+4, r24	; 0x04
    7414:	2e 81       	ldd	r18, Y+6	; 0x06
    7416:	3f 81       	ldd	r19, Y+7	; 0x07
    7418:	8c 81       	ldd	r24, Y+4	; 0x04
    741a:	9d 81       	ldd	r25, Y+5	; 0x05
    741c:	82 27       	eor	r24, r18
    741e:	93 27       	eor	r25, r19
    7420:	9f 83       	std	Y+7, r25	; 0x07
    7422:	8e 83       	std	Y+6, r24	; 0x06
    7424:	2c 81       	ldd	r18, Y+4	; 0x04
    7426:	3d 81       	ldd	r19, Y+5	; 0x05
    7428:	8e 81       	ldd	r24, Y+6	; 0x06
    742a:	9f 81       	ldd	r25, Y+7	; 0x07
    742c:	82 27       	eor	r24, r18
    742e:	93 27       	eor	r25, r19
    7430:	9d 83       	std	Y+5, r25	; 0x05
    7432:	8c 83       	std	Y+4, r24	; 0x04
    7434:	8a 81       	ldd	r24, Y+2	; 0x02
    7436:	9b 81       	ldd	r25, Y+3	; 0x03
    7438:	fc 01       	movw	r30, r24
    743a:	26 81       	ldd	r18, Z+6	; 0x06
    743c:	37 81       	ldd	r19, Z+7	; 0x07
    743e:	8e 81       	ldd	r24, Y+6	; 0x06
    7440:	9f 81       	ldd	r25, Y+7	; 0x07
    7442:	a9 01       	movw	r20, r18
    7444:	48 1b       	sub	r20, r24
    7446:	59 0b       	sbc	r21, r25
    7448:	ca 01       	movw	r24, r20
    744a:	01 97       	sbiw	r24, 0x01	; 1
    744c:	9f 83       	std	Y+7, r25	; 0x07
    744e:	8e 83       	std	Y+6, r24	; 0x06
    7450:	88 85       	ldd	r24, Y+8	; 0x08
    7452:	99 85       	ldd	r25, Y+9	; 0x09
    7454:	01 97       	sbiw	r24, 0x01	; 1
    7456:	2e 81       	ldd	r18, Y+6	; 0x06
    7458:	3f 81       	ldd	r19, Y+7	; 0x07
    745a:	f9 01       	movw	r30, r18
    745c:	e8 1b       	sub	r30, r24
    745e:	f9 0b       	sbc	r31, r25
    7460:	cf 01       	movw	r24, r30
    7462:	9f 83       	std	Y+7, r25	; 0x07
    7464:	8e 83       	std	Y+6, r24	; 0x06
    7466:	00 00       	nop
    7468:	89 81       	ldd	r24, Y+1	; 0x01
    746a:	88 23       	and	r24, r24
    746c:	69 f0       	breq	.+26     	; 0x7488 <_ZN16Adafruit_SSD130613drawFastHLineEiiij+0x178>
    746e:	ea 85       	ldd	r30, Y+10	; 0x0a
    7470:	fb 85       	ldd	r31, Y+11	; 0x0b
    7472:	28 85       	ldd	r18, Y+8	; 0x08
    7474:	39 85       	ldd	r19, Y+9	; 0x09
    7476:	4e 81       	ldd	r20, Y+6	; 0x06
    7478:	5f 81       	ldd	r21, Y+7	; 0x07
    747a:	6c 81       	ldd	r22, Y+4	; 0x04
    747c:	7d 81       	ldd	r23, Y+5	; 0x05
    747e:	8a 81       	ldd	r24, Y+2	; 0x02
    7480:	9b 81       	ldd	r25, Y+3	; 0x03
    7482:	8f 01       	movw	r16, r30
    7484:	e5 d1       	rcall	.+970    	; 0x7850 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij>
    7486:	0c c0       	rjmp	.+24     	; 0x74a0 <_ZN16Adafruit_SSD130613drawFastHLineEiiij+0x190>
    7488:	ea 85       	ldd	r30, Y+10	; 0x0a
    748a:	fb 85       	ldd	r31, Y+11	; 0x0b
    748c:	28 85       	ldd	r18, Y+8	; 0x08
    748e:	39 85       	ldd	r19, Y+9	; 0x09
    7490:	4e 81       	ldd	r20, Y+6	; 0x06
    7492:	5f 81       	ldd	r21, Y+7	; 0x07
    7494:	6c 81       	ldd	r22, Y+4	; 0x04
    7496:	7d 81       	ldd	r23, Y+5	; 0x05
    7498:	8a 81       	ldd	r24, Y+2	; 0x02
    749a:	9b 81       	ldd	r25, Y+3	; 0x03
    749c:	8f 01       	movw	r16, r30
    749e:	0c d0       	rcall	.+24     	; 0x74b8 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij>
    74a0:	00 00       	nop
    74a2:	2b 96       	adiw	r28, 0x0b	; 11
    74a4:	0f b6       	in	r0, 0x3f	; 63
    74a6:	f8 94       	cli
    74a8:	de bf       	out	0x3e, r29	; 62
    74aa:	0f be       	out	0x3f, r0	; 63
    74ac:	cd bf       	out	0x3d, r28	; 61
    74ae:	df 91       	pop	r29
    74b0:	cf 91       	pop	r28
    74b2:	1f 91       	pop	r17
    74b4:	0f 91       	pop	r16
    74b6:	08 95       	ret

000074b8 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij>:
    74b8:	0f 93       	push	r16
    74ba:	1f 93       	push	r17
    74bc:	cf 93       	push	r28
    74be:	df 93       	push	r29
    74c0:	cd b7       	in	r28, 0x3d	; 61
    74c2:	de b7       	in	r29, 0x3e	; 62
    74c4:	2d 97       	sbiw	r28, 0x0d	; 13
    74c6:	0f b6       	in	r0, 0x3f	; 63
    74c8:	f8 94       	cli
    74ca:	de bf       	out	0x3e, r29	; 62
    74cc:	0f be       	out	0x3f, r0	; 63
    74ce:	cd bf       	out	0x3d, r28	; 61
    74d0:	9d 83       	std	Y+5, r25	; 0x05
    74d2:	8c 83       	std	Y+4, r24	; 0x04
    74d4:	7f 83       	std	Y+7, r23	; 0x07
    74d6:	6e 83       	std	Y+6, r22	; 0x06
    74d8:	59 87       	std	Y+9, r21	; 0x09
    74da:	48 87       	std	Y+8, r20	; 0x08
    74dc:	3b 87       	std	Y+11, r19	; 0x0b
    74de:	2a 87       	std	Y+10, r18	; 0x0a
    74e0:	1d 87       	std	Y+13, r17	; 0x0d
    74e2:	0c 87       	std	Y+12, r16	; 0x0c
    74e4:	88 85       	ldd	r24, Y+8	; 0x08
    74e6:	99 85       	ldd	r25, Y+9	; 0x09
    74e8:	99 23       	and	r25, r25
    74ea:	0c f4       	brge	.+2      	; 0x74ee <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x36>
    74ec:	d1 c0       	rjmp	.+418    	; 0x7690 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x1d8>
    74ee:	8c 81       	ldd	r24, Y+4	; 0x04
    74f0:	9d 81       	ldd	r25, Y+5	; 0x05
    74f2:	fc 01       	movw	r30, r24
    74f4:	26 81       	ldd	r18, Z+6	; 0x06
    74f6:	37 81       	ldd	r19, Z+7	; 0x07
    74f8:	88 85       	ldd	r24, Y+8	; 0x08
    74fa:	99 85       	ldd	r25, Y+9	; 0x09
    74fc:	82 17       	cp	r24, r18
    74fe:	93 07       	cpc	r25, r19
    7500:	0c f0       	brlt	.+2      	; 0x7504 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x4c>
    7502:	c6 c0       	rjmp	.+396    	; 0x7690 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x1d8>
    7504:	8e 81       	ldd	r24, Y+6	; 0x06
    7506:	9f 81       	ldd	r25, Y+7	; 0x07
    7508:	99 23       	and	r25, r25
    750a:	54 f4       	brge	.+20     	; 0x7520 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x68>
    750c:	2a 85       	ldd	r18, Y+10	; 0x0a
    750e:	3b 85       	ldd	r19, Y+11	; 0x0b
    7510:	8e 81       	ldd	r24, Y+6	; 0x06
    7512:	9f 81       	ldd	r25, Y+7	; 0x07
    7514:	82 0f       	add	r24, r18
    7516:	93 1f       	adc	r25, r19
    7518:	9b 87       	std	Y+11, r25	; 0x0b
    751a:	8a 87       	std	Y+10, r24	; 0x0a
    751c:	1f 82       	std	Y+7, r1	; 0x07
    751e:	1e 82       	std	Y+6, r1	; 0x06
    7520:	2e 81       	ldd	r18, Y+6	; 0x06
    7522:	3f 81       	ldd	r19, Y+7	; 0x07
    7524:	8a 85       	ldd	r24, Y+10	; 0x0a
    7526:	9b 85       	ldd	r25, Y+11	; 0x0b
    7528:	28 0f       	add	r18, r24
    752a:	39 1f       	adc	r19, r25
    752c:	8c 81       	ldd	r24, Y+4	; 0x04
    752e:	9d 81       	ldd	r25, Y+5	; 0x05
    7530:	fc 01       	movw	r30, r24
    7532:	84 81       	ldd	r24, Z+4	; 0x04
    7534:	95 81       	ldd	r25, Z+5	; 0x05
    7536:	82 17       	cp	r24, r18
    7538:	93 07       	cpc	r25, r19
    753a:	6c f4       	brge	.+26     	; 0x7556 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x9e>
    753c:	8c 81       	ldd	r24, Y+4	; 0x04
    753e:	9d 81       	ldd	r25, Y+5	; 0x05
    7540:	fc 01       	movw	r30, r24
    7542:	24 81       	ldd	r18, Z+4	; 0x04
    7544:	35 81       	ldd	r19, Z+5	; 0x05
    7546:	8e 81       	ldd	r24, Y+6	; 0x06
    7548:	9f 81       	ldd	r25, Y+7	; 0x07
    754a:	a9 01       	movw	r20, r18
    754c:	48 1b       	sub	r20, r24
    754e:	59 0b       	sbc	r21, r25
    7550:	ca 01       	movw	r24, r20
    7552:	9b 87       	std	Y+11, r25	; 0x0b
    7554:	8a 87       	std	Y+10, r24	; 0x0a
    7556:	8a 85       	ldd	r24, Y+10	; 0x0a
    7558:	9b 85       	ldd	r25, Y+11	; 0x0b
    755a:	18 16       	cp	r1, r24
    755c:	19 06       	cpc	r1, r25
    755e:	0c f0       	brlt	.+2      	; 0x7562 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0xaa>
    7560:	97 c0       	rjmp	.+302    	; 0x7690 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x1d8>
    7562:	8c 81       	ldd	r24, Y+4	; 0x04
    7564:	9d 81       	ldd	r25, Y+5	; 0x05
    7566:	fc 01       	movw	r30, r24
    7568:	27 8d       	ldd	r18, Z+31	; 0x1f
    756a:	30 a1       	ldd	r19, Z+32	; 0x20
    756c:	88 85       	ldd	r24, Y+8	; 0x08
    756e:	99 85       	ldd	r25, Y+9	; 0x09
    7570:	99 23       	and	r25, r25
    7572:	0c f4       	brge	.+2      	; 0x7576 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0xbe>
    7574:	07 96       	adiw	r24, 0x07	; 7
    7576:	95 95       	asr	r25
    7578:	87 95       	ror	r24
    757a:	95 95       	asr	r25
    757c:	87 95       	ror	r24
    757e:	95 95       	asr	r25
    7580:	87 95       	ror	r24
    7582:	bc 01       	movw	r22, r24
    7584:	8c 81       	ldd	r24, Y+4	; 0x04
    7586:	9d 81       	ldd	r25, Y+5	; 0x05
    7588:	fc 01       	movw	r30, r24
    758a:	84 81       	ldd	r24, Z+4	; 0x04
    758c:	95 81       	ldd	r25, Z+5	; 0x05
    758e:	68 9f       	mul	r22, r24
    7590:	a0 01       	movw	r20, r0
    7592:	69 9f       	mul	r22, r25
    7594:	50 0d       	add	r21, r0
    7596:	78 9f       	mul	r23, r24
    7598:	50 0d       	add	r21, r0
    759a:	11 24       	eor	r1, r1
    759c:	8e 81       	ldd	r24, Y+6	; 0x06
    759e:	9f 81       	ldd	r25, Y+7	; 0x07
    75a0:	84 0f       	add	r24, r20
    75a2:	95 1f       	adc	r25, r21
    75a4:	82 0f       	add	r24, r18
    75a6:	93 1f       	adc	r25, r19
    75a8:	9a 83       	std	Y+2, r25	; 0x02
    75aa:	89 83       	std	Y+1, r24	; 0x01
    75ac:	88 85       	ldd	r24, Y+8	; 0x08
    75ae:	99 85       	ldd	r25, Y+9	; 0x09
    75b0:	9c 01       	movw	r18, r24
    75b2:	27 70       	andi	r18, 0x07	; 7
    75b4:	33 27       	eor	r19, r19
    75b6:	81 e0       	ldi	r24, 0x01	; 1
    75b8:	90 e0       	ldi	r25, 0x00	; 0
    75ba:	02 c0       	rjmp	.+4      	; 0x75c0 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x108>
    75bc:	88 0f       	add	r24, r24
    75be:	99 1f       	adc	r25, r25
    75c0:	2a 95       	dec	r18
    75c2:	e2 f7       	brpl	.-8      	; 0x75bc <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x104>
    75c4:	8b 83       	std	Y+3, r24	; 0x03
    75c6:	8c 85       	ldd	r24, Y+12	; 0x0c
    75c8:	9d 85       	ldd	r25, Y+13	; 0x0d
    75ca:	81 30       	cpi	r24, 0x01	; 1
    75cc:	91 05       	cpc	r25, r1
    75ce:	31 f0       	breq	.+12     	; 0x75dc <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x124>
    75d0:	81 30       	cpi	r24, 0x01	; 1
    75d2:	91 05       	cpc	r25, r1
    75d4:	f8 f0       	brcs	.+62     	; 0x7614 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x15c>
    75d6:	02 97       	sbiw	r24, 0x02	; 2
    75d8:	d9 f1       	breq	.+118    	; 0x7650 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x198>
    75da:	5a c0       	rjmp	.+180    	; 0x7690 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x1d8>
    75dc:	8a 85       	ldd	r24, Y+10	; 0x0a
    75de:	9b 85       	ldd	r25, Y+11	; 0x0b
    75e0:	9c 01       	movw	r18, r24
    75e2:	21 50       	subi	r18, 0x01	; 1
    75e4:	31 09       	sbc	r19, r1
    75e6:	3b 87       	std	Y+11, r19	; 0x0b
    75e8:	2a 87       	std	Y+10, r18	; 0x0a
    75ea:	21 e0       	ldi	r18, 0x01	; 1
    75ec:	89 2b       	or	r24, r25
    75ee:	09 f4       	brne	.+2      	; 0x75f2 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x13a>
    75f0:	20 e0       	ldi	r18, 0x00	; 0
    75f2:	22 23       	and	r18, r18
    75f4:	09 f4       	brne	.+2      	; 0x75f8 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x140>
    75f6:	47 c0       	rjmp	.+142    	; 0x7686 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x1ce>
    75f8:	89 81       	ldd	r24, Y+1	; 0x01
    75fa:	9a 81       	ldd	r25, Y+2	; 0x02
    75fc:	9c 01       	movw	r18, r24
    75fe:	2f 5f       	subi	r18, 0xFF	; 255
    7600:	3f 4f       	sbci	r19, 0xFF	; 255
    7602:	3a 83       	std	Y+2, r19	; 0x02
    7604:	29 83       	std	Y+1, r18	; 0x01
    7606:	fc 01       	movw	r30, r24
    7608:	30 81       	ld	r19, Z
    760a:	2b 81       	ldd	r18, Y+3	; 0x03
    760c:	23 2b       	or	r18, r19
    760e:	fc 01       	movw	r30, r24
    7610:	20 83       	st	Z, r18
    7612:	e4 cf       	rjmp	.-56     	; 0x75dc <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x124>
    7614:	8b 81       	ldd	r24, Y+3	; 0x03
    7616:	80 95       	com	r24
    7618:	8b 83       	std	Y+3, r24	; 0x03
    761a:	8a 85       	ldd	r24, Y+10	; 0x0a
    761c:	9b 85       	ldd	r25, Y+11	; 0x0b
    761e:	9c 01       	movw	r18, r24
    7620:	21 50       	subi	r18, 0x01	; 1
    7622:	31 09       	sbc	r19, r1
    7624:	3b 87       	std	Y+11, r19	; 0x0b
    7626:	2a 87       	std	Y+10, r18	; 0x0a
    7628:	21 e0       	ldi	r18, 0x01	; 1
    762a:	89 2b       	or	r24, r25
    762c:	09 f4       	brne	.+2      	; 0x7630 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x178>
    762e:	20 e0       	ldi	r18, 0x00	; 0
    7630:	22 23       	and	r18, r18
    7632:	59 f1       	breq	.+86     	; 0x768a <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x1d2>
    7634:	89 81       	ldd	r24, Y+1	; 0x01
    7636:	9a 81       	ldd	r25, Y+2	; 0x02
    7638:	9c 01       	movw	r18, r24
    763a:	2f 5f       	subi	r18, 0xFF	; 255
    763c:	3f 4f       	sbci	r19, 0xFF	; 255
    763e:	3a 83       	std	Y+2, r19	; 0x02
    7640:	29 83       	std	Y+1, r18	; 0x01
    7642:	fc 01       	movw	r30, r24
    7644:	30 81       	ld	r19, Z
    7646:	2b 81       	ldd	r18, Y+3	; 0x03
    7648:	23 23       	and	r18, r19
    764a:	fc 01       	movw	r30, r24
    764c:	20 83       	st	Z, r18
    764e:	e5 cf       	rjmp	.-54     	; 0x761a <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x162>
    7650:	8a 85       	ldd	r24, Y+10	; 0x0a
    7652:	9b 85       	ldd	r25, Y+11	; 0x0b
    7654:	9c 01       	movw	r18, r24
    7656:	21 50       	subi	r18, 0x01	; 1
    7658:	31 09       	sbc	r19, r1
    765a:	3b 87       	std	Y+11, r19	; 0x0b
    765c:	2a 87       	std	Y+10, r18	; 0x0a
    765e:	21 e0       	ldi	r18, 0x01	; 1
    7660:	89 2b       	or	r24, r25
    7662:	09 f4       	brne	.+2      	; 0x7666 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x1ae>
    7664:	20 e0       	ldi	r18, 0x00	; 0
    7666:	22 23       	and	r18, r18
    7668:	91 f0       	breq	.+36     	; 0x768e <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x1d6>
    766a:	89 81       	ldd	r24, Y+1	; 0x01
    766c:	9a 81       	ldd	r25, Y+2	; 0x02
    766e:	9c 01       	movw	r18, r24
    7670:	2f 5f       	subi	r18, 0xFF	; 255
    7672:	3f 4f       	sbci	r19, 0xFF	; 255
    7674:	3a 83       	std	Y+2, r19	; 0x02
    7676:	29 83       	std	Y+1, r18	; 0x01
    7678:	fc 01       	movw	r30, r24
    767a:	30 81       	ld	r19, Z
    767c:	2b 81       	ldd	r18, Y+3	; 0x03
    767e:	23 27       	eor	r18, r19
    7680:	fc 01       	movw	r30, r24
    7682:	20 83       	st	Z, r18
    7684:	e5 cf       	rjmp	.-54     	; 0x7650 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x198>
    7686:	00 00       	nop
    7688:	03 c0       	rjmp	.+6      	; 0x7690 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x1d8>
    768a:	00 00       	nop
    768c:	01 c0       	rjmp	.+2      	; 0x7690 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x1d8>
    768e:	00 00       	nop
    7690:	00 00       	nop
    7692:	2d 96       	adiw	r28, 0x0d	; 13
    7694:	0f b6       	in	r0, 0x3f	; 63
    7696:	f8 94       	cli
    7698:	de bf       	out	0x3e, r29	; 62
    769a:	0f be       	out	0x3f, r0	; 63
    769c:	cd bf       	out	0x3d, r28	; 61
    769e:	df 91       	pop	r29
    76a0:	cf 91       	pop	r28
    76a2:	1f 91       	pop	r17
    76a4:	0f 91       	pop	r16
    76a6:	08 95       	ret

000076a8 <_ZN16Adafruit_SSD130613drawFastVLineEiiij>:
    76a8:	0f 93       	push	r16
    76aa:	1f 93       	push	r17
    76ac:	cf 93       	push	r28
    76ae:	df 93       	push	r29
    76b0:	cd b7       	in	r28, 0x3d	; 61
    76b2:	de b7       	in	r29, 0x3e	; 62
    76b4:	2b 97       	sbiw	r28, 0x0b	; 11
    76b6:	0f b6       	in	r0, 0x3f	; 63
    76b8:	f8 94       	cli
    76ba:	de bf       	out	0x3e, r29	; 62
    76bc:	0f be       	out	0x3f, r0	; 63
    76be:	cd bf       	out	0x3d, r28	; 61
    76c0:	9b 83       	std	Y+3, r25	; 0x03
    76c2:	8a 83       	std	Y+2, r24	; 0x02
    76c4:	7d 83       	std	Y+5, r23	; 0x05
    76c6:	6c 83       	std	Y+4, r22	; 0x04
    76c8:	5f 83       	std	Y+7, r21	; 0x07
    76ca:	4e 83       	std	Y+6, r20	; 0x06
    76cc:	39 87       	std	Y+9, r19	; 0x09
    76ce:	28 87       	std	Y+8, r18	; 0x08
    76d0:	1b 87       	std	Y+11, r17	; 0x0b
    76d2:	0a 87       	std	Y+10, r16	; 0x0a
    76d4:	19 82       	std	Y+1, r1	; 0x01
    76d6:	8a 81       	ldd	r24, Y+2	; 0x02
    76d8:	9b 81       	ldd	r25, Y+3	; 0x03
    76da:	fc 01       	movw	r30, r24
    76dc:	86 89       	ldd	r24, Z+22	; 0x16
    76de:	88 2f       	mov	r24, r24
    76e0:	90 e0       	ldi	r25, 0x00	; 0
    76e2:	82 30       	cpi	r24, 0x02	; 2
    76e4:	91 05       	cpc	r25, r1
    76e6:	d9 f1       	breq	.+118    	; 0x775e <_ZN16Adafruit_SSD130613drawFastVLineEiiij+0xb6>
    76e8:	83 30       	cpi	r24, 0x03	; 3
    76ea:	91 05       	cpc	r25, r1
    76ec:	09 f4       	brne	.+2      	; 0x76f0 <_ZN16Adafruit_SSD130613drawFastVLineEiiij+0x48>
    76ee:	5f c0       	rjmp	.+190    	; 0x77ae <_ZN16Adafruit_SSD130613drawFastVLineEiiij+0x106>
    76f0:	01 97       	sbiw	r24, 0x01	; 1
    76f2:	09 f0       	breq	.+2      	; 0x76f6 <_ZN16Adafruit_SSD130613drawFastVLineEiiij+0x4e>
    76f4:	85 c0       	rjmp	.+266    	; 0x7800 <_ZN16Adafruit_SSD130613drawFastVLineEiiij+0x158>
    76f6:	81 e0       	ldi	r24, 0x01	; 1
    76f8:	89 83       	std	Y+1, r24	; 0x01
    76fa:	2c 81       	ldd	r18, Y+4	; 0x04
    76fc:	3d 81       	ldd	r19, Y+5	; 0x05
    76fe:	8e 81       	ldd	r24, Y+6	; 0x06
    7700:	9f 81       	ldd	r25, Y+7	; 0x07
    7702:	82 27       	eor	r24, r18
    7704:	93 27       	eor	r25, r19
    7706:	9d 83       	std	Y+5, r25	; 0x05
    7708:	8c 83       	std	Y+4, r24	; 0x04
    770a:	2e 81       	ldd	r18, Y+6	; 0x06
    770c:	3f 81       	ldd	r19, Y+7	; 0x07
    770e:	8c 81       	ldd	r24, Y+4	; 0x04
    7710:	9d 81       	ldd	r25, Y+5	; 0x05
    7712:	82 27       	eor	r24, r18
    7714:	93 27       	eor	r25, r19
    7716:	9f 83       	std	Y+7, r25	; 0x07
    7718:	8e 83       	std	Y+6, r24	; 0x06
    771a:	2c 81       	ldd	r18, Y+4	; 0x04
    771c:	3d 81       	ldd	r19, Y+5	; 0x05
    771e:	8e 81       	ldd	r24, Y+6	; 0x06
    7720:	9f 81       	ldd	r25, Y+7	; 0x07
    7722:	82 27       	eor	r24, r18
    7724:	93 27       	eor	r25, r19
    7726:	9d 83       	std	Y+5, r25	; 0x05
    7728:	8c 83       	std	Y+4, r24	; 0x04
    772a:	8a 81       	ldd	r24, Y+2	; 0x02
    772c:	9b 81       	ldd	r25, Y+3	; 0x03
    772e:	fc 01       	movw	r30, r24
    7730:	24 81       	ldd	r18, Z+4	; 0x04
    7732:	35 81       	ldd	r19, Z+5	; 0x05
    7734:	8c 81       	ldd	r24, Y+4	; 0x04
    7736:	9d 81       	ldd	r25, Y+5	; 0x05
    7738:	a9 01       	movw	r20, r18
    773a:	48 1b       	sub	r20, r24
    773c:	59 0b       	sbc	r21, r25
    773e:	ca 01       	movw	r24, r20
    7740:	01 97       	sbiw	r24, 0x01	; 1
    7742:	9d 83       	std	Y+5, r25	; 0x05
    7744:	8c 83       	std	Y+4, r24	; 0x04
    7746:	88 85       	ldd	r24, Y+8	; 0x08
    7748:	99 85       	ldd	r25, Y+9	; 0x09
    774a:	01 97       	sbiw	r24, 0x01	; 1
    774c:	2c 81       	ldd	r18, Y+4	; 0x04
    774e:	3d 81       	ldd	r19, Y+5	; 0x05
    7750:	f9 01       	movw	r30, r18
    7752:	e8 1b       	sub	r30, r24
    7754:	f9 0b       	sbc	r31, r25
    7756:	cf 01       	movw	r24, r30
    7758:	9d 83       	std	Y+5, r25	; 0x05
    775a:	8c 83       	std	Y+4, r24	; 0x04
    775c:	51 c0       	rjmp	.+162    	; 0x7800 <_ZN16Adafruit_SSD130613drawFastVLineEiiij+0x158>
    775e:	8a 81       	ldd	r24, Y+2	; 0x02
    7760:	9b 81       	ldd	r25, Y+3	; 0x03
    7762:	fc 01       	movw	r30, r24
    7764:	24 81       	ldd	r18, Z+4	; 0x04
    7766:	35 81       	ldd	r19, Z+5	; 0x05
    7768:	8c 81       	ldd	r24, Y+4	; 0x04
    776a:	9d 81       	ldd	r25, Y+5	; 0x05
    776c:	a9 01       	movw	r20, r18
    776e:	48 1b       	sub	r20, r24
    7770:	59 0b       	sbc	r21, r25
    7772:	ca 01       	movw	r24, r20
    7774:	01 97       	sbiw	r24, 0x01	; 1
    7776:	9d 83       	std	Y+5, r25	; 0x05
    7778:	8c 83       	std	Y+4, r24	; 0x04
    777a:	8a 81       	ldd	r24, Y+2	; 0x02
    777c:	9b 81       	ldd	r25, Y+3	; 0x03
    777e:	fc 01       	movw	r30, r24
    7780:	26 81       	ldd	r18, Z+6	; 0x06
    7782:	37 81       	ldd	r19, Z+7	; 0x07
    7784:	8e 81       	ldd	r24, Y+6	; 0x06
    7786:	9f 81       	ldd	r25, Y+7	; 0x07
    7788:	a9 01       	movw	r20, r18
    778a:	48 1b       	sub	r20, r24
    778c:	59 0b       	sbc	r21, r25
    778e:	ca 01       	movw	r24, r20
    7790:	01 97       	sbiw	r24, 0x01	; 1
    7792:	9f 83       	std	Y+7, r25	; 0x07
    7794:	8e 83       	std	Y+6, r24	; 0x06
    7796:	88 85       	ldd	r24, Y+8	; 0x08
    7798:	99 85       	ldd	r25, Y+9	; 0x09
    779a:	01 97       	sbiw	r24, 0x01	; 1
    779c:	2e 81       	ldd	r18, Y+6	; 0x06
    779e:	3f 81       	ldd	r19, Y+7	; 0x07
    77a0:	f9 01       	movw	r30, r18
    77a2:	e8 1b       	sub	r30, r24
    77a4:	f9 0b       	sbc	r31, r25
    77a6:	cf 01       	movw	r24, r30
    77a8:	9f 83       	std	Y+7, r25	; 0x07
    77aa:	8e 83       	std	Y+6, r24	; 0x06
    77ac:	29 c0       	rjmp	.+82     	; 0x7800 <_ZN16Adafruit_SSD130613drawFastVLineEiiij+0x158>
    77ae:	81 e0       	ldi	r24, 0x01	; 1
    77b0:	89 83       	std	Y+1, r24	; 0x01
    77b2:	2c 81       	ldd	r18, Y+4	; 0x04
    77b4:	3d 81       	ldd	r19, Y+5	; 0x05
    77b6:	8e 81       	ldd	r24, Y+6	; 0x06
    77b8:	9f 81       	ldd	r25, Y+7	; 0x07
    77ba:	82 27       	eor	r24, r18
    77bc:	93 27       	eor	r25, r19
    77be:	9d 83       	std	Y+5, r25	; 0x05
    77c0:	8c 83       	std	Y+4, r24	; 0x04
    77c2:	2e 81       	ldd	r18, Y+6	; 0x06
    77c4:	3f 81       	ldd	r19, Y+7	; 0x07
    77c6:	8c 81       	ldd	r24, Y+4	; 0x04
    77c8:	9d 81       	ldd	r25, Y+5	; 0x05
    77ca:	82 27       	eor	r24, r18
    77cc:	93 27       	eor	r25, r19
    77ce:	9f 83       	std	Y+7, r25	; 0x07
    77d0:	8e 83       	std	Y+6, r24	; 0x06
    77d2:	2c 81       	ldd	r18, Y+4	; 0x04
    77d4:	3d 81       	ldd	r19, Y+5	; 0x05
    77d6:	8e 81       	ldd	r24, Y+6	; 0x06
    77d8:	9f 81       	ldd	r25, Y+7	; 0x07
    77da:	82 27       	eor	r24, r18
    77dc:	93 27       	eor	r25, r19
    77de:	9d 83       	std	Y+5, r25	; 0x05
    77e0:	8c 83       	std	Y+4, r24	; 0x04
    77e2:	8a 81       	ldd	r24, Y+2	; 0x02
    77e4:	9b 81       	ldd	r25, Y+3	; 0x03
    77e6:	fc 01       	movw	r30, r24
    77e8:	26 81       	ldd	r18, Z+6	; 0x06
    77ea:	37 81       	ldd	r19, Z+7	; 0x07
    77ec:	8e 81       	ldd	r24, Y+6	; 0x06
    77ee:	9f 81       	ldd	r25, Y+7	; 0x07
    77f0:	a9 01       	movw	r20, r18
    77f2:	48 1b       	sub	r20, r24
    77f4:	59 0b       	sbc	r21, r25
    77f6:	ca 01       	movw	r24, r20
    77f8:	01 97       	sbiw	r24, 0x01	; 1
    77fa:	9f 83       	std	Y+7, r25	; 0x07
    77fc:	8e 83       	std	Y+6, r24	; 0x06
    77fe:	00 00       	nop
    7800:	89 81       	ldd	r24, Y+1	; 0x01
    7802:	88 23       	and	r24, r24
    7804:	69 f0       	breq	.+26     	; 0x7820 <_ZN16Adafruit_SSD130613drawFastVLineEiiij+0x178>
    7806:	ea 85       	ldd	r30, Y+10	; 0x0a
    7808:	fb 85       	ldd	r31, Y+11	; 0x0b
    780a:	28 85       	ldd	r18, Y+8	; 0x08
    780c:	39 85       	ldd	r19, Y+9	; 0x09
    780e:	4e 81       	ldd	r20, Y+6	; 0x06
    7810:	5f 81       	ldd	r21, Y+7	; 0x07
    7812:	6c 81       	ldd	r22, Y+4	; 0x04
    7814:	7d 81       	ldd	r23, Y+5	; 0x05
    7816:	8a 81       	ldd	r24, Y+2	; 0x02
    7818:	9b 81       	ldd	r25, Y+3	; 0x03
    781a:	8f 01       	movw	r16, r30
    781c:	4d de       	rcall	.-870    	; 0x74b8 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij>
    781e:	0c c0       	rjmp	.+24     	; 0x7838 <_ZN16Adafruit_SSD130613drawFastVLineEiiij+0x190>
    7820:	ea 85       	ldd	r30, Y+10	; 0x0a
    7822:	fb 85       	ldd	r31, Y+11	; 0x0b
    7824:	28 85       	ldd	r18, Y+8	; 0x08
    7826:	39 85       	ldd	r19, Y+9	; 0x09
    7828:	4e 81       	ldd	r20, Y+6	; 0x06
    782a:	5f 81       	ldd	r21, Y+7	; 0x07
    782c:	6c 81       	ldd	r22, Y+4	; 0x04
    782e:	7d 81       	ldd	r23, Y+5	; 0x05
    7830:	8a 81       	ldd	r24, Y+2	; 0x02
    7832:	9b 81       	ldd	r25, Y+3	; 0x03
    7834:	8f 01       	movw	r16, r30
    7836:	0c d0       	rcall	.+24     	; 0x7850 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij>
    7838:	00 00       	nop
    783a:	2b 96       	adiw	r28, 0x0b	; 11
    783c:	0f b6       	in	r0, 0x3f	; 63
    783e:	f8 94       	cli
    7840:	de bf       	out	0x3e, r29	; 62
    7842:	0f be       	out	0x3f, r0	; 63
    7844:	cd bf       	out	0x3d, r28	; 61
    7846:	df 91       	pop	r29
    7848:	cf 91       	pop	r28
    784a:	1f 91       	pop	r17
    784c:	0f 91       	pop	r16
    784e:	08 95       	ret

00007850 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij>:
    7850:	0f 93       	push	r16
    7852:	1f 93       	push	r17
    7854:	cf 93       	push	r28
    7856:	df 93       	push	r29
    7858:	cd b7       	in	r28, 0x3d	; 61
    785a:	de b7       	in	r29, 0x3e	; 62
    785c:	68 97       	sbiw	r28, 0x18	; 24
    785e:	0f b6       	in	r0, 0x3f	; 63
    7860:	f8 94       	cli
    7862:	de bf       	out	0x3e, r29	; 62
    7864:	0f be       	out	0x3f, r0	; 63
    7866:	cd bf       	out	0x3d, r28	; 61
    7868:	98 8b       	std	Y+16, r25	; 0x10
    786a:	8f 87       	std	Y+15, r24	; 0x0f
    786c:	7a 8b       	std	Y+18, r23	; 0x12
    786e:	69 8b       	std	Y+17, r22	; 0x11
    7870:	5c 8b       	std	Y+20, r21	; 0x14
    7872:	4b 8b       	std	Y+19, r20	; 0x13
    7874:	3e 8b       	std	Y+22, r19	; 0x16
    7876:	2d 8b       	std	Y+21, r18	; 0x15
    7878:	18 8f       	std	Y+24, r17	; 0x18
    787a:	0f 8b       	std	Y+23, r16	; 0x17
    787c:	89 89       	ldd	r24, Y+17	; 0x11
    787e:	9a 89       	ldd	r25, Y+18	; 0x12
    7880:	99 23       	and	r25, r25
    7882:	0c f4       	brge	.+2      	; 0x7886 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x36>
    7884:	62 c1       	rjmp	.+708    	; 0x7b4a <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x2fa>
    7886:	8f 85       	ldd	r24, Y+15	; 0x0f
    7888:	98 89       	ldd	r25, Y+16	; 0x10
    788a:	fc 01       	movw	r30, r24
    788c:	24 81       	ldd	r18, Z+4	; 0x04
    788e:	35 81       	ldd	r19, Z+5	; 0x05
    7890:	89 89       	ldd	r24, Y+17	; 0x11
    7892:	9a 89       	ldd	r25, Y+18	; 0x12
    7894:	82 17       	cp	r24, r18
    7896:	93 07       	cpc	r25, r19
    7898:	0c f0       	brlt	.+2      	; 0x789c <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x4c>
    789a:	57 c1       	rjmp	.+686    	; 0x7b4a <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x2fa>
    789c:	8b 89       	ldd	r24, Y+19	; 0x13
    789e:	9c 89       	ldd	r25, Y+20	; 0x14
    78a0:	99 23       	and	r25, r25
    78a2:	54 f4       	brge	.+20     	; 0x78b8 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x68>
    78a4:	2d 89       	ldd	r18, Y+21	; 0x15
    78a6:	3e 89       	ldd	r19, Y+22	; 0x16
    78a8:	8b 89       	ldd	r24, Y+19	; 0x13
    78aa:	9c 89       	ldd	r25, Y+20	; 0x14
    78ac:	82 0f       	add	r24, r18
    78ae:	93 1f       	adc	r25, r19
    78b0:	9e 8b       	std	Y+22, r25	; 0x16
    78b2:	8d 8b       	std	Y+21, r24	; 0x15
    78b4:	1c 8a       	std	Y+20, r1	; 0x14
    78b6:	1b 8a       	std	Y+19, r1	; 0x13
    78b8:	2b 89       	ldd	r18, Y+19	; 0x13
    78ba:	3c 89       	ldd	r19, Y+20	; 0x14
    78bc:	8d 89       	ldd	r24, Y+21	; 0x15
    78be:	9e 89       	ldd	r25, Y+22	; 0x16
    78c0:	28 0f       	add	r18, r24
    78c2:	39 1f       	adc	r19, r25
    78c4:	8f 85       	ldd	r24, Y+15	; 0x0f
    78c6:	98 89       	ldd	r25, Y+16	; 0x10
    78c8:	fc 01       	movw	r30, r24
    78ca:	86 81       	ldd	r24, Z+6	; 0x06
    78cc:	97 81       	ldd	r25, Z+7	; 0x07
    78ce:	82 17       	cp	r24, r18
    78d0:	93 07       	cpc	r25, r19
    78d2:	6c f4       	brge	.+26     	; 0x78ee <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x9e>
    78d4:	8f 85       	ldd	r24, Y+15	; 0x0f
    78d6:	98 89       	ldd	r25, Y+16	; 0x10
    78d8:	fc 01       	movw	r30, r24
    78da:	26 81       	ldd	r18, Z+6	; 0x06
    78dc:	37 81       	ldd	r19, Z+7	; 0x07
    78de:	8b 89       	ldd	r24, Y+19	; 0x13
    78e0:	9c 89       	ldd	r25, Y+20	; 0x14
    78e2:	a9 01       	movw	r20, r18
    78e4:	48 1b       	sub	r20, r24
    78e6:	59 0b       	sbc	r21, r25
    78e8:	ca 01       	movw	r24, r20
    78ea:	9e 8b       	std	Y+22, r25	; 0x16
    78ec:	8d 8b       	std	Y+21, r24	; 0x15
    78ee:	8d 89       	ldd	r24, Y+21	; 0x15
    78f0:	9e 89       	ldd	r25, Y+22	; 0x16
    78f2:	18 16       	cp	r1, r24
    78f4:	19 06       	cpc	r1, r25
    78f6:	0c f0       	brlt	.+2      	; 0x78fa <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0xaa>
    78f8:	28 c1       	rjmp	.+592    	; 0x7b4a <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x2fa>
    78fa:	8b 89       	ldd	r24, Y+19	; 0x13
    78fc:	8e 83       	std	Y+6, r24	; 0x06
    78fe:	8d 89       	ldd	r24, Y+21	; 0x15
    7900:	89 83       	std	Y+1, r24	; 0x01
    7902:	8f 85       	ldd	r24, Y+15	; 0x0f
    7904:	98 89       	ldd	r25, Y+16	; 0x10
    7906:	fc 01       	movw	r30, r24
    7908:	87 8d       	ldd	r24, Z+31	; 0x1f
    790a:	90 a1       	ldd	r25, Z+32	; 0x20
    790c:	2e 81       	ldd	r18, Y+6	; 0x06
    790e:	26 95       	lsr	r18
    7910:	26 95       	lsr	r18
    7912:	26 95       	lsr	r18
    7914:	62 2f       	mov	r22, r18
    7916:	70 e0       	ldi	r23, 0x00	; 0
    7918:	2f 85       	ldd	r18, Y+15	; 0x0f
    791a:	38 89       	ldd	r19, Y+16	; 0x10
    791c:	f9 01       	movw	r30, r18
    791e:	24 81       	ldd	r18, Z+4	; 0x04
    7920:	35 81       	ldd	r19, Z+5	; 0x05
    7922:	62 9f       	mul	r22, r18
    7924:	a0 01       	movw	r20, r0
    7926:	63 9f       	mul	r22, r19
    7928:	50 0d       	add	r21, r0
    792a:	72 9f       	mul	r23, r18
    792c:	50 0d       	add	r21, r0
    792e:	11 24       	eor	r1, r1
    7930:	29 89       	ldd	r18, Y+17	; 0x11
    7932:	3a 89       	ldd	r19, Y+18	; 0x12
    7934:	24 0f       	add	r18, r20
    7936:	35 1f       	adc	r19, r21
    7938:	82 0f       	add	r24, r18
    793a:	93 1f       	adc	r25, r19
    793c:	9b 83       	std	Y+3, r25	; 0x03
    793e:	8a 83       	std	Y+2, r24	; 0x02
    7940:	8e 81       	ldd	r24, Y+6	; 0x06
    7942:	87 70       	andi	r24, 0x07	; 7
    7944:	8c 83       	std	Y+4, r24	; 0x04
    7946:	8c 81       	ldd	r24, Y+4	; 0x04
    7948:	88 23       	and	r24, r24
    794a:	09 f4       	brne	.+2      	; 0x794e <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0xfe>
    794c:	68 c0       	rjmp	.+208    	; 0x7a1e <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x1ce>
    794e:	98 e0       	ldi	r25, 0x08	; 8
    7950:	8c 81       	ldd	r24, Y+4	; 0x04
    7952:	f9 2f       	mov	r31, r25
    7954:	f8 1b       	sub	r31, r24
    7956:	8f 2f       	mov	r24, r31
    7958:	8c 83       	std	Y+4, r24	; 0x04
    795a:	8c 81       	ldd	r24, Y+4	; 0x04
    795c:	88 2f       	mov	r24, r24
    795e:	90 e0       	ldi	r25, 0x00	; 0
    7960:	88 52       	subi	r24, 0x28	; 40
    7962:	92 4f       	sbci	r25, 0xF2	; 242
    7964:	98 87       	std	Y+8, r25	; 0x08
    7966:	8f 83       	std	Y+7, r24	; 0x07
    7968:	8f 81       	ldd	r24, Y+7	; 0x07
    796a:	98 85       	ldd	r25, Y+8	; 0x08
    796c:	fc 01       	movw	r30, r24
    796e:	84 91       	lpm	r24, Z
    7970:	89 87       	std	Y+9, r24	; 0x09
    7972:	89 85       	ldd	r24, Y+9	; 0x09
    7974:	8d 83       	std	Y+5, r24	; 0x05
    7976:	99 81       	ldd	r25, Y+1	; 0x01
    7978:	8c 81       	ldd	r24, Y+4	; 0x04
    797a:	98 17       	cp	r25, r24
    797c:	98 f4       	brcc	.+38     	; 0x79a4 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x154>
    797e:	8c 81       	ldd	r24, Y+4	; 0x04
    7980:	28 2f       	mov	r18, r24
    7982:	30 e0       	ldi	r19, 0x00	; 0
    7984:	89 81       	ldd	r24, Y+1	; 0x01
    7986:	88 2f       	mov	r24, r24
    7988:	90 e0       	ldi	r25, 0x00	; 0
    798a:	28 1b       	sub	r18, r24
    798c:	39 0b       	sbc	r19, r25
    798e:	8f ef       	ldi	r24, 0xFF	; 255
    7990:	90 e0       	ldi	r25, 0x00	; 0
    7992:	02 c0       	rjmp	.+4      	; 0x7998 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x148>
    7994:	95 95       	asr	r25
    7996:	87 95       	ror	r24
    7998:	2a 95       	dec	r18
    799a:	e2 f7       	brpl	.-8      	; 0x7994 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x144>
    799c:	98 2f       	mov	r25, r24
    799e:	8d 81       	ldd	r24, Y+5	; 0x05
    79a0:	89 23       	and	r24, r25
    79a2:	8d 83       	std	Y+5, r24	; 0x05
    79a4:	8f 89       	ldd	r24, Y+23	; 0x17
    79a6:	98 8d       	ldd	r25, Y+24	; 0x18
    79a8:	81 30       	cpi	r24, 0x01	; 1
    79aa:	91 05       	cpc	r25, r1
    79ac:	31 f0       	breq	.+12     	; 0x79ba <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x16a>
    79ae:	81 30       	cpi	r24, 0x01	; 1
    79b0:	91 05       	cpc	r25, r1
    79b2:	78 f0       	brcs	.+30     	; 0x79d2 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x182>
    79b4:	02 97       	sbiw	r24, 0x02	; 2
    79b6:	d9 f0       	breq	.+54     	; 0x79ee <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x19e>
    79b8:	26 c0       	rjmp	.+76     	; 0x7a06 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x1b6>
    79ba:	8a 81       	ldd	r24, Y+2	; 0x02
    79bc:	9b 81       	ldd	r25, Y+3	; 0x03
    79be:	fc 01       	movw	r30, r24
    79c0:	90 81       	ld	r25, Z
    79c2:	8d 81       	ldd	r24, Y+5	; 0x05
    79c4:	29 2f       	mov	r18, r25
    79c6:	28 2b       	or	r18, r24
    79c8:	8a 81       	ldd	r24, Y+2	; 0x02
    79ca:	9b 81       	ldd	r25, Y+3	; 0x03
    79cc:	fc 01       	movw	r30, r24
    79ce:	20 83       	st	Z, r18
    79d0:	1a c0       	rjmp	.+52     	; 0x7a06 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x1b6>
    79d2:	8a 81       	ldd	r24, Y+2	; 0x02
    79d4:	9b 81       	ldd	r25, Y+3	; 0x03
    79d6:	fc 01       	movw	r30, r24
    79d8:	80 81       	ld	r24, Z
    79da:	98 2f       	mov	r25, r24
    79dc:	8d 81       	ldd	r24, Y+5	; 0x05
    79de:	80 95       	com	r24
    79e0:	89 23       	and	r24, r25
    79e2:	28 2f       	mov	r18, r24
    79e4:	8a 81       	ldd	r24, Y+2	; 0x02
    79e6:	9b 81       	ldd	r25, Y+3	; 0x03
    79e8:	fc 01       	movw	r30, r24
    79ea:	20 83       	st	Z, r18
    79ec:	0c c0       	rjmp	.+24     	; 0x7a06 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x1b6>
    79ee:	8a 81       	ldd	r24, Y+2	; 0x02
    79f0:	9b 81       	ldd	r25, Y+3	; 0x03
    79f2:	fc 01       	movw	r30, r24
    79f4:	90 81       	ld	r25, Z
    79f6:	8d 81       	ldd	r24, Y+5	; 0x05
    79f8:	29 2f       	mov	r18, r25
    79fa:	28 27       	eor	r18, r24
    79fc:	8a 81       	ldd	r24, Y+2	; 0x02
    79fe:	9b 81       	ldd	r25, Y+3	; 0x03
    7a00:	fc 01       	movw	r30, r24
    7a02:	20 83       	st	Z, r18
    7a04:	00 00       	nop
    7a06:	8f 85       	ldd	r24, Y+15	; 0x0f
    7a08:	98 89       	ldd	r25, Y+16	; 0x10
    7a0a:	fc 01       	movw	r30, r24
    7a0c:	84 81       	ldd	r24, Z+4	; 0x04
    7a0e:	95 81       	ldd	r25, Z+5	; 0x05
    7a10:	9c 01       	movw	r18, r24
    7a12:	8a 81       	ldd	r24, Y+2	; 0x02
    7a14:	9b 81       	ldd	r25, Y+3	; 0x03
    7a16:	82 0f       	add	r24, r18
    7a18:	93 1f       	adc	r25, r19
    7a1a:	9b 83       	std	Y+3, r25	; 0x03
    7a1c:	8a 83       	std	Y+2, r24	; 0x02
    7a1e:	99 81       	ldd	r25, Y+1	; 0x01
    7a20:	8c 81       	ldd	r24, Y+4	; 0x04
    7a22:	98 17       	cp	r25, r24
    7a24:	08 f4       	brcc	.+2      	; 0x7a28 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x1d8>
    7a26:	91 c0       	rjmp	.+290    	; 0x7b4a <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x2fa>
    7a28:	99 81       	ldd	r25, Y+1	; 0x01
    7a2a:	8c 81       	ldd	r24, Y+4	; 0x04
    7a2c:	f9 2f       	mov	r31, r25
    7a2e:	f8 1b       	sub	r31, r24
    7a30:	8f 2f       	mov	r24, r31
    7a32:	89 83       	std	Y+1, r24	; 0x01
    7a34:	89 81       	ldd	r24, Y+1	; 0x01
    7a36:	88 30       	cpi	r24, 0x08	; 8
    7a38:	08 f4       	brcc	.+2      	; 0x7a3c <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x1ec>
    7a3a:	41 c0       	rjmp	.+130    	; 0x7abe <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x26e>
    7a3c:	8f 89       	ldd	r24, Y+23	; 0x17
    7a3e:	98 8d       	ldd	r25, Y+24	; 0x18
    7a40:	02 97       	sbiw	r24, 0x02	; 2
    7a42:	e9 f4       	brne	.+58     	; 0x7a7e <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x22e>
    7a44:	8a 81       	ldd	r24, Y+2	; 0x02
    7a46:	9b 81       	ldd	r25, Y+3	; 0x03
    7a48:	fc 01       	movw	r30, r24
    7a4a:	80 81       	ld	r24, Z
    7a4c:	28 2f       	mov	r18, r24
    7a4e:	20 95       	com	r18
    7a50:	8a 81       	ldd	r24, Y+2	; 0x02
    7a52:	9b 81       	ldd	r25, Y+3	; 0x03
    7a54:	fc 01       	movw	r30, r24
    7a56:	20 83       	st	Z, r18
    7a58:	8f 85       	ldd	r24, Y+15	; 0x0f
    7a5a:	98 89       	ldd	r25, Y+16	; 0x10
    7a5c:	fc 01       	movw	r30, r24
    7a5e:	84 81       	ldd	r24, Z+4	; 0x04
    7a60:	95 81       	ldd	r25, Z+5	; 0x05
    7a62:	9c 01       	movw	r18, r24
    7a64:	8a 81       	ldd	r24, Y+2	; 0x02
    7a66:	9b 81       	ldd	r25, Y+3	; 0x03
    7a68:	82 0f       	add	r24, r18
    7a6a:	93 1f       	adc	r25, r19
    7a6c:	9b 83       	std	Y+3, r25	; 0x03
    7a6e:	8a 83       	std	Y+2, r24	; 0x02
    7a70:	89 81       	ldd	r24, Y+1	; 0x01
    7a72:	88 50       	subi	r24, 0x08	; 8
    7a74:	89 83       	std	Y+1, r24	; 0x01
    7a76:	89 81       	ldd	r24, Y+1	; 0x01
    7a78:	88 30       	cpi	r24, 0x08	; 8
    7a7a:	08 f1       	brcs	.+66     	; 0x7abe <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x26e>
    7a7c:	e3 cf       	rjmp	.-58     	; 0x7a44 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x1f4>
    7a7e:	8f 89       	ldd	r24, Y+23	; 0x17
    7a80:	98 8d       	ldd	r25, Y+24	; 0x18
    7a82:	89 2b       	or	r24, r25
    7a84:	11 f0       	breq	.+4      	; 0x7a8a <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x23a>
    7a86:	8f ef       	ldi	r24, 0xFF	; 255
    7a88:	01 c0       	rjmp	.+2      	; 0x7a8c <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x23c>
    7a8a:	80 e0       	ldi	r24, 0x00	; 0
    7a8c:	8a 87       	std	Y+10, r24	; 0x0a
    7a8e:	8a 81       	ldd	r24, Y+2	; 0x02
    7a90:	9b 81       	ldd	r25, Y+3	; 0x03
    7a92:	2a 85       	ldd	r18, Y+10	; 0x0a
    7a94:	fc 01       	movw	r30, r24
    7a96:	20 83       	st	Z, r18
    7a98:	8f 85       	ldd	r24, Y+15	; 0x0f
    7a9a:	98 89       	ldd	r25, Y+16	; 0x10
    7a9c:	fc 01       	movw	r30, r24
    7a9e:	84 81       	ldd	r24, Z+4	; 0x04
    7aa0:	95 81       	ldd	r25, Z+5	; 0x05
    7aa2:	9c 01       	movw	r18, r24
    7aa4:	8a 81       	ldd	r24, Y+2	; 0x02
    7aa6:	9b 81       	ldd	r25, Y+3	; 0x03
    7aa8:	82 0f       	add	r24, r18
    7aaa:	93 1f       	adc	r25, r19
    7aac:	9b 83       	std	Y+3, r25	; 0x03
    7aae:	8a 83       	std	Y+2, r24	; 0x02
    7ab0:	89 81       	ldd	r24, Y+1	; 0x01
    7ab2:	88 50       	subi	r24, 0x08	; 8
    7ab4:	89 83       	std	Y+1, r24	; 0x01
    7ab6:	89 81       	ldd	r24, Y+1	; 0x01
    7ab8:	88 30       	cpi	r24, 0x08	; 8
    7aba:	08 f0       	brcs	.+2      	; 0x7abe <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x26e>
    7abc:	e8 cf       	rjmp	.-48     	; 0x7a8e <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x23e>
    7abe:	89 81       	ldd	r24, Y+1	; 0x01
    7ac0:	88 23       	and	r24, r24
    7ac2:	09 f4       	brne	.+2      	; 0x7ac6 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x276>
    7ac4:	42 c0       	rjmp	.+132    	; 0x7b4a <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x2fa>
    7ac6:	89 81       	ldd	r24, Y+1	; 0x01
    7ac8:	87 70       	andi	r24, 0x07	; 7
    7aca:	8c 83       	std	Y+4, r24	; 0x04
    7acc:	8c 81       	ldd	r24, Y+4	; 0x04
    7ace:	88 2f       	mov	r24, r24
    7ad0:	90 e0       	ldi	r25, 0x00	; 0
    7ad2:	80 52       	subi	r24, 0x20	; 32
    7ad4:	92 4f       	sbci	r25, 0xF2	; 242
    7ad6:	9c 87       	std	Y+12, r25	; 0x0c
    7ad8:	8b 87       	std	Y+11, r24	; 0x0b
    7ada:	8b 85       	ldd	r24, Y+11	; 0x0b
    7adc:	9c 85       	ldd	r25, Y+12	; 0x0c
    7ade:	fc 01       	movw	r30, r24
    7ae0:	84 91       	lpm	r24, Z
    7ae2:	8d 87       	std	Y+13, r24	; 0x0d
    7ae4:	8d 85       	ldd	r24, Y+13	; 0x0d
    7ae6:	8e 87       	std	Y+14, r24	; 0x0e
    7ae8:	8f 89       	ldd	r24, Y+23	; 0x17
    7aea:	98 8d       	ldd	r25, Y+24	; 0x18
    7aec:	81 30       	cpi	r24, 0x01	; 1
    7aee:	91 05       	cpc	r25, r1
    7af0:	31 f0       	breq	.+12     	; 0x7afe <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x2ae>
    7af2:	81 30       	cpi	r24, 0x01	; 1
    7af4:	91 05       	cpc	r25, r1
    7af6:	78 f0       	brcs	.+30     	; 0x7b16 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x2c6>
    7af8:	02 97       	sbiw	r24, 0x02	; 2
    7afa:	d9 f0       	breq	.+54     	; 0x7b32 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x2e2>
    7afc:	26 c0       	rjmp	.+76     	; 0x7b4a <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x2fa>
    7afe:	8a 81       	ldd	r24, Y+2	; 0x02
    7b00:	9b 81       	ldd	r25, Y+3	; 0x03
    7b02:	fc 01       	movw	r30, r24
    7b04:	90 81       	ld	r25, Z
    7b06:	8e 85       	ldd	r24, Y+14	; 0x0e
    7b08:	29 2f       	mov	r18, r25
    7b0a:	28 2b       	or	r18, r24
    7b0c:	8a 81       	ldd	r24, Y+2	; 0x02
    7b0e:	9b 81       	ldd	r25, Y+3	; 0x03
    7b10:	fc 01       	movw	r30, r24
    7b12:	20 83       	st	Z, r18
    7b14:	1a c0       	rjmp	.+52     	; 0x7b4a <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x2fa>
    7b16:	8a 81       	ldd	r24, Y+2	; 0x02
    7b18:	9b 81       	ldd	r25, Y+3	; 0x03
    7b1a:	fc 01       	movw	r30, r24
    7b1c:	80 81       	ld	r24, Z
    7b1e:	98 2f       	mov	r25, r24
    7b20:	8e 85       	ldd	r24, Y+14	; 0x0e
    7b22:	80 95       	com	r24
    7b24:	89 23       	and	r24, r25
    7b26:	28 2f       	mov	r18, r24
    7b28:	8a 81       	ldd	r24, Y+2	; 0x02
    7b2a:	9b 81       	ldd	r25, Y+3	; 0x03
    7b2c:	fc 01       	movw	r30, r24
    7b2e:	20 83       	st	Z, r18
    7b30:	0c c0       	rjmp	.+24     	; 0x7b4a <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x2fa>
    7b32:	8a 81       	ldd	r24, Y+2	; 0x02
    7b34:	9b 81       	ldd	r25, Y+3	; 0x03
    7b36:	fc 01       	movw	r30, r24
    7b38:	90 81       	ld	r25, Z
    7b3a:	8e 85       	ldd	r24, Y+14	; 0x0e
    7b3c:	29 2f       	mov	r18, r25
    7b3e:	28 27       	eor	r18, r24
    7b40:	8a 81       	ldd	r24, Y+2	; 0x02
    7b42:	9b 81       	ldd	r25, Y+3	; 0x03
    7b44:	fc 01       	movw	r30, r24
    7b46:	20 83       	st	Z, r18
    7b48:	00 00       	nop
    7b4a:	00 00       	nop
    7b4c:	68 96       	adiw	r28, 0x18	; 24
    7b4e:	0f b6       	in	r0, 0x3f	; 63
    7b50:	f8 94       	cli
    7b52:	de bf       	out	0x3e, r29	; 62
    7b54:	0f be       	out	0x3f, r0	; 63
    7b56:	cd bf       	out	0x3d, r28	; 61
    7b58:	df 91       	pop	r29
    7b5a:	cf 91       	pop	r28
    7b5c:	1f 91       	pop	r17
    7b5e:	0f 91       	pop	r16
    7b60:	08 95       	ret

00007b62 <_ZN16Adafruit_SSD13067displayEv>:
    7b62:	cf 93       	push	r28
    7b64:	df 93       	push	r29
    7b66:	cd b7       	in	r28, 0x3d	; 61
    7b68:	de b7       	in	r29, 0x3e	; 62
    7b6a:	2c 97       	sbiw	r28, 0x0c	; 12
    7b6c:	0f b6       	in	r0, 0x3f	; 63
    7b6e:	f8 94       	cli
    7b70:	de bf       	out	0x3e, r29	; 62
    7b72:	0f be       	out	0x3f, r0	; 63
    7b74:	cd bf       	out	0x3d, r28	; 61
    7b76:	9c 87       	std	Y+12, r25	; 0x0c
    7b78:	8b 87       	std	Y+11, r24	; 0x0b
    7b7a:	8b 85       	ldd	r24, Y+11	; 0x0b
    7b7c:	9c 85       	ldd	r25, Y+12	; 0x0c
    7b7e:	fc 01       	movw	r30, r24
    7b80:	85 8d       	ldd	r24, Z+29	; 0x1d
    7b82:	96 8d       	ldd	r25, Z+30	; 0x1e
    7b84:	89 2b       	or	r24, r25
    7b86:	91 f0       	breq	.+36     	; 0x7bac <_ZN16Adafruit_SSD13067displayEv+0x4a>
    7b88:	8b 85       	ldd	r24, Y+11	; 0x0b
    7b8a:	9c 85       	ldd	r25, Y+12	; 0x0c
    7b8c:	fc 01       	movw	r30, r24
    7b8e:	85 a9       	ldd	r24, Z+53	; 0x35
    7b90:	96 a9       	ldd	r25, Z+54	; 0x36
    7b92:	a7 a9       	ldd	r26, Z+55	; 0x37
    7b94:	b0 ad       	ldd	r27, Z+56	; 0x38
    7b96:	2b 85       	ldd	r18, Y+11	; 0x0b
    7b98:	3c 85       	ldd	r19, Y+12	; 0x0c
    7b9a:	f9 01       	movw	r30, r18
    7b9c:	25 8d       	ldd	r18, Z+29	; 0x1d
    7b9e:	36 8d       	ldd	r19, Z+30	; 0x1e
    7ba0:	ac 01       	movw	r20, r24
    7ba2:	bd 01       	movw	r22, r26
    7ba4:	c9 01       	movw	r24, r18
    7ba6:	0e 94 9c 20 	call	0x4138	; 0x4138 <_ZN7TwoWire8setClockEm>
    7baa:	23 c0       	rjmp	.+70     	; 0x7bf2 <_ZN16Adafruit_SSD13067displayEv+0x90>
    7bac:	8b 85       	ldd	r24, Y+11	; 0x0b
    7bae:	9c 85       	ldd	r25, Y+12	; 0x0c
    7bb0:	fc 01       	movw	r30, r24
    7bb2:	83 8d       	ldd	r24, Z+27	; 0x1b
    7bb4:	94 8d       	ldd	r25, Z+28	; 0x1c
    7bb6:	89 2b       	or	r24, r25
    7bb8:	39 f0       	breq	.+14     	; 0x7bc8 <_ZN16Adafruit_SSD13067displayEv+0x66>
    7bba:	8b 85       	ldd	r24, Y+11	; 0x0b
    7bbc:	9c 85       	ldd	r25, Y+12	; 0x0c
    7bbe:	fc 01       	movw	r30, r24
    7bc0:	86 ad       	ldd	r24, Z+62	; 0x3e
    7bc2:	97 ad       	ldd	r25, Z+63	; 0x3f
    7bc4:	0e 94 5d 23 	call	0x46ba	; 0x46ba <_ZN8SPIClass16beginTransactionE11SPISettings>
    7bc8:	8b 85       	ldd	r24, Y+11	; 0x0b
    7bca:	9c 85       	ldd	r25, Y+12	; 0x0c
    7bcc:	fc 01       	movw	r30, r24
    7bce:	87 a5       	ldd	r24, Z+47	; 0x2f
    7bd0:	90 a9       	ldd	r25, Z+48	; 0x30
    7bd2:	2b 85       	ldd	r18, Y+11	; 0x0b
    7bd4:	3c 85       	ldd	r19, Y+12	; 0x0c
    7bd6:	f9 01       	movw	r30, r18
    7bd8:	27 a5       	ldd	r18, Z+47	; 0x2f
    7bda:	30 a9       	ldd	r19, Z+48	; 0x30
    7bdc:	f9 01       	movw	r30, r18
    7bde:	20 81       	ld	r18, Z
    7be0:	42 2f       	mov	r20, r18
    7be2:	2b 85       	ldd	r18, Y+11	; 0x0b
    7be4:	3c 85       	ldd	r19, Y+12	; 0x0c
    7be6:	f9 01       	movw	r30, r18
    7be8:	24 a9       	ldd	r18, Z+52	; 0x34
    7bea:	20 95       	com	r18
    7bec:	24 23       	and	r18, r20
    7bee:	fc 01       	movw	r30, r24
    7bf0:	20 83       	st	Z, r18
    7bf2:	25 e0       	ldi	r18, 0x05	; 5
    7bf4:	8b 85       	ldd	r24, Y+11	; 0x0b
    7bf6:	9c 85       	ldd	r25, Y+12	; 0x0c
    7bf8:	42 2f       	mov	r20, r18
    7bfa:	68 ee       	ldi	r22, 0xE8	; 232
    7bfc:	7d e0       	ldi	r23, 0x0D	; 13
    7bfe:	0e 94 b0 32 	call	0x6560	; 0x6560 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh>
    7c02:	8b 85       	ldd	r24, Y+11	; 0x0b
    7c04:	9c 85       	ldd	r25, Y+12	; 0x0c
    7c06:	fc 01       	movw	r30, r24
    7c08:	84 81       	ldd	r24, Z+4	; 0x04
    7c0a:	95 81       	ldd	r25, Z+5	; 0x05
    7c0c:	2f ef       	ldi	r18, 0xFF	; 255
    7c0e:	28 0f       	add	r18, r24
    7c10:	8b 85       	ldd	r24, Y+11	; 0x0b
    7c12:	9c 85       	ldd	r25, Y+12	; 0x0c
    7c14:	62 2f       	mov	r22, r18
    7c16:	0e 94 cd 31 	call	0x639a	; 0x639a <_ZN16Adafruit_SSD130616ssd1306_command1Eh>
    7c1a:	8b 85       	ldd	r24, Y+11	; 0x0b
    7c1c:	9c 85       	ldd	r25, Y+12	; 0x0c
    7c1e:	fc 01       	movw	r30, r24
    7c20:	24 81       	ldd	r18, Z+4	; 0x04
    7c22:	35 81       	ldd	r19, Z+5	; 0x05
    7c24:	8b 85       	ldd	r24, Y+11	; 0x0b
    7c26:	9c 85       	ldd	r25, Y+12	; 0x0c
    7c28:	fc 01       	movw	r30, r24
    7c2a:	86 81       	ldd	r24, Z+6	; 0x06
    7c2c:	97 81       	ldd	r25, Z+7	; 0x07
    7c2e:	07 96       	adiw	r24, 0x07	; 7
    7c30:	99 23       	and	r25, r25
    7c32:	0c f4       	brge	.+2      	; 0x7c36 <_ZN16Adafruit_SSD13067displayEv+0xd4>
    7c34:	07 96       	adiw	r24, 0x07	; 7
    7c36:	95 95       	asr	r25
    7c38:	87 95       	ror	r24
    7c3a:	95 95       	asr	r25
    7c3c:	87 95       	ror	r24
    7c3e:	95 95       	asr	r25
    7c40:	87 95       	ror	r24
    7c42:	ac 01       	movw	r20, r24
    7c44:	24 9f       	mul	r18, r20
    7c46:	c0 01       	movw	r24, r0
    7c48:	25 9f       	mul	r18, r21
    7c4a:	90 0d       	add	r25, r0
    7c4c:	34 9f       	mul	r19, r20
    7c4e:	90 0d       	add	r25, r0
    7c50:	11 24       	eor	r1, r1
    7c52:	9a 83       	std	Y+2, r25	; 0x02
    7c54:	89 83       	std	Y+1, r24	; 0x01
    7c56:	8b 85       	ldd	r24, Y+11	; 0x0b
    7c58:	9c 85       	ldd	r25, Y+12	; 0x0c
    7c5a:	fc 01       	movw	r30, r24
    7c5c:	87 8d       	ldd	r24, Z+31	; 0x1f
    7c5e:	90 a1       	ldd	r25, Z+32	; 0x20
    7c60:	9c 83       	std	Y+4, r25	; 0x04
    7c62:	8b 83       	std	Y+3, r24	; 0x03
    7c64:	8b 85       	ldd	r24, Y+11	; 0x0b
    7c66:	9c 85       	ldd	r25, Y+12	; 0x0c
    7c68:	fc 01       	movw	r30, r24
    7c6a:	85 8d       	ldd	r24, Z+29	; 0x1d
    7c6c:	96 8d       	ldd	r25, Z+30	; 0x1e
    7c6e:	89 2b       	or	r24, r25
    7c70:	09 f4       	brne	.+2      	; 0x7c74 <_ZN16Adafruit_SSD13067displayEv+0x112>
    7c72:	8f c0       	rjmp	.+286    	; 0x7d92 <_ZN16Adafruit_SSD13067displayEv+0x230>
    7c74:	8b 85       	ldd	r24, Y+11	; 0x0b
    7c76:	9c 85       	ldd	r25, Y+12	; 0x0c
    7c78:	fc 01       	movw	r30, r24
    7c7a:	81 a1       	ldd	r24, Z+33	; 0x21
    7c7c:	28 2f       	mov	r18, r24
    7c7e:	88 0f       	add	r24, r24
    7c80:	33 0b       	sbc	r19, r19
    7c82:	8b 85       	ldd	r24, Y+11	; 0x0b
    7c84:	9c 85       	ldd	r25, Y+12	; 0x0c
    7c86:	fc 01       	movw	r30, r24
    7c88:	85 8d       	ldd	r24, Z+29	; 0x1d
    7c8a:	96 8d       	ldd	r25, Z+30	; 0x1e
    7c8c:	b9 01       	movw	r22, r18
    7c8e:	0e 94 89 21 	call	0x4312	; 0x4312 <_ZN7TwoWire17beginTransmissionEi>
    7c92:	8b 85       	ldd	r24, Y+11	; 0x0b
    7c94:	9c 85       	ldd	r25, Y+12	; 0x0c
    7c96:	fc 01       	movw	r30, r24
    7c98:	85 8d       	ldd	r24, Z+29	; 0x1d
    7c9a:	96 8d       	ldd	r25, Z+30	; 0x1e
    7c9c:	fc 01       	movw	r30, r24
    7c9e:	80 81       	ld	r24, Z
    7ca0:	91 81       	ldd	r25, Z+1	; 0x01
    7ca2:	fc 01       	movw	r30, r24
    7ca4:	20 81       	ld	r18, Z
    7ca6:	31 81       	ldd	r19, Z+1	; 0x01
    7ca8:	8b 85       	ldd	r24, Y+11	; 0x0b
    7caa:	9c 85       	ldd	r25, Y+12	; 0x0c
    7cac:	fc 01       	movw	r30, r24
    7cae:	85 8d       	ldd	r24, Z+29	; 0x1d
    7cb0:	96 8d       	ldd	r25, Z+30	; 0x1e
    7cb2:	60 e4       	ldi	r22, 0x40	; 64
    7cb4:	f9 01       	movw	r30, r18
    7cb6:	19 95       	eicall
    7cb8:	81 e0       	ldi	r24, 0x01	; 1
    7cba:	90 e0       	ldi	r25, 0x00	; 0
    7cbc:	9e 83       	std	Y+6, r25	; 0x06
    7cbe:	8d 83       	std	Y+5, r24	; 0x05
    7cc0:	89 81       	ldd	r24, Y+1	; 0x01
    7cc2:	9a 81       	ldd	r25, Y+2	; 0x02
    7cc4:	9c 01       	movw	r18, r24
    7cc6:	21 50       	subi	r18, 0x01	; 1
    7cc8:	31 09       	sbc	r19, r1
    7cca:	3a 83       	std	Y+2, r19	; 0x02
    7ccc:	29 83       	std	Y+1, r18	; 0x01
    7cce:	21 e0       	ldi	r18, 0x01	; 1
    7cd0:	89 2b       	or	r24, r25
    7cd2:	09 f4       	brne	.+2      	; 0x7cd6 <_ZN16Adafruit_SSD13067displayEv+0x174>
    7cd4:	20 e0       	ldi	r18, 0x00	; 0
    7cd6:	22 23       	and	r18, r18
    7cd8:	09 f4       	brne	.+2      	; 0x7cdc <_ZN16Adafruit_SSD13067displayEv+0x17a>
    7cda:	53 c0       	rjmp	.+166    	; 0x7d82 <_ZN16Adafruit_SSD13067displayEv+0x220>
    7cdc:	8d 81       	ldd	r24, Y+5	; 0x05
    7cde:	9e 81       	ldd	r25, Y+6	; 0x06
    7ce0:	80 97       	sbiw	r24, 0x20	; 32
    7ce2:	68 f1       	brcs	.+90     	; 0x7d3e <_ZN16Adafruit_SSD13067displayEv+0x1dc>
    7ce4:	8b 85       	ldd	r24, Y+11	; 0x0b
    7ce6:	9c 85       	ldd	r25, Y+12	; 0x0c
    7ce8:	fc 01       	movw	r30, r24
    7cea:	85 8d       	ldd	r24, Z+29	; 0x1d
    7cec:	96 8d       	ldd	r25, Z+30	; 0x1e
    7cee:	0e 94 c4 21 	call	0x4388	; 0x4388 <_ZN7TwoWire15endTransmissionEv>
    7cf2:	8b 85       	ldd	r24, Y+11	; 0x0b
    7cf4:	9c 85       	ldd	r25, Y+12	; 0x0c
    7cf6:	fc 01       	movw	r30, r24
    7cf8:	81 a1       	ldd	r24, Z+33	; 0x21
    7cfa:	28 2f       	mov	r18, r24
    7cfc:	88 0f       	add	r24, r24
    7cfe:	33 0b       	sbc	r19, r19
    7d00:	8b 85       	ldd	r24, Y+11	; 0x0b
    7d02:	9c 85       	ldd	r25, Y+12	; 0x0c
    7d04:	fc 01       	movw	r30, r24
    7d06:	85 8d       	ldd	r24, Z+29	; 0x1d
    7d08:	96 8d       	ldd	r25, Z+30	; 0x1e
    7d0a:	b9 01       	movw	r22, r18
    7d0c:	0e 94 89 21 	call	0x4312	; 0x4312 <_ZN7TwoWire17beginTransmissionEi>
    7d10:	8b 85       	ldd	r24, Y+11	; 0x0b
    7d12:	9c 85       	ldd	r25, Y+12	; 0x0c
    7d14:	fc 01       	movw	r30, r24
    7d16:	85 8d       	ldd	r24, Z+29	; 0x1d
    7d18:	96 8d       	ldd	r25, Z+30	; 0x1e
    7d1a:	fc 01       	movw	r30, r24
    7d1c:	80 81       	ld	r24, Z
    7d1e:	91 81       	ldd	r25, Z+1	; 0x01
    7d20:	fc 01       	movw	r30, r24
    7d22:	20 81       	ld	r18, Z
    7d24:	31 81       	ldd	r19, Z+1	; 0x01
    7d26:	8b 85       	ldd	r24, Y+11	; 0x0b
    7d28:	9c 85       	ldd	r25, Y+12	; 0x0c
    7d2a:	fc 01       	movw	r30, r24
    7d2c:	85 8d       	ldd	r24, Z+29	; 0x1d
    7d2e:	96 8d       	ldd	r25, Z+30	; 0x1e
    7d30:	60 e4       	ldi	r22, 0x40	; 64
    7d32:	f9 01       	movw	r30, r18
    7d34:	19 95       	eicall
    7d36:	81 e0       	ldi	r24, 0x01	; 1
    7d38:	90 e0       	ldi	r25, 0x00	; 0
    7d3a:	9e 83       	std	Y+6, r25	; 0x06
    7d3c:	8d 83       	std	Y+5, r24	; 0x05
    7d3e:	8b 85       	ldd	r24, Y+11	; 0x0b
    7d40:	9c 85       	ldd	r25, Y+12	; 0x0c
    7d42:	fc 01       	movw	r30, r24
    7d44:	85 8d       	ldd	r24, Z+29	; 0x1d
    7d46:	96 8d       	ldd	r25, Z+30	; 0x1e
    7d48:	fc 01       	movw	r30, r24
    7d4a:	80 81       	ld	r24, Z
    7d4c:	91 81       	ldd	r25, Z+1	; 0x01
    7d4e:	fc 01       	movw	r30, r24
    7d50:	20 81       	ld	r18, Z
    7d52:	31 81       	ldd	r19, Z+1	; 0x01
    7d54:	8b 81       	ldd	r24, Y+3	; 0x03
    7d56:	9c 81       	ldd	r25, Y+4	; 0x04
    7d58:	ac 01       	movw	r20, r24
    7d5a:	4f 5f       	subi	r20, 0xFF	; 255
    7d5c:	5f 4f       	sbci	r21, 0xFF	; 255
    7d5e:	5c 83       	std	Y+4, r21	; 0x04
    7d60:	4b 83       	std	Y+3, r20	; 0x03
    7d62:	fc 01       	movw	r30, r24
    7d64:	40 81       	ld	r20, Z
    7d66:	8b 85       	ldd	r24, Y+11	; 0x0b
    7d68:	9c 85       	ldd	r25, Y+12	; 0x0c
    7d6a:	fc 01       	movw	r30, r24
    7d6c:	85 8d       	ldd	r24, Z+29	; 0x1d
    7d6e:	96 8d       	ldd	r25, Z+30	; 0x1e
    7d70:	64 2f       	mov	r22, r20
    7d72:	f9 01       	movw	r30, r18
    7d74:	19 95       	eicall
    7d76:	8d 81       	ldd	r24, Y+5	; 0x05
    7d78:	9e 81       	ldd	r25, Y+6	; 0x06
    7d7a:	01 96       	adiw	r24, 0x01	; 1
    7d7c:	9e 83       	std	Y+6, r25	; 0x06
    7d7e:	8d 83       	std	Y+5, r24	; 0x05
    7d80:	9f cf       	rjmp	.-194    	; 0x7cc0 <_ZN16Adafruit_SSD13067displayEv+0x15e>
    7d82:	8b 85       	ldd	r24, Y+11	; 0x0b
    7d84:	9c 85       	ldd	r25, Y+12	; 0x0c
    7d86:	fc 01       	movw	r30, r24
    7d88:	85 8d       	ldd	r24, Z+29	; 0x1d
    7d8a:	96 8d       	ldd	r25, Z+30	; 0x1e
    7d8c:	0e 94 c4 21 	call	0x4388	; 0x4388 <_ZN7TwoWire15endTransmissionEv>
    7d90:	9c c0       	rjmp	.+312    	; 0x7eca <_ZN16Adafruit_SSD13067displayEv+0x368>
    7d92:	8b 85       	ldd	r24, Y+11	; 0x0b
    7d94:	9c 85       	ldd	r25, Y+12	; 0x0c
    7d96:	fc 01       	movw	r30, r24
    7d98:	85 a5       	ldd	r24, Z+45	; 0x2d
    7d9a:	96 a5       	ldd	r25, Z+46	; 0x2e
    7d9c:	2b 85       	ldd	r18, Y+11	; 0x0b
    7d9e:	3c 85       	ldd	r19, Y+12	; 0x0c
    7da0:	f9 01       	movw	r30, r18
    7da2:	25 a5       	ldd	r18, Z+45	; 0x2d
    7da4:	36 a5       	ldd	r19, Z+46	; 0x2e
    7da6:	f9 01       	movw	r30, r18
    7da8:	40 81       	ld	r20, Z
    7daa:	2b 85       	ldd	r18, Y+11	; 0x0b
    7dac:	3c 85       	ldd	r19, Y+12	; 0x0c
    7dae:	f9 01       	movw	r30, r18
    7db0:	23 a9       	ldd	r18, Z+51	; 0x33
    7db2:	24 2b       	or	r18, r20
    7db4:	fc 01       	movw	r30, r24
    7db6:	20 83       	st	Z, r18
    7db8:	89 81       	ldd	r24, Y+1	; 0x01
    7dba:	9a 81       	ldd	r25, Y+2	; 0x02
    7dbc:	9c 01       	movw	r18, r24
    7dbe:	21 50       	subi	r18, 0x01	; 1
    7dc0:	31 09       	sbc	r19, r1
    7dc2:	3a 83       	std	Y+2, r19	; 0x02
    7dc4:	29 83       	std	Y+1, r18	; 0x01
    7dc6:	21 e0       	ldi	r18, 0x01	; 1
    7dc8:	89 2b       	or	r24, r25
    7dca:	09 f4       	brne	.+2      	; 0x7dce <_ZN16Adafruit_SSD13067displayEv+0x26c>
    7dcc:	20 e0       	ldi	r18, 0x00	; 0
    7dce:	22 23       	and	r18, r18
    7dd0:	09 f4       	brne	.+2      	; 0x7dd4 <_ZN16Adafruit_SSD13067displayEv+0x272>
    7dd2:	7b c0       	rjmp	.+246    	; 0x7eca <_ZN16Adafruit_SSD13067displayEv+0x368>
    7dd4:	8b 81       	ldd	r24, Y+3	; 0x03
    7dd6:	9c 81       	ldd	r25, Y+4	; 0x04
    7dd8:	9c 01       	movw	r18, r24
    7dda:	2f 5f       	subi	r18, 0xFF	; 255
    7ddc:	3f 4f       	sbci	r19, 0xFF	; 255
    7dde:	3c 83       	std	Y+4, r19	; 0x04
    7de0:	2b 83       	std	Y+3, r18	; 0x03
    7de2:	fc 01       	movw	r30, r24
    7de4:	20 81       	ld	r18, Z
    7de6:	8b 85       	ldd	r24, Y+11	; 0x0b
    7de8:	9c 85       	ldd	r25, Y+12	; 0x0c
    7dea:	98 87       	std	Y+8, r25	; 0x08
    7dec:	8f 83       	std	Y+7, r24	; 0x07
    7dee:	29 87       	std	Y+9, r18	; 0x09
    7df0:	8f 81       	ldd	r24, Y+7	; 0x07
    7df2:	98 85       	ldd	r25, Y+8	; 0x08
    7df4:	fc 01       	movw	r30, r24
    7df6:	83 8d       	ldd	r24, Z+27	; 0x1b
    7df8:	94 8d       	ldd	r25, Z+28	; 0x1c
    7dfa:	89 2b       	or	r24, r25
    7dfc:	21 f0       	breq	.+8      	; 0x7e06 <_ZN16Adafruit_SSD13067displayEv+0x2a4>
    7dfe:	89 85       	ldd	r24, Y+9	; 0x09
    7e00:	0e 94 80 30 	call	0x6100	; 0x6100 <_ZN8SPIClass8transferEh>
    7e04:	d9 cf       	rjmp	.-78     	; 0x7db8 <_ZN16Adafruit_SSD13067displayEv+0x256>
    7e06:	80 e8       	ldi	r24, 0x80	; 128
    7e08:	8a 87       	std	Y+10, r24	; 0x0a
    7e0a:	8a 85       	ldd	r24, Y+10	; 0x0a
    7e0c:	88 23       	and	r24, r24
    7e0e:	a1 f2       	breq	.-88     	; 0x7db8 <_ZN16Adafruit_SSD13067displayEv+0x256>
    7e10:	99 85       	ldd	r25, Y+9	; 0x09
    7e12:	8a 85       	ldd	r24, Y+10	; 0x0a
    7e14:	89 23       	and	r24, r25
    7e16:	88 23       	and	r24, r24
    7e18:	a1 f0       	breq	.+40     	; 0x7e42 <_ZN16Adafruit_SSD13067displayEv+0x2e0>
    7e1a:	8f 81       	ldd	r24, Y+7	; 0x07
    7e1c:	98 85       	ldd	r25, Y+8	; 0x08
    7e1e:	fc 01       	movw	r30, r24
    7e20:	81 a5       	ldd	r24, Z+41	; 0x29
    7e22:	92 a5       	ldd	r25, Z+42	; 0x2a
    7e24:	2f 81       	ldd	r18, Y+7	; 0x07
    7e26:	38 85       	ldd	r19, Y+8	; 0x08
    7e28:	f9 01       	movw	r30, r18
    7e2a:	21 a5       	ldd	r18, Z+41	; 0x29
    7e2c:	32 a5       	ldd	r19, Z+42	; 0x2a
    7e2e:	f9 01       	movw	r30, r18
    7e30:	40 81       	ld	r20, Z
    7e32:	2f 81       	ldd	r18, Y+7	; 0x07
    7e34:	38 85       	ldd	r19, Y+8	; 0x08
    7e36:	f9 01       	movw	r30, r18
    7e38:	21 a9       	ldd	r18, Z+49	; 0x31
    7e3a:	24 2b       	or	r18, r20
    7e3c:	fc 01       	movw	r30, r24
    7e3e:	20 83       	st	Z, r18
    7e40:	15 c0       	rjmp	.+42     	; 0x7e6c <_ZN16Adafruit_SSD13067displayEv+0x30a>
    7e42:	8f 81       	ldd	r24, Y+7	; 0x07
    7e44:	98 85       	ldd	r25, Y+8	; 0x08
    7e46:	fc 01       	movw	r30, r24
    7e48:	81 a5       	ldd	r24, Z+41	; 0x29
    7e4a:	92 a5       	ldd	r25, Z+42	; 0x2a
    7e4c:	2f 81       	ldd	r18, Y+7	; 0x07
    7e4e:	38 85       	ldd	r19, Y+8	; 0x08
    7e50:	f9 01       	movw	r30, r18
    7e52:	21 a5       	ldd	r18, Z+41	; 0x29
    7e54:	32 a5       	ldd	r19, Z+42	; 0x2a
    7e56:	f9 01       	movw	r30, r18
    7e58:	20 81       	ld	r18, Z
    7e5a:	42 2f       	mov	r20, r18
    7e5c:	2f 81       	ldd	r18, Y+7	; 0x07
    7e5e:	38 85       	ldd	r19, Y+8	; 0x08
    7e60:	f9 01       	movw	r30, r18
    7e62:	21 a9       	ldd	r18, Z+49	; 0x31
    7e64:	20 95       	com	r18
    7e66:	24 23       	and	r18, r20
    7e68:	fc 01       	movw	r30, r24
    7e6a:	20 83       	st	Z, r18
    7e6c:	8f 81       	ldd	r24, Y+7	; 0x07
    7e6e:	98 85       	ldd	r25, Y+8	; 0x08
    7e70:	fc 01       	movw	r30, r24
    7e72:	83 a5       	ldd	r24, Z+43	; 0x2b
    7e74:	94 a5       	ldd	r25, Z+44	; 0x2c
    7e76:	2f 81       	ldd	r18, Y+7	; 0x07
    7e78:	38 85       	ldd	r19, Y+8	; 0x08
    7e7a:	f9 01       	movw	r30, r18
    7e7c:	23 a5       	ldd	r18, Z+43	; 0x2b
    7e7e:	34 a5       	ldd	r19, Z+44	; 0x2c
    7e80:	f9 01       	movw	r30, r18
    7e82:	40 81       	ld	r20, Z
    7e84:	2f 81       	ldd	r18, Y+7	; 0x07
    7e86:	38 85       	ldd	r19, Y+8	; 0x08
    7e88:	f9 01       	movw	r30, r18
    7e8a:	22 a9       	ldd	r18, Z+50	; 0x32
    7e8c:	24 2b       	or	r18, r20
    7e8e:	fc 01       	movw	r30, r24
    7e90:	20 83       	st	Z, r18
    7e92:	8f 81       	ldd	r24, Y+7	; 0x07
    7e94:	98 85       	ldd	r25, Y+8	; 0x08
    7e96:	fc 01       	movw	r30, r24
    7e98:	83 a5       	ldd	r24, Z+43	; 0x2b
    7e9a:	94 a5       	ldd	r25, Z+44	; 0x2c
    7e9c:	2f 81       	ldd	r18, Y+7	; 0x07
    7e9e:	38 85       	ldd	r19, Y+8	; 0x08
    7ea0:	f9 01       	movw	r30, r18
    7ea2:	23 a5       	ldd	r18, Z+43	; 0x2b
    7ea4:	34 a5       	ldd	r19, Z+44	; 0x2c
    7ea6:	f9 01       	movw	r30, r18
    7ea8:	20 81       	ld	r18, Z
    7eaa:	42 2f       	mov	r20, r18
    7eac:	2f 81       	ldd	r18, Y+7	; 0x07
    7eae:	38 85       	ldd	r19, Y+8	; 0x08
    7eb0:	f9 01       	movw	r30, r18
    7eb2:	22 a9       	ldd	r18, Z+50	; 0x32
    7eb4:	20 95       	com	r18
    7eb6:	24 23       	and	r18, r20
    7eb8:	fc 01       	movw	r30, r24
    7eba:	20 83       	st	Z, r18
    7ebc:	8a 85       	ldd	r24, Y+10	; 0x0a
    7ebe:	88 2f       	mov	r24, r24
    7ec0:	90 e0       	ldi	r25, 0x00	; 0
    7ec2:	95 95       	asr	r25
    7ec4:	87 95       	ror	r24
    7ec6:	8a 87       	std	Y+10, r24	; 0x0a
    7ec8:	a0 cf       	rjmp	.-192    	; 0x7e0a <_ZN16Adafruit_SSD13067displayEv+0x2a8>
    7eca:	8b 85       	ldd	r24, Y+11	; 0x0b
    7ecc:	9c 85       	ldd	r25, Y+12	; 0x0c
    7ece:	fc 01       	movw	r30, r24
    7ed0:	85 8d       	ldd	r24, Z+29	; 0x1d
    7ed2:	96 8d       	ldd	r25, Z+30	; 0x1e
    7ed4:	89 2b       	or	r24, r25
    7ed6:	91 f0       	breq	.+36     	; 0x7efc <_ZN16Adafruit_SSD13067displayEv+0x39a>
    7ed8:	8b 85       	ldd	r24, Y+11	; 0x0b
    7eda:	9c 85       	ldd	r25, Y+12	; 0x0c
    7edc:	fc 01       	movw	r30, r24
    7ede:	81 ad       	ldd	r24, Z+57	; 0x39
    7ee0:	92 ad       	ldd	r25, Z+58	; 0x3a
    7ee2:	a3 ad       	ldd	r26, Z+59	; 0x3b
    7ee4:	b4 ad       	ldd	r27, Z+60	; 0x3c
    7ee6:	2b 85       	ldd	r18, Y+11	; 0x0b
    7ee8:	3c 85       	ldd	r19, Y+12	; 0x0c
    7eea:	f9 01       	movw	r30, r18
    7eec:	25 8d       	ldd	r18, Z+29	; 0x1d
    7eee:	36 8d       	ldd	r19, Z+30	; 0x1e
    7ef0:	ac 01       	movw	r20, r24
    7ef2:	bd 01       	movw	r22, r26
    7ef4:	c9 01       	movw	r24, r18
    7ef6:	0e 94 9c 20 	call	0x4138	; 0x4138 <_ZN7TwoWire8setClockEm>
    7efa:	1c c0       	rjmp	.+56     	; 0x7f34 <_ZN16Adafruit_SSD13067displayEv+0x3d2>
    7efc:	8b 85       	ldd	r24, Y+11	; 0x0b
    7efe:	9c 85       	ldd	r25, Y+12	; 0x0c
    7f00:	fc 01       	movw	r30, r24
    7f02:	87 a5       	ldd	r24, Z+47	; 0x2f
    7f04:	90 a9       	ldd	r25, Z+48	; 0x30
    7f06:	2b 85       	ldd	r18, Y+11	; 0x0b
    7f08:	3c 85       	ldd	r19, Y+12	; 0x0c
    7f0a:	f9 01       	movw	r30, r18
    7f0c:	27 a5       	ldd	r18, Z+47	; 0x2f
    7f0e:	30 a9       	ldd	r19, Z+48	; 0x30
    7f10:	f9 01       	movw	r30, r18
    7f12:	40 81       	ld	r20, Z
    7f14:	2b 85       	ldd	r18, Y+11	; 0x0b
    7f16:	3c 85       	ldd	r19, Y+12	; 0x0c
    7f18:	f9 01       	movw	r30, r18
    7f1a:	24 a9       	ldd	r18, Z+52	; 0x34
    7f1c:	24 2b       	or	r18, r20
    7f1e:	fc 01       	movw	r30, r24
    7f20:	20 83       	st	Z, r18
    7f22:	8b 85       	ldd	r24, Y+11	; 0x0b
    7f24:	9c 85       	ldd	r25, Y+12	; 0x0c
    7f26:	fc 01       	movw	r30, r24
    7f28:	83 8d       	ldd	r24, Z+27	; 0x1b
    7f2a:	94 8d       	ldd	r25, Z+28	; 0x1c
    7f2c:	89 2b       	or	r24, r25
    7f2e:	11 f0       	breq	.+4      	; 0x7f34 <_ZN16Adafruit_SSD13067displayEv+0x3d2>
    7f30:	0e 94 9f 23 	call	0x473e	; 0x473e <_ZN8SPIClass14endTransactionEv>
    7f34:	00 00       	nop
    7f36:	2c 96       	adiw	r28, 0x0c	; 12
    7f38:	0f b6       	in	r0, 0x3f	; 63
    7f3a:	f8 94       	cli
    7f3c:	de bf       	out	0x3e, r29	; 62
    7f3e:	0f be       	out	0x3f, r0	; 63
    7f40:	cd bf       	out	0x3d, r28	; 61
    7f42:	df 91       	pop	r29
    7f44:	cf 91       	pop	r28
    7f46:	08 95       	ret

00007f48 <_ZN16Adafruit_SSD130613invertDisplayEb>:
            display() function -- buffer contents are not changed, rather a
            different pixel mode of the display hardware is used. When
            enabled, drawing SSD1306_BLACK (value 0) pixels will actually draw
   white, SSD1306_WHITE (value 1) will draw black.
*/
void Adafruit_SSD1306::invertDisplay(bool i) {
    7f48:	cf 93       	push	r28
    7f4a:	df 93       	push	r29
    7f4c:	00 d0       	rcall	.+0      	; 0x7f4e <_ZN16Adafruit_SSD130613invertDisplayEb+0x6>
    7f4e:	cd b7       	in	r28, 0x3d	; 61
    7f50:	de b7       	in	r29, 0x3e	; 62
    7f52:	9a 83       	std	Y+2, r25	; 0x02
    7f54:	89 83       	std	Y+1, r24	; 0x01
    7f56:	6b 83       	std	Y+3, r22	; 0x03
  TRANSACTION_START
    7f58:	89 81       	ldd	r24, Y+1	; 0x01
    7f5a:	9a 81       	ldd	r25, Y+2	; 0x02
    7f5c:	fc 01       	movw	r30, r24
    7f5e:	85 8d       	ldd	r24, Z+29	; 0x1d
    7f60:	96 8d       	ldd	r25, Z+30	; 0x1e
    7f62:	89 2b       	or	r24, r25
    7f64:	91 f0       	breq	.+36     	; 0x7f8a <_ZN16Adafruit_SSD130613invertDisplayEb+0x42>
    7f66:	89 81       	ldd	r24, Y+1	; 0x01
    7f68:	9a 81       	ldd	r25, Y+2	; 0x02
    7f6a:	fc 01       	movw	r30, r24
    7f6c:	85 a9       	ldd	r24, Z+53	; 0x35
    7f6e:	96 a9       	ldd	r25, Z+54	; 0x36
    7f70:	a7 a9       	ldd	r26, Z+55	; 0x37
    7f72:	b0 ad       	ldd	r27, Z+56	; 0x38
    7f74:	29 81       	ldd	r18, Y+1	; 0x01
    7f76:	3a 81       	ldd	r19, Y+2	; 0x02
    7f78:	f9 01       	movw	r30, r18
    7f7a:	25 8d       	ldd	r18, Z+29	; 0x1d
    7f7c:	36 8d       	ldd	r19, Z+30	; 0x1e
    7f7e:	ac 01       	movw	r20, r24
    7f80:	bd 01       	movw	r22, r26
    7f82:	c9 01       	movw	r24, r18
    7f84:	0e 94 9c 20 	call	0x4138	; 0x4138 <_ZN7TwoWire8setClockEm>
    7f88:	23 c0       	rjmp	.+70     	; 0x7fd0 <_ZN16Adafruit_SSD130613invertDisplayEb+0x88>
    7f8a:	89 81       	ldd	r24, Y+1	; 0x01
    7f8c:	9a 81       	ldd	r25, Y+2	; 0x02
    7f8e:	fc 01       	movw	r30, r24
    7f90:	83 8d       	ldd	r24, Z+27	; 0x1b
    7f92:	94 8d       	ldd	r25, Z+28	; 0x1c
    7f94:	89 2b       	or	r24, r25
    7f96:	39 f0       	breq	.+14     	; 0x7fa6 <_ZN16Adafruit_SSD130613invertDisplayEb+0x5e>
    7f98:	89 81       	ldd	r24, Y+1	; 0x01
    7f9a:	9a 81       	ldd	r25, Y+2	; 0x02
    7f9c:	fc 01       	movw	r30, r24
    7f9e:	86 ad       	ldd	r24, Z+62	; 0x3e
    7fa0:	97 ad       	ldd	r25, Z+63	; 0x3f
    7fa2:	0e 94 5d 23 	call	0x46ba	; 0x46ba <_ZN8SPIClass16beginTransactionE11SPISettings>
    7fa6:	89 81       	ldd	r24, Y+1	; 0x01
    7fa8:	9a 81       	ldd	r25, Y+2	; 0x02
    7faa:	fc 01       	movw	r30, r24
    7fac:	87 a5       	ldd	r24, Z+47	; 0x2f
    7fae:	90 a9       	ldd	r25, Z+48	; 0x30
    7fb0:	29 81       	ldd	r18, Y+1	; 0x01
    7fb2:	3a 81       	ldd	r19, Y+2	; 0x02
    7fb4:	f9 01       	movw	r30, r18
    7fb6:	27 a5       	ldd	r18, Z+47	; 0x2f
    7fb8:	30 a9       	ldd	r19, Z+48	; 0x30
    7fba:	f9 01       	movw	r30, r18
    7fbc:	20 81       	ld	r18, Z
    7fbe:	42 2f       	mov	r20, r18
    7fc0:	29 81       	ldd	r18, Y+1	; 0x01
    7fc2:	3a 81       	ldd	r19, Y+2	; 0x02
    7fc4:	f9 01       	movw	r30, r18
    7fc6:	24 a9       	ldd	r18, Z+52	; 0x34
    7fc8:	20 95       	com	r18
    7fca:	24 23       	and	r18, r20
    7fcc:	fc 01       	movw	r30, r24
    7fce:	20 83       	st	Z, r18
  ssd1306_command1(i ? SSD1306_INVERTDISPLAY : SSD1306_NORMALDISPLAY);
    7fd0:	8b 81       	ldd	r24, Y+3	; 0x03
    7fd2:	88 23       	and	r24, r24
    7fd4:	11 f0       	breq	.+4      	; 0x7fda <_ZN16Adafruit_SSD130613invertDisplayEb+0x92>
    7fd6:	27 ea       	ldi	r18, 0xA7	; 167
    7fd8:	01 c0       	rjmp	.+2      	; 0x7fdc <_ZN16Adafruit_SSD130613invertDisplayEb+0x94>
    7fda:	26 ea       	ldi	r18, 0xA6	; 166
    7fdc:	89 81       	ldd	r24, Y+1	; 0x01
    7fde:	9a 81       	ldd	r25, Y+2	; 0x02
    7fe0:	62 2f       	mov	r22, r18
    7fe2:	0e 94 cd 31 	call	0x639a	; 0x639a <_ZN16Adafruit_SSD130616ssd1306_command1Eh>
  TRANSACTION_END
    7fe6:	89 81       	ldd	r24, Y+1	; 0x01
    7fe8:	9a 81       	ldd	r25, Y+2	; 0x02
    7fea:	fc 01       	movw	r30, r24
    7fec:	85 8d       	ldd	r24, Z+29	; 0x1d
    7fee:	96 8d       	ldd	r25, Z+30	; 0x1e
    7ff0:	89 2b       	or	r24, r25
    7ff2:	91 f0       	breq	.+36     	; 0x8018 <_ZN16Adafruit_SSD130613invertDisplayEb+0xd0>
    7ff4:	89 81       	ldd	r24, Y+1	; 0x01
    7ff6:	9a 81       	ldd	r25, Y+2	; 0x02
    7ff8:	fc 01       	movw	r30, r24
    7ffa:	81 ad       	ldd	r24, Z+57	; 0x39
    7ffc:	92 ad       	ldd	r25, Z+58	; 0x3a
    7ffe:	a3 ad       	ldd	r26, Z+59	; 0x3b
    8000:	b4 ad       	ldd	r27, Z+60	; 0x3c
    8002:	29 81       	ldd	r18, Y+1	; 0x01
    8004:	3a 81       	ldd	r19, Y+2	; 0x02
    8006:	f9 01       	movw	r30, r18
    8008:	25 8d       	ldd	r18, Z+29	; 0x1d
    800a:	36 8d       	ldd	r19, Z+30	; 0x1e
    800c:	ac 01       	movw	r20, r24
    800e:	bd 01       	movw	r22, r26
    8010:	c9 01       	movw	r24, r18
    8012:	0e 94 9c 20 	call	0x4138	; 0x4138 <_ZN7TwoWire8setClockEm>
}
    8016:	1c c0       	rjmp	.+56     	; 0x8050 <_ZN16Adafruit_SSD130613invertDisplayEb+0x108>
   white, SSD1306_WHITE (value 1) will draw black.
*/
void Adafruit_SSD1306::invertDisplay(bool i) {
  TRANSACTION_START
  ssd1306_command1(i ? SSD1306_INVERTDISPLAY : SSD1306_NORMALDISPLAY);
  TRANSACTION_END
    8018:	89 81       	ldd	r24, Y+1	; 0x01
    801a:	9a 81       	ldd	r25, Y+2	; 0x02
    801c:	fc 01       	movw	r30, r24
    801e:	87 a5       	ldd	r24, Z+47	; 0x2f
    8020:	90 a9       	ldd	r25, Z+48	; 0x30
    8022:	29 81       	ldd	r18, Y+1	; 0x01
    8024:	3a 81       	ldd	r19, Y+2	; 0x02
    8026:	f9 01       	movw	r30, r18
    8028:	27 a5       	ldd	r18, Z+47	; 0x2f
    802a:	30 a9       	ldd	r19, Z+48	; 0x30
    802c:	f9 01       	movw	r30, r18
    802e:	40 81       	ld	r20, Z
    8030:	29 81       	ldd	r18, Y+1	; 0x01
    8032:	3a 81       	ldd	r19, Y+2	; 0x02
    8034:	f9 01       	movw	r30, r18
    8036:	24 a9       	ldd	r18, Z+52	; 0x34
    8038:	24 2b       	or	r18, r20
    803a:	fc 01       	movw	r30, r24
    803c:	20 83       	st	Z, r18
    803e:	89 81       	ldd	r24, Y+1	; 0x01
    8040:	9a 81       	ldd	r25, Y+2	; 0x02
    8042:	fc 01       	movw	r30, r24
    8044:	83 8d       	ldd	r24, Z+27	; 0x1b
    8046:	94 8d       	ldd	r25, Z+28	; 0x1c
    8048:	89 2b       	or	r24, r25
    804a:	11 f0       	breq	.+4      	; 0x8050 <_ZN16Adafruit_SSD130613invertDisplayEb+0x108>
    804c:	0e 94 9f 23 	call	0x473e	; 0x473e <_ZN8SPIClass14endTransactionEv>
}
    8050:	00 00       	nop
    8052:	0f 90       	pop	r0
    8054:	0f 90       	pop	r0
    8056:	0f 90       	pop	r0
    8058:	df 91       	pop	r29
    805a:	cf 91       	pop	r28
    805c:	08 95       	ret

0000805e <_ZN8SPIClass5beginEv>:
#ifdef SPI_TRANSACTION_MISMATCH_LED
uint8_t SPIClass::inTransactionFlag = 0;
#endif

void SPIClass::begin()
{
    805e:	cf 93       	push	r28
    8060:	df 93       	push	r29
    8062:	cd b7       	in	r28, 0x3d	; 61
    8064:	de b7       	in	r29, 0x3e	; 62
    8066:	2f 97       	sbiw	r28, 0x0f	; 15
    8068:	0f b6       	in	r0, 0x3f	; 63
    806a:	f8 94       	cli
    806c:	de bf       	out	0x3e, r29	; 62
    806e:	0f be       	out	0x3f, r0	; 63
    8070:	cd bf       	out	0x3d, r28	; 61
  uint8_t sreg = SREG;
    8072:	8f e5       	ldi	r24, 0x5F	; 95
    8074:	90 e0       	ldi	r25, 0x00	; 0
    8076:	fc 01       	movw	r30, r24
    8078:	80 81       	ld	r24, Z
    807a:	89 83       	std	Y+1, r24	; 0x01
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
    807c:	f8 94       	cli
  if (!initialized) {
    807e:	80 91 1e 04 	lds	r24, 0x041E	; 0x80041e <_ZN8SPIClass11initializedE>
    8082:	88 23       	and	r24, r24
    8084:	09 f0       	breq	.+2      	; 0x8088 <_ZN8SPIClass5beginEv+0x2a>
    8086:	5b c0       	rjmp	.+182    	; 0x813e <_ZN8SPIClass5beginEv+0xe0>
    // Set SS to high so a connected chip will be "deselected" by default
    uint8_t port = digitalPinToPort(SS);
    8088:	8e ea       	ldi	r24, 0xAE	; 174
    808a:	9e e0       	ldi	r25, 0x0E	; 14
    808c:	9b 83       	std	Y+3, r25	; 0x03
    808e:	8a 83       	std	Y+2, r24	; 0x02
    8090:	8a 81       	ldd	r24, Y+2	; 0x02
    8092:	9b 81       	ldd	r25, Y+3	; 0x03
    8094:	fc 01       	movw	r30, r24
    8096:	84 91       	lpm	r24, Z
    8098:	8c 83       	std	Y+4, r24	; 0x04
    809a:	8c 81       	ldd	r24, Y+4	; 0x04
    809c:	8d 83       	std	Y+5, r24	; 0x05
    uint8_t bit = digitalPinToBitMask(SS);
    809e:	88 e6       	ldi	r24, 0x68	; 104
    80a0:	9e e0       	ldi	r25, 0x0E	; 14
    80a2:	9f 83       	std	Y+7, r25	; 0x07
    80a4:	8e 83       	std	Y+6, r24	; 0x06
    80a6:	8e 81       	ldd	r24, Y+6	; 0x06
    80a8:	9f 81       	ldd	r25, Y+7	; 0x07
    80aa:	fc 01       	movw	r30, r24
    80ac:	84 91       	lpm	r24, Z
    80ae:	88 87       	std	Y+8, r24	; 0x08
    80b0:	88 85       	ldd	r24, Y+8	; 0x08
    80b2:	89 87       	std	Y+9, r24	; 0x09
    volatile uint8_t *reg = portModeRegister(port);
    80b4:	8d 81       	ldd	r24, Y+5	; 0x05
    80b6:	88 2f       	mov	r24, r24
    80b8:	90 e0       	ldi	r25, 0x00	; 0
    80ba:	88 0f       	add	r24, r24
    80bc:	99 1f       	adc	r25, r25
    80be:	8d 50       	subi	r24, 0x0D	; 13
    80c0:	91 4f       	sbci	r25, 0xF1	; 241
    80c2:	9b 87       	std	Y+11, r25	; 0x0b
    80c4:	8a 87       	std	Y+10, r24	; 0x0a
    80c6:	8a 85       	ldd	r24, Y+10	; 0x0a
    80c8:	9b 85       	ldd	r25, Y+11	; 0x0b
    80ca:	fc 01       	movw	r30, r24
    80cc:	25 91       	lpm	r18, Z+
    80ce:	34 91       	lpm	r19, Z
    80d0:	cf 01       	movw	r24, r30
    80d2:	3d 87       	std	Y+13, r19	; 0x0d
    80d4:	2c 87       	std	Y+12, r18	; 0x0c
    80d6:	9b 87       	std	Y+11, r25	; 0x0b
    80d8:	8a 87       	std	Y+10, r24	; 0x0a
    80da:	8c 85       	ldd	r24, Y+12	; 0x0c
    80dc:	9d 85       	ldd	r25, Y+13	; 0x0d
    80de:	9f 87       	std	Y+15, r25	; 0x0f
    80e0:	8e 87       	std	Y+14, r24	; 0x0e

    // if the SS pin is not already configured as an output
    // then set it high (to enable the internal pull-up resistor)
    if(!(*reg & bit)){
    80e2:	8e 85       	ldd	r24, Y+14	; 0x0e
    80e4:	9f 85       	ldd	r25, Y+15	; 0x0f
    80e6:	fc 01       	movw	r30, r24
    80e8:	90 81       	ld	r25, Z
    80ea:	89 85       	ldd	r24, Y+9	; 0x09
    80ec:	98 23       	and	r25, r24
    80ee:	81 e0       	ldi	r24, 0x01	; 1
    80f0:	99 23       	and	r25, r25
    80f2:	09 f0       	breq	.+2      	; 0x80f6 <_ZN8SPIClass5beginEv+0x98>
    80f4:	80 e0       	ldi	r24, 0x00	; 0
    80f6:	88 23       	and	r24, r24
    80f8:	21 f0       	breq	.+8      	; 0x8102 <_ZN8SPIClass5beginEv+0xa4>
      digitalWrite(SS, HIGH);
    80fa:	61 e0       	ldi	r22, 0x01	; 1
    80fc:	85 e3       	ldi	r24, 0x35	; 53
    80fe:	0e 94 ea 4b 	call	0x97d4	; 0x97d4 <digitalWrite>
    }

    // When the SS pin is set as OUTPUT, it can be used as
    // a general purpose output port (it doesn't influence
    // SPI operations).
    pinMode(SS, OUTPUT);
    8102:	61 e0       	ldi	r22, 0x01	; 1
    8104:	85 e3       	ldi	r24, 0x35	; 53
    8106:	0e 94 ae 4b 	call	0x975c	; 0x975c <pinMode>

    // Warning: if the SS pin ever becomes a LOW INPUT then SPI
    // automatically switches to Slave, so the data direction of
    // the SS pin MUST be kept as OUTPUT.
    SPCR |= _BV(MSTR);
    810a:	8c e4       	ldi	r24, 0x4C	; 76
    810c:	90 e0       	ldi	r25, 0x00	; 0
    810e:	2c e4       	ldi	r18, 0x4C	; 76
    8110:	30 e0       	ldi	r19, 0x00	; 0
    8112:	f9 01       	movw	r30, r18
    8114:	20 81       	ld	r18, Z
    8116:	20 61       	ori	r18, 0x10	; 16
    8118:	fc 01       	movw	r30, r24
    811a:	20 83       	st	Z, r18
    SPCR |= _BV(SPE);
    811c:	8c e4       	ldi	r24, 0x4C	; 76
    811e:	90 e0       	ldi	r25, 0x00	; 0
    8120:	2c e4       	ldi	r18, 0x4C	; 76
    8122:	30 e0       	ldi	r19, 0x00	; 0
    8124:	f9 01       	movw	r30, r18
    8126:	20 81       	ld	r18, Z
    8128:	20 64       	ori	r18, 0x40	; 64
    812a:	fc 01       	movw	r30, r24
    812c:	20 83       	st	Z, r18
    // MISO pin automatically overrides to INPUT.
    // By doing this AFTER enabling SPI, we avoid accidentally
    // clocking in a single bit since the lines go directly
    // from "input" to SPI control.
    // http://code.google.com/p/arduino/issues/detail?id=888
    pinMode(SCK, OUTPUT);
    812e:	61 e0       	ldi	r22, 0x01	; 1
    8130:	84 e3       	ldi	r24, 0x34	; 52
    8132:	0e 94 ae 4b 	call	0x975c	; 0x975c <pinMode>
    pinMode(MOSI, OUTPUT);
    8136:	61 e0       	ldi	r22, 0x01	; 1
    8138:	83 e3       	ldi	r24, 0x33	; 51
    813a:	0e 94 ae 4b 	call	0x975c	; 0x975c <pinMode>
  }
  initialized++; // reference count
    813e:	80 91 1e 04 	lds	r24, 0x041E	; 0x80041e <_ZN8SPIClass11initializedE>
    8142:	8f 5f       	subi	r24, 0xFF	; 255
    8144:	80 93 1e 04 	sts	0x041E, r24	; 0x80041e <_ZN8SPIClass11initializedE>
  SREG = sreg;
    8148:	8f e5       	ldi	r24, 0x5F	; 95
    814a:	90 e0       	ldi	r25, 0x00	; 0
    814c:	29 81       	ldd	r18, Y+1	; 0x01
    814e:	fc 01       	movw	r30, r24
    8150:	20 83       	st	Z, r18
}
    8152:	00 00       	nop
    8154:	2f 96       	adiw	r28, 0x0f	; 15
    8156:	0f b6       	in	r0, 0x3f	; 63
    8158:	f8 94       	cli
    815a:	de bf       	out	0x3e, r29	; 62
    815c:	0f be       	out	0x3f, r0	; 63
    815e:	cd bf       	out	0x3d, r28	; 61
    8160:	df 91       	pop	r29
    8162:	cf 91       	pop	r28
    8164:	08 95       	ret

00008166 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_>:
#define SERVO_MAX() (MAX_PULSE_WIDTH - this->max * 4)  // maximum value in us for this servo

/************ static functions common to all instances ***********************/

static inline void handle_interrupts(timer16_Sequence_t timer, volatile uint16_t *TCNTn, volatile uint16_t* OCRnA)
{
    8166:	cf 93       	push	r28
    8168:	df 93       	push	r29
    816a:	00 d0       	rcall	.+0      	; 0x816c <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x6>
    816c:	1f 92       	push	r1
    816e:	1f 92       	push	r1
    8170:	cd b7       	in	r28, 0x3d	; 61
    8172:	de b7       	in	r29, 0x3e	; 62
    8174:	89 83       	std	Y+1, r24	; 0x01
    8176:	7b 83       	std	Y+3, r23	; 0x03
    8178:	6a 83       	std	Y+2, r22	; 0x02
    817a:	5d 83       	std	Y+5, r21	; 0x05
    817c:	4c 83       	std	Y+4, r20	; 0x04
  if( Channel[timer] < 0 )
    817e:	89 81       	ldd	r24, Y+1	; 0x01
    8180:	88 2f       	mov	r24, r24
    8182:	90 e0       	ldi	r25, 0x00	; 0
    8184:	8e 54       	subi	r24, 0x4E	; 78
    8186:	9b 4f       	sbci	r25, 0xFB	; 251
    8188:	fc 01       	movw	r30, r24
    818a:	80 81       	ld	r24, Z
    818c:	88 1f       	adc	r24, r24
    818e:	88 27       	eor	r24, r24
    8190:	88 1f       	adc	r24, r24
    8192:	88 23       	and	r24, r24
    8194:	31 f0       	breq	.+12     	; 0x81a2 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x3c>
    *TCNTn = 0; // channel set to -1 indicated that refresh interval completed so reset the timer
    8196:	8a 81       	ldd	r24, Y+2	; 0x02
    8198:	9b 81       	ldd	r25, Y+3	; 0x03
    819a:	fc 01       	movw	r30, r24
    819c:	11 82       	std	Z+1, r1	; 0x01
    819e:	10 82       	st	Z, r1
    81a0:	72 c0       	rjmp	.+228    	; 0x8286 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x120>
  else{
    if( SERVO_INDEX(timer,Channel[timer]) < ServoCount && SERVO(timer,Channel[timer]).Pin.isActive == true )
    81a2:	89 81       	ldd	r24, Y+1	; 0x01
    81a4:	28 2f       	mov	r18, r24
    81a6:	30 e0       	ldi	r19, 0x00	; 0
    81a8:	c9 01       	movw	r24, r18
    81aa:	88 0f       	add	r24, r24
    81ac:	99 1f       	adc	r25, r25
    81ae:	82 0f       	add	r24, r18
    81b0:	93 1f       	adc	r25, r19
    81b2:	88 0f       	add	r24, r24
    81b4:	99 1f       	adc	r25, r25
    81b6:	88 0f       	add	r24, r24
    81b8:	99 1f       	adc	r25, r25
    81ba:	9c 01       	movw	r18, r24
    81bc:	89 81       	ldd	r24, Y+1	; 0x01
    81be:	88 2f       	mov	r24, r24
    81c0:	90 e0       	ldi	r25, 0x00	; 0
    81c2:	8e 54       	subi	r24, 0x4E	; 78
    81c4:	9b 4f       	sbci	r25, 0xFB	; 251
    81c6:	fc 01       	movw	r30, r24
    81c8:	80 81       	ld	r24, Z
    81ca:	08 2e       	mov	r0, r24
    81cc:	00 0c       	add	r0, r0
    81ce:	99 0b       	sbc	r25, r25
    81d0:	28 0f       	add	r18, r24
    81d2:	39 1f       	adc	r19, r25
    81d4:	80 91 b6 04 	lds	r24, 0x04B6	; 0x8004b6 <ServoCount>
    81d8:	88 2f       	mov	r24, r24
    81da:	90 e0       	ldi	r25, 0x00	; 0
    81dc:	28 17       	cp	r18, r24
    81de:	39 07       	cpc	r19, r25
    81e0:	4c f5       	brge	.+82     	; 0x8234 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0xce>
    81e2:	89 81       	ldd	r24, Y+1	; 0x01
    81e4:	28 2f       	mov	r18, r24
    81e6:	30 e0       	ldi	r19, 0x00	; 0
    81e8:	c9 01       	movw	r24, r18
    81ea:	88 0f       	add	r24, r24
    81ec:	99 1f       	adc	r25, r25
    81ee:	82 0f       	add	r24, r18
    81f0:	93 1f       	adc	r25, r19
    81f2:	88 0f       	add	r24, r24
    81f4:	99 1f       	adc	r25, r25
    81f6:	88 0f       	add	r24, r24
    81f8:	99 1f       	adc	r25, r25
    81fa:	9c 01       	movw	r18, r24
    81fc:	89 81       	ldd	r24, Y+1	; 0x01
    81fe:	88 2f       	mov	r24, r24
    8200:	90 e0       	ldi	r25, 0x00	; 0
    8202:	8e 54       	subi	r24, 0x4E	; 78
    8204:	9b 4f       	sbci	r25, 0xFB	; 251
    8206:	fc 01       	movw	r30, r24
    8208:	80 81       	ld	r24, Z
    820a:	08 2e       	mov	r0, r24
    820c:	00 0c       	add	r0, r0
    820e:	99 0b       	sbc	r25, r25
    8210:	28 0f       	add	r18, r24
    8212:	39 1f       	adc	r19, r25
    8214:	c9 01       	movw	r24, r18
    8216:	88 0f       	add	r24, r24
    8218:	99 1f       	adc	r25, r25
    821a:	82 0f       	add	r24, r18
    821c:	93 1f       	adc	r25, r19
    821e:	8e 5d       	subi	r24, 0xDE	; 222
    8220:	9b 4f       	sbci	r25, 0xFB	; 251
    8222:	fc 01       	movw	r30, r24
    8224:	80 81       	ld	r24, Z
    8226:	86 fb       	bst	r24, 6
    8228:	88 27       	eor	r24, r24
    822a:	80 f9       	bld	r24, 0
    822c:	81 30       	cpi	r24, 0x01	; 1
    822e:	11 f4       	brne	.+4      	; 0x8234 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0xce>
    8230:	81 e0       	ldi	r24, 0x01	; 1
    8232:	01 c0       	rjmp	.+2      	; 0x8236 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0xd0>
    8234:	80 e0       	ldi	r24, 0x00	; 0
    8236:	88 23       	and	r24, r24
    8238:	31 f1       	breq	.+76     	; 0x8286 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x120>
      digitalWrite( SERVO(timer,Channel[timer]).Pin.nbr,LOW); // pulse this channel low if activated
    823a:	89 81       	ldd	r24, Y+1	; 0x01
    823c:	28 2f       	mov	r18, r24
    823e:	30 e0       	ldi	r19, 0x00	; 0
    8240:	c9 01       	movw	r24, r18
    8242:	88 0f       	add	r24, r24
    8244:	99 1f       	adc	r25, r25
    8246:	82 0f       	add	r24, r18
    8248:	93 1f       	adc	r25, r19
    824a:	88 0f       	add	r24, r24
    824c:	99 1f       	adc	r25, r25
    824e:	88 0f       	add	r24, r24
    8250:	99 1f       	adc	r25, r25
    8252:	9c 01       	movw	r18, r24
    8254:	89 81       	ldd	r24, Y+1	; 0x01
    8256:	88 2f       	mov	r24, r24
    8258:	90 e0       	ldi	r25, 0x00	; 0
    825a:	8e 54       	subi	r24, 0x4E	; 78
    825c:	9b 4f       	sbci	r25, 0xFB	; 251
    825e:	fc 01       	movw	r30, r24
    8260:	80 81       	ld	r24, Z
    8262:	08 2e       	mov	r0, r24
    8264:	00 0c       	add	r0, r0
    8266:	99 0b       	sbc	r25, r25
    8268:	28 0f       	add	r18, r24
    826a:	39 1f       	adc	r19, r25
    826c:	c9 01       	movw	r24, r18
    826e:	88 0f       	add	r24, r24
    8270:	99 1f       	adc	r25, r25
    8272:	82 0f       	add	r24, r18
    8274:	93 1f       	adc	r25, r19
    8276:	8e 5d       	subi	r24, 0xDE	; 222
    8278:	9b 4f       	sbci	r25, 0xFB	; 251
    827a:	fc 01       	movw	r30, r24
    827c:	80 81       	ld	r24, Z
    827e:	8f 73       	andi	r24, 0x3F	; 63
    8280:	60 e0       	ldi	r22, 0x00	; 0
    8282:	0e 94 ea 4b 	call	0x97d4	; 0x97d4 <digitalWrite>
  }

  Channel[timer]++;    // increment to the next channel
    8286:	89 81       	ldd	r24, Y+1	; 0x01
    8288:	88 2f       	mov	r24, r24
    828a:	90 e0       	ldi	r25, 0x00	; 0
    828c:	9c 01       	movw	r18, r24
    828e:	2e 54       	subi	r18, 0x4E	; 78
    8290:	3b 4f       	sbci	r19, 0xFB	; 251
    8292:	f9 01       	movw	r30, r18
    8294:	20 81       	ld	r18, Z
    8296:	2f 5f       	subi	r18, 0xFF	; 255
    8298:	8e 54       	subi	r24, 0x4E	; 78
    829a:	9b 4f       	sbci	r25, 0xFB	; 251
    829c:	fc 01       	movw	r30, r24
    829e:	20 83       	st	Z, r18
  if( SERVO_INDEX(timer,Channel[timer]) < ServoCount && Channel[timer] < SERVOS_PER_TIMER) {
    82a0:	89 81       	ldd	r24, Y+1	; 0x01
    82a2:	28 2f       	mov	r18, r24
    82a4:	30 e0       	ldi	r19, 0x00	; 0
    82a6:	c9 01       	movw	r24, r18
    82a8:	88 0f       	add	r24, r24
    82aa:	99 1f       	adc	r25, r25
    82ac:	82 0f       	add	r24, r18
    82ae:	93 1f       	adc	r25, r19
    82b0:	88 0f       	add	r24, r24
    82b2:	99 1f       	adc	r25, r25
    82b4:	88 0f       	add	r24, r24
    82b6:	99 1f       	adc	r25, r25
    82b8:	9c 01       	movw	r18, r24
    82ba:	89 81       	ldd	r24, Y+1	; 0x01
    82bc:	88 2f       	mov	r24, r24
    82be:	90 e0       	ldi	r25, 0x00	; 0
    82c0:	8e 54       	subi	r24, 0x4E	; 78
    82c2:	9b 4f       	sbci	r25, 0xFB	; 251
    82c4:	fc 01       	movw	r30, r24
    82c6:	80 81       	ld	r24, Z
    82c8:	08 2e       	mov	r0, r24
    82ca:	00 0c       	add	r0, r0
    82cc:	99 0b       	sbc	r25, r25
    82ce:	28 0f       	add	r18, r24
    82d0:	39 1f       	adc	r19, r25
    82d2:	80 91 b6 04 	lds	r24, 0x04B6	; 0x8004b6 <ServoCount>
    82d6:	88 2f       	mov	r24, r24
    82d8:	90 e0       	ldi	r25, 0x00	; 0
    82da:	28 17       	cp	r18, r24
    82dc:	39 07       	cpc	r19, r25
    82de:	5c f4       	brge	.+22     	; 0x82f6 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x190>
    82e0:	89 81       	ldd	r24, Y+1	; 0x01
    82e2:	88 2f       	mov	r24, r24
    82e4:	90 e0       	ldi	r25, 0x00	; 0
    82e6:	8e 54       	subi	r24, 0x4E	; 78
    82e8:	9b 4f       	sbci	r25, 0xFB	; 251
    82ea:	fc 01       	movw	r30, r24
    82ec:	80 81       	ld	r24, Z
    82ee:	8c 30       	cpi	r24, 0x0C	; 12
    82f0:	14 f4       	brge	.+4      	; 0x82f6 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x190>
    82f2:	81 e0       	ldi	r24, 0x01	; 1
    82f4:	01 c0       	rjmp	.+2      	; 0x82f8 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x192>
    82f6:	80 e0       	ldi	r24, 0x00	; 0
    82f8:	88 23       	and	r24, r24
    82fa:	09 f4       	brne	.+2      	; 0x82fe <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x198>
    82fc:	7f c0       	rjmp	.+254    	; 0x83fc <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x296>
    *OCRnA = *TCNTn + SERVO(timer,Channel[timer]).ticks;
    82fe:	8a 81       	ldd	r24, Y+2	; 0x02
    8300:	9b 81       	ldd	r25, Y+3	; 0x03
    8302:	fc 01       	movw	r30, r24
    8304:	40 81       	ld	r20, Z
    8306:	51 81       	ldd	r21, Z+1	; 0x01
    8308:	89 81       	ldd	r24, Y+1	; 0x01
    830a:	28 2f       	mov	r18, r24
    830c:	30 e0       	ldi	r19, 0x00	; 0
    830e:	c9 01       	movw	r24, r18
    8310:	88 0f       	add	r24, r24
    8312:	99 1f       	adc	r25, r25
    8314:	82 0f       	add	r24, r18
    8316:	93 1f       	adc	r25, r19
    8318:	88 0f       	add	r24, r24
    831a:	99 1f       	adc	r25, r25
    831c:	88 0f       	add	r24, r24
    831e:	99 1f       	adc	r25, r25
    8320:	9c 01       	movw	r18, r24
    8322:	89 81       	ldd	r24, Y+1	; 0x01
    8324:	88 2f       	mov	r24, r24
    8326:	90 e0       	ldi	r25, 0x00	; 0
    8328:	8e 54       	subi	r24, 0x4E	; 78
    832a:	9b 4f       	sbci	r25, 0xFB	; 251
    832c:	fc 01       	movw	r30, r24
    832e:	80 81       	ld	r24, Z
    8330:	08 2e       	mov	r0, r24
    8332:	00 0c       	add	r0, r0
    8334:	99 0b       	sbc	r25, r25
    8336:	28 0f       	add	r18, r24
    8338:	39 1f       	adc	r19, r25
    833a:	c9 01       	movw	r24, r18
    833c:	88 0f       	add	r24, r24
    833e:	99 1f       	adc	r25, r25
    8340:	82 0f       	add	r24, r18
    8342:	93 1f       	adc	r25, r19
    8344:	8d 5d       	subi	r24, 0xDD	; 221
    8346:	9b 4f       	sbci	r25, 0xFB	; 251
    8348:	fc 01       	movw	r30, r24
    834a:	80 81       	ld	r24, Z
    834c:	91 81       	ldd	r25, Z+1	; 0x01
    834e:	9a 01       	movw	r18, r20
    8350:	28 0f       	add	r18, r24
    8352:	39 1f       	adc	r19, r25
    8354:	8c 81       	ldd	r24, Y+4	; 0x04
    8356:	9d 81       	ldd	r25, Y+5	; 0x05
    8358:	fc 01       	movw	r30, r24
    835a:	31 83       	std	Z+1, r19	; 0x01
    835c:	20 83       	st	Z, r18
    if(SERVO(timer,Channel[timer]).Pin.isActive == true)     // check if activated
    835e:	89 81       	ldd	r24, Y+1	; 0x01
    8360:	28 2f       	mov	r18, r24
    8362:	30 e0       	ldi	r19, 0x00	; 0
    8364:	c9 01       	movw	r24, r18
    8366:	88 0f       	add	r24, r24
    8368:	99 1f       	adc	r25, r25
    836a:	82 0f       	add	r24, r18
    836c:	93 1f       	adc	r25, r19
    836e:	88 0f       	add	r24, r24
    8370:	99 1f       	adc	r25, r25
    8372:	88 0f       	add	r24, r24
    8374:	99 1f       	adc	r25, r25
    8376:	9c 01       	movw	r18, r24
    8378:	89 81       	ldd	r24, Y+1	; 0x01
    837a:	88 2f       	mov	r24, r24
    837c:	90 e0       	ldi	r25, 0x00	; 0
    837e:	8e 54       	subi	r24, 0x4E	; 78
    8380:	9b 4f       	sbci	r25, 0xFB	; 251
    8382:	fc 01       	movw	r30, r24
    8384:	80 81       	ld	r24, Z
    8386:	08 2e       	mov	r0, r24
    8388:	00 0c       	add	r0, r0
    838a:	99 0b       	sbc	r25, r25
    838c:	28 0f       	add	r18, r24
    838e:	39 1f       	adc	r19, r25
    8390:	c9 01       	movw	r24, r18
    8392:	88 0f       	add	r24, r24
    8394:	99 1f       	adc	r25, r25
    8396:	82 0f       	add	r24, r18
    8398:	93 1f       	adc	r25, r19
    839a:	8e 5d       	subi	r24, 0xDE	; 222
    839c:	9b 4f       	sbci	r25, 0xFB	; 251
    839e:	fc 01       	movw	r30, r24
    83a0:	80 81       	ld	r24, Z
    83a2:	86 fb       	bst	r24, 6
    83a4:	88 27       	eor	r24, r24
    83a6:	80 f9       	bld	r24, 0
    83a8:	88 23       	and	r24, r24
    83aa:	09 f4       	brne	.+2      	; 0x83ae <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x248>
    83ac:	51 c0       	rjmp	.+162    	; 0x8450 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x2ea>
      digitalWrite( SERVO(timer,Channel[timer]).Pin.nbr,HIGH); // its an active channel so pulse it high
    83ae:	89 81       	ldd	r24, Y+1	; 0x01
    83b0:	28 2f       	mov	r18, r24
    83b2:	30 e0       	ldi	r19, 0x00	; 0
    83b4:	c9 01       	movw	r24, r18
    83b6:	88 0f       	add	r24, r24
    83b8:	99 1f       	adc	r25, r25
    83ba:	82 0f       	add	r24, r18
    83bc:	93 1f       	adc	r25, r19
    83be:	88 0f       	add	r24, r24
    83c0:	99 1f       	adc	r25, r25
    83c2:	88 0f       	add	r24, r24
    83c4:	99 1f       	adc	r25, r25
    83c6:	9c 01       	movw	r18, r24
    83c8:	89 81       	ldd	r24, Y+1	; 0x01
    83ca:	88 2f       	mov	r24, r24
    83cc:	90 e0       	ldi	r25, 0x00	; 0
    83ce:	8e 54       	subi	r24, 0x4E	; 78
    83d0:	9b 4f       	sbci	r25, 0xFB	; 251
    83d2:	fc 01       	movw	r30, r24
    83d4:	80 81       	ld	r24, Z
    83d6:	08 2e       	mov	r0, r24
    83d8:	00 0c       	add	r0, r0
    83da:	99 0b       	sbc	r25, r25
    83dc:	28 0f       	add	r18, r24
    83de:	39 1f       	adc	r19, r25
    83e0:	c9 01       	movw	r24, r18
    83e2:	88 0f       	add	r24, r24
    83e4:	99 1f       	adc	r25, r25
    83e6:	82 0f       	add	r24, r18
    83e8:	93 1f       	adc	r25, r19
    83ea:	8e 5d       	subi	r24, 0xDE	; 222
    83ec:	9b 4f       	sbci	r25, 0xFB	; 251
    83ee:	fc 01       	movw	r30, r24
    83f0:	80 81       	ld	r24, Z
    83f2:	8f 73       	andi	r24, 0x3F	; 63
    83f4:	61 e0       	ldi	r22, 0x01	; 1
    83f6:	0e 94 ea 4b 	call	0x97d4	; 0x97d4 <digitalWrite>
      *OCRnA = (unsigned int)usToTicks(REFRESH_INTERVAL);
    else
      *OCRnA = *TCNTn + 4;  // at least REFRESH_INTERVAL has elapsed
    Channel[timer] = -1; // this will get incremented at the end of the refresh period to start again at the first channel
  }
}
    83fa:	2a c0       	rjmp	.+84     	; 0x8450 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x2ea>
    if(SERVO(timer,Channel[timer]).Pin.isActive == true)     // check if activated
      digitalWrite( SERVO(timer,Channel[timer]).Pin.nbr,HIGH); // its an active channel so pulse it high
  }
  else {
    // finished all channels so wait for the refresh period to expire before starting over
    if( ((unsigned)*TCNTn) + 4 < usToTicks(REFRESH_INTERVAL) )  // allow a few ticks to ensure the next OCR1A not missed
    83fc:	8a 81       	ldd	r24, Y+2	; 0x02
    83fe:	9b 81       	ldd	r25, Y+3	; 0x03
    8400:	fc 01       	movw	r30, r24
    8402:	80 81       	ld	r24, Z
    8404:	91 81       	ldd	r25, Z+1	; 0x01
    8406:	04 96       	adiw	r24, 0x04	; 4
    8408:	21 e0       	ldi	r18, 0x01	; 1
    840a:	80 34       	cpi	r24, 0x40	; 64
    840c:	9c 49       	sbci	r25, 0x9C	; 156
    840e:	08 f0       	brcs	.+2      	; 0x8412 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x2ac>
    8410:	20 e0       	ldi	r18, 0x00	; 0
    8412:	22 23       	and	r18, r18
    8414:	41 f0       	breq	.+16     	; 0x8426 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x2c0>
      *OCRnA = (unsigned int)usToTicks(REFRESH_INTERVAL);
    8416:	8c 81       	ldd	r24, Y+4	; 0x04
    8418:	9d 81       	ldd	r25, Y+5	; 0x05
    841a:	20 e4       	ldi	r18, 0x40	; 64
    841c:	3c e9       	ldi	r19, 0x9C	; 156
    841e:	fc 01       	movw	r30, r24
    8420:	31 83       	std	Z+1, r19	; 0x01
    8422:	20 83       	st	Z, r18
    8424:	0d c0       	rjmp	.+26     	; 0x8440 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x2da>
    else
      *OCRnA = *TCNTn + 4;  // at least REFRESH_INTERVAL has elapsed
    8426:	8a 81       	ldd	r24, Y+2	; 0x02
    8428:	9b 81       	ldd	r25, Y+3	; 0x03
    842a:	fc 01       	movw	r30, r24
    842c:	80 81       	ld	r24, Z
    842e:	91 81       	ldd	r25, Z+1	; 0x01
    8430:	9c 01       	movw	r18, r24
    8432:	2c 5f       	subi	r18, 0xFC	; 252
    8434:	3f 4f       	sbci	r19, 0xFF	; 255
    8436:	8c 81       	ldd	r24, Y+4	; 0x04
    8438:	9d 81       	ldd	r25, Y+5	; 0x05
    843a:	fc 01       	movw	r30, r24
    843c:	31 83       	std	Z+1, r19	; 0x01
    843e:	20 83       	st	Z, r18
    Channel[timer] = -1; // this will get incremented at the end of the refresh period to start again at the first channel
    8440:	89 81       	ldd	r24, Y+1	; 0x01
    8442:	88 2f       	mov	r24, r24
    8444:	90 e0       	ldi	r25, 0x00	; 0
    8446:	8e 54       	subi	r24, 0x4E	; 78
    8448:	9b 4f       	sbci	r25, 0xFB	; 251
    844a:	2f ef       	ldi	r18, 0xFF	; 255
    844c:	fc 01       	movw	r30, r24
    844e:	20 83       	st	Z, r18
  }
}
    8450:	00 00       	nop
    8452:	0f 90       	pop	r0
    8454:	0f 90       	pop	r0
    8456:	0f 90       	pop	r0
    8458:	0f 90       	pop	r0
    845a:	0f 90       	pop	r0
    845c:	df 91       	pop	r29
    845e:	cf 91       	pop	r28
    8460:	08 95       	ret

00008462 <__vector_17>:

#ifndef WIRING // Wiring pre-defines signal handlers so don't define any if compiling for the Wiring platform
// Interrupt handlers for Arduino
#if defined(_useTimer1)
SIGNAL (TIMER1_COMPA_vect)
{
    8462:	1f 92       	push	r1
    8464:	0f 92       	push	r0
    8466:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7c005f>
    846a:	0f 92       	push	r0
    846c:	11 24       	eor	r1, r1
    846e:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7c005b>
    8472:	0f 92       	push	r0
    8474:	2f 93       	push	r18
    8476:	3f 93       	push	r19
    8478:	4f 93       	push	r20
    847a:	5f 93       	push	r21
    847c:	6f 93       	push	r22
    847e:	7f 93       	push	r23
    8480:	8f 93       	push	r24
    8482:	9f 93       	push	r25
    8484:	af 93       	push	r26
    8486:	bf 93       	push	r27
    8488:	ef 93       	push	r30
    848a:	ff 93       	push	r31
    848c:	cf 93       	push	r28
    848e:	df 93       	push	r29
    8490:	cd b7       	in	r28, 0x3d	; 61
    8492:	de b7       	in	r29, 0x3e	; 62
  handle_interrupts(_timer1, &TCNT1, &OCR1A);
    8494:	48 e8       	ldi	r20, 0x88	; 136
    8496:	50 e0       	ldi	r21, 0x00	; 0
    8498:	64 e8       	ldi	r22, 0x84	; 132
    849a:	70 e0       	ldi	r23, 0x00	; 0
    849c:	81 e0       	ldi	r24, 0x01	; 1
    849e:	63 de       	rcall	.-826    	; 0x8166 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_>
}
    84a0:	00 00       	nop
    84a2:	df 91       	pop	r29
    84a4:	cf 91       	pop	r28
    84a6:	ff 91       	pop	r31
    84a8:	ef 91       	pop	r30
    84aa:	bf 91       	pop	r27
    84ac:	af 91       	pop	r26
    84ae:	9f 91       	pop	r25
    84b0:	8f 91       	pop	r24
    84b2:	7f 91       	pop	r23
    84b4:	6f 91       	pop	r22
    84b6:	5f 91       	pop	r21
    84b8:	4f 91       	pop	r20
    84ba:	3f 91       	pop	r19
    84bc:	2f 91       	pop	r18
    84be:	0f 90       	pop	r0
    84c0:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7c005b>
    84c4:	0f 90       	pop	r0
    84c6:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7c005f>
    84ca:	0f 90       	pop	r0
    84cc:	1f 90       	pop	r1
    84ce:	18 95       	reti

000084d0 <__vector_32>:
#endif

#if defined(_useTimer3)
SIGNAL (TIMER3_COMPA_vect)
{
    84d0:	1f 92       	push	r1
    84d2:	0f 92       	push	r0
    84d4:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7c005f>
    84d8:	0f 92       	push	r0
    84da:	11 24       	eor	r1, r1
    84dc:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7c005b>
    84e0:	0f 92       	push	r0
    84e2:	2f 93       	push	r18
    84e4:	3f 93       	push	r19
    84e6:	4f 93       	push	r20
    84e8:	5f 93       	push	r21
    84ea:	6f 93       	push	r22
    84ec:	7f 93       	push	r23
    84ee:	8f 93       	push	r24
    84f0:	9f 93       	push	r25
    84f2:	af 93       	push	r26
    84f4:	bf 93       	push	r27
    84f6:	ef 93       	push	r30
    84f8:	ff 93       	push	r31
    84fa:	cf 93       	push	r28
    84fc:	df 93       	push	r29
    84fe:	cd b7       	in	r28, 0x3d	; 61
    8500:	de b7       	in	r29, 0x3e	; 62
  handle_interrupts(_timer3, &TCNT3, &OCR3A);
    8502:	48 e9       	ldi	r20, 0x98	; 152
    8504:	50 e0       	ldi	r21, 0x00	; 0
    8506:	64 e9       	ldi	r22, 0x94	; 148
    8508:	70 e0       	ldi	r23, 0x00	; 0
    850a:	82 e0       	ldi	r24, 0x02	; 2
    850c:	2c de       	rcall	.-936    	; 0x8166 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_>
}
    850e:	00 00       	nop
    8510:	df 91       	pop	r29
    8512:	cf 91       	pop	r28
    8514:	ff 91       	pop	r31
    8516:	ef 91       	pop	r30
    8518:	bf 91       	pop	r27
    851a:	af 91       	pop	r26
    851c:	9f 91       	pop	r25
    851e:	8f 91       	pop	r24
    8520:	7f 91       	pop	r23
    8522:	6f 91       	pop	r22
    8524:	5f 91       	pop	r21
    8526:	4f 91       	pop	r20
    8528:	3f 91       	pop	r19
    852a:	2f 91       	pop	r18
    852c:	0f 90       	pop	r0
    852e:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7c005b>
    8532:	0f 90       	pop	r0
    8534:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7c005f>
    8538:	0f 90       	pop	r0
    853a:	1f 90       	pop	r1
    853c:	18 95       	reti

0000853e <__vector_42>:
#endif

#if defined(_useTimer4)
SIGNAL (TIMER4_COMPA_vect)
{
    853e:	1f 92       	push	r1
    8540:	0f 92       	push	r0
    8542:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7c005f>
    8546:	0f 92       	push	r0
    8548:	11 24       	eor	r1, r1
    854a:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7c005b>
    854e:	0f 92       	push	r0
    8550:	2f 93       	push	r18
    8552:	3f 93       	push	r19
    8554:	4f 93       	push	r20
    8556:	5f 93       	push	r21
    8558:	6f 93       	push	r22
    855a:	7f 93       	push	r23
    855c:	8f 93       	push	r24
    855e:	9f 93       	push	r25
    8560:	af 93       	push	r26
    8562:	bf 93       	push	r27
    8564:	ef 93       	push	r30
    8566:	ff 93       	push	r31
    8568:	cf 93       	push	r28
    856a:	df 93       	push	r29
    856c:	cd b7       	in	r28, 0x3d	; 61
    856e:	de b7       	in	r29, 0x3e	; 62
  handle_interrupts(_timer4, &TCNT4, &OCR4A);
    8570:	48 ea       	ldi	r20, 0xA8	; 168
    8572:	50 e0       	ldi	r21, 0x00	; 0
    8574:	64 ea       	ldi	r22, 0xA4	; 164
    8576:	70 e0       	ldi	r23, 0x00	; 0
    8578:	83 e0       	ldi	r24, 0x03	; 3
    857a:	f5 dd       	rcall	.-1046   	; 0x8166 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_>
}
    857c:	00 00       	nop
    857e:	df 91       	pop	r29
    8580:	cf 91       	pop	r28
    8582:	ff 91       	pop	r31
    8584:	ef 91       	pop	r30
    8586:	bf 91       	pop	r27
    8588:	af 91       	pop	r26
    858a:	9f 91       	pop	r25
    858c:	8f 91       	pop	r24
    858e:	7f 91       	pop	r23
    8590:	6f 91       	pop	r22
    8592:	5f 91       	pop	r21
    8594:	4f 91       	pop	r20
    8596:	3f 91       	pop	r19
    8598:	2f 91       	pop	r18
    859a:	0f 90       	pop	r0
    859c:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7c005b>
    85a0:	0f 90       	pop	r0
    85a2:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7c005f>
    85a6:	0f 90       	pop	r0
    85a8:	1f 90       	pop	r1
    85aa:	18 95       	reti

000085ac <__vector_47>:
#endif

#if defined(_useTimer5)
SIGNAL (TIMER5_COMPA_vect)
{
    85ac:	1f 92       	push	r1
    85ae:	0f 92       	push	r0
    85b0:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7c005f>
    85b4:	0f 92       	push	r0
    85b6:	11 24       	eor	r1, r1
    85b8:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7c005b>
    85bc:	0f 92       	push	r0
    85be:	2f 93       	push	r18
    85c0:	3f 93       	push	r19
    85c2:	4f 93       	push	r20
    85c4:	5f 93       	push	r21
    85c6:	6f 93       	push	r22
    85c8:	7f 93       	push	r23
    85ca:	8f 93       	push	r24
    85cc:	9f 93       	push	r25
    85ce:	af 93       	push	r26
    85d0:	bf 93       	push	r27
    85d2:	ef 93       	push	r30
    85d4:	ff 93       	push	r31
    85d6:	cf 93       	push	r28
    85d8:	df 93       	push	r29
    85da:	cd b7       	in	r28, 0x3d	; 61
    85dc:	de b7       	in	r29, 0x3e	; 62
  handle_interrupts(_timer5, &TCNT5, &OCR5A);
    85de:	48 e2       	ldi	r20, 0x28	; 40
    85e0:	51 e0       	ldi	r21, 0x01	; 1
    85e2:	64 e2       	ldi	r22, 0x24	; 36
    85e4:	71 e0       	ldi	r23, 0x01	; 1
    85e6:	80 e0       	ldi	r24, 0x00	; 0
    85e8:	be dd       	rcall	.-1156   	; 0x8166 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_>
}
    85ea:	00 00       	nop
    85ec:	df 91       	pop	r29
    85ee:	cf 91       	pop	r28
    85f0:	ff 91       	pop	r31
    85f2:	ef 91       	pop	r30
    85f4:	bf 91       	pop	r27
    85f6:	af 91       	pop	r26
    85f8:	9f 91       	pop	r25
    85fa:	8f 91       	pop	r24
    85fc:	7f 91       	pop	r23
    85fe:	6f 91       	pop	r22
    8600:	5f 91       	pop	r21
    8602:	4f 91       	pop	r20
    8604:	3f 91       	pop	r19
    8606:	2f 91       	pop	r18
    8608:	0f 90       	pop	r0
    860a:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7c005b>
    860e:	0f 90       	pop	r0
    8610:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7c005f>
    8614:	0f 90       	pop	r0
    8616:	1f 90       	pop	r1
    8618:	18 95       	reti

0000861a <__subsf3>:
    861a:	50 58       	subi	r21, 0x80	; 128

0000861c <__addsf3>:
    861c:	bb 27       	eor	r27, r27
    861e:	aa 27       	eor	r26, r26
    8620:	0e d0       	rcall	.+28     	; 0x863e <__addsf3x>
    8622:	75 c1       	rjmp	.+746    	; 0x890e <__fp_round>
    8624:	66 d1       	rcall	.+716    	; 0x88f2 <__fp_pscA>
    8626:	30 f0       	brcs	.+12     	; 0x8634 <__addsf3+0x18>
    8628:	6b d1       	rcall	.+726    	; 0x8900 <__fp_pscB>
    862a:	20 f0       	brcs	.+8      	; 0x8634 <__addsf3+0x18>
    862c:	31 f4       	brne	.+12     	; 0x863a <__addsf3+0x1e>
    862e:	9f 3f       	cpi	r25, 0xFF	; 255
    8630:	11 f4       	brne	.+4      	; 0x8636 <__addsf3+0x1a>
    8632:	1e f4       	brtc	.+6      	; 0x863a <__addsf3+0x1e>
    8634:	5b c1       	rjmp	.+694    	; 0x88ec <__fp_nan>
    8636:	0e f4       	brtc	.+2      	; 0x863a <__addsf3+0x1e>
    8638:	e0 95       	com	r30
    863a:	e7 fb       	bst	r30, 7
    863c:	51 c1       	rjmp	.+674    	; 0x88e0 <__fp_inf>

0000863e <__addsf3x>:
    863e:	e9 2f       	mov	r30, r25
    8640:	77 d1       	rcall	.+750    	; 0x8930 <__fp_split3>
    8642:	80 f3       	brcs	.-32     	; 0x8624 <__addsf3+0x8>
    8644:	ba 17       	cp	r27, r26
    8646:	62 07       	cpc	r22, r18
    8648:	73 07       	cpc	r23, r19
    864a:	84 07       	cpc	r24, r20
    864c:	95 07       	cpc	r25, r21
    864e:	18 f0       	brcs	.+6      	; 0x8656 <__addsf3x+0x18>
    8650:	71 f4       	brne	.+28     	; 0x866e <__addsf3x+0x30>
    8652:	9e f5       	brtc	.+102    	; 0x86ba <__addsf3x+0x7c>
    8654:	8f c1       	rjmp	.+798    	; 0x8974 <__fp_zero>
    8656:	0e f4       	brtc	.+2      	; 0x865a <__addsf3x+0x1c>
    8658:	e0 95       	com	r30
    865a:	0b 2e       	mov	r0, r27
    865c:	ba 2f       	mov	r27, r26
    865e:	a0 2d       	mov	r26, r0
    8660:	0b 01       	movw	r0, r22
    8662:	b9 01       	movw	r22, r18
    8664:	90 01       	movw	r18, r0
    8666:	0c 01       	movw	r0, r24
    8668:	ca 01       	movw	r24, r20
    866a:	a0 01       	movw	r20, r0
    866c:	11 24       	eor	r1, r1
    866e:	ff 27       	eor	r31, r31
    8670:	59 1b       	sub	r21, r25
    8672:	99 f0       	breq	.+38     	; 0x869a <__addsf3x+0x5c>
    8674:	59 3f       	cpi	r21, 0xF9	; 249
    8676:	50 f4       	brcc	.+20     	; 0x868c <__addsf3x+0x4e>
    8678:	50 3e       	cpi	r21, 0xE0	; 224
    867a:	68 f1       	brcs	.+90     	; 0x86d6 <__addsf3x+0x98>
    867c:	1a 16       	cp	r1, r26
    867e:	f0 40       	sbci	r31, 0x00	; 0
    8680:	a2 2f       	mov	r26, r18
    8682:	23 2f       	mov	r18, r19
    8684:	34 2f       	mov	r19, r20
    8686:	44 27       	eor	r20, r20
    8688:	58 5f       	subi	r21, 0xF8	; 248
    868a:	f3 cf       	rjmp	.-26     	; 0x8672 <__addsf3x+0x34>
    868c:	46 95       	lsr	r20
    868e:	37 95       	ror	r19
    8690:	27 95       	ror	r18
    8692:	a7 95       	ror	r26
    8694:	f0 40       	sbci	r31, 0x00	; 0
    8696:	53 95       	inc	r21
    8698:	c9 f7       	brne	.-14     	; 0x868c <__addsf3x+0x4e>
    869a:	7e f4       	brtc	.+30     	; 0x86ba <__addsf3x+0x7c>
    869c:	1f 16       	cp	r1, r31
    869e:	ba 0b       	sbc	r27, r26
    86a0:	62 0b       	sbc	r22, r18
    86a2:	73 0b       	sbc	r23, r19
    86a4:	84 0b       	sbc	r24, r20
    86a6:	ba f0       	brmi	.+46     	; 0x86d6 <__addsf3x+0x98>
    86a8:	91 50       	subi	r25, 0x01	; 1
    86aa:	a1 f0       	breq	.+40     	; 0x86d4 <__addsf3x+0x96>
    86ac:	ff 0f       	add	r31, r31
    86ae:	bb 1f       	adc	r27, r27
    86b0:	66 1f       	adc	r22, r22
    86b2:	77 1f       	adc	r23, r23
    86b4:	88 1f       	adc	r24, r24
    86b6:	c2 f7       	brpl	.-16     	; 0x86a8 <__addsf3x+0x6a>
    86b8:	0e c0       	rjmp	.+28     	; 0x86d6 <__addsf3x+0x98>
    86ba:	ba 0f       	add	r27, r26
    86bc:	62 1f       	adc	r22, r18
    86be:	73 1f       	adc	r23, r19
    86c0:	84 1f       	adc	r24, r20
    86c2:	48 f4       	brcc	.+18     	; 0x86d6 <__addsf3x+0x98>
    86c4:	87 95       	ror	r24
    86c6:	77 95       	ror	r23
    86c8:	67 95       	ror	r22
    86ca:	b7 95       	ror	r27
    86cc:	f7 95       	ror	r31
    86ce:	9e 3f       	cpi	r25, 0xFE	; 254
    86d0:	08 f0       	brcs	.+2      	; 0x86d4 <__addsf3x+0x96>
    86d2:	b3 cf       	rjmp	.-154    	; 0x863a <__addsf3+0x1e>
    86d4:	93 95       	inc	r25
    86d6:	88 0f       	add	r24, r24
    86d8:	08 f0       	brcs	.+2      	; 0x86dc <__addsf3x+0x9e>
    86da:	99 27       	eor	r25, r25
    86dc:	ee 0f       	add	r30, r30
    86de:	97 95       	ror	r25
    86e0:	87 95       	ror	r24
    86e2:	08 95       	ret

000086e4 <__cmpsf2>:
    86e4:	d9 d0       	rcall	.+434    	; 0x8898 <__fp_cmp>
    86e6:	08 f4       	brcc	.+2      	; 0x86ea <__cmpsf2+0x6>
    86e8:	81 e0       	ldi	r24, 0x01	; 1
    86ea:	08 95       	ret

000086ec <__divsf3>:
    86ec:	0c d0       	rcall	.+24     	; 0x8706 <__divsf3x>
    86ee:	0f c1       	rjmp	.+542    	; 0x890e <__fp_round>
    86f0:	07 d1       	rcall	.+526    	; 0x8900 <__fp_pscB>
    86f2:	40 f0       	brcs	.+16     	; 0x8704 <__divsf3+0x18>
    86f4:	fe d0       	rcall	.+508    	; 0x88f2 <__fp_pscA>
    86f6:	30 f0       	brcs	.+12     	; 0x8704 <__divsf3+0x18>
    86f8:	21 f4       	brne	.+8      	; 0x8702 <__divsf3+0x16>
    86fa:	5f 3f       	cpi	r21, 0xFF	; 255
    86fc:	19 f0       	breq	.+6      	; 0x8704 <__divsf3+0x18>
    86fe:	f0 c0       	rjmp	.+480    	; 0x88e0 <__fp_inf>
    8700:	51 11       	cpse	r21, r1
    8702:	39 c1       	rjmp	.+626    	; 0x8976 <__fp_szero>
    8704:	f3 c0       	rjmp	.+486    	; 0x88ec <__fp_nan>

00008706 <__divsf3x>:
    8706:	14 d1       	rcall	.+552    	; 0x8930 <__fp_split3>
    8708:	98 f3       	brcs	.-26     	; 0x86f0 <__divsf3+0x4>

0000870a <__divsf3_pse>:
    870a:	99 23       	and	r25, r25
    870c:	c9 f3       	breq	.-14     	; 0x8700 <__divsf3+0x14>
    870e:	55 23       	and	r21, r21
    8710:	b1 f3       	breq	.-20     	; 0x86fe <__divsf3+0x12>
    8712:	95 1b       	sub	r25, r21
    8714:	55 0b       	sbc	r21, r21
    8716:	bb 27       	eor	r27, r27
    8718:	aa 27       	eor	r26, r26
    871a:	62 17       	cp	r22, r18
    871c:	73 07       	cpc	r23, r19
    871e:	84 07       	cpc	r24, r20
    8720:	38 f0       	brcs	.+14     	; 0x8730 <__divsf3_pse+0x26>
    8722:	9f 5f       	subi	r25, 0xFF	; 255
    8724:	5f 4f       	sbci	r21, 0xFF	; 255
    8726:	22 0f       	add	r18, r18
    8728:	33 1f       	adc	r19, r19
    872a:	44 1f       	adc	r20, r20
    872c:	aa 1f       	adc	r26, r26
    872e:	a9 f3       	breq	.-22     	; 0x871a <__divsf3_pse+0x10>
    8730:	33 d0       	rcall	.+102    	; 0x8798 <__divsf3_pse+0x8e>
    8732:	0e 2e       	mov	r0, r30
    8734:	3a f0       	brmi	.+14     	; 0x8744 <__divsf3_pse+0x3a>
    8736:	e0 e8       	ldi	r30, 0x80	; 128
    8738:	30 d0       	rcall	.+96     	; 0x879a <__divsf3_pse+0x90>
    873a:	91 50       	subi	r25, 0x01	; 1
    873c:	50 40       	sbci	r21, 0x00	; 0
    873e:	e6 95       	lsr	r30
    8740:	00 1c       	adc	r0, r0
    8742:	ca f7       	brpl	.-14     	; 0x8736 <__divsf3_pse+0x2c>
    8744:	29 d0       	rcall	.+82     	; 0x8798 <__divsf3_pse+0x8e>
    8746:	fe 2f       	mov	r31, r30
    8748:	27 d0       	rcall	.+78     	; 0x8798 <__divsf3_pse+0x8e>
    874a:	66 0f       	add	r22, r22
    874c:	77 1f       	adc	r23, r23
    874e:	88 1f       	adc	r24, r24
    8750:	bb 1f       	adc	r27, r27
    8752:	26 17       	cp	r18, r22
    8754:	37 07       	cpc	r19, r23
    8756:	48 07       	cpc	r20, r24
    8758:	ab 07       	cpc	r26, r27
    875a:	b0 e8       	ldi	r27, 0x80	; 128
    875c:	09 f0       	breq	.+2      	; 0x8760 <__divsf3_pse+0x56>
    875e:	bb 0b       	sbc	r27, r27
    8760:	80 2d       	mov	r24, r0
    8762:	bf 01       	movw	r22, r30
    8764:	ff 27       	eor	r31, r31
    8766:	93 58       	subi	r25, 0x83	; 131
    8768:	5f 4f       	sbci	r21, 0xFF	; 255
    876a:	2a f0       	brmi	.+10     	; 0x8776 <__divsf3_pse+0x6c>
    876c:	9e 3f       	cpi	r25, 0xFE	; 254
    876e:	51 05       	cpc	r21, r1
    8770:	68 f0       	brcs	.+26     	; 0x878c <__divsf3_pse+0x82>
    8772:	b6 c0       	rjmp	.+364    	; 0x88e0 <__fp_inf>
    8774:	00 c1       	rjmp	.+512    	; 0x8976 <__fp_szero>
    8776:	5f 3f       	cpi	r21, 0xFF	; 255
    8778:	ec f3       	brlt	.-6      	; 0x8774 <__divsf3_pse+0x6a>
    877a:	98 3e       	cpi	r25, 0xE8	; 232
    877c:	dc f3       	brlt	.-10     	; 0x8774 <__divsf3_pse+0x6a>
    877e:	86 95       	lsr	r24
    8780:	77 95       	ror	r23
    8782:	67 95       	ror	r22
    8784:	b7 95       	ror	r27
    8786:	f7 95       	ror	r31
    8788:	9f 5f       	subi	r25, 0xFF	; 255
    878a:	c9 f7       	brne	.-14     	; 0x877e <__divsf3_pse+0x74>
    878c:	88 0f       	add	r24, r24
    878e:	91 1d       	adc	r25, r1
    8790:	96 95       	lsr	r25
    8792:	87 95       	ror	r24
    8794:	97 f9       	bld	r25, 7
    8796:	08 95       	ret
    8798:	e1 e0       	ldi	r30, 0x01	; 1
    879a:	66 0f       	add	r22, r22
    879c:	77 1f       	adc	r23, r23
    879e:	88 1f       	adc	r24, r24
    87a0:	bb 1f       	adc	r27, r27
    87a2:	62 17       	cp	r22, r18
    87a4:	73 07       	cpc	r23, r19
    87a6:	84 07       	cpc	r24, r20
    87a8:	ba 07       	cpc	r27, r26
    87aa:	20 f0       	brcs	.+8      	; 0x87b4 <__divsf3_pse+0xaa>
    87ac:	62 1b       	sub	r22, r18
    87ae:	73 0b       	sbc	r23, r19
    87b0:	84 0b       	sbc	r24, r20
    87b2:	ba 0b       	sbc	r27, r26
    87b4:	ee 1f       	adc	r30, r30
    87b6:	88 f7       	brcc	.-30     	; 0x879a <__divsf3_pse+0x90>
    87b8:	e0 95       	com	r30
    87ba:	08 95       	ret

000087bc <__fixsfsi>:
    87bc:	04 d0       	rcall	.+8      	; 0x87c6 <__fixunssfsi>
    87be:	68 94       	set
    87c0:	b1 11       	cpse	r27, r1
    87c2:	d9 c0       	rjmp	.+434    	; 0x8976 <__fp_szero>
    87c4:	08 95       	ret

000087c6 <__fixunssfsi>:
    87c6:	bc d0       	rcall	.+376    	; 0x8940 <__fp_splitA>
    87c8:	88 f0       	brcs	.+34     	; 0x87ec <__fixunssfsi+0x26>
    87ca:	9f 57       	subi	r25, 0x7F	; 127
    87cc:	90 f0       	brcs	.+36     	; 0x87f2 <__fixunssfsi+0x2c>
    87ce:	b9 2f       	mov	r27, r25
    87d0:	99 27       	eor	r25, r25
    87d2:	b7 51       	subi	r27, 0x17	; 23
    87d4:	a0 f0       	brcs	.+40     	; 0x87fe <__fixunssfsi+0x38>
    87d6:	d1 f0       	breq	.+52     	; 0x880c <__fixunssfsi+0x46>
    87d8:	66 0f       	add	r22, r22
    87da:	77 1f       	adc	r23, r23
    87dc:	88 1f       	adc	r24, r24
    87de:	99 1f       	adc	r25, r25
    87e0:	1a f0       	brmi	.+6      	; 0x87e8 <__fixunssfsi+0x22>
    87e2:	ba 95       	dec	r27
    87e4:	c9 f7       	brne	.-14     	; 0x87d8 <__fixunssfsi+0x12>
    87e6:	12 c0       	rjmp	.+36     	; 0x880c <__fixunssfsi+0x46>
    87e8:	b1 30       	cpi	r27, 0x01	; 1
    87ea:	81 f0       	breq	.+32     	; 0x880c <__fixunssfsi+0x46>
    87ec:	c3 d0       	rcall	.+390    	; 0x8974 <__fp_zero>
    87ee:	b1 e0       	ldi	r27, 0x01	; 1
    87f0:	08 95       	ret
    87f2:	c0 c0       	rjmp	.+384    	; 0x8974 <__fp_zero>
    87f4:	67 2f       	mov	r22, r23
    87f6:	78 2f       	mov	r23, r24
    87f8:	88 27       	eor	r24, r24
    87fa:	b8 5f       	subi	r27, 0xF8	; 248
    87fc:	39 f0       	breq	.+14     	; 0x880c <__fixunssfsi+0x46>
    87fe:	b9 3f       	cpi	r27, 0xF9	; 249
    8800:	cc f3       	brlt	.-14     	; 0x87f4 <__fixunssfsi+0x2e>
    8802:	86 95       	lsr	r24
    8804:	77 95       	ror	r23
    8806:	67 95       	ror	r22
    8808:	b3 95       	inc	r27
    880a:	d9 f7       	brne	.-10     	; 0x8802 <__fixunssfsi+0x3c>
    880c:	3e f4       	brtc	.+14     	; 0x881c <__fixunssfsi+0x56>
    880e:	90 95       	com	r25
    8810:	80 95       	com	r24
    8812:	70 95       	com	r23
    8814:	61 95       	neg	r22
    8816:	7f 4f       	sbci	r23, 0xFF	; 255
    8818:	8f 4f       	sbci	r24, 0xFF	; 255
    881a:	9f 4f       	sbci	r25, 0xFF	; 255
    881c:	08 95       	ret

0000881e <__floatunsisf>:
    881e:	e8 94       	clt
    8820:	09 c0       	rjmp	.+18     	; 0x8834 <__floatsisf+0x12>

00008822 <__floatsisf>:
    8822:	97 fb       	bst	r25, 7
    8824:	3e f4       	brtc	.+14     	; 0x8834 <__floatsisf+0x12>
    8826:	90 95       	com	r25
    8828:	80 95       	com	r24
    882a:	70 95       	com	r23
    882c:	61 95       	neg	r22
    882e:	7f 4f       	sbci	r23, 0xFF	; 255
    8830:	8f 4f       	sbci	r24, 0xFF	; 255
    8832:	9f 4f       	sbci	r25, 0xFF	; 255
    8834:	99 23       	and	r25, r25
    8836:	a9 f0       	breq	.+42     	; 0x8862 <__floatsisf+0x40>
    8838:	f9 2f       	mov	r31, r25
    883a:	96 e9       	ldi	r25, 0x96	; 150
    883c:	bb 27       	eor	r27, r27
    883e:	93 95       	inc	r25
    8840:	f6 95       	lsr	r31
    8842:	87 95       	ror	r24
    8844:	77 95       	ror	r23
    8846:	67 95       	ror	r22
    8848:	b7 95       	ror	r27
    884a:	f1 11       	cpse	r31, r1
    884c:	f8 cf       	rjmp	.-16     	; 0x883e <__floatsisf+0x1c>
    884e:	fa f4       	brpl	.+62     	; 0x888e <__floatsisf+0x6c>
    8850:	bb 0f       	add	r27, r27
    8852:	11 f4       	brne	.+4      	; 0x8858 <__floatsisf+0x36>
    8854:	60 ff       	sbrs	r22, 0
    8856:	1b c0       	rjmp	.+54     	; 0x888e <__floatsisf+0x6c>
    8858:	6f 5f       	subi	r22, 0xFF	; 255
    885a:	7f 4f       	sbci	r23, 0xFF	; 255
    885c:	8f 4f       	sbci	r24, 0xFF	; 255
    885e:	9f 4f       	sbci	r25, 0xFF	; 255
    8860:	16 c0       	rjmp	.+44     	; 0x888e <__floatsisf+0x6c>
    8862:	88 23       	and	r24, r24
    8864:	11 f0       	breq	.+4      	; 0x886a <__floatsisf+0x48>
    8866:	96 e9       	ldi	r25, 0x96	; 150
    8868:	11 c0       	rjmp	.+34     	; 0x888c <__floatsisf+0x6a>
    886a:	77 23       	and	r23, r23
    886c:	21 f0       	breq	.+8      	; 0x8876 <__floatsisf+0x54>
    886e:	9e e8       	ldi	r25, 0x8E	; 142
    8870:	87 2f       	mov	r24, r23
    8872:	76 2f       	mov	r23, r22
    8874:	05 c0       	rjmp	.+10     	; 0x8880 <__floatsisf+0x5e>
    8876:	66 23       	and	r22, r22
    8878:	71 f0       	breq	.+28     	; 0x8896 <__floatsisf+0x74>
    887a:	96 e8       	ldi	r25, 0x86	; 134
    887c:	86 2f       	mov	r24, r22
    887e:	70 e0       	ldi	r23, 0x00	; 0
    8880:	60 e0       	ldi	r22, 0x00	; 0
    8882:	2a f0       	brmi	.+10     	; 0x888e <__floatsisf+0x6c>
    8884:	9a 95       	dec	r25
    8886:	66 0f       	add	r22, r22
    8888:	77 1f       	adc	r23, r23
    888a:	88 1f       	adc	r24, r24
    888c:	da f7       	brpl	.-10     	; 0x8884 <__floatsisf+0x62>
    888e:	88 0f       	add	r24, r24
    8890:	96 95       	lsr	r25
    8892:	87 95       	ror	r24
    8894:	97 f9       	bld	r25, 7
    8896:	08 95       	ret

00008898 <__fp_cmp>:
    8898:	99 0f       	add	r25, r25
    889a:	00 08       	sbc	r0, r0
    889c:	55 0f       	add	r21, r21
    889e:	aa 0b       	sbc	r26, r26
    88a0:	e0 e8       	ldi	r30, 0x80	; 128
    88a2:	fe ef       	ldi	r31, 0xFE	; 254
    88a4:	16 16       	cp	r1, r22
    88a6:	17 06       	cpc	r1, r23
    88a8:	e8 07       	cpc	r30, r24
    88aa:	f9 07       	cpc	r31, r25
    88ac:	c0 f0       	brcs	.+48     	; 0x88de <__fp_cmp+0x46>
    88ae:	12 16       	cp	r1, r18
    88b0:	13 06       	cpc	r1, r19
    88b2:	e4 07       	cpc	r30, r20
    88b4:	f5 07       	cpc	r31, r21
    88b6:	98 f0       	brcs	.+38     	; 0x88de <__fp_cmp+0x46>
    88b8:	62 1b       	sub	r22, r18
    88ba:	73 0b       	sbc	r23, r19
    88bc:	84 0b       	sbc	r24, r20
    88be:	95 0b       	sbc	r25, r21
    88c0:	39 f4       	brne	.+14     	; 0x88d0 <__fp_cmp+0x38>
    88c2:	0a 26       	eor	r0, r26
    88c4:	61 f0       	breq	.+24     	; 0x88de <__fp_cmp+0x46>
    88c6:	23 2b       	or	r18, r19
    88c8:	24 2b       	or	r18, r20
    88ca:	25 2b       	or	r18, r21
    88cc:	21 f4       	brne	.+8      	; 0x88d6 <__fp_cmp+0x3e>
    88ce:	08 95       	ret
    88d0:	0a 26       	eor	r0, r26
    88d2:	09 f4       	brne	.+2      	; 0x88d6 <__fp_cmp+0x3e>
    88d4:	a1 40       	sbci	r26, 0x01	; 1
    88d6:	a6 95       	lsr	r26
    88d8:	8f ef       	ldi	r24, 0xFF	; 255
    88da:	81 1d       	adc	r24, r1
    88dc:	81 1d       	adc	r24, r1
    88de:	08 95       	ret

000088e0 <__fp_inf>:
    88e0:	97 f9       	bld	r25, 7
    88e2:	9f 67       	ori	r25, 0x7F	; 127
    88e4:	80 e8       	ldi	r24, 0x80	; 128
    88e6:	70 e0       	ldi	r23, 0x00	; 0
    88e8:	60 e0       	ldi	r22, 0x00	; 0
    88ea:	08 95       	ret

000088ec <__fp_nan>:
    88ec:	9f ef       	ldi	r25, 0xFF	; 255
    88ee:	80 ec       	ldi	r24, 0xC0	; 192
    88f0:	08 95       	ret

000088f2 <__fp_pscA>:
    88f2:	00 24       	eor	r0, r0
    88f4:	0a 94       	dec	r0
    88f6:	16 16       	cp	r1, r22
    88f8:	17 06       	cpc	r1, r23
    88fa:	18 06       	cpc	r1, r24
    88fc:	09 06       	cpc	r0, r25
    88fe:	08 95       	ret

00008900 <__fp_pscB>:
    8900:	00 24       	eor	r0, r0
    8902:	0a 94       	dec	r0
    8904:	12 16       	cp	r1, r18
    8906:	13 06       	cpc	r1, r19
    8908:	14 06       	cpc	r1, r20
    890a:	05 06       	cpc	r0, r21
    890c:	08 95       	ret

0000890e <__fp_round>:
    890e:	09 2e       	mov	r0, r25
    8910:	03 94       	inc	r0
    8912:	00 0c       	add	r0, r0
    8914:	11 f4       	brne	.+4      	; 0x891a <__fp_round+0xc>
    8916:	88 23       	and	r24, r24
    8918:	52 f0       	brmi	.+20     	; 0x892e <__fp_round+0x20>
    891a:	bb 0f       	add	r27, r27
    891c:	40 f4       	brcc	.+16     	; 0x892e <__fp_round+0x20>
    891e:	bf 2b       	or	r27, r31
    8920:	11 f4       	brne	.+4      	; 0x8926 <__fp_round+0x18>
    8922:	60 ff       	sbrs	r22, 0
    8924:	04 c0       	rjmp	.+8      	; 0x892e <__fp_round+0x20>
    8926:	6f 5f       	subi	r22, 0xFF	; 255
    8928:	7f 4f       	sbci	r23, 0xFF	; 255
    892a:	8f 4f       	sbci	r24, 0xFF	; 255
    892c:	9f 4f       	sbci	r25, 0xFF	; 255
    892e:	08 95       	ret

00008930 <__fp_split3>:
    8930:	57 fd       	sbrc	r21, 7
    8932:	90 58       	subi	r25, 0x80	; 128
    8934:	44 0f       	add	r20, r20
    8936:	55 1f       	adc	r21, r21
    8938:	59 f0       	breq	.+22     	; 0x8950 <__fp_splitA+0x10>
    893a:	5f 3f       	cpi	r21, 0xFF	; 255
    893c:	71 f0       	breq	.+28     	; 0x895a <__fp_splitA+0x1a>
    893e:	47 95       	ror	r20

00008940 <__fp_splitA>:
    8940:	88 0f       	add	r24, r24
    8942:	97 fb       	bst	r25, 7
    8944:	99 1f       	adc	r25, r25
    8946:	61 f0       	breq	.+24     	; 0x8960 <__fp_splitA+0x20>
    8948:	9f 3f       	cpi	r25, 0xFF	; 255
    894a:	79 f0       	breq	.+30     	; 0x896a <__fp_splitA+0x2a>
    894c:	87 95       	ror	r24
    894e:	08 95       	ret
    8950:	12 16       	cp	r1, r18
    8952:	13 06       	cpc	r1, r19
    8954:	14 06       	cpc	r1, r20
    8956:	55 1f       	adc	r21, r21
    8958:	f2 cf       	rjmp	.-28     	; 0x893e <__fp_split3+0xe>
    895a:	46 95       	lsr	r20
    895c:	f1 df       	rcall	.-30     	; 0x8940 <__fp_splitA>
    895e:	08 c0       	rjmp	.+16     	; 0x8970 <__fp_splitA+0x30>
    8960:	16 16       	cp	r1, r22
    8962:	17 06       	cpc	r1, r23
    8964:	18 06       	cpc	r1, r24
    8966:	99 1f       	adc	r25, r25
    8968:	f1 cf       	rjmp	.-30     	; 0x894c <__fp_splitA+0xc>
    896a:	86 95       	lsr	r24
    896c:	71 05       	cpc	r23, r1
    896e:	61 05       	cpc	r22, r1
    8970:	08 94       	sec
    8972:	08 95       	ret

00008974 <__fp_zero>:
    8974:	e8 94       	clt

00008976 <__fp_szero>:
    8976:	bb 27       	eor	r27, r27
    8978:	66 27       	eor	r22, r22
    897a:	77 27       	eor	r23, r23
    897c:	cb 01       	movw	r24, r22
    897e:	97 f9       	bld	r25, 7
    8980:	08 95       	ret

00008982 <__gesf2>:
    8982:	8a df       	rcall	.-236    	; 0x8898 <__fp_cmp>
    8984:	08 f4       	brcc	.+2      	; 0x8988 <__gesf2+0x6>
    8986:	8f ef       	ldi	r24, 0xFF	; 255
    8988:	08 95       	ret

0000898a <__mulsf3>:
    898a:	0b d0       	rcall	.+22     	; 0x89a2 <__mulsf3x>
    898c:	c0 cf       	rjmp	.-128    	; 0x890e <__fp_round>
    898e:	b1 df       	rcall	.-158    	; 0x88f2 <__fp_pscA>
    8990:	28 f0       	brcs	.+10     	; 0x899c <__mulsf3+0x12>
    8992:	b6 df       	rcall	.-148    	; 0x8900 <__fp_pscB>
    8994:	18 f0       	brcs	.+6      	; 0x899c <__mulsf3+0x12>
    8996:	95 23       	and	r25, r21
    8998:	09 f0       	breq	.+2      	; 0x899c <__mulsf3+0x12>
    899a:	a2 cf       	rjmp	.-188    	; 0x88e0 <__fp_inf>
    899c:	a7 cf       	rjmp	.-178    	; 0x88ec <__fp_nan>
    899e:	11 24       	eor	r1, r1
    89a0:	ea cf       	rjmp	.-44     	; 0x8976 <__fp_szero>

000089a2 <__mulsf3x>:
    89a2:	c6 df       	rcall	.-116    	; 0x8930 <__fp_split3>
    89a4:	a0 f3       	brcs	.-24     	; 0x898e <__mulsf3+0x4>

000089a6 <__mulsf3_pse>:
    89a6:	95 9f       	mul	r25, r21
    89a8:	d1 f3       	breq	.-12     	; 0x899e <__mulsf3+0x14>
    89aa:	95 0f       	add	r25, r21
    89ac:	50 e0       	ldi	r21, 0x00	; 0
    89ae:	55 1f       	adc	r21, r21
    89b0:	62 9f       	mul	r22, r18
    89b2:	f0 01       	movw	r30, r0
    89b4:	72 9f       	mul	r23, r18
    89b6:	bb 27       	eor	r27, r27
    89b8:	f0 0d       	add	r31, r0
    89ba:	b1 1d       	adc	r27, r1
    89bc:	63 9f       	mul	r22, r19
    89be:	aa 27       	eor	r26, r26
    89c0:	f0 0d       	add	r31, r0
    89c2:	b1 1d       	adc	r27, r1
    89c4:	aa 1f       	adc	r26, r26
    89c6:	64 9f       	mul	r22, r20
    89c8:	66 27       	eor	r22, r22
    89ca:	b0 0d       	add	r27, r0
    89cc:	a1 1d       	adc	r26, r1
    89ce:	66 1f       	adc	r22, r22
    89d0:	82 9f       	mul	r24, r18
    89d2:	22 27       	eor	r18, r18
    89d4:	b0 0d       	add	r27, r0
    89d6:	a1 1d       	adc	r26, r1
    89d8:	62 1f       	adc	r22, r18
    89da:	73 9f       	mul	r23, r19
    89dc:	b0 0d       	add	r27, r0
    89de:	a1 1d       	adc	r26, r1
    89e0:	62 1f       	adc	r22, r18
    89e2:	83 9f       	mul	r24, r19
    89e4:	a0 0d       	add	r26, r0
    89e6:	61 1d       	adc	r22, r1
    89e8:	22 1f       	adc	r18, r18
    89ea:	74 9f       	mul	r23, r20
    89ec:	33 27       	eor	r19, r19
    89ee:	a0 0d       	add	r26, r0
    89f0:	61 1d       	adc	r22, r1
    89f2:	23 1f       	adc	r18, r19
    89f4:	84 9f       	mul	r24, r20
    89f6:	60 0d       	add	r22, r0
    89f8:	21 1d       	adc	r18, r1
    89fa:	82 2f       	mov	r24, r18
    89fc:	76 2f       	mov	r23, r22
    89fe:	6a 2f       	mov	r22, r26
    8a00:	11 24       	eor	r1, r1
    8a02:	9f 57       	subi	r25, 0x7F	; 127
    8a04:	50 40       	sbci	r21, 0x00	; 0
    8a06:	8a f0       	brmi	.+34     	; 0x8a2a <__mulsf3_pse+0x84>
    8a08:	e1 f0       	breq	.+56     	; 0x8a42 <__mulsf3_pse+0x9c>
    8a0a:	88 23       	and	r24, r24
    8a0c:	4a f0       	brmi	.+18     	; 0x8a20 <__mulsf3_pse+0x7a>
    8a0e:	ee 0f       	add	r30, r30
    8a10:	ff 1f       	adc	r31, r31
    8a12:	bb 1f       	adc	r27, r27
    8a14:	66 1f       	adc	r22, r22
    8a16:	77 1f       	adc	r23, r23
    8a18:	88 1f       	adc	r24, r24
    8a1a:	91 50       	subi	r25, 0x01	; 1
    8a1c:	50 40       	sbci	r21, 0x00	; 0
    8a1e:	a9 f7       	brne	.-22     	; 0x8a0a <__mulsf3_pse+0x64>
    8a20:	9e 3f       	cpi	r25, 0xFE	; 254
    8a22:	51 05       	cpc	r21, r1
    8a24:	70 f0       	brcs	.+28     	; 0x8a42 <__mulsf3_pse+0x9c>
    8a26:	5c cf       	rjmp	.-328    	; 0x88e0 <__fp_inf>
    8a28:	a6 cf       	rjmp	.-180    	; 0x8976 <__fp_szero>
    8a2a:	5f 3f       	cpi	r21, 0xFF	; 255
    8a2c:	ec f3       	brlt	.-6      	; 0x8a28 <__mulsf3_pse+0x82>
    8a2e:	98 3e       	cpi	r25, 0xE8	; 232
    8a30:	dc f3       	brlt	.-10     	; 0x8a28 <__mulsf3_pse+0x82>
    8a32:	86 95       	lsr	r24
    8a34:	77 95       	ror	r23
    8a36:	67 95       	ror	r22
    8a38:	b7 95       	ror	r27
    8a3a:	f7 95       	ror	r31
    8a3c:	e7 95       	ror	r30
    8a3e:	9f 5f       	subi	r25, 0xFF	; 255
    8a40:	c1 f7       	brne	.-16     	; 0x8a32 <__mulsf3_pse+0x8c>
    8a42:	fe 2b       	or	r31, r30
    8a44:	88 0f       	add	r24, r24
    8a46:	91 1d       	adc	r25, r1
    8a48:	96 95       	lsr	r25
    8a4a:	87 95       	ror	r24
    8a4c:	97 f9       	bld	r25, 7
    8a4e:	08 95       	ret

00008a50 <pow>:
    8a50:	fa 01       	movw	r30, r20
    8a52:	ee 0f       	add	r30, r30
    8a54:	ff 1f       	adc	r31, r31
    8a56:	30 96       	adiw	r30, 0x00	; 0
    8a58:	21 05       	cpc	r18, r1
    8a5a:	31 05       	cpc	r19, r1
    8a5c:	99 f1       	breq	.+102    	; 0x8ac4 <pow+0x74>
    8a5e:	61 15       	cp	r22, r1
    8a60:	71 05       	cpc	r23, r1
    8a62:	61 f4       	brne	.+24     	; 0x8a7c <pow+0x2c>
    8a64:	80 38       	cpi	r24, 0x80	; 128
    8a66:	bf e3       	ldi	r27, 0x3F	; 63
    8a68:	9b 07       	cpc	r25, r27
    8a6a:	49 f1       	breq	.+82     	; 0x8abe <pow+0x6e>
    8a6c:	68 94       	set
    8a6e:	90 38       	cpi	r25, 0x80	; 128
    8a70:	81 05       	cpc	r24, r1
    8a72:	61 f0       	breq	.+24     	; 0x8a8c <pow+0x3c>
    8a74:	80 38       	cpi	r24, 0x80	; 128
    8a76:	bf ef       	ldi	r27, 0xFF	; 255
    8a78:	9b 07       	cpc	r25, r27
    8a7a:	41 f0       	breq	.+16     	; 0x8a8c <pow+0x3c>
    8a7c:	99 23       	and	r25, r25
    8a7e:	42 f5       	brpl	.+80     	; 0x8ad0 <pow+0x80>
    8a80:	ff 3f       	cpi	r31, 0xFF	; 255
    8a82:	e1 05       	cpc	r30, r1
    8a84:	31 05       	cpc	r19, r1
    8a86:	21 05       	cpc	r18, r1
    8a88:	11 f1       	breq	.+68     	; 0x8ace <pow+0x7e>
    8a8a:	e8 94       	clt
    8a8c:	08 94       	sec
    8a8e:	e7 95       	ror	r30
    8a90:	d9 01       	movw	r26, r18
    8a92:	aa 23       	and	r26, r26
    8a94:	29 f4       	brne	.+10     	; 0x8aa0 <pow+0x50>
    8a96:	ab 2f       	mov	r26, r27
    8a98:	be 2f       	mov	r27, r30
    8a9a:	f8 5f       	subi	r31, 0xF8	; 248
    8a9c:	d0 f3       	brcs	.-12     	; 0x8a92 <pow+0x42>
    8a9e:	10 c0       	rjmp	.+32     	; 0x8ac0 <pow+0x70>
    8aa0:	ff 5f       	subi	r31, 0xFF	; 255
    8aa2:	70 f4       	brcc	.+28     	; 0x8ac0 <pow+0x70>
    8aa4:	a6 95       	lsr	r26
    8aa6:	e0 f7       	brcc	.-8      	; 0x8aa0 <pow+0x50>
    8aa8:	f7 39       	cpi	r31, 0x97	; 151
    8aaa:	50 f0       	brcs	.+20     	; 0x8ac0 <pow+0x70>
    8aac:	19 f0       	breq	.+6      	; 0x8ab4 <pow+0x64>
    8aae:	ff 3a       	cpi	r31, 0xAF	; 175
    8ab0:	38 f4       	brcc	.+14     	; 0x8ac0 <pow+0x70>
    8ab2:	9f 77       	andi	r25, 0x7F	; 127
    8ab4:	9f 93       	push	r25
    8ab6:	0c d0       	rcall	.+24     	; 0x8ad0 <pow+0x80>
    8ab8:	0f 90       	pop	r0
    8aba:	07 fc       	sbrc	r0, 7
    8abc:	90 58       	subi	r25, 0x80	; 128
    8abe:	08 95       	ret
    8ac0:	3e f0       	brts	.+14     	; 0x8ad0 <pow+0x80>
    8ac2:	14 cf       	rjmp	.-472    	; 0x88ec <__fp_nan>
    8ac4:	60 e0       	ldi	r22, 0x00	; 0
    8ac6:	70 e0       	ldi	r23, 0x00	; 0
    8ac8:	80 e8       	ldi	r24, 0x80	; 128
    8aca:	9f e3       	ldi	r25, 0x3F	; 63
    8acc:	08 95       	ret
    8ace:	4f e7       	ldi	r20, 0x7F	; 127
    8ad0:	9f 77       	andi	r25, 0x7F	; 127
    8ad2:	5f 93       	push	r21
    8ad4:	4f 93       	push	r20
    8ad6:	3f 93       	push	r19
    8ad8:	2f 93       	push	r18
    8ada:	f9 d0       	rcall	.+498    	; 0x8cce <log>
    8adc:	2f 91       	pop	r18
    8ade:	3f 91       	pop	r19
    8ae0:	4f 91       	pop	r20
    8ae2:	5f 91       	pop	r21
    8ae4:	52 df       	rcall	.-348    	; 0x898a <__mulsf3>
    8ae6:	4b c0       	rjmp	.+150    	; 0x8b7e <exp>
    8ae8:	11 f4       	brne	.+4      	; 0x8aee <pow+0x9e>
    8aea:	0e f4       	brtc	.+2      	; 0x8aee <pow+0x9e>
    8aec:	ff ce       	rjmp	.-514    	; 0x88ec <__fp_nan>
    8aee:	73 c0       	rjmp	.+230    	; 0x8bd6 <__fp_mpack>

00008af0 <sqrt>:
    8af0:	27 df       	rcall	.-434    	; 0x8940 <__fp_splitA>
    8af2:	d0 f3       	brcs	.-12     	; 0x8ae8 <pow+0x98>
    8af4:	99 23       	and	r25, r25
    8af6:	d9 f3       	breq	.-10     	; 0x8aee <pow+0x9e>
    8af8:	ce f3       	brts	.-14     	; 0x8aec <pow+0x9c>
    8afa:	9f 57       	subi	r25, 0x7F	; 127
    8afc:	55 0b       	sbc	r21, r21
    8afe:	87 ff       	sbrs	r24, 7
    8b00:	78 d0       	rcall	.+240    	; 0x8bf2 <__fp_norm2>
    8b02:	00 24       	eor	r0, r0
    8b04:	a0 e6       	ldi	r26, 0x60	; 96
    8b06:	40 ea       	ldi	r20, 0xA0	; 160
    8b08:	90 01       	movw	r18, r0
    8b0a:	80 58       	subi	r24, 0x80	; 128
    8b0c:	56 95       	lsr	r21
    8b0e:	97 95       	ror	r25
    8b10:	28 f4       	brcc	.+10     	; 0x8b1c <sqrt+0x2c>
    8b12:	80 5c       	subi	r24, 0xC0	; 192
    8b14:	66 0f       	add	r22, r22
    8b16:	77 1f       	adc	r23, r23
    8b18:	88 1f       	adc	r24, r24
    8b1a:	20 f0       	brcs	.+8      	; 0x8b24 <sqrt+0x34>
    8b1c:	26 17       	cp	r18, r22
    8b1e:	37 07       	cpc	r19, r23
    8b20:	48 07       	cpc	r20, r24
    8b22:	30 f4       	brcc	.+12     	; 0x8b30 <sqrt+0x40>
    8b24:	62 1b       	sub	r22, r18
    8b26:	73 0b       	sbc	r23, r19
    8b28:	84 0b       	sbc	r24, r20
    8b2a:	20 29       	or	r18, r0
    8b2c:	31 29       	or	r19, r1
    8b2e:	4a 2b       	or	r20, r26
    8b30:	a6 95       	lsr	r26
    8b32:	17 94       	ror	r1
    8b34:	07 94       	ror	r0
    8b36:	20 25       	eor	r18, r0
    8b38:	31 25       	eor	r19, r1
    8b3a:	4a 27       	eor	r20, r26
    8b3c:	58 f7       	brcc	.-42     	; 0x8b14 <sqrt+0x24>
    8b3e:	66 0f       	add	r22, r22
    8b40:	77 1f       	adc	r23, r23
    8b42:	88 1f       	adc	r24, r24
    8b44:	20 f0       	brcs	.+8      	; 0x8b4e <sqrt+0x5e>
    8b46:	26 17       	cp	r18, r22
    8b48:	37 07       	cpc	r19, r23
    8b4a:	48 07       	cpc	r20, r24
    8b4c:	30 f4       	brcc	.+12     	; 0x8b5a <sqrt+0x6a>
    8b4e:	62 0b       	sbc	r22, r18
    8b50:	73 0b       	sbc	r23, r19
    8b52:	84 0b       	sbc	r24, r20
    8b54:	20 0d       	add	r18, r0
    8b56:	31 1d       	adc	r19, r1
    8b58:	41 1d       	adc	r20, r1
    8b5a:	a0 95       	com	r26
    8b5c:	81 f7       	brne	.-32     	; 0x8b3e <sqrt+0x4e>
    8b5e:	b9 01       	movw	r22, r18
    8b60:	84 2f       	mov	r24, r20
    8b62:	91 58       	subi	r25, 0x81	; 129
    8b64:	88 0f       	add	r24, r24
    8b66:	96 95       	lsr	r25
    8b68:	87 95       	ror	r24
    8b6a:	08 95       	ret

00008b6c <__unordsf2>:
    8b6c:	95 de       	rcall	.-726    	; 0x8898 <__fp_cmp>
    8b6e:	88 0b       	sbc	r24, r24
    8b70:	99 0b       	sbc	r25, r25
    8b72:	08 95       	ret
    8b74:	19 f4       	brne	.+6      	; 0x8b7c <__unordsf2+0x10>
    8b76:	0e f0       	brts	.+2      	; 0x8b7a <__unordsf2+0xe>
    8b78:	b3 ce       	rjmp	.-666    	; 0x88e0 <__fp_inf>
    8b7a:	fc ce       	rjmp	.-520    	; 0x8974 <__fp_zero>
    8b7c:	b7 ce       	rjmp	.-658    	; 0x88ec <__fp_nan>

00008b7e <exp>:
    8b7e:	e0 de       	rcall	.-576    	; 0x8940 <__fp_splitA>
    8b80:	c8 f3       	brcs	.-14     	; 0x8b74 <__unordsf2+0x8>
    8b82:	96 38       	cpi	r25, 0x86	; 134
    8b84:	c0 f7       	brcc	.-16     	; 0x8b76 <__unordsf2+0xa>
    8b86:	07 f8       	bld	r0, 7
    8b88:	0f 92       	push	r0
    8b8a:	e8 94       	clt
    8b8c:	2b e3       	ldi	r18, 0x3B	; 59
    8b8e:	3a ea       	ldi	r19, 0xAA	; 170
    8b90:	48 eb       	ldi	r20, 0xB8	; 184
    8b92:	5f e7       	ldi	r21, 0x7F	; 127
    8b94:	08 df       	rcall	.-496    	; 0x89a6 <__mulsf3_pse>
    8b96:	0f 92       	push	r0
    8b98:	0f 92       	push	r0
    8b9a:	0f 92       	push	r0
    8b9c:	4d b7       	in	r20, 0x3d	; 61
    8b9e:	5e b7       	in	r21, 0x3e	; 62
    8ba0:	0f 92       	push	r0
    8ba2:	d5 d0       	rcall	.+426    	; 0x8d4e <modf>
    8ba4:	ec ef       	ldi	r30, 0xFC	; 252
    8ba6:	f2 e0       	ldi	r31, 0x02	; 2
    8ba8:	2b d0       	rcall	.+86     	; 0x8c00 <__fp_powser>
    8baa:	4f 91       	pop	r20
    8bac:	5f 91       	pop	r21
    8bae:	ef 91       	pop	r30
    8bb0:	ff 91       	pop	r31
    8bb2:	e5 95       	asr	r30
    8bb4:	ee 1f       	adc	r30, r30
    8bb6:	ff 1f       	adc	r31, r31
    8bb8:	49 f0       	breq	.+18     	; 0x8bcc <exp+0x4e>
    8bba:	fe 57       	subi	r31, 0x7E	; 126
    8bbc:	e0 68       	ori	r30, 0x80	; 128
    8bbe:	44 27       	eor	r20, r20
    8bc0:	ee 0f       	add	r30, r30
    8bc2:	44 1f       	adc	r20, r20
    8bc4:	fa 95       	dec	r31
    8bc6:	e1 f7       	brne	.-8      	; 0x8bc0 <exp+0x42>
    8bc8:	41 95       	neg	r20
    8bca:	55 0b       	sbc	r21, r21
    8bcc:	47 d0       	rcall	.+142    	; 0x8c5c <ldexp>
    8bce:	0f 90       	pop	r0
    8bd0:	07 fe       	sbrs	r0, 7
    8bd2:	3b c0       	rjmp	.+118    	; 0x8c4a <inverse>
    8bd4:	08 95       	ret

00008bd6 <__fp_mpack>:
    8bd6:	9f 3f       	cpi	r25, 0xFF	; 255
    8bd8:	31 f0       	breq	.+12     	; 0x8be6 <__fp_mpack_finite+0xc>

00008bda <__fp_mpack_finite>:
    8bda:	91 50       	subi	r25, 0x01	; 1
    8bdc:	20 f4       	brcc	.+8      	; 0x8be6 <__fp_mpack_finite+0xc>
    8bde:	87 95       	ror	r24
    8be0:	77 95       	ror	r23
    8be2:	67 95       	ror	r22
    8be4:	b7 95       	ror	r27
    8be6:	88 0f       	add	r24, r24
    8be8:	91 1d       	adc	r25, r1
    8bea:	96 95       	lsr	r25
    8bec:	87 95       	ror	r24
    8bee:	97 f9       	bld	r25, 7
    8bf0:	08 95       	ret

00008bf2 <__fp_norm2>:
    8bf2:	91 50       	subi	r25, 0x01	; 1
    8bf4:	50 40       	sbci	r21, 0x00	; 0
    8bf6:	66 0f       	add	r22, r22
    8bf8:	77 1f       	adc	r23, r23
    8bfa:	88 1f       	adc	r24, r24
    8bfc:	d2 f7       	brpl	.-12     	; 0x8bf2 <__fp_norm2>
    8bfe:	08 95       	ret

00008c00 <__fp_powser>:
    8c00:	df 93       	push	r29
    8c02:	cf 93       	push	r28
    8c04:	1f 93       	push	r17
    8c06:	0f 93       	push	r16
    8c08:	ff 92       	push	r15
    8c0a:	ef 92       	push	r14
    8c0c:	df 92       	push	r13
    8c0e:	7b 01       	movw	r14, r22
    8c10:	8c 01       	movw	r16, r24
    8c12:	68 94       	set
    8c14:	05 c0       	rjmp	.+10     	; 0x8c20 <__fp_powser+0x20>
    8c16:	da 2e       	mov	r13, r26
    8c18:	ef 01       	movw	r28, r30
    8c1a:	c3 de       	rcall	.-634    	; 0x89a2 <__mulsf3x>
    8c1c:	fe 01       	movw	r30, r28
    8c1e:	e8 94       	clt
    8c20:	a5 91       	lpm	r26, Z+
    8c22:	25 91       	lpm	r18, Z+
    8c24:	35 91       	lpm	r19, Z+
    8c26:	45 91       	lpm	r20, Z+
    8c28:	55 91       	lpm	r21, Z+
    8c2a:	ae f3       	brts	.-22     	; 0x8c16 <__fp_powser+0x16>
    8c2c:	ef 01       	movw	r28, r30
    8c2e:	07 dd       	rcall	.-1522   	; 0x863e <__addsf3x>
    8c30:	fe 01       	movw	r30, r28
    8c32:	97 01       	movw	r18, r14
    8c34:	a8 01       	movw	r20, r16
    8c36:	da 94       	dec	r13
    8c38:	79 f7       	brne	.-34     	; 0x8c18 <__fp_powser+0x18>
    8c3a:	df 90       	pop	r13
    8c3c:	ef 90       	pop	r14
    8c3e:	ff 90       	pop	r15
    8c40:	0f 91       	pop	r16
    8c42:	1f 91       	pop	r17
    8c44:	cf 91       	pop	r28
    8c46:	df 91       	pop	r29
    8c48:	08 95       	ret

00008c4a <inverse>:
    8c4a:	9b 01       	movw	r18, r22
    8c4c:	ac 01       	movw	r20, r24
    8c4e:	60 e0       	ldi	r22, 0x00	; 0
    8c50:	70 e0       	ldi	r23, 0x00	; 0
    8c52:	80 e8       	ldi	r24, 0x80	; 128
    8c54:	9f e3       	ldi	r25, 0x3F	; 63
    8c56:	4a cd       	rjmp	.-1388   	; 0x86ec <__divsf3>
    8c58:	43 ce       	rjmp	.-890    	; 0x88e0 <__fp_inf>
    8c5a:	bd cf       	rjmp	.-134    	; 0x8bd6 <__fp_mpack>

00008c5c <ldexp>:
    8c5c:	71 de       	rcall	.-798    	; 0x8940 <__fp_splitA>
    8c5e:	e8 f3       	brcs	.-6      	; 0x8c5a <inverse+0x10>
    8c60:	99 23       	and	r25, r25
    8c62:	d9 f3       	breq	.-10     	; 0x8c5a <inverse+0x10>
    8c64:	94 0f       	add	r25, r20
    8c66:	51 1d       	adc	r21, r1
    8c68:	bb f3       	brvs	.-18     	; 0x8c58 <inverse+0xe>
    8c6a:	91 50       	subi	r25, 0x01	; 1
    8c6c:	50 40       	sbci	r21, 0x00	; 0
    8c6e:	94 f0       	brlt	.+36     	; 0x8c94 <ldexp+0x38>
    8c70:	59 f0       	breq	.+22     	; 0x8c88 <ldexp+0x2c>
    8c72:	88 23       	and	r24, r24
    8c74:	32 f0       	brmi	.+12     	; 0x8c82 <ldexp+0x26>
    8c76:	66 0f       	add	r22, r22
    8c78:	77 1f       	adc	r23, r23
    8c7a:	88 1f       	adc	r24, r24
    8c7c:	91 50       	subi	r25, 0x01	; 1
    8c7e:	50 40       	sbci	r21, 0x00	; 0
    8c80:	c1 f7       	brne	.-16     	; 0x8c72 <ldexp+0x16>
    8c82:	9e 3f       	cpi	r25, 0xFE	; 254
    8c84:	51 05       	cpc	r21, r1
    8c86:	44 f7       	brge	.-48     	; 0x8c58 <inverse+0xe>
    8c88:	88 0f       	add	r24, r24
    8c8a:	91 1d       	adc	r25, r1
    8c8c:	96 95       	lsr	r25
    8c8e:	87 95       	ror	r24
    8c90:	97 f9       	bld	r25, 7
    8c92:	08 95       	ret
    8c94:	5f 3f       	cpi	r21, 0xFF	; 255
    8c96:	ac f0       	brlt	.+42     	; 0x8cc2 <ldexp+0x66>
    8c98:	98 3e       	cpi	r25, 0xE8	; 232
    8c9a:	9c f0       	brlt	.+38     	; 0x8cc2 <ldexp+0x66>
    8c9c:	bb 27       	eor	r27, r27
    8c9e:	86 95       	lsr	r24
    8ca0:	77 95       	ror	r23
    8ca2:	67 95       	ror	r22
    8ca4:	b7 95       	ror	r27
    8ca6:	08 f4       	brcc	.+2      	; 0x8caa <ldexp+0x4e>
    8ca8:	b1 60       	ori	r27, 0x01	; 1
    8caa:	93 95       	inc	r25
    8cac:	c1 f7       	brne	.-16     	; 0x8c9e <ldexp+0x42>
    8cae:	bb 0f       	add	r27, r27
    8cb0:	58 f7       	brcc	.-42     	; 0x8c88 <ldexp+0x2c>
    8cb2:	11 f4       	brne	.+4      	; 0x8cb8 <ldexp+0x5c>
    8cb4:	60 ff       	sbrs	r22, 0
    8cb6:	e8 cf       	rjmp	.-48     	; 0x8c88 <ldexp+0x2c>
    8cb8:	6f 5f       	subi	r22, 0xFF	; 255
    8cba:	7f 4f       	sbci	r23, 0xFF	; 255
    8cbc:	8f 4f       	sbci	r24, 0xFF	; 255
    8cbe:	9f 4f       	sbci	r25, 0xFF	; 255
    8cc0:	e3 cf       	rjmp	.-58     	; 0x8c88 <ldexp+0x2c>
    8cc2:	59 ce       	rjmp	.-846    	; 0x8976 <__fp_szero>
    8cc4:	0e f0       	brts	.+2      	; 0x8cc8 <ldexp+0x6c>
    8cc6:	87 cf       	rjmp	.-242    	; 0x8bd6 <__fp_mpack>
    8cc8:	11 ce       	rjmp	.-990    	; 0x88ec <__fp_nan>
    8cca:	68 94       	set
    8ccc:	09 ce       	rjmp	.-1006   	; 0x88e0 <__fp_inf>

00008cce <log>:
    8cce:	38 de       	rcall	.-912    	; 0x8940 <__fp_splitA>
    8cd0:	c8 f3       	brcs	.-14     	; 0x8cc4 <ldexp+0x68>
    8cd2:	99 23       	and	r25, r25
    8cd4:	d1 f3       	breq	.-12     	; 0x8cca <ldexp+0x6e>
    8cd6:	c6 f3       	brts	.-16     	; 0x8cc8 <ldexp+0x6c>
    8cd8:	df 93       	push	r29
    8cda:	cf 93       	push	r28
    8cdc:	1f 93       	push	r17
    8cde:	0f 93       	push	r16
    8ce0:	ff 92       	push	r15
    8ce2:	c9 2f       	mov	r28, r25
    8ce4:	dd 27       	eor	r29, r29
    8ce6:	88 23       	and	r24, r24
    8ce8:	2a f0       	brmi	.+10     	; 0x8cf4 <log+0x26>
    8cea:	21 97       	sbiw	r28, 0x01	; 1
    8cec:	66 0f       	add	r22, r22
    8cee:	77 1f       	adc	r23, r23
    8cf0:	88 1f       	adc	r24, r24
    8cf2:	da f7       	brpl	.-10     	; 0x8cea <log+0x1c>
    8cf4:	20 e0       	ldi	r18, 0x00	; 0
    8cf6:	30 e0       	ldi	r19, 0x00	; 0
    8cf8:	40 e8       	ldi	r20, 0x80	; 128
    8cfa:	5f eb       	ldi	r21, 0xBF	; 191
    8cfc:	9f e3       	ldi	r25, 0x3F	; 63
    8cfe:	88 39       	cpi	r24, 0x98	; 152
    8d00:	20 f0       	brcs	.+8      	; 0x8d0a <log+0x3c>
    8d02:	80 3e       	cpi	r24, 0xE0	; 224
    8d04:	30 f0       	brcs	.+12     	; 0x8d12 <log+0x44>
    8d06:	21 96       	adiw	r28, 0x01	; 1
    8d08:	8f 77       	andi	r24, 0x7F	; 127
    8d0a:	88 dc       	rcall	.-1776   	; 0x861c <__addsf3>
    8d0c:	e4 e2       	ldi	r30, 0x24	; 36
    8d0e:	f3 e0       	ldi	r31, 0x03	; 3
    8d10:	03 c0       	rjmp	.+6      	; 0x8d18 <log+0x4a>
    8d12:	84 dc       	rcall	.-1784   	; 0x861c <__addsf3>
    8d14:	e1 e5       	ldi	r30, 0x51	; 81
    8d16:	f3 e0       	ldi	r31, 0x03	; 3
    8d18:	73 df       	rcall	.-282    	; 0x8c00 <__fp_powser>
    8d1a:	8b 01       	movw	r16, r22
    8d1c:	be 01       	movw	r22, r28
    8d1e:	ec 01       	movw	r28, r24
    8d20:	fb 2e       	mov	r15, r27
    8d22:	6f 57       	subi	r22, 0x7F	; 127
    8d24:	71 09       	sbc	r23, r1
    8d26:	75 95       	asr	r23
    8d28:	77 1f       	adc	r23, r23
    8d2a:	88 0b       	sbc	r24, r24
    8d2c:	99 0b       	sbc	r25, r25
    8d2e:	79 dd       	rcall	.-1294   	; 0x8822 <__floatsisf>
    8d30:	28 e1       	ldi	r18, 0x18	; 24
    8d32:	32 e7       	ldi	r19, 0x72	; 114
    8d34:	41 e3       	ldi	r20, 0x31	; 49
    8d36:	5f e3       	ldi	r21, 0x3F	; 63
    8d38:	34 de       	rcall	.-920    	; 0x89a2 <__mulsf3x>
    8d3a:	af 2d       	mov	r26, r15
    8d3c:	98 01       	movw	r18, r16
    8d3e:	ae 01       	movw	r20, r28
    8d40:	ff 90       	pop	r15
    8d42:	0f 91       	pop	r16
    8d44:	1f 91       	pop	r17
    8d46:	cf 91       	pop	r28
    8d48:	df 91       	pop	r29
    8d4a:	79 dc       	rcall	.-1806   	; 0x863e <__addsf3x>
    8d4c:	e0 cd       	rjmp	.-1088   	; 0x890e <__fp_round>

00008d4e <modf>:
    8d4e:	fa 01       	movw	r30, r20
    8d50:	dc 01       	movw	r26, r24
    8d52:	aa 0f       	add	r26, r26
    8d54:	bb 1f       	adc	r27, r27
    8d56:	9b 01       	movw	r18, r22
    8d58:	ac 01       	movw	r20, r24
    8d5a:	bf 57       	subi	r27, 0x7F	; 127
    8d5c:	28 f4       	brcc	.+10     	; 0x8d68 <modf+0x1a>
    8d5e:	22 27       	eor	r18, r18
    8d60:	33 27       	eor	r19, r19
    8d62:	44 27       	eor	r20, r20
    8d64:	50 78       	andi	r21, 0x80	; 128
    8d66:	1f c0       	rjmp	.+62     	; 0x8da6 <modf+0x58>
    8d68:	b7 51       	subi	r27, 0x17	; 23
    8d6a:	88 f4       	brcc	.+34     	; 0x8d8e <modf+0x40>
    8d6c:	ab 2f       	mov	r26, r27
    8d6e:	00 24       	eor	r0, r0
    8d70:	46 95       	lsr	r20
    8d72:	37 95       	ror	r19
    8d74:	27 95       	ror	r18
    8d76:	01 1c       	adc	r0, r1
    8d78:	a3 95       	inc	r26
    8d7a:	d2 f3       	brmi	.-12     	; 0x8d70 <modf+0x22>
    8d7c:	00 20       	and	r0, r0
    8d7e:	69 f0       	breq	.+26     	; 0x8d9a <modf+0x4c>
    8d80:	22 0f       	add	r18, r18
    8d82:	33 1f       	adc	r19, r19
    8d84:	44 1f       	adc	r20, r20
    8d86:	b3 95       	inc	r27
    8d88:	da f3       	brmi	.-10     	; 0x8d80 <modf+0x32>
    8d8a:	0d d0       	rcall	.+26     	; 0x8da6 <modf+0x58>
    8d8c:	46 cc       	rjmp	.-1908   	; 0x861a <__subsf3>
    8d8e:	61 30       	cpi	r22, 0x01	; 1
    8d90:	71 05       	cpc	r23, r1
    8d92:	a0 e8       	ldi	r26, 0x80	; 128
    8d94:	8a 07       	cpc	r24, r26
    8d96:	b9 46       	sbci	r27, 0x69	; 105
    8d98:	30 f4       	brcc	.+12     	; 0x8da6 <modf+0x58>
    8d9a:	9b 01       	movw	r18, r22
    8d9c:	ac 01       	movw	r20, r24
    8d9e:	66 27       	eor	r22, r22
    8da0:	77 27       	eor	r23, r23
    8da2:	88 27       	eor	r24, r24
    8da4:	90 78       	andi	r25, 0x80	; 128
    8da6:	30 96       	adiw	r30, 0x00	; 0
    8da8:	21 f0       	breq	.+8      	; 0x8db2 <modf+0x64>
    8daa:	20 83       	st	Z, r18
    8dac:	31 83       	std	Z+1, r19	; 0x01
    8dae:	42 83       	std	Z+2, r20	; 0x02
    8db0:	53 83       	std	Z+3, r21	; 0x03
    8db2:	08 95       	ret

00008db4 <__cxa_pure_virtual>:
    8db4:	0e 94 bb 4f 	call	0x9f76	; 0x9f76 <abort>

00008db8 <_ZN14HardwareSerial9availableEv>:
  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
}

int HardwareSerial::available(void)
{
    8db8:	fc 01       	movw	r30, r24
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
    8dba:	91 8d       	ldd	r25, Z+25	; 0x19
    8dbc:	22 8d       	ldd	r18, Z+26	; 0x1a
    8dbe:	89 2f       	mov	r24, r25
    8dc0:	90 e0       	ldi	r25, 0x00	; 0
    8dc2:	80 5c       	subi	r24, 0xC0	; 192
    8dc4:	9f 4f       	sbci	r25, 0xFF	; 255
    8dc6:	82 1b       	sub	r24, r18
    8dc8:	91 09       	sbc	r25, r1
}
    8dca:	8f 73       	andi	r24, 0x3F	; 63
    8dcc:	99 27       	eor	r25, r25
    8dce:	08 95       	ret

00008dd0 <_ZN14HardwareSerial4peekEv>:

int HardwareSerial::peek(void)
{
    8dd0:	fc 01       	movw	r30, r24
  if (_rx_buffer_head == _rx_buffer_tail) {
    8dd2:	91 8d       	ldd	r25, Z+25	; 0x19
    8dd4:	82 8d       	ldd	r24, Z+26	; 0x1a
    8dd6:	98 17       	cp	r25, r24
    8dd8:	31 f0       	breq	.+12     	; 0x8de6 <_ZN14HardwareSerial4peekEv+0x16>
    return -1;
  } else {
    return _rx_buffer[_rx_buffer_tail];
    8dda:	82 8d       	ldd	r24, Z+26	; 0x1a
    8ddc:	e8 0f       	add	r30, r24
    8dde:	f1 1d       	adc	r31, r1
    8de0:	85 8d       	ldd	r24, Z+29	; 0x1d
    8de2:	90 e0       	ldi	r25, 0x00	; 0
    8de4:	08 95       	ret
}

int HardwareSerial::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    8de6:	8f ef       	ldi	r24, 0xFF	; 255
    8de8:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    return _rx_buffer[_rx_buffer_tail];
  }
}
    8dea:	08 95       	ret

00008dec <_ZN14HardwareSerial4readEv>:

int HardwareSerial::read(void)
{
    8dec:	fc 01       	movw	r30, r24
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    8dee:	91 8d       	ldd	r25, Z+25	; 0x19
    8df0:	82 8d       	ldd	r24, Z+26	; 0x1a
    8df2:	98 17       	cp	r25, r24
    8df4:	61 f0       	breq	.+24     	; 0x8e0e <_ZN14HardwareSerial4readEv+0x22>
    return -1;
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    8df6:	82 8d       	ldd	r24, Z+26	; 0x1a
    8df8:	df 01       	movw	r26, r30
    8dfa:	a8 0f       	add	r26, r24
    8dfc:	b1 1d       	adc	r27, r1
    8dfe:	5d 96       	adiw	r26, 0x1d	; 29
    8e00:	8c 91       	ld	r24, X
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    8e02:	92 8d       	ldd	r25, Z+26	; 0x1a
    8e04:	9f 5f       	subi	r25, 0xFF	; 255
    8e06:	9f 73       	andi	r25, 0x3F	; 63
    8e08:	92 8f       	std	Z+26, r25	; 0x1a
    return c;
    8e0a:	90 e0       	ldi	r25, 0x00	; 0
    8e0c:	08 95       	ret

int HardwareSerial::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    8e0e:	8f ef       	ldi	r24, 0xFF	; 255
    8e10:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
    8e12:	08 95       	ret

00008e14 <_ZN14HardwareSerial17availableForWriteEv>:
{
  tx_buffer_index_t head;
  tx_buffer_index_t tail;

  TX_BUFFER_ATOMIC {
    head = _tx_buffer_head;
    8e14:	fc 01       	movw	r30, r24
    8e16:	53 8d       	ldd	r21, Z+27	; 0x1b
    tail = _tx_buffer_tail;
    8e18:	44 8d       	ldd	r20, Z+28	; 0x1c
    8e1a:	25 2f       	mov	r18, r21
    8e1c:	30 e0       	ldi	r19, 0x00	; 0
    8e1e:	84 2f       	mov	r24, r20
    8e20:	90 e0       	ldi	r25, 0x00	; 0
  }
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
    8e22:	82 1b       	sub	r24, r18
    8e24:	93 0b       	sbc	r25, r19
    8e26:	54 17       	cp	r21, r20
    8e28:	10 f0       	brcs	.+4      	; 0x8e2e <_ZN14HardwareSerial17availableForWriteEv+0x1a>
    8e2a:	cf 96       	adiw	r24, 0x3f	; 63
    8e2c:	08 95       	ret
  return tail - head - 1;
    8e2e:	01 97       	sbiw	r24, 0x01	; 1
}
    8e30:	08 95       	ret

00008e32 <_Z14serialEventRunv>:
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    8e32:	86 ea       	ldi	r24, 0xA6	; 166
    8e34:	98 e4       	ldi	r25, 0x48	; 72
    8e36:	89 2b       	or	r24, r25
    8e38:	39 f0       	breq	.+14     	; 0x8e48 <_Z14serialEventRunv+0x16>
    8e3a:	80 e0       	ldi	r24, 0x00	; 0
    8e3c:	90 e0       	ldi	r25, 0x00	; 0
    8e3e:	89 2b       	or	r24, r25
    8e40:	19 f0       	breq	.+6      	; 0x8e48 <_Z14serialEventRunv+0x16>
    8e42:	84 d1       	rcall	.+776    	; 0x914c <_Z17Serial0_availablev>
    8e44:	81 11       	cpse	r24, r1
    8e46:	25 c0       	rjmp	.+74     	; 0x8e92 <_Z14serialEventRunv+0x60>
#endif
#if defined(HAVE_HWSERIAL1)
  if (Serial1_available && serialEvent1 && Serial1_available()) serialEvent1();
    8e48:	80 e0       	ldi	r24, 0x00	; 0
    8e4a:	90 e0       	ldi	r25, 0x00	; 0
    8e4c:	89 2b       	or	r24, r25
    8e4e:	41 f0       	breq	.+16     	; 0x8e60 <_Z14serialEventRunv+0x2e>
    8e50:	80 e0       	ldi	r24, 0x00	; 0
    8e52:	90 e0       	ldi	r25, 0x00	; 0
    8e54:	89 2b       	or	r24, r25
    8e56:	21 f0       	breq	.+8      	; 0x8e60 <_Z14serialEventRunv+0x2e>
    8e58:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    8e5c:	81 11       	cpse	r24, r1
    8e5e:	1c c0       	rjmp	.+56     	; 0x8e98 <_Z14serialEventRunv+0x66>
#endif
#if defined(HAVE_HWSERIAL2)
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
    8e60:	80 e0       	ldi	r24, 0x00	; 0
    8e62:	90 e0       	ldi	r25, 0x00	; 0
    8e64:	89 2b       	or	r24, r25
    8e66:	41 f0       	breq	.+16     	; 0x8e78 <_Z14serialEventRunv+0x46>
    8e68:	80 e0       	ldi	r24, 0x00	; 0
    8e6a:	90 e0       	ldi	r25, 0x00	; 0
    8e6c:	89 2b       	or	r24, r25
    8e6e:	21 f0       	breq	.+8      	; 0x8e78 <_Z14serialEventRunv+0x46>
    8e70:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    8e74:	81 11       	cpse	r24, r1
    8e76:	13 c0       	rjmp	.+38     	; 0x8e9e <_Z14serialEventRunv+0x6c>
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
    8e78:	80 e0       	ldi	r24, 0x00	; 0
    8e7a:	90 e0       	ldi	r25, 0x00	; 0
    8e7c:	89 2b       	or	r24, r25
    8e7e:	a1 f0       	breq	.+40     	; 0x8ea8 <_Z14serialEventRunv+0x76>
    8e80:	80 e0       	ldi	r24, 0x00	; 0
    8e82:	90 e0       	ldi	r25, 0x00	; 0
    8e84:	89 2b       	or	r24, r25
    8e86:	81 f0       	breq	.+32     	; 0x8ea8 <_Z14serialEventRunv+0x76>
    8e88:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    8e8c:	81 11       	cpse	r24, r1
    8e8e:	0a c0       	rjmp	.+20     	; 0x8ea4 <_Z14serialEventRunv+0x72>
    8e90:	08 95       	ret
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    8e92:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    8e96:	d8 cf       	rjmp	.-80     	; 0x8e48 <_Z14serialEventRunv+0x16>
#endif
#if defined(HAVE_HWSERIAL1)
  if (Serial1_available && serialEvent1 && Serial1_available()) serialEvent1();
    8e98:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    8e9c:	e1 cf       	rjmp	.-62     	; 0x8e60 <_Z14serialEventRunv+0x2e>
#endif
#if defined(HAVE_HWSERIAL2)
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
    8e9e:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    8ea2:	ea cf       	rjmp	.-44     	; 0x8e78 <_Z14serialEventRunv+0x46>
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
    8ea4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
    8ea8:	08 95       	ret

00008eaa <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
    8eaa:	fc 01       	movw	r30, r24
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
    8eac:	84 8d       	ldd	r24, Z+28	; 0x1c
    8eae:	df 01       	movw	r26, r30
    8eb0:	a8 0f       	add	r26, r24
    8eb2:	b1 1d       	adc	r27, r1
    8eb4:	a3 5a       	subi	r26, 0xA3	; 163
    8eb6:	bf 4f       	sbci	r27, 0xFF	; 255
    8eb8:	2c 91       	ld	r18, X
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
    8eba:	84 8d       	ldd	r24, Z+28	; 0x1c
    8ebc:	90 e0       	ldi	r25, 0x00	; 0
    8ebe:	01 96       	adiw	r24, 0x01	; 1
    8ec0:	8f 73       	andi	r24, 0x3F	; 63
    8ec2:	99 27       	eor	r25, r25
    8ec4:	84 8f       	std	Z+28, r24	; 0x1c

  *_udr = c;
    8ec6:	a6 89       	ldd	r26, Z+22	; 0x16
    8ec8:	b7 89       	ldd	r27, Z+23	; 0x17
    8eca:	2c 93       	st	X, r18
  // location". This makes sure flush() won't return until the bytes
  // actually got written. Other r/w bits are preserved, and zeroes
  // written to the rest.

#ifdef MPCM0
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
    8ecc:	a0 89       	ldd	r26, Z+16	; 0x10
    8ece:	b1 89       	ldd	r27, Z+17	; 0x11
    8ed0:	8c 91       	ld	r24, X
    8ed2:	83 70       	andi	r24, 0x03	; 3
    8ed4:	80 64       	ori	r24, 0x40	; 64
    8ed6:	8c 93       	st	X, r24
#else
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif

  if (_tx_buffer_head == _tx_buffer_tail) {
    8ed8:	93 8d       	ldd	r25, Z+27	; 0x1b
    8eda:	84 8d       	ldd	r24, Z+28	; 0x1c
    8edc:	98 13       	cpse	r25, r24
    8ede:	06 c0       	rjmp	.+12     	; 0x8eec <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x42>
    // Buffer empty, so disable interrupts
    cbi(*_ucsrb, UDRIE0);
    8ee0:	02 88       	ldd	r0, Z+18	; 0x12
    8ee2:	f3 89       	ldd	r31, Z+19	; 0x13
    8ee4:	e0 2d       	mov	r30, r0
    8ee6:	80 81       	ld	r24, Z
    8ee8:	8f 7d       	andi	r24, 0xDF	; 223
    8eea:	80 83       	st	Z, r24
    8eec:	08 95       	ret

00008eee <_ZN14HardwareSerial5writeEh>:
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}

size_t HardwareSerial::write(uint8_t c)
{
    8eee:	ef 92       	push	r14
    8ef0:	ff 92       	push	r15
    8ef2:	0f 93       	push	r16
    8ef4:	1f 93       	push	r17
    8ef6:	cf 93       	push	r28
    8ef8:	df 93       	push	r29
    8efa:	ec 01       	movw	r28, r24
  _written = true;
    8efc:	81 e0       	ldi	r24, 0x01	; 1
    8efe:	88 8f       	std	Y+24, r24	; 0x18
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    8f00:	9b 8d       	ldd	r25, Y+27	; 0x1b
    8f02:	8c 8d       	ldd	r24, Y+28	; 0x1c
    8f04:	98 13       	cpse	r25, r24
    8f06:	05 c0       	rjmp	.+10     	; 0x8f12 <_ZN14HardwareSerial5writeEh+0x24>
    8f08:	e8 89       	ldd	r30, Y+16	; 0x10
    8f0a:	f9 89       	ldd	r31, Y+17	; 0x11
    8f0c:	80 81       	ld	r24, Z
    8f0e:	85 fd       	sbrc	r24, 5
    8f10:	25 c0       	rjmp	.+74     	; 0x8f5c <_ZN14HardwareSerial5writeEh+0x6e>
    8f12:	f6 2e       	mov	r15, r22
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif
    }
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
    8f14:	0b 8d       	ldd	r16, Y+27	; 0x1b
    8f16:	10 e0       	ldi	r17, 0x00	; 0
    8f18:	0f 5f       	subi	r16, 0xFF	; 255
    8f1a:	1f 4f       	sbci	r17, 0xFF	; 255
    8f1c:	0f 73       	andi	r16, 0x3F	; 63
    8f1e:	11 27       	eor	r17, r17
    8f20:	e0 2e       	mov	r14, r16
	
  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
    8f22:	8c 8d       	ldd	r24, Y+28	; 0x1c
    8f24:	e8 12       	cpse	r14, r24
    8f26:	0b c0       	rjmp	.+22     	; 0x8f3e <_ZN14HardwareSerial5writeEh+0x50>
    if (bit_is_clear(SREG, SREG_I)) {
    8f28:	0f b6       	in	r0, 0x3f	; 63
    8f2a:	07 fc       	sbrc	r0, 7
    8f2c:	fa cf       	rjmp	.-12     	; 0x8f22 <_ZN14HardwareSerial5writeEh+0x34>
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
    8f2e:	e8 89       	ldd	r30, Y+16	; 0x10
    8f30:	f9 89       	ldd	r31, Y+17	; 0x11
    8f32:	80 81       	ld	r24, Z
    8f34:	85 ff       	sbrs	r24, 5
    8f36:	f5 cf       	rjmp	.-22     	; 0x8f22 <_ZN14HardwareSerial5writeEh+0x34>
	_tx_udr_empty_irq();
    8f38:	ce 01       	movw	r24, r28
    8f3a:	b7 df       	rcall	.-146    	; 0x8eaa <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    8f3c:	f2 cf       	rjmp	.-28     	; 0x8f22 <_ZN14HardwareSerial5writeEh+0x34>
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
    8f3e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    8f40:	fe 01       	movw	r30, r28
    8f42:	e8 0f       	add	r30, r24
    8f44:	f1 1d       	adc	r31, r1
    8f46:	e3 5a       	subi	r30, 0xA3	; 163
    8f48:	ff 4f       	sbci	r31, 0xFF	; 255
    8f4a:	f0 82       	st	Z, r15

  // make atomic to prevent execution of ISR between setting the
  // head pointer and setting the interrupt flag resulting in buffer
  // retransmission
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    8f4c:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    8f4e:	f8 94       	cli
    _tx_buffer_head = i;
    8f50:	0b 8f       	std	Y+27, r16	; 0x1b
    sbi(*_ucsrb, UDRIE0);
    8f52:	ea 89       	ldd	r30, Y+18	; 0x12
    8f54:	fb 89       	ldd	r31, Y+19	; 0x13
    8f56:	80 81       	ld	r24, Z
    8f58:	80 62       	ori	r24, 0x20	; 32
    8f5a:	0a c0       	rjmp	.+20     	; 0x8f70 <_ZN14HardwareSerial5writeEh+0x82>
    // So writing UDR must happen first.
    // Writing UDR and clearing TC must be done atomically, otherwise
    // interrupts might delay the TXC clear so the byte written to UDR
    // is transmitted (setting TXC) before clearing TXC. Then TXC will
    // be cleared when no bytes are left, causing flush() to hang
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    8f5c:	9f b7       	in	r25, 0x3f	; 63
    8f5e:	f8 94       	cli
      *_udr = c;
    8f60:	ee 89       	ldd	r30, Y+22	; 0x16
    8f62:	ff 89       	ldd	r31, Y+23	; 0x17
    8f64:	60 83       	st	Z, r22
#ifdef MPCM0
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
    8f66:	e8 89       	ldd	r30, Y+16	; 0x10
    8f68:	f9 89       	ldd	r31, Y+17	; 0x11
    8f6a:	80 81       	ld	r24, Z
    8f6c:	83 70       	andi	r24, 0x03	; 3
    8f6e:	80 64       	ori	r24, 0x40	; 64
    8f70:	80 83       	st	Z, r24
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    8f72:	9f bf       	out	0x3f, r25	; 63
    _tx_buffer_head = i;
    sbi(*_ucsrb, UDRIE0);
  }
  
  return 1;
}
    8f74:	81 e0       	ldi	r24, 0x01	; 1
    8f76:	90 e0       	ldi	r25, 0x00	; 0
    8f78:	df 91       	pop	r29
    8f7a:	cf 91       	pop	r28
    8f7c:	1f 91       	pop	r17
    8f7e:	0f 91       	pop	r16
    8f80:	ff 90       	pop	r15
    8f82:	ef 90       	pop	r14
    8f84:	08 95       	ret

00008f86 <_ZN14HardwareSerial5flushEv>:
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
    8f86:	cf 93       	push	r28
    8f88:	df 93       	push	r29
    8f8a:	ec 01       	movw	r28, r24
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
    8f8c:	88 8d       	ldd	r24, Y+24	; 0x18
    8f8e:	88 23       	and	r24, r24
    8f90:	c1 f0       	breq	.+48     	; 0x8fc2 <_ZN14HardwareSerial5flushEv+0x3c>
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
    8f92:	ea 89       	ldd	r30, Y+18	; 0x12
    8f94:	fb 89       	ldd	r31, Y+19	; 0x13
    8f96:	80 81       	ld	r24, Z
    8f98:	85 fd       	sbrc	r24, 5
    8f9a:	05 c0       	rjmp	.+10     	; 0x8fa6 <_ZN14HardwareSerial5flushEv+0x20>
    8f9c:	a8 89       	ldd	r26, Y+16	; 0x10
    8f9e:	b9 89       	ldd	r27, Y+17	; 0x11
    8fa0:	8c 91       	ld	r24, X
    8fa2:	86 fd       	sbrc	r24, 6
    8fa4:	0e c0       	rjmp	.+28     	; 0x8fc2 <_ZN14HardwareSerial5flushEv+0x3c>
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
    8fa6:	0f b6       	in	r0, 0x3f	; 63
    8fa8:	07 fc       	sbrc	r0, 7
    8faa:	f5 cf       	rjmp	.-22     	; 0x8f96 <_ZN14HardwareSerial5flushEv+0x10>
    8fac:	80 81       	ld	r24, Z
    8fae:	85 ff       	sbrs	r24, 5
    8fb0:	f2 cf       	rjmp	.-28     	; 0x8f96 <_ZN14HardwareSerial5flushEv+0x10>
	// Interrupts are globally disabled, but the DR empty
	// interrupt should be enabled, so poll the DR empty flag to
	// prevent deadlock
	if (bit_is_set(*_ucsra, UDRE0))
    8fb2:	a8 89       	ldd	r26, Y+16	; 0x10
    8fb4:	b9 89       	ldd	r27, Y+17	; 0x11
    8fb6:	8c 91       	ld	r24, X
    8fb8:	85 ff       	sbrs	r24, 5
    8fba:	ed cf       	rjmp	.-38     	; 0x8f96 <_ZN14HardwareSerial5flushEv+0x10>
	  _tx_udr_empty_irq();
    8fbc:	ce 01       	movw	r24, r28
    8fbe:	75 df       	rcall	.-278    	; 0x8eaa <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    8fc0:	e8 cf       	rjmp	.-48     	; 0x8f92 <_ZN14HardwareSerial5flushEv+0xc>
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
    8fc2:	df 91       	pop	r29
    8fc4:	cf 91       	pop	r28
    8fc6:	08 95       	ret

00008fc8 <_ZN14HardwareSerial5beginEmh>:
}

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
    8fc8:	cf 92       	push	r12
    8fca:	df 92       	push	r13
    8fcc:	ef 92       	push	r14
    8fce:	ff 92       	push	r15
    8fd0:	1f 93       	push	r17
    8fd2:	cf 93       	push	r28
    8fd4:	df 93       	push	r29
    8fd6:	ec 01       	movw	r28, r24
    8fd8:	6a 01       	movw	r12, r20
    8fda:	7b 01       	movw	r14, r22
    8fdc:	12 2f       	mov	r17, r18
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
    8fde:	e8 89       	ldd	r30, Y+16	; 0x10
    8fe0:	f9 89       	ldd	r31, Y+17	; 0x11
    8fe2:	82 e0       	ldi	r24, 0x02	; 2
    8fe4:	80 83       	st	Z, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    8fe6:	41 15       	cp	r20, r1
    8fe8:	51 4e       	sbci	r21, 0xE1	; 225
    8fea:	61 05       	cpc	r22, r1
    8fec:	71 05       	cpc	r23, r1
    8fee:	a9 f0       	breq	.+42     	; 0x901a <_ZN14HardwareSerial5beginEmh+0x52>
// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
    8ff0:	60 e0       	ldi	r22, 0x00	; 0
    8ff2:	79 e0       	ldi	r23, 0x09	; 9
    8ff4:	8d e3       	ldi	r24, 0x3D	; 61
    8ff6:	90 e0       	ldi	r25, 0x00	; 0
    8ff8:	a7 01       	movw	r20, r14
    8ffa:	96 01       	movw	r18, r12
    8ffc:	78 d5       	rcall	.+2800   	; 0x9aee <__udivmodsi4>
    8ffe:	da 01       	movw	r26, r20
    9000:	c9 01       	movw	r24, r18
    9002:	01 97       	sbiw	r24, 0x01	; 1
    9004:	a1 09       	sbc	r26, r1
    9006:	b1 09       	sbc	r27, r1
    9008:	b6 95       	lsr	r27
    900a:	a7 95       	ror	r26
    900c:	97 95       	ror	r25
    900e:	87 95       	ror	r24
    9010:	9c 01       	movw	r18, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    9012:	21 15       	cp	r18, r1
    9014:	80 e1       	ldi	r24, 0x10	; 16
    9016:	38 07       	cpc	r19, r24
    9018:	a0 f0       	brcs	.+40     	; 0x9042 <_ZN14HardwareSerial5beginEmh+0x7a>
  {
    *_ucsra = 0;
    901a:	e8 89       	ldd	r30, Y+16	; 0x10
    901c:	f9 89       	ldd	r31, Y+17	; 0x11
    901e:	10 82       	st	Z, r1
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
    9020:	60 e8       	ldi	r22, 0x80	; 128
    9022:	74 e8       	ldi	r23, 0x84	; 132
    9024:	8e e1       	ldi	r24, 0x1E	; 30
    9026:	90 e0       	ldi	r25, 0x00	; 0
    9028:	a7 01       	movw	r20, r14
    902a:	96 01       	movw	r18, r12
    902c:	60 d5       	rcall	.+2752   	; 0x9aee <__udivmodsi4>
    902e:	da 01       	movw	r26, r20
    9030:	c9 01       	movw	r24, r18
    9032:	01 97       	sbiw	r24, 0x01	; 1
    9034:	a1 09       	sbc	r26, r1
    9036:	b1 09       	sbc	r27, r1
    9038:	b6 95       	lsr	r27
    903a:	a7 95       	ror	r26
    903c:	97 95       	ror	r25
    903e:	87 95       	ror	r24
    9040:	9c 01       	movw	r18, r24
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
    9042:	ec 85       	ldd	r30, Y+12	; 0x0c
    9044:	fd 85       	ldd	r31, Y+13	; 0x0d
    9046:	30 83       	st	Z, r19
  *_ubrrl = baud_setting;
    9048:	ee 85       	ldd	r30, Y+14	; 0x0e
    904a:	ff 85       	ldd	r31, Y+15	; 0x0f
    904c:	20 83       	st	Z, r18

  _written = false;
    904e:	18 8e       	std	Y+24, r1	; 0x18

  //set the data bits, parity, and stop bits
#if defined(__AVR_ATmega8__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
    9050:	ec 89       	ldd	r30, Y+20	; 0x14
    9052:	fd 89       	ldd	r31, Y+21	; 0x15
    9054:	10 83       	st	Z, r17
  
  sbi(*_ucsrb, RXEN0);
    9056:	ea 89       	ldd	r30, Y+18	; 0x12
    9058:	fb 89       	ldd	r31, Y+19	; 0x13
    905a:	80 81       	ld	r24, Z
    905c:	80 61       	ori	r24, 0x10	; 16
    905e:	80 83       	st	Z, r24
  sbi(*_ucsrb, TXEN0);
    9060:	ea 89       	ldd	r30, Y+18	; 0x12
    9062:	fb 89       	ldd	r31, Y+19	; 0x13
    9064:	80 81       	ld	r24, Z
    9066:	88 60       	ori	r24, 0x08	; 8
    9068:	80 83       	st	Z, r24
  sbi(*_ucsrb, RXCIE0);
    906a:	ea 89       	ldd	r30, Y+18	; 0x12
    906c:	fb 89       	ldd	r31, Y+19	; 0x13
    906e:	80 81       	ld	r24, Z
    9070:	80 68       	ori	r24, 0x80	; 128
    9072:	80 83       	st	Z, r24
  cbi(*_ucsrb, UDRIE0);
    9074:	ea 89       	ldd	r30, Y+18	; 0x12
    9076:	fb 89       	ldd	r31, Y+19	; 0x13
    9078:	80 81       	ld	r24, Z
    907a:	8f 7d       	andi	r24, 0xDF	; 223
    907c:	80 83       	st	Z, r24
}
    907e:	df 91       	pop	r29
    9080:	cf 91       	pop	r28
    9082:	1f 91       	pop	r17
    9084:	ff 90       	pop	r15
    9086:	ef 90       	pop	r14
    9088:	df 90       	pop	r13
    908a:	cf 90       	pop	r12
    908c:	08 95       	ret

0000908e <__vector_25>:
#elif defined(USART_RXC_vect)
  ISR(USART_RXC_vect) // ATmega8
#else
  #error "Don't know what the Data Received vector is called for Serial"
#endif
  {
    908e:	1f 92       	push	r1
    9090:	0f 92       	push	r0
    9092:	0f b6       	in	r0, 0x3f	; 63
    9094:	0f 92       	push	r0
    9096:	11 24       	eor	r1, r1
    9098:	0b b6       	in	r0, 0x3b	; 59
    909a:	0f 92       	push	r0
    909c:	2f 93       	push	r18
    909e:	8f 93       	push	r24
    90a0:	9f 93       	push	r25
    90a2:	ef 93       	push	r30
    90a4:	ff 93       	push	r31

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    90a6:	e0 91 c7 04 	lds	r30, 0x04C7	; 0x8004c7 <Serial+0x10>
    90aa:	f0 91 c8 04 	lds	r31, 0x04C8	; 0x8004c8 <Serial+0x11>
    90ae:	80 81       	ld	r24, Z
    90b0:	e0 91 cd 04 	lds	r30, 0x04CD	; 0x8004cd <Serial+0x16>
    90b4:	f0 91 ce 04 	lds	r31, 0x04CE	; 0x8004ce <Serial+0x17>
    90b8:	82 fd       	sbrc	r24, 2
    90ba:	12 c0       	rjmp	.+36     	; 0x90e0 <__vector_25+0x52>
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    90bc:	90 81       	ld	r25, Z
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
    90be:	80 91 d0 04 	lds	r24, 0x04D0	; 0x8004d0 <Serial+0x19>
    90c2:	8f 5f       	subi	r24, 0xFF	; 255
    90c4:	8f 73       	andi	r24, 0x3F	; 63

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
    90c6:	20 91 d1 04 	lds	r18, 0x04D1	; 0x8004d1 <Serial+0x1a>
    90ca:	82 17       	cp	r24, r18
    90cc:	51 f0       	breq	.+20     	; 0x90e2 <__vector_25+0x54>
      _rx_buffer[_rx_buffer_head] = c;
    90ce:	e0 91 d0 04 	lds	r30, 0x04D0	; 0x8004d0 <Serial+0x19>
    90d2:	f0 e0       	ldi	r31, 0x00	; 0
    90d4:	e9 54       	subi	r30, 0x49	; 73
    90d6:	fb 4f       	sbci	r31, 0xFB	; 251
    90d8:	95 8f       	std	Z+29, r25	; 0x1d
      _rx_buffer_head = i;
    90da:	80 93 d0 04 	sts	0x04D0, r24	; 0x8004d0 <Serial+0x19>
    90de:	01 c0       	rjmp	.+2      	; 0x90e2 <__vector_25+0x54>
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
    90e0:	80 81       	ld	r24, Z
    Serial._rx_complete_irq();
  }
    90e2:	ff 91       	pop	r31
    90e4:	ef 91       	pop	r30
    90e6:	9f 91       	pop	r25
    90e8:	8f 91       	pop	r24
    90ea:	2f 91       	pop	r18
    90ec:	0f 90       	pop	r0
    90ee:	0b be       	out	0x3b, r0	; 59
    90f0:	0f 90       	pop	r0
    90f2:	0f be       	out	0x3f, r0	; 63
    90f4:	0f 90       	pop	r0
    90f6:	1f 90       	pop	r1
    90f8:	18 95       	reti

000090fa <__vector_26>:
#elif defined(USART_UDRE_vect)
ISR(USART_UDRE_vect)
#else
  #error "Don't know what the Data Register Empty vector is called for Serial"
#endif
{
    90fa:	1f 92       	push	r1
    90fc:	0f 92       	push	r0
    90fe:	0f b6       	in	r0, 0x3f	; 63
    9100:	0f 92       	push	r0
    9102:	11 24       	eor	r1, r1
    9104:	0b b6       	in	r0, 0x3b	; 59
    9106:	0f 92       	push	r0
    9108:	2f 93       	push	r18
    910a:	3f 93       	push	r19
    910c:	4f 93       	push	r20
    910e:	5f 93       	push	r21
    9110:	6f 93       	push	r22
    9112:	7f 93       	push	r23
    9114:	8f 93       	push	r24
    9116:	9f 93       	push	r25
    9118:	af 93       	push	r26
    911a:	bf 93       	push	r27
    911c:	ef 93       	push	r30
    911e:	ff 93       	push	r31
  Serial._tx_udr_empty_irq();
    9120:	87 eb       	ldi	r24, 0xB7	; 183
    9122:	94 e0       	ldi	r25, 0x04	; 4
    9124:	c2 de       	rcall	.-636    	; 0x8eaa <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
}
    9126:	ff 91       	pop	r31
    9128:	ef 91       	pop	r30
    912a:	bf 91       	pop	r27
    912c:	af 91       	pop	r26
    912e:	9f 91       	pop	r25
    9130:	8f 91       	pop	r24
    9132:	7f 91       	pop	r23
    9134:	6f 91       	pop	r22
    9136:	5f 91       	pop	r21
    9138:	4f 91       	pop	r20
    913a:	3f 91       	pop	r19
    913c:	2f 91       	pop	r18
    913e:	0f 90       	pop	r0
    9140:	0b be       	out	0x3b, r0	; 59
    9142:	0f 90       	pop	r0
    9144:	0f be       	out	0x3f, r0	; 63
    9146:	0f 90       	pop	r0
    9148:	1f 90       	pop	r1
    914a:	18 95       	reti

0000914c <_Z17Serial0_availablev>:
#endif

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
    914c:	87 eb       	ldi	r24, 0xB7	; 183
    914e:	94 e0       	ldi	r25, 0x04	; 4
    9150:	33 de       	rcall	.-922    	; 0x8db8 <_ZN14HardwareSerial9availableEv>
    9152:	21 e0       	ldi	r18, 0x01	; 1
    9154:	89 2b       	or	r24, r25
    9156:	09 f4       	brne	.+2      	; 0x915a <_Z17Serial0_availablev+0xe>
    9158:	20 e0       	ldi	r18, 0x00	; 0
}
    915a:	82 2f       	mov	r24, r18
    915c:	08 95       	ret

0000915e <_GLOBAL__sub_I___vector_25>:
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
    915e:	e7 eb       	ldi	r30, 0xB7	; 183
    9160:	f4 e0       	ldi	r31, 0x04	; 4
    9162:	13 82       	std	Z+3, r1	; 0x03
    9164:	12 82       	std	Z+2, r1	; 0x02
  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}
    9166:	88 ee       	ldi	r24, 0xE8	; 232
    9168:	93 e0       	ldi	r25, 0x03	; 3
    916a:	a0 e0       	ldi	r26, 0x00	; 0
    916c:	b0 e0       	ldi	r27, 0x00	; 0
    916e:	84 83       	std	Z+4, r24	; 0x04
    9170:	95 83       	std	Z+5, r25	; 0x05
    9172:	a6 83       	std	Z+6, r26	; 0x06
    9174:	b7 83       	std	Z+7, r27	; 0x07
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
    9176:	85 eb       	ldi	r24, 0xB5	; 181
    9178:	92 e0       	ldi	r25, 0x02	; 2
    917a:	91 83       	std	Z+1, r25	; 0x01
    917c:	80 83       	st	Z, r24
    917e:	85 ec       	ldi	r24, 0xC5	; 197
    9180:	90 e0       	ldi	r25, 0x00	; 0
    9182:	95 87       	std	Z+13, r25	; 0x0d
    9184:	84 87       	std	Z+12, r24	; 0x0c
    9186:	84 ec       	ldi	r24, 0xC4	; 196
    9188:	90 e0       	ldi	r25, 0x00	; 0
    918a:	97 87       	std	Z+15, r25	; 0x0f
    918c:	86 87       	std	Z+14, r24	; 0x0e
    918e:	80 ec       	ldi	r24, 0xC0	; 192
    9190:	90 e0       	ldi	r25, 0x00	; 0
    9192:	91 8b       	std	Z+17, r25	; 0x11
    9194:	80 8b       	std	Z+16, r24	; 0x10
    9196:	81 ec       	ldi	r24, 0xC1	; 193
    9198:	90 e0       	ldi	r25, 0x00	; 0
    919a:	93 8b       	std	Z+19, r25	; 0x13
    919c:	82 8b       	std	Z+18, r24	; 0x12
    919e:	82 ec       	ldi	r24, 0xC2	; 194
    91a0:	90 e0       	ldi	r25, 0x00	; 0
    91a2:	95 8b       	std	Z+21, r25	; 0x15
    91a4:	84 8b       	std	Z+20, r24	; 0x14
    91a6:	86 ec       	ldi	r24, 0xC6	; 198
    91a8:	90 e0       	ldi	r25, 0x00	; 0
    91aa:	97 8b       	std	Z+23, r25	; 0x17
    91ac:	86 8b       	std	Z+22, r24	; 0x16
    91ae:	11 8e       	std	Z+25, r1	; 0x19
    91b0:	12 8e       	std	Z+26, r1	; 0x1a
    91b2:	13 8e       	std	Z+27, r1	; 0x1b
    91b4:	14 8e       	std	Z+28, r1	; 0x1c
    91b6:	08 95       	ret

000091b8 <yield>:
 * libraries or sketches that supports cooperative threads.
 *
 * Its defined as a weak symbol and it can be redefined to implement a
 * real cooperative scheduler.
 */
static void __empty() {
    91b8:	08 95       	ret

000091ba <initVariant>:
    91ba:	08 95       	ret

000091bc <main>:
void setupUSB() __attribute__((weak));
void setupUSB() { }

int main(void)
{
	init();
    91bc:	18 d2       	rcall	.+1072   	; 0x95ee <init>

	initVariant();
    91be:	fd df       	rcall	.-6      	; 0x91ba <initVariant>
    91c0:	0e 94 54 08 	call	0x10a8	; 0x10a8 <setup>

#if defined(USBCON)
	USBDevice.attach();
#endif
	
	setup();
    91c4:	c9 e1       	ldi	r28, 0x19	; 25
    
	for (;;) {
		loop();
		if (serialEventRun) serialEventRun();
    91c6:	d7 e4       	ldi	r29, 0x47	; 71
    91c8:	0e 94 97 08 	call	0x112e	; 0x112e <loop>
#endif
	
	setup();
    
	for (;;) {
		loop();
    91cc:	20 97       	sbiw	r28, 0x00	; 0
		if (serialEventRun) serialEventRun();
    91ce:	e1 f3       	breq	.-8      	; 0x91c8 <main+0xc>
    91d0:	30 de       	rcall	.-928    	; 0x8e32 <_Z14serialEventRunv>
    91d2:	fa cf       	rjmp	.-12     	; 0x91c8 <main+0xc>

000091d4 <_ZN5Print5writeEPKhj>:
    91d4:	cf 92       	push	r12
size_t Print::println(unsigned long num, int base)
{
  size_t n = print(num, base);
  n += println();
  return n;
}
    91d6:	df 92       	push	r13
    91d8:	ef 92       	push	r14
    91da:	ff 92       	push	r15
    91dc:	0f 93       	push	r16
    91de:	1f 93       	push	r17
    91e0:	cf 93       	push	r28
    91e2:	df 93       	push	r29
    91e4:	6c 01       	movw	r12, r24
    91e6:	7a 01       	movw	r14, r20
    91e8:	8b 01       	movw	r16, r22
    91ea:	c0 e0       	ldi	r28, 0x00	; 0
    91ec:	d0 e0       	ldi	r29, 0x00	; 0
    91ee:	ce 15       	cp	r28, r14
    91f0:	df 05       	cpc	r29, r15
    91f2:	81 f0       	breq	.+32     	; 0x9214 <_ZN5Print5writeEPKhj+0x40>
    91f4:	d8 01       	movw	r26, r16
    91f6:	6d 91       	ld	r22, X+
    91f8:	8d 01       	movw	r16, r26
    91fa:	d6 01       	movw	r26, r12
    91fc:	ed 91       	ld	r30, X+
    91fe:	fc 91       	ld	r31, X
    9200:	01 90       	ld	r0, Z+
    9202:	f0 81       	ld	r31, Z
    9204:	e0 2d       	mov	r30, r0
    9206:	c6 01       	movw	r24, r12
    9208:	19 95       	eicall
    920a:	89 2b       	or	r24, r25
    920c:	11 f0       	breq	.+4      	; 0x9212 <_ZN5Print5writeEPKhj+0x3e>
    920e:	21 96       	adiw	r28, 0x01	; 1
    9210:	ee cf       	rjmp	.-36     	; 0x91ee <_ZN5Print5writeEPKhj+0x1a>
    9212:	7e 01       	movw	r14, r28
    9214:	c7 01       	movw	r24, r14
    9216:	df 91       	pop	r29
    9218:	cf 91       	pop	r28
    921a:	1f 91       	pop	r17
    921c:	0f 91       	pop	r16
    921e:	ff 90       	pop	r15
    9220:	ef 90       	pop	r14
    9222:	df 90       	pop	r13
    9224:	cf 90       	pop	r12
    9226:	08 95       	ret

00009228 <_ZN5Print5writeEPKc>:
    9228:	61 15       	cp	r22, r1
    922a:	71 05       	cpc	r23, r1
    922c:	79 f0       	breq	.+30     	; 0x924c <_ZN5Print5writeEPKc+0x24>
    922e:	fb 01       	movw	r30, r22
    9230:	01 90       	ld	r0, Z+
    9232:	00 20       	and	r0, r0
    9234:	e9 f7       	brne	.-6      	; 0x9230 <_ZN5Print5writeEPKc+0x8>
    9236:	31 97       	sbiw	r30, 0x01	; 1
    9238:	af 01       	movw	r20, r30
    923a:	46 1b       	sub	r20, r22
    923c:	57 0b       	sbc	r21, r23
    923e:	dc 01       	movw	r26, r24
    9240:	ed 91       	ld	r30, X+
    9242:	fc 91       	ld	r31, X
    9244:	02 80       	ldd	r0, Z+2	; 0x02
    9246:	f3 81       	ldd	r31, Z+3	; 0x03
    9248:	e0 2d       	mov	r30, r0
    924a:	19 94       	eijmp
    924c:	80 e0       	ldi	r24, 0x00	; 0
    924e:	90 e0       	ldi	r25, 0x00	; 0
    9250:	08 95       	ret

00009252 <_ZN5Print5printEPK19__FlashStringHelper>:
    9252:	ef 92       	push	r14
    9254:	ff 92       	push	r15
    9256:	0f 93       	push	r16
    9258:	1f 93       	push	r17
    925a:	cf 93       	push	r28
    925c:	df 93       	push	r29
    925e:	8c 01       	movw	r16, r24
    9260:	7b 01       	movw	r14, r22
    9262:	c0 e0       	ldi	r28, 0x00	; 0
    9264:	d0 e0       	ldi	r29, 0x00	; 0
    9266:	f7 01       	movw	r30, r14
    9268:	ec 0f       	add	r30, r28
    926a:	fd 1f       	adc	r31, r29
    926c:	64 91       	lpm	r22, Z
    926e:	66 23       	and	r22, r22
    9270:	61 f0       	breq	.+24     	; 0x928a <_ZN5Print5printEPK19__FlashStringHelper+0x38>
    9272:	d8 01       	movw	r26, r16
    9274:	ed 91       	ld	r30, X+
    9276:	fc 91       	ld	r31, X
    9278:	01 90       	ld	r0, Z+
    927a:	f0 81       	ld	r31, Z
    927c:	e0 2d       	mov	r30, r0
    927e:	c8 01       	movw	r24, r16
    9280:	19 95       	eicall
    9282:	89 2b       	or	r24, r25
    9284:	11 f0       	breq	.+4      	; 0x928a <_ZN5Print5printEPK19__FlashStringHelper+0x38>
    9286:	21 96       	adiw	r28, 0x01	; 1
    9288:	ee cf       	rjmp	.-36     	; 0x9266 <_ZN5Print5printEPK19__FlashStringHelper+0x14>
    928a:	ce 01       	movw	r24, r28
    928c:	df 91       	pop	r29
    928e:	cf 91       	pop	r28
    9290:	1f 91       	pop	r17
    9292:	0f 91       	pop	r16
    9294:	ff 90       	pop	r15
    9296:	ef 90       	pop	r14
    9298:	08 95       	ret

0000929a <_ZN5Print5printERK6String>:
    929a:	db 01       	movw	r26, r22
    929c:	14 96       	adiw	r26, 0x04	; 4
    929e:	4d 91       	ld	r20, X+
    92a0:	5c 91       	ld	r21, X
    92a2:	15 97       	sbiw	r26, 0x05	; 5
    92a4:	6d 91       	ld	r22, X+
    92a6:	7c 91       	ld	r23, X
    92a8:	dc 01       	movw	r26, r24
    92aa:	ed 91       	ld	r30, X+
    92ac:	fc 91       	ld	r31, X
    92ae:	02 80       	ldd	r0, Z+2	; 0x02
    92b0:	f3 81       	ldd	r31, Z+3	; 0x03
    92b2:	e0 2d       	mov	r30, r0
    92b4:	19 94       	eijmp

000092b6 <_ZN5Print5printEPKc>:
    92b6:	b8 cf       	rjmp	.-144    	; 0x9228 <_ZN5Print5writeEPKc>

000092b8 <_ZN5Print5printEc>:
    92b8:	dc 01       	movw	r26, r24
    92ba:	ed 91       	ld	r30, X+
    92bc:	fc 91       	ld	r31, X
    92be:	01 90       	ld	r0, Z+
    92c0:	f0 81       	ld	r31, Z
    92c2:	e0 2d       	mov	r30, r0
    92c4:	19 94       	eijmp

000092c6 <_ZN5Print7printlnEv>:
    92c6:	63 ec       	ldi	r22, 0xC3	; 195
    92c8:	72 e0       	ldi	r23, 0x02	; 2
    92ca:	ae cf       	rjmp	.-164    	; 0x9228 <_ZN5Print5writeEPKc>

000092cc <_ZN5Print7printlnEPK19__FlashStringHelper>:
    92cc:	0f 93       	push	r16
    92ce:	1f 93       	push	r17
    92d0:	cf 93       	push	r28
    92d2:	df 93       	push	r29
    92d4:	ec 01       	movw	r28, r24
    92d6:	bd df       	rcall	.-134    	; 0x9252 <_ZN5Print5printEPK19__FlashStringHelper>
    92d8:	8c 01       	movw	r16, r24
    92da:	ce 01       	movw	r24, r28
    92dc:	f4 df       	rcall	.-24     	; 0x92c6 <_ZN5Print7printlnEv>
    92de:	80 0f       	add	r24, r16
    92e0:	91 1f       	adc	r25, r17
    92e2:	df 91       	pop	r29
    92e4:	cf 91       	pop	r28
    92e6:	1f 91       	pop	r17
    92e8:	0f 91       	pop	r16
    92ea:	08 95       	ret

000092ec <_ZN5Print7printlnERK6String>:
    92ec:	0f 93       	push	r16
    92ee:	1f 93       	push	r17
    92f0:	cf 93       	push	r28
    92f2:	df 93       	push	r29
    92f4:	ec 01       	movw	r28, r24
    92f6:	d1 df       	rcall	.-94     	; 0x929a <_ZN5Print5printERK6String>
    92f8:	8c 01       	movw	r16, r24
    92fa:	ce 01       	movw	r24, r28
    92fc:	e4 df       	rcall	.-56     	; 0x92c6 <_ZN5Print7printlnEv>
    92fe:	80 0f       	add	r24, r16
    9300:	91 1f       	adc	r25, r17
    9302:	df 91       	pop	r29
    9304:	cf 91       	pop	r28
    9306:	1f 91       	pop	r17
    9308:	0f 91       	pop	r16
    930a:	08 95       	ret

0000930c <_ZN5Print7printlnEPKc>:
    930c:	0f 93       	push	r16
    930e:	1f 93       	push	r17
    9310:	cf 93       	push	r28
    9312:	df 93       	push	r29
    9314:	ec 01       	movw	r28, r24
    9316:	88 df       	rcall	.-240    	; 0x9228 <_ZN5Print5writeEPKc>
    9318:	8c 01       	movw	r16, r24
    931a:	ce 01       	movw	r24, r28
    931c:	d4 df       	rcall	.-88     	; 0x92c6 <_ZN5Print7printlnEv>
    931e:	80 0f       	add	r24, r16
    9320:	91 1f       	adc	r25, r17
    9322:	df 91       	pop	r29
    9324:	cf 91       	pop	r28
    9326:	1f 91       	pop	r17
    9328:	0f 91       	pop	r16
    932a:	08 95       	ret

0000932c <_ZN5Print7printlnEc>:
    932c:	0f 93       	push	r16
    932e:	1f 93       	push	r17
    9330:	cf 93       	push	r28
    9332:	df 93       	push	r29
    9334:	ec 01       	movw	r28, r24
    9336:	c0 df       	rcall	.-128    	; 0x92b8 <_ZN5Print5printEc>
    9338:	8c 01       	movw	r16, r24
    933a:	ce 01       	movw	r24, r28
    933c:	c4 df       	rcall	.-120    	; 0x92c6 <_ZN5Print7printlnEv>
    933e:	80 0f       	add	r24, r16
    9340:	91 1f       	adc	r25, r17
    9342:	df 91       	pop	r29
    9344:	cf 91       	pop	r28
    9346:	1f 91       	pop	r17
    9348:	0f 91       	pop	r16
    934a:	08 95       	ret

0000934c <_ZN5Print11printNumberEmh>:
    934c:	8f 92       	push	r8
    934e:	9f 92       	push	r9
    9350:	af 92       	push	r10
    9352:	bf 92       	push	r11
    9354:	ef 92       	push	r14
    9356:	ff 92       	push	r15
    9358:	0f 93       	push	r16
    935a:	1f 93       	push	r17
    935c:	cf 93       	push	r28
    935e:	df 93       	push	r29
    9360:	cd b7       	in	r28, 0x3d	; 61
    9362:	de b7       	in	r29, 0x3e	; 62
    9364:	a1 97       	sbiw	r28, 0x21	; 33
    9366:	0f b6       	in	r0, 0x3f	; 63
    9368:	f8 94       	cli
    936a:	de bf       	out	0x3e, r29	; 62
    936c:	0f be       	out	0x3f, r0	; 63
    936e:	cd bf       	out	0x3d, r28	; 61
    9370:	7c 01       	movw	r14, r24
    9372:	fa 01       	movw	r30, r20
    9374:	cb 01       	movw	r24, r22
    9376:	19 a2       	std	Y+33, r1	; 0x21
    9378:	22 30       	cpi	r18, 0x02	; 2
    937a:	08 f4       	brcc	.+2      	; 0x937e <_ZN5Print11printNumberEmh+0x32>
    937c:	2a e0       	ldi	r18, 0x0A	; 10
    937e:	8e 01       	movw	r16, r28
    9380:	0f 5d       	subi	r16, 0xDF	; 223
    9382:	1f 4f       	sbci	r17, 0xFF	; 255
    9384:	82 2e       	mov	r8, r18
    9386:	91 2c       	mov	r9, r1
    9388:	a1 2c       	mov	r10, r1
    938a:	b1 2c       	mov	r11, r1
    938c:	bf 01       	movw	r22, r30
    938e:	a5 01       	movw	r20, r10
    9390:	94 01       	movw	r18, r8
    9392:	ad d3       	rcall	.+1882   	; 0x9aee <__udivmodsi4>
    9394:	f9 01       	movw	r30, r18
    9396:	ca 01       	movw	r24, r20
    9398:	01 50       	subi	r16, 0x01	; 1
    939a:	11 09       	sbc	r17, r1
    939c:	6a 30       	cpi	r22, 0x0A	; 10
    939e:	10 f4       	brcc	.+4      	; 0x93a4 <_ZN5Print11printNumberEmh+0x58>
    93a0:	60 5d       	subi	r22, 0xD0	; 208
    93a2:	01 c0       	rjmp	.+2      	; 0x93a6 <_ZN5Print11printNumberEmh+0x5a>
    93a4:	69 5c       	subi	r22, 0xC9	; 201
    93a6:	d8 01       	movw	r26, r16
    93a8:	6c 93       	st	X, r22
    93aa:	23 2b       	or	r18, r19
    93ac:	24 2b       	or	r18, r20
    93ae:	25 2b       	or	r18, r21
    93b0:	69 f7       	brne	.-38     	; 0x938c <_ZN5Print11printNumberEmh+0x40>
    93b2:	b8 01       	movw	r22, r16
    93b4:	c7 01       	movw	r24, r14
    93b6:	38 df       	rcall	.-400    	; 0x9228 <_ZN5Print5writeEPKc>
    93b8:	a1 96       	adiw	r28, 0x21	; 33
    93ba:	0f b6       	in	r0, 0x3f	; 63
    93bc:	f8 94       	cli
    93be:	de bf       	out	0x3e, r29	; 62
    93c0:	0f be       	out	0x3f, r0	; 63
    93c2:	cd bf       	out	0x3d, r28	; 61
    93c4:	df 91       	pop	r29
    93c6:	cf 91       	pop	r28
    93c8:	1f 91       	pop	r17
    93ca:	0f 91       	pop	r16
    93cc:	ff 90       	pop	r15
    93ce:	ef 90       	pop	r14
    93d0:	bf 90       	pop	r11
    93d2:	af 90       	pop	r10
    93d4:	9f 90       	pop	r9
    93d6:	8f 90       	pop	r8
    93d8:	08 95       	ret

000093da <_ZN5Print5printEli>:
{
  return print((unsigned long) n, base);
}

size_t Print::print(long n, int base)
{
    93da:	cf 92       	push	r12
    93dc:	df 92       	push	r13
    93de:	ef 92       	push	r14
    93e0:	ff 92       	push	r15
    93e2:	0f 93       	push	r16
    93e4:	1f 93       	push	r17
    93e6:	cf 93       	push	r28
    93e8:	df 93       	push	r29
  if (base == 0) {
    93ea:	21 15       	cp	r18, r1
    93ec:	31 05       	cpc	r19, r1
    93ee:	81 f4       	brne	.+32     	; 0x9410 <_ZN5Print5printEli+0x36>
    return write(n);
    93f0:	dc 01       	movw	r26, r24
    93f2:	ed 91       	ld	r30, X+
    93f4:	fc 91       	ld	r31, X
    93f6:	01 90       	ld	r0, Z+
    93f8:	f0 81       	ld	r31, Z
    93fa:	e0 2d       	mov	r30, r0
    93fc:	64 2f       	mov	r22, r20
    }
    return printNumber(n, 10);
  } else {
    return printNumber(n, base);
  }
}
    93fe:	df 91       	pop	r29
    9400:	cf 91       	pop	r28
    9402:	1f 91       	pop	r17
    9404:	0f 91       	pop	r16
    9406:	ff 90       	pop	r15
    9408:	ef 90       	pop	r14
    940a:	df 90       	pop	r13
    940c:	cf 90       	pop	r12
}

size_t Print::print(long n, int base)
{
  if (base == 0) {
    return write(n);
    940e:	19 94       	eijmp
  } else if (base == 10) {
    9410:	2a 30       	cpi	r18, 0x0A	; 10
    9412:	31 05       	cpc	r19, r1
    9414:	f1 f4       	brne	.+60     	; 0x9452 <_ZN5Print5printEli+0x78>
    if (n < 0) {
    9416:	77 ff       	sbrs	r23, 7
    9418:	1b c0       	rjmp	.+54     	; 0x9450 <_ZN5Print5printEli+0x76>
    941a:	6a 01       	movw	r12, r20
    941c:	7b 01       	movw	r14, r22
    941e:	ec 01       	movw	r28, r24
      int t = print('-');
    9420:	6d e2       	ldi	r22, 0x2D	; 45
    9422:	4a df       	rcall	.-364    	; 0x92b8 <_ZN5Print5printEc>
    9424:	8c 01       	movw	r16, r24
      n = -n;
      return printNumber(n, 10) + t;
    9426:	44 27       	eor	r20, r20
    9428:	55 27       	eor	r21, r21
    942a:	ba 01       	movw	r22, r20
    942c:	4c 19       	sub	r20, r12
    942e:	5d 09       	sbc	r21, r13
    9430:	6e 09       	sbc	r22, r14
    9432:	7f 09       	sbc	r23, r15
    9434:	2a e0       	ldi	r18, 0x0A	; 10
    9436:	ce 01       	movw	r24, r28
    9438:	89 df       	rcall	.-238    	; 0x934c <_ZN5Print11printNumberEmh>
    943a:	80 0f       	add	r24, r16
    943c:	91 1f       	adc	r25, r17
    }
    return printNumber(n, 10);
  } else {
    return printNumber(n, base);
  }
}
    943e:	df 91       	pop	r29
    9440:	cf 91       	pop	r28
    9442:	1f 91       	pop	r17
    9444:	0f 91       	pop	r16
    9446:	ff 90       	pop	r15
    9448:	ef 90       	pop	r14
    944a:	df 90       	pop	r13
    944c:	cf 90       	pop	r12
    944e:	08 95       	ret
    if (n < 0) {
      int t = print('-');
      n = -n;
      return printNumber(n, 10) + t;
    }
    return printNumber(n, 10);
    9450:	2a e0       	ldi	r18, 0x0A	; 10
  } else {
    return printNumber(n, base);
  }
}
    9452:	df 91       	pop	r29
    9454:	cf 91       	pop	r28
    9456:	1f 91       	pop	r17
    9458:	0f 91       	pop	r16
    945a:	ff 90       	pop	r15
    945c:	ef 90       	pop	r14
    945e:	df 90       	pop	r13
      n = -n;
      return printNumber(n, 10) + t;
    }
    return printNumber(n, 10);
  } else {
    return printNumber(n, base);
    9460:	cf 90       	pop	r12
    9462:	74 cf       	rjmp	.-280    	; 0x934c <_ZN5Print11printNumberEmh>

00009464 <_ZN5Print5printEii>:
{
  return print((unsigned long) b, base);
}

size_t Print::print(int n, int base)
{
    9464:	9a 01       	movw	r18, r20
  return print((long) n, base);
    9466:	ab 01       	movw	r20, r22
    9468:	77 0f       	add	r23, r23
    946a:	66 0b       	sbc	r22, r22
    946c:	77 0b       	sbc	r23, r23
    946e:	b5 cf       	rjmp	.-150    	; 0x93da <_ZN5Print5printEli>

00009470 <__vector_23>:
#if defined(TIM0_OVF_vect)
ISR(TIM0_OVF_vect)
#else
ISR(TIMER0_OVF_vect)
#endif
{
    9470:	1f 92       	push	r1
    9472:	0f 92       	push	r0
    9474:	0f b6       	in	r0, 0x3f	; 63
    9476:	0f 92       	push	r0
    9478:	11 24       	eor	r1, r1
    947a:	2f 93       	push	r18
    947c:	3f 93       	push	r19
    947e:	8f 93       	push	r24
    9480:	9f 93       	push	r25
    9482:	af 93       	push	r26
    9484:	bf 93       	push	r27
	// copy these to local variables so they can be stored in registers
	// (volatile variables must be read from memory on every access)
	unsigned long m = timer0_millis;
    9486:	80 91 55 05 	lds	r24, 0x0555	; 0x800555 <timer0_millis>
    948a:	90 91 56 05 	lds	r25, 0x0556	; 0x800556 <timer0_millis+0x1>
    948e:	a0 91 57 05 	lds	r26, 0x0557	; 0x800557 <timer0_millis+0x2>
    9492:	b0 91 58 05 	lds	r27, 0x0558	; 0x800558 <timer0_millis+0x3>
	unsigned char f = timer0_fract;
    9496:	30 91 54 05 	lds	r19, 0x0554	; 0x800554 <timer0_fract>

	m += MILLIS_INC;
	f += FRACT_INC;
    949a:	23 e0       	ldi	r18, 0x03	; 3
    949c:	23 0f       	add	r18, r19
	if (f >= FRACT_MAX) {
    949e:	2d 37       	cpi	r18, 0x7D	; 125
    94a0:	20 f4       	brcc	.+8      	; 0x94aa <__vector_23+0x3a>
	// copy these to local variables so they can be stored in registers
	// (volatile variables must be read from memory on every access)
	unsigned long m = timer0_millis;
	unsigned char f = timer0_fract;

	m += MILLIS_INC;
    94a2:	01 96       	adiw	r24, 0x01	; 1
    94a4:	a1 1d       	adc	r26, r1
    94a6:	b1 1d       	adc	r27, r1
    94a8:	05 c0       	rjmp	.+10     	; 0x94b4 <__vector_23+0x44>
	f += FRACT_INC;
	if (f >= FRACT_MAX) {
		f -= FRACT_MAX;
    94aa:	26 e8       	ldi	r18, 0x86	; 134
    94ac:	23 0f       	add	r18, r19
		m += 1;
    94ae:	02 96       	adiw	r24, 0x02	; 2
    94b0:	a1 1d       	adc	r26, r1
    94b2:	b1 1d       	adc	r27, r1
	}

	timer0_fract = f;
    94b4:	20 93 54 05 	sts	0x0554, r18	; 0x800554 <timer0_fract>
	timer0_millis = m;
    94b8:	80 93 55 05 	sts	0x0555, r24	; 0x800555 <timer0_millis>
    94bc:	90 93 56 05 	sts	0x0556, r25	; 0x800556 <timer0_millis+0x1>
    94c0:	a0 93 57 05 	sts	0x0557, r26	; 0x800557 <timer0_millis+0x2>
    94c4:	b0 93 58 05 	sts	0x0558, r27	; 0x800558 <timer0_millis+0x3>
	timer0_overflow_count++;
    94c8:	80 91 59 05 	lds	r24, 0x0559	; 0x800559 <timer0_overflow_count>
    94cc:	90 91 5a 05 	lds	r25, 0x055A	; 0x80055a <timer0_overflow_count+0x1>
    94d0:	a0 91 5b 05 	lds	r26, 0x055B	; 0x80055b <timer0_overflow_count+0x2>
    94d4:	b0 91 5c 05 	lds	r27, 0x055C	; 0x80055c <timer0_overflow_count+0x3>
    94d8:	01 96       	adiw	r24, 0x01	; 1
    94da:	a1 1d       	adc	r26, r1
    94dc:	b1 1d       	adc	r27, r1
    94de:	80 93 59 05 	sts	0x0559, r24	; 0x800559 <timer0_overflow_count>
    94e2:	90 93 5a 05 	sts	0x055A, r25	; 0x80055a <timer0_overflow_count+0x1>
    94e6:	a0 93 5b 05 	sts	0x055B, r26	; 0x80055b <timer0_overflow_count+0x2>
    94ea:	b0 93 5c 05 	sts	0x055C, r27	; 0x80055c <timer0_overflow_count+0x3>
}
    94ee:	bf 91       	pop	r27
    94f0:	af 91       	pop	r26
    94f2:	9f 91       	pop	r25
    94f4:	8f 91       	pop	r24
    94f6:	3f 91       	pop	r19
    94f8:	2f 91       	pop	r18
    94fa:	0f 90       	pop	r0
    94fc:	0f be       	out	0x3f, r0	; 63
    94fe:	0f 90       	pop	r0
    9500:	1f 90       	pop	r1
    9502:	18 95       	reti

00009504 <millis>:

unsigned long millis()
{
	unsigned long m;
	uint8_t oldSREG = SREG;
    9504:	2f b7       	in	r18, 0x3f	; 63

	// disable interrupts while we read timer0_millis or we might get an
	// inconsistent value (e.g. in the middle of a write to timer0_millis)
	cli();
    9506:	f8 94       	cli
	m = timer0_millis;
    9508:	60 91 55 05 	lds	r22, 0x0555	; 0x800555 <timer0_millis>
    950c:	70 91 56 05 	lds	r23, 0x0556	; 0x800556 <timer0_millis+0x1>
    9510:	80 91 57 05 	lds	r24, 0x0557	; 0x800557 <timer0_millis+0x2>
    9514:	90 91 58 05 	lds	r25, 0x0558	; 0x800558 <timer0_millis+0x3>
	SREG = oldSREG;
    9518:	2f bf       	out	0x3f, r18	; 63

	return m;
}
    951a:	08 95       	ret

0000951c <micros>:

unsigned long micros() {
	unsigned long m;
	uint8_t oldSREG = SREG, t;
    951c:	3f b7       	in	r19, 0x3f	; 63
	
	cli();
    951e:	f8 94       	cli
	m = timer0_overflow_count;
    9520:	80 91 59 05 	lds	r24, 0x0559	; 0x800559 <timer0_overflow_count>
    9524:	90 91 5a 05 	lds	r25, 0x055A	; 0x80055a <timer0_overflow_count+0x1>
    9528:	a0 91 5b 05 	lds	r26, 0x055B	; 0x80055b <timer0_overflow_count+0x2>
    952c:	b0 91 5c 05 	lds	r27, 0x055C	; 0x80055c <timer0_overflow_count+0x3>
#if defined(TCNT0)
	t = TCNT0;
    9530:	26 b5       	in	r18, 0x26	; 38
#else
	#error TIMER 0 not defined
#endif

#ifdef TIFR0
	if ((TIFR0 & _BV(TOV0)) && (t < 255))
    9532:	a8 9b       	sbis	0x15, 0	; 21
    9534:	05 c0       	rjmp	.+10     	; 0x9540 <micros+0x24>
    9536:	2f 3f       	cpi	r18, 0xFF	; 255
    9538:	19 f0       	breq	.+6      	; 0x9540 <micros+0x24>
		m++;
    953a:	01 96       	adiw	r24, 0x01	; 1
    953c:	a1 1d       	adc	r26, r1
    953e:	b1 1d       	adc	r27, r1
#else
	if ((TIFR & _BV(TOV0)) && (t < 255))
		m++;
#endif

	SREG = oldSREG;
    9540:	3f bf       	out	0x3f, r19	; 63
	
	return ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());
    9542:	ba 2f       	mov	r27, r26
    9544:	a9 2f       	mov	r26, r25
    9546:	98 2f       	mov	r25, r24
    9548:	88 27       	eor	r24, r24
    954a:	82 0f       	add	r24, r18
    954c:	91 1d       	adc	r25, r1
    954e:	a1 1d       	adc	r26, r1
    9550:	b1 1d       	adc	r27, r1
    9552:	bc 01       	movw	r22, r24
    9554:	cd 01       	movw	r24, r26
    9556:	42 e0       	ldi	r20, 0x02	; 2
    9558:	66 0f       	add	r22, r22
    955a:	77 1f       	adc	r23, r23
    955c:	88 1f       	adc	r24, r24
    955e:	99 1f       	adc	r25, r25
    9560:	4a 95       	dec	r20
    9562:	d1 f7       	brne	.-12     	; 0x9558 <micros+0x3c>
}
    9564:	08 95       	ret

00009566 <delay>:

void delay(unsigned long ms)
{
    9566:	8f 92       	push	r8
    9568:	9f 92       	push	r9
    956a:	af 92       	push	r10
    956c:	bf 92       	push	r11
    956e:	cf 92       	push	r12
    9570:	df 92       	push	r13
    9572:	ef 92       	push	r14
    9574:	ff 92       	push	r15
    9576:	6b 01       	movw	r12, r22
    9578:	7c 01       	movw	r14, r24
	uint32_t start = micros();
    957a:	d0 df       	rcall	.-96     	; 0x951c <micros>
    957c:	4b 01       	movw	r8, r22
    957e:	5c 01       	movw	r10, r24

	while (ms > 0) {
    9580:	c1 14       	cp	r12, r1
    9582:	d1 04       	cpc	r13, r1
    9584:	e1 04       	cpc	r14, r1
    9586:	f1 04       	cpc	r15, r1
		yield();
    9588:	f1 f0       	breq	.+60     	; 0x95c6 <delay+0x60>
		while ( ms > 0 && (micros() - start) >= 1000) {
    958a:	16 de       	rcall	.-980    	; 0x91b8 <yield>
    958c:	c7 df       	rcall	.-114    	; 0x951c <micros>
    958e:	dc 01       	movw	r26, r24
    9590:	cb 01       	movw	r24, r22
    9592:	88 19       	sub	r24, r8
    9594:	99 09       	sbc	r25, r9
    9596:	aa 09       	sbc	r26, r10
    9598:	bb 09       	sbc	r27, r11
    959a:	88 3e       	cpi	r24, 0xE8	; 232
    959c:	93 40       	sbci	r25, 0x03	; 3
    959e:	a1 05       	cpc	r26, r1
    95a0:	b1 05       	cpc	r27, r1
    95a2:	70 f3       	brcs	.-36     	; 0x9580 <delay+0x1a>
			ms--;
    95a4:	21 e0       	ldi	r18, 0x01	; 1
    95a6:	c2 1a       	sub	r12, r18
    95a8:	d1 08       	sbc	r13, r1
    95aa:	e1 08       	sbc	r14, r1
    95ac:	f1 08       	sbc	r15, r1
			start += 1000;
    95ae:	88 ee       	ldi	r24, 0xE8	; 232
    95b0:	88 0e       	add	r8, r24
    95b2:	83 e0       	ldi	r24, 0x03	; 3
    95b4:	98 1e       	adc	r9, r24
    95b6:	a1 1c       	adc	r10, r1
    95b8:	b1 1c       	adc	r11, r1
{
	uint32_t start = micros();

	while (ms > 0) {
		yield();
		while ( ms > 0 && (micros() - start) >= 1000) {
    95ba:	c1 14       	cp	r12, r1
    95bc:	d1 04       	cpc	r13, r1
    95be:	e1 04       	cpc	r14, r1
    95c0:	f1 04       	cpc	r15, r1
    95c2:	21 f7       	brne	.-56     	; 0x958c <delay+0x26>
    95c4:	dd cf       	rjmp	.-70     	; 0x9580 <delay+0x1a>
			ms--;
			start += 1000;
		}
	}
}
    95c6:	ff 90       	pop	r15
    95c8:	ef 90       	pop	r14
    95ca:	df 90       	pop	r13
    95cc:	cf 90       	pop	r12
    95ce:	bf 90       	pop	r11
    95d0:	af 90       	pop	r10
    95d2:	9f 90       	pop	r9
    95d4:	8f 90       	pop	r8
    95d6:	08 95       	ret

000095d8 <delayMicroseconds>:
#elif F_CPU >= 16000000L
	// for the 16 MHz clock on most Arduino boards

	// for a one-microsecond delay, simply return.  the overhead
	// of the function call takes 14 (16) cycles, which is 1us
	if (us <= 1) return; //  = 3 cycles, (4 when true)
    95d8:	82 30       	cpi	r24, 0x02	; 2
    95da:	91 05       	cpc	r25, r1
    95dc:	38 f0       	brcs	.+14     	; 0x95ec <delayMicroseconds+0x14>

	// the following loop takes 1/4 of a microsecond (4 cycles)
	// per iteration, so execute it four times for each microsecond of
	// delay requested.
	us <<= 2; // x4 us, = 4 cycles
    95de:	88 0f       	add	r24, r24
    95e0:	99 1f       	adc	r25, r25
    95e2:	88 0f       	add	r24, r24
    95e4:	99 1f       	adc	r25, r25

	// account for the time taken in the preceeding commands.
	// we just burned 19 (21) cycles above, remove 5, (5*4=20)
	// us is at least 8 so we can substract 5
	us -= 5; // = 2 cycles,
    95e6:	05 97       	sbiw	r24, 0x05	; 5
	

#endif

	// busy wait
	__asm__ __volatile__ (
    95e8:	01 97       	sbiw	r24, 0x01	; 1
    95ea:	f1 f7       	brne	.-4      	; 0x95e8 <delayMicroseconds+0x10>
    95ec:	08 95       	ret

000095ee <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
    95ee:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
    95f0:	84 b5       	in	r24, 0x24	; 36
    95f2:	82 60       	ori	r24, 0x02	; 2
    95f4:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
    95f6:	84 b5       	in	r24, 0x24	; 36
    95f8:	81 60       	ori	r24, 0x01	; 1
    95fa:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
    95fc:	85 b5       	in	r24, 0x25	; 37
    95fe:	82 60       	ori	r24, 0x02	; 2
    9600:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
    9602:	85 b5       	in	r24, 0x25	; 37
    9604:	81 60       	ori	r24, 0x01	; 1
    9606:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
    9608:	ee e6       	ldi	r30, 0x6E	; 110
    960a:	f0 e0       	ldi	r31, 0x00	; 0
    960c:	80 81       	ld	r24, Z
    960e:	81 60       	ori	r24, 0x01	; 1
    9610:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
    9612:	e1 e8       	ldi	r30, 0x81	; 129
    9614:	f0 e0       	ldi	r31, 0x00	; 0
    9616:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
    9618:	80 81       	ld	r24, Z
    961a:	82 60       	ori	r24, 0x02	; 2
    961c:	80 83       	st	Z, r24
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
    961e:	80 81       	ld	r24, Z
    9620:	81 60       	ori	r24, 0x01	; 1
    9622:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
    9624:	e0 e8       	ldi	r30, 0x80	; 128
    9626:	f0 e0       	ldi	r31, 0x00	; 0
    9628:	80 81       	ld	r24, Z
    962a:	81 60       	ori	r24, 0x01	; 1
    962c:	80 83       	st	Z, r24

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
    962e:	e1 eb       	ldi	r30, 0xB1	; 177
    9630:	f0 e0       	ldi	r31, 0x00	; 0
    9632:	80 81       	ld	r24, Z
    9634:	84 60       	ori	r24, 0x04	; 4
    9636:	80 83       	st	Z, r24

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
    9638:	e0 eb       	ldi	r30, 0xB0	; 176
    963a:	f0 e0       	ldi	r31, 0x00	; 0
    963c:	80 81       	ld	r24, Z
    963e:	81 60       	ori	r24, 0x01	; 1
    9640:	80 83       	st	Z, r24
//#else
	// Timer 2 not finished (may not be present on this CPU)
#endif

#if defined(TCCR3B) && defined(CS31) && defined(WGM30)
	sbi(TCCR3B, CS31);		// set timer 3 prescale factor to 64
    9642:	e1 e9       	ldi	r30, 0x91	; 145
    9644:	f0 e0       	ldi	r31, 0x00	; 0
    9646:	80 81       	ld	r24, Z
    9648:	82 60       	ori	r24, 0x02	; 2
    964a:	80 83       	st	Z, r24
	sbi(TCCR3B, CS30);
    964c:	80 81       	ld	r24, Z
    964e:	81 60       	ori	r24, 0x01	; 1
    9650:	80 83       	st	Z, r24
	sbi(TCCR3A, WGM30);		// put timer 3 in 8-bit phase correct pwm mode
    9652:	e0 e9       	ldi	r30, 0x90	; 144
    9654:	f0 e0       	ldi	r31, 0x00	; 0
    9656:	80 81       	ld	r24, Z
    9658:	81 60       	ori	r24, 0x01	; 1
    965a:	80 83       	st	Z, r24
	sbi(TCCR4D, WGM40);		// put timer 4 in phase- and frequency-correct PWM mode	
	sbi(TCCR4A, PWM4A);		// enable PWM mode for comparator OCR4A
	sbi(TCCR4C, PWM4D);		// enable PWM mode for comparator OCR4D
#else /* beginning of timer4 block for ATMEGA1280 and ATMEGA2560 */
#if defined(TCCR4B) && defined(CS41) && defined(WGM40)
	sbi(TCCR4B, CS41);		// set timer 4 prescale factor to 64
    965c:	e1 ea       	ldi	r30, 0xA1	; 161
    965e:	f0 e0       	ldi	r31, 0x00	; 0
    9660:	80 81       	ld	r24, Z
    9662:	82 60       	ori	r24, 0x02	; 2
    9664:	80 83       	st	Z, r24
	sbi(TCCR4B, CS40);
    9666:	80 81       	ld	r24, Z
    9668:	81 60       	ori	r24, 0x01	; 1
    966a:	80 83       	st	Z, r24
	sbi(TCCR4A, WGM40);		// put timer 4 in 8-bit phase correct pwm mode
    966c:	e0 ea       	ldi	r30, 0xA0	; 160
    966e:	f0 e0       	ldi	r31, 0x00	; 0
    9670:	80 81       	ld	r24, Z
    9672:	81 60       	ori	r24, 0x01	; 1
    9674:	80 83       	st	Z, r24
#endif
#endif /* end timer4 block for ATMEGA1280/2560 and similar */	

#if defined(TCCR5B) && defined(CS51) && defined(WGM50)
	sbi(TCCR5B, CS51);		// set timer 5 prescale factor to 64
    9676:	e1 e2       	ldi	r30, 0x21	; 33
    9678:	f1 e0       	ldi	r31, 0x01	; 1
    967a:	80 81       	ld	r24, Z
    967c:	82 60       	ori	r24, 0x02	; 2
    967e:	80 83       	st	Z, r24
	sbi(TCCR5B, CS50);
    9680:	80 81       	ld	r24, Z
    9682:	81 60       	ori	r24, 0x01	; 1
    9684:	80 83       	st	Z, r24
	sbi(TCCR5A, WGM50);		// put timer 5 in 8-bit phase correct pwm mode
    9686:	e0 e2       	ldi	r30, 0x20	; 32
    9688:	f1 e0       	ldi	r31, 0x01	; 1
    968a:	80 81       	ld	r24, Z
    968c:	81 60       	ori	r24, 0x01	; 1
    968e:	80 83       	st	Z, r24
#endif

#if defined(ADCSRA)
	// set a2d prescaler so we are inside the desired 50-200 KHz range.
	#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
		sbi(ADCSRA, ADPS2);
    9690:	ea e7       	ldi	r30, 0x7A	; 122
    9692:	f0 e0       	ldi	r31, 0x00	; 0
    9694:	80 81       	ld	r24, Z
    9696:	84 60       	ori	r24, 0x04	; 4
    9698:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS1);
    969a:	80 81       	ld	r24, Z
    969c:	82 60       	ori	r24, 0x02	; 2
    969e:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS0);
    96a0:	80 81       	ld	r24, Z
    96a2:	81 60       	ori	r24, 0x01	; 1
    96a4:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
    96a6:	80 81       	ld	r24, Z
    96a8:	80 68       	ori	r24, 0x80	; 128
    96aa:	80 83       	st	Z, r24
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
    96ac:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7c00c1>
    96b0:	08 95       	ret

000096b2 <turnOffPWM>:
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
    96b2:	90 e0       	ldi	r25, 0x00	; 0
    96b4:	fc 01       	movw	r30, r24
    96b6:	31 97       	sbiw	r30, 0x01	; 1
    96b8:	e2 31       	cpi	r30, 0x12	; 18
    96ba:	f1 05       	cpc	r31, r1
    96bc:	08 f0       	brcs	.+2      	; 0x96c0 <turnOffPWM+0xe>
    96be:	4d c0       	rjmp	.+154    	; 0x975a <turnOffPWM+0xa8>
    96c0:	88 27       	eor	r24, r24
    96c2:	e1 54       	subi	r30, 0x41	; 65
    96c4:	fe 4f       	sbci	r31, 0xFE	; 254
    96c6:	8f 4f       	sbci	r24, 0xFF	; 255
    96c8:	34 c2       	rjmp	.+1128   	; 0x9b32 <__tablejump2__>
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
    96ca:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
    96ce:	8f 77       	andi	r24, 0x7F	; 127
    96d0:	03 c0       	rjmp	.+6      	; 0x96d8 <turnOffPWM+0x26>
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
    96d2:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
    96d6:	8f 7d       	andi	r24, 0xDF	; 223
    96d8:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
    96dc:	08 95       	ret
		#endif
		#if defined(TCCR1A) && defined(COM1C1)
		case TIMER1C:   cbi(TCCR1A, COM1C1);    break;
    96de:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
    96e2:	87 7f       	andi	r24, 0xF7	; 247
    96e4:	f9 cf       	rjmp	.-14     	; 0x96d8 <turnOffPWM+0x26>
		#if defined(TCCR2) && defined(COM21)
		case  TIMER2:   cbi(TCCR2, COM21);      break;
		#endif
		
		#if defined(TCCR0A) && defined(COM0A1)
		case  TIMER0A:  cbi(TCCR0A, COM0A1);    break;
    96e6:	84 b5       	in	r24, 0x24	; 36
    96e8:	8f 77       	andi	r24, 0x7F	; 127
    96ea:	02 c0       	rjmp	.+4      	; 0x96f0 <turnOffPWM+0x3e>
		#endif
		
		#if defined(TCCR0A) && defined(COM0B1)
		case  TIMER0B:  cbi(TCCR0A, COM0B1);    break;
    96ec:	84 b5       	in	r24, 0x24	; 36
    96ee:	8f 7d       	andi	r24, 0xDF	; 223
    96f0:	84 bd       	out	0x24, r24	; 36
    96f2:	08 95       	ret
		#endif
		#if defined(TCCR2A) && defined(COM2A1)
		case  TIMER2A:  cbi(TCCR2A, COM2A1);    break;
    96f4:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7c00b0>
    96f8:	8f 77       	andi	r24, 0x7F	; 127
    96fa:	03 c0       	rjmp	.+6      	; 0x9702 <turnOffPWM+0x50>
		#endif
		#if defined(TCCR2A) && defined(COM2B1)
		case  TIMER2B:  cbi(TCCR2A, COM2B1);    break;
    96fc:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7c00b0>
    9700:	8f 7d       	andi	r24, 0xDF	; 223
    9702:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7c00b0>
    9706:	08 95       	ret
		#endif
		
		#if defined(TCCR3A) && defined(COM3A1)
		case  TIMER3A:  cbi(TCCR3A, COM3A1);    break;
    9708:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
    970c:	8f 77       	andi	r24, 0x7F	; 127
    970e:	07 c0       	rjmp	.+14     	; 0x971e <turnOffPWM+0x6c>
		#endif
		#if defined(TCCR3A) && defined(COM3B1)
		case  TIMER3B:  cbi(TCCR3A, COM3B1);    break;
    9710:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
    9714:	8f 7d       	andi	r24, 0xDF	; 223
    9716:	03 c0       	rjmp	.+6      	; 0x971e <turnOffPWM+0x6c>
		#endif
		#if defined(TCCR3A) && defined(COM3C1)
		case  TIMER3C:  cbi(TCCR3A, COM3C1);    break;
    9718:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
    971c:	87 7f       	andi	r24, 0xF7	; 247
    971e:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
    9722:	08 95       	ret
		#endif

		#if defined(TCCR4A) && defined(COM4A1)
		case  TIMER4A:  cbi(TCCR4A, COM4A1);    break;
    9724:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
    9728:	8f 77       	andi	r24, 0x7F	; 127
    972a:	07 c0       	rjmp	.+14     	; 0x973a <turnOffPWM+0x88>
		#endif					
		#if defined(TCCR4A) && defined(COM4B1)
		case  TIMER4B:  cbi(TCCR4A, COM4B1);    break;
    972c:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
    9730:	8f 7d       	andi	r24, 0xDF	; 223
    9732:	03 c0       	rjmp	.+6      	; 0x973a <turnOffPWM+0x88>
		#endif
		#if defined(TCCR4A) && defined(COM4C1)
		case  TIMER4C:  cbi(TCCR4A, COM4C1);    break;
    9734:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
    9738:	87 7f       	andi	r24, 0xF7	; 247
    973a:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
    973e:	08 95       	ret
		#if defined(TCCR4C) && defined(COM4D1)
		case TIMER4D:	cbi(TCCR4C, COM4D1);	break;
		#endif			
			
		#if defined(TCCR5A)
		case  TIMER5A:  cbi(TCCR5A, COM5A1);    break;
    9740:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
    9744:	8f 77       	andi	r24, 0x7F	; 127
    9746:	07 c0       	rjmp	.+14     	; 0x9756 <turnOffPWM+0xa4>
		case  TIMER5B:  cbi(TCCR5A, COM5B1);    break;
    9748:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
    974c:	8f 7d       	andi	r24, 0xDF	; 223
    974e:	03 c0       	rjmp	.+6      	; 0x9756 <turnOffPWM+0xa4>
		case  TIMER5C:  cbi(TCCR5A, COM5C1);    break;
    9750:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
    9754:	87 7f       	andi	r24, 0xF7	; 247
    9756:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
    975a:	08 95       	ret

0000975c <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
    975c:	cf 93       	push	r28
    975e:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
    9760:	90 e0       	ldi	r25, 0x00	; 0
    9762:	fc 01       	movw	r30, r24
    9764:	ed 5c       	subi	r30, 0xCD	; 205
    9766:	f1 4f       	sbci	r31, 0xF1	; 241
    9768:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
    976a:	fc 01       	movw	r30, r24
    976c:	e7 58       	subi	r30, 0x87	; 135
    976e:	f1 4f       	sbci	r31, 0xF1	; 241
    9770:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
    9772:	88 23       	and	r24, r24
    9774:	61 f1       	breq	.+88     	; 0x97ce <pinMode+0x72>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
    9776:	90 e0       	ldi	r25, 0x00	; 0
    9778:	88 0f       	add	r24, r24
    977a:	99 1f       	adc	r25, r25
    977c:	fc 01       	movw	r30, r24
    977e:	ed 50       	subi	r30, 0x0D	; 13
    9780:	f1 4f       	sbci	r31, 0xF1	; 241
    9782:	c5 91       	lpm	r28, Z+
    9784:	d4 91       	lpm	r29, Z
	out = portOutputRegister(port);
    9786:	fc 01       	movw	r30, r24
    9788:	e7 52       	subi	r30, 0x27	; 39
    978a:	f1 4f       	sbci	r31, 0xF1	; 241
    978c:	a5 91       	lpm	r26, Z+
    978e:	b4 91       	lpm	r27, Z

	if (mode == INPUT) { 
    9790:	61 11       	cpse	r22, r1
    9792:	09 c0       	rjmp	.+18     	; 0x97a6 <pinMode+0x4a>
		uint8_t oldSREG = SREG;
    9794:	9f b7       	in	r25, 0x3f	; 63
                cli();
    9796:	f8 94       	cli
		*reg &= ~bit;
    9798:	88 81       	ld	r24, Y
    979a:	20 95       	com	r18
    979c:	82 23       	and	r24, r18
    979e:	88 83       	st	Y, r24
		*out &= ~bit;
    97a0:	ec 91       	ld	r30, X
    97a2:	2e 23       	and	r18, r30
    97a4:	0b c0       	rjmp	.+22     	; 0x97bc <pinMode+0x60>
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
    97a6:	62 30       	cpi	r22, 0x02	; 2
    97a8:	61 f4       	brne	.+24     	; 0x97c2 <pinMode+0x66>
		uint8_t oldSREG = SREG;
    97aa:	9f b7       	in	r25, 0x3f	; 63
                cli();
    97ac:	f8 94       	cli
		*reg &= ~bit;
    97ae:	88 81       	ld	r24, Y
    97b0:	32 2f       	mov	r19, r18
    97b2:	30 95       	com	r19
    97b4:	83 23       	and	r24, r19
    97b6:	88 83       	st	Y, r24
		*out |= bit;
    97b8:	ec 91       	ld	r30, X
    97ba:	2e 2b       	or	r18, r30
    97bc:	2c 93       	st	X, r18
		SREG = oldSREG;
    97be:	9f bf       	out	0x3f, r25	; 63
    97c0:	06 c0       	rjmp	.+12     	; 0x97ce <pinMode+0x72>
	} else {
		uint8_t oldSREG = SREG;
    97c2:	8f b7       	in	r24, 0x3f	; 63
                cli();
    97c4:	f8 94       	cli
		*reg |= bit;
    97c6:	e8 81       	ld	r30, Y
    97c8:	2e 2b       	or	r18, r30
    97ca:	28 83       	st	Y, r18
		SREG = oldSREG;
    97cc:	8f bf       	out	0x3f, r24	; 63
	}
}
    97ce:	df 91       	pop	r29
    97d0:	cf 91       	pop	r28
    97d2:	08 95       	ret

000097d4 <digitalWrite>:
		#endif
	}
}

void digitalWrite(uint8_t pin, uint8_t val)
{
    97d4:	1f 93       	push	r17
    97d6:	cf 93       	push	r28
    97d8:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
    97da:	28 2f       	mov	r18, r24
    97dc:	30 e0       	ldi	r19, 0x00	; 0
    97de:	f9 01       	movw	r30, r18
    97e0:	e3 51       	subi	r30, 0x13	; 19
    97e2:	f2 4f       	sbci	r31, 0xF2	; 242
    97e4:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
    97e6:	f9 01       	movw	r30, r18
    97e8:	ed 5c       	subi	r30, 0xCD	; 205
    97ea:	f1 4f       	sbci	r31, 0xF1	; 241
    97ec:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
    97ee:	f9 01       	movw	r30, r18
    97f0:	e7 58       	subi	r30, 0x87	; 135
    97f2:	f1 4f       	sbci	r31, 0xF1	; 241
    97f4:	c4 91       	lpm	r28, Z
	volatile uint8_t *out;

	if (port == NOT_A_PIN) return;
    97f6:	cc 23       	and	r28, r28
    97f8:	b9 f0       	breq	.+46     	; 0x9828 <digitalWrite+0x54>
    97fa:	16 2f       	mov	r17, r22

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    97fc:	81 11       	cpse	r24, r1
    97fe:	59 df       	rcall	.-334    	; 0x96b2 <turnOffPWM>

	out = portOutputRegister(port);
    9800:	ec 2f       	mov	r30, r28
    9802:	f0 e0       	ldi	r31, 0x00	; 0
    9804:	ee 0f       	add	r30, r30
    9806:	ff 1f       	adc	r31, r31
    9808:	e7 52       	subi	r30, 0x27	; 39
    980a:	f1 4f       	sbci	r31, 0xF1	; 241
    980c:	a5 91       	lpm	r26, Z+
    980e:	b4 91       	lpm	r27, Z

	uint8_t oldSREG = SREG;
    9810:	9f b7       	in	r25, 0x3f	; 63
	cli();
    9812:	f8 94       	cli

	if (val == LOW) {
    9814:	11 11       	cpse	r17, r1
    9816:	04 c0       	rjmp	.+8      	; 0x9820 <digitalWrite+0x4c>
		*out &= ~bit;
    9818:	8c 91       	ld	r24, X
    981a:	d0 95       	com	r29
    981c:	d8 23       	and	r29, r24
    981e:	02 c0       	rjmp	.+4      	; 0x9824 <digitalWrite+0x50>
	} else {
		*out |= bit;
    9820:	ec 91       	ld	r30, X
    9822:	de 2b       	or	r29, r30
    9824:	dc 93       	st	X, r29
	}

	SREG = oldSREG;
    9826:	9f bf       	out	0x3f, r25	; 63
}
    9828:	df 91       	pop	r29
    982a:	cf 91       	pop	r28
    982c:	1f 91       	pop	r17
    982e:	08 95       	ret

00009830 <_ZNK6String14StringIfHelperEv>:
	unsigned int newlen = len + length;
	if (!reserve(newlen)) return 0;
	strcpy_P(buffer + len, (const char *) str);
	len = newlen;
	return 1;
}
    9830:	08 95       	ret

00009832 <_ZN6StringD1Ev>:
    9832:	fc 01       	movw	r30, r24
    9834:	80 81       	ld	r24, Z
    9836:	91 81       	ldd	r25, Z+1	; 0x01
    9838:	00 97       	sbiw	r24, 0x00	; 0
    983a:	09 f0       	breq	.+2      	; 0x983e <_ZN6StringD1Ev+0xc>
    983c:	33 c2       	rjmp	.+1126   	; 0x9ca4 <free>
    983e:	08 95       	ret

00009840 <_ZN6String10invalidateEv>:
    9840:	cf 93       	push	r28
    9842:	df 93       	push	r29
    9844:	ec 01       	movw	r28, r24
    9846:	88 81       	ld	r24, Y
    9848:	99 81       	ldd	r25, Y+1	; 0x01
    984a:	00 97       	sbiw	r24, 0x00	; 0
    984c:	09 f0       	breq	.+2      	; 0x9850 <_ZN6String10invalidateEv+0x10>
    984e:	2a d2       	rcall	.+1108   	; 0x9ca4 <free>
    9850:	19 82       	std	Y+1, r1	; 0x01
    9852:	18 82       	st	Y, r1
    9854:	1d 82       	std	Y+5, r1	; 0x05
    9856:	1c 82       	std	Y+4, r1	; 0x04
    9858:	1b 82       	std	Y+3, r1	; 0x03
    985a:	1a 82       	std	Y+2, r1	; 0x02
    985c:	df 91       	pop	r29
    985e:	cf 91       	pop	r28
    9860:	08 95       	ret

00009862 <_ZN6String12changeBufferEj>:
    9862:	0f 93       	push	r16
    9864:	1f 93       	push	r17
    9866:	cf 93       	push	r28
    9868:	df 93       	push	r29
    986a:	ec 01       	movw	r28, r24
    986c:	8b 01       	movw	r16, r22
    986e:	6f 5f       	subi	r22, 0xFF	; 255
    9870:	7f 4f       	sbci	r23, 0xFF	; 255
    9872:	88 81       	ld	r24, Y
    9874:	99 81       	ldd	r25, Y+1	; 0x01
    9876:	9f d2       	rcall	.+1342   	; 0x9db6 <realloc>
    9878:	00 97       	sbiw	r24, 0x00	; 0
    987a:	31 f0       	breq	.+12     	; 0x9888 <_ZN6String12changeBufferEj+0x26>
    987c:	99 83       	std	Y+1, r25	; 0x01
    987e:	88 83       	st	Y, r24
    9880:	1b 83       	std	Y+3, r17	; 0x03
    9882:	0a 83       	std	Y+2, r16	; 0x02
    9884:	81 e0       	ldi	r24, 0x01	; 1
    9886:	01 c0       	rjmp	.+2      	; 0x988a <_ZN6String12changeBufferEj+0x28>
    9888:	80 e0       	ldi	r24, 0x00	; 0
    988a:	df 91       	pop	r29
    988c:	cf 91       	pop	r28
    988e:	1f 91       	pop	r17
    9890:	0f 91       	pop	r16
    9892:	08 95       	ret

00009894 <_ZN6String7reserveEj>:
    9894:	cf 93       	push	r28
    9896:	df 93       	push	r29
    9898:	ec 01       	movw	r28, r24
    989a:	88 81       	ld	r24, Y
    989c:	99 81       	ldd	r25, Y+1	; 0x01
    989e:	89 2b       	or	r24, r25
    98a0:	29 f0       	breq	.+10     	; 0x98ac <_ZN6String7reserveEj+0x18>
    98a2:	8a 81       	ldd	r24, Y+2	; 0x02
    98a4:	9b 81       	ldd	r25, Y+3	; 0x03
    98a6:	86 17       	cp	r24, r22
    98a8:	97 07       	cpc	r25, r23
    98aa:	58 f4       	brcc	.+22     	; 0x98c2 <_ZN6String7reserveEj+0x2e>
    98ac:	ce 01       	movw	r24, r28
    98ae:	d9 df       	rcall	.-78     	; 0x9862 <_ZN6String12changeBufferEj>
    98b0:	88 23       	and	r24, r24
    98b2:	41 f0       	breq	.+16     	; 0x98c4 <_ZN6String7reserveEj+0x30>
    98b4:	8c 81       	ldd	r24, Y+4	; 0x04
    98b6:	9d 81       	ldd	r25, Y+5	; 0x05
    98b8:	89 2b       	or	r24, r25
    98ba:	19 f4       	brne	.+6      	; 0x98c2 <_ZN6String7reserveEj+0x2e>
    98bc:	e8 81       	ld	r30, Y
    98be:	f9 81       	ldd	r31, Y+1	; 0x01
    98c0:	10 82       	st	Z, r1
    98c2:	81 e0       	ldi	r24, 0x01	; 1
    98c4:	df 91       	pop	r29
    98c6:	cf 91       	pop	r28
    98c8:	08 95       	ret

000098ca <_ZN6String4copyEPKcj>:
    98ca:	ef 92       	push	r14
    98cc:	ff 92       	push	r15
    98ce:	0f 93       	push	r16
    98d0:	1f 93       	push	r17
    98d2:	cf 93       	push	r28
    98d4:	df 93       	push	r29
    98d6:	ec 01       	movw	r28, r24
    98d8:	7b 01       	movw	r14, r22
    98da:	8a 01       	movw	r16, r20
    98dc:	ba 01       	movw	r22, r20
    98de:	da df       	rcall	.-76     	; 0x9894 <_ZN6String7reserveEj>
    98e0:	81 11       	cpse	r24, r1
    98e2:	03 c0       	rjmp	.+6      	; 0x98ea <_ZN6String4copyEPKcj+0x20>
    98e4:	ce 01       	movw	r24, r28
    98e6:	ac df       	rcall	.-168    	; 0x9840 <_ZN6String10invalidateEv>
    98e8:	06 c0       	rjmp	.+12     	; 0x98f6 <_ZN6String4copyEPKcj+0x2c>
    98ea:	1d 83       	std	Y+5, r17	; 0x05
    98ec:	0c 83       	std	Y+4, r16	; 0x04
    98ee:	b7 01       	movw	r22, r14
    98f0:	88 81       	ld	r24, Y
    98f2:	99 81       	ldd	r25, Y+1	; 0x01
    98f4:	54 d3       	rcall	.+1704   	; 0x9f9e <strcpy>
    98f6:	ce 01       	movw	r24, r28
    98f8:	df 91       	pop	r29
    98fa:	cf 91       	pop	r28
    98fc:	1f 91       	pop	r17
    98fe:	0f 91       	pop	r16
    9900:	ff 90       	pop	r15
    9902:	ef 90       	pop	r14
    9904:	08 95       	ret

00009906 <_ZN6StringC1EPKc>:
    9906:	fc 01       	movw	r30, r24
    9908:	11 82       	std	Z+1, r1	; 0x01
    990a:	10 82       	st	Z, r1
    990c:	13 82       	std	Z+3, r1	; 0x03
    990e:	12 82       	std	Z+2, r1	; 0x02
    9910:	15 82       	std	Z+5, r1	; 0x05
    9912:	14 82       	std	Z+4, r1	; 0x04
    9914:	61 15       	cp	r22, r1
    9916:	71 05       	cpc	r23, r1
    9918:	49 f0       	breq	.+18     	; 0x992c <_ZN6StringC1EPKc+0x26>
    991a:	fb 01       	movw	r30, r22
    991c:	01 90       	ld	r0, Z+
    991e:	00 20       	and	r0, r0
    9920:	e9 f7       	brne	.-6      	; 0x991c <_ZN6StringC1EPKc+0x16>
    9922:	31 97       	sbiw	r30, 0x01	; 1
    9924:	af 01       	movw	r20, r30
    9926:	46 1b       	sub	r20, r22
    9928:	57 0b       	sbc	r21, r23
    992a:	cf cf       	rjmp	.-98     	; 0x98ca <_ZN6String4copyEPKcj>
    992c:	08 95       	ret

0000992e <_ZN6String4moveERS_>:
    992e:	0f 93       	push	r16
    9930:	1f 93       	push	r17
    9932:	cf 93       	push	r28
    9934:	df 93       	push	r29
    9936:	8c 01       	movw	r16, r24
    9938:	eb 01       	movw	r28, r22
    993a:	fc 01       	movw	r30, r24
    993c:	80 81       	ld	r24, Z
    993e:	91 81       	ldd	r25, Z+1	; 0x01
    9940:	00 97       	sbiw	r24, 0x00	; 0
    9942:	c1 f0       	breq	.+48     	; 0x9974 <_ZN6String4moveERS_+0x46>
    9944:	68 81       	ld	r22, Y
    9946:	79 81       	ldd	r23, Y+1	; 0x01
    9948:	61 15       	cp	r22, r1
    994a:	71 05       	cpc	r23, r1
    994c:	91 f0       	breq	.+36     	; 0x9972 <_ZN6String4moveERS_+0x44>
    994e:	28 e1       	ldi	r18, 0x18	; 24
    9950:	3c e4       	ldi	r19, 0x4C	; 76
    9952:	23 2b       	or	r18, r19
    9954:	71 f0       	breq	.+28     	; 0x9972 <_ZN6String4moveERS_+0x44>
    9956:	42 81       	ldd	r20, Z+2	; 0x02
    9958:	53 81       	ldd	r21, Z+3	; 0x03
    995a:	2c 81       	ldd	r18, Y+4	; 0x04
    995c:	3d 81       	ldd	r19, Y+5	; 0x05
    995e:	42 17       	cp	r20, r18
    9960:	53 07       	cpc	r21, r19
    9962:	38 f0       	brcs	.+14     	; 0x9972 <_ZN6String4moveERS_+0x44>
    9964:	1c d3       	rcall	.+1592   	; 0x9f9e <strcpy>
    9966:	8c 81       	ldd	r24, Y+4	; 0x04
    9968:	9d 81       	ldd	r25, Y+5	; 0x05
    996a:	f8 01       	movw	r30, r16
    996c:	95 83       	std	Z+5, r25	; 0x05
    996e:	84 83       	std	Z+4, r24	; 0x04
    9970:	12 c0       	rjmp	.+36     	; 0x9996 <_ZN6String4moveERS_+0x68>
    9972:	98 d1       	rcall	.+816    	; 0x9ca4 <free>
    9974:	88 81       	ld	r24, Y
    9976:	99 81       	ldd	r25, Y+1	; 0x01
    9978:	f8 01       	movw	r30, r16
    997a:	91 83       	std	Z+1, r25	; 0x01
    997c:	80 83       	st	Z, r24
    997e:	8a 81       	ldd	r24, Y+2	; 0x02
    9980:	9b 81       	ldd	r25, Y+3	; 0x03
    9982:	93 83       	std	Z+3, r25	; 0x03
    9984:	82 83       	std	Z+2, r24	; 0x02
    9986:	8c 81       	ldd	r24, Y+4	; 0x04
    9988:	9d 81       	ldd	r25, Y+5	; 0x05
    998a:	95 83       	std	Z+5, r25	; 0x05
    998c:	84 83       	std	Z+4, r24	; 0x04
    998e:	19 82       	std	Y+1, r1	; 0x01
    9990:	18 82       	st	Y, r1
    9992:	1b 82       	std	Y+3, r1	; 0x03
    9994:	1a 82       	std	Y+2, r1	; 0x02
    9996:	1d 82       	std	Y+5, r1	; 0x05
    9998:	1c 82       	std	Y+4, r1	; 0x04
    999a:	df 91       	pop	r29
    999c:	cf 91       	pop	r28
    999e:	1f 91       	pop	r17
    99a0:	0f 91       	pop	r16
    99a2:	08 95       	ret

000099a4 <_ZN6StringaSEOS_>:
    99a4:	cf 93       	push	r28
    99a6:	df 93       	push	r29
    99a8:	ec 01       	movw	r28, r24
    99aa:	86 17       	cp	r24, r22
    99ac:	97 07       	cpc	r25, r23
    99ae:	09 f0       	breq	.+2      	; 0x99b2 <_ZN6StringaSEOS_+0xe>
    99b0:	be df       	rcall	.-132    	; 0x992e <_ZN6String4moveERS_>
    99b2:	ce 01       	movw	r24, r28
    99b4:	df 91       	pop	r29
    99b6:	cf 91       	pop	r28
    99b8:	08 95       	ret

000099ba <_ZN6StringaSEPKc>:
    99ba:	cf 93       	push	r28
    99bc:	df 93       	push	r29
    99be:	ec 01       	movw	r28, r24
    99c0:	61 15       	cp	r22, r1
    99c2:	71 05       	cpc	r23, r1
    99c4:	51 f0       	breq	.+20     	; 0x99da <_ZN6StringaSEPKc+0x20>
    99c6:	fb 01       	movw	r30, r22
    99c8:	01 90       	ld	r0, Z+
    99ca:	00 20       	and	r0, r0
    99cc:	e9 f7       	brne	.-6      	; 0x99c8 <_ZN6StringaSEPKc+0xe>
    99ce:	31 97       	sbiw	r30, 0x01	; 1
    99d0:	af 01       	movw	r20, r30
    99d2:	46 1b       	sub	r20, r22
    99d4:	57 0b       	sbc	r21, r23
    99d6:	79 df       	rcall	.-270    	; 0x98ca <_ZN6String4copyEPKcj>
    99d8:	01 c0       	rjmp	.+2      	; 0x99dc <_ZN6StringaSEPKc+0x22>
    99da:	32 df       	rcall	.-412    	; 0x9840 <_ZN6String10invalidateEv>
    99dc:	ce 01       	movw	r24, r28
    99de:	df 91       	pop	r29
    99e0:	cf 91       	pop	r28
    99e2:	08 95       	ret

000099e4 <_ZN6StringC1Ec>:
    99e4:	cf 93       	push	r28
    99e6:	df 93       	push	r29
    99e8:	1f 92       	push	r1
    99ea:	1f 92       	push	r1
    99ec:	cd b7       	in	r28, 0x3d	; 61
    99ee:	de b7       	in	r29, 0x3e	; 62
    99f0:	fc 01       	movw	r30, r24
    99f2:	11 82       	std	Z+1, r1	; 0x01
    99f4:	10 82       	st	Z, r1
    99f6:	13 82       	std	Z+3, r1	; 0x03
    99f8:	12 82       	std	Z+2, r1	; 0x02
    99fa:	15 82       	std	Z+5, r1	; 0x05
    99fc:	14 82       	std	Z+4, r1	; 0x04
    99fe:	69 83       	std	Y+1, r22	; 0x01
    9a00:	1a 82       	std	Y+2, r1	; 0x02
    9a02:	be 01       	movw	r22, r28
    9a04:	6f 5f       	subi	r22, 0xFF	; 255
    9a06:	7f 4f       	sbci	r23, 0xFF	; 255
    9a08:	d8 df       	rcall	.-80     	; 0x99ba <_ZN6StringaSEPKc>
    9a0a:	0f 90       	pop	r0
    9a0c:	0f 90       	pop	r0
    9a0e:	df 91       	pop	r29
    9a10:	cf 91       	pop	r28
    9a12:	08 95       	ret

00009a14 <_ZN6StringC1Eih>:
    9a14:	0f 93       	push	r16
    9a16:	1f 93       	push	r17
    9a18:	cf 93       	push	r28
    9a1a:	df 93       	push	r29
    9a1c:	cd b7       	in	r28, 0x3d	; 61
    9a1e:	de b7       	in	r29, 0x3e	; 62
    9a20:	62 97       	sbiw	r28, 0x12	; 18
    9a22:	0f b6       	in	r0, 0x3f	; 63
    9a24:	f8 94       	cli
    9a26:	de bf       	out	0x3e, r29	; 62
    9a28:	0f be       	out	0x3f, r0	; 63
    9a2a:	cd bf       	out	0x3d, r28	; 61
    9a2c:	8c 01       	movw	r16, r24
    9a2e:	cb 01       	movw	r24, r22
    9a30:	f8 01       	movw	r30, r16
    9a32:	11 82       	std	Z+1, r1	; 0x01
    9a34:	10 82       	st	Z, r1
    9a36:	13 82       	std	Z+3, r1	; 0x03
    9a38:	12 82       	std	Z+2, r1	; 0x02
    9a3a:	15 82       	std	Z+5, r1	; 0x05
    9a3c:	14 82       	std	Z+4, r1	; 0x04
    9a3e:	50 e0       	ldi	r21, 0x00	; 0
    9a40:	be 01       	movw	r22, r28
    9a42:	6f 5f       	subi	r22, 0xFF	; 255
    9a44:	7f 4f       	sbci	r23, 0xFF	; 255
    9a46:	b2 d2       	rcall	.+1380   	; 0x9fac <itoa>
    9a48:	be 01       	movw	r22, r28
    9a4a:	6f 5f       	subi	r22, 0xFF	; 255
    9a4c:	7f 4f       	sbci	r23, 0xFF	; 255
    9a4e:	c8 01       	movw	r24, r16
    9a50:	b4 df       	rcall	.-152    	; 0x99ba <_ZN6StringaSEPKc>
    9a52:	62 96       	adiw	r28, 0x12	; 18
    9a54:	0f b6       	in	r0, 0x3f	; 63
    9a56:	f8 94       	cli
    9a58:	de bf       	out	0x3e, r29	; 62
    9a5a:	0f be       	out	0x3f, r0	; 63
    9a5c:	cd bf       	out	0x3d, r28	; 61
    9a5e:	df 91       	pop	r29
    9a60:	cf 91       	pop	r28
    9a62:	1f 91       	pop	r17
    9a64:	0f 91       	pop	r16
    9a66:	08 95       	ret

00009a68 <_ZN6String6concatEPKcj>:
    9a68:	ef 92       	push	r14
    9a6a:	ff 92       	push	r15
    9a6c:	0f 93       	push	r16
    9a6e:	1f 93       	push	r17
    9a70:	cf 93       	push	r28
    9a72:	df 93       	push	r29
    9a74:	61 15       	cp	r22, r1
    9a76:	71 05       	cpc	r23, r1
    9a78:	11 f4       	brne	.+4      	; 0x9a7e <_ZN6String6concatEPKcj+0x16>
    9a7a:	80 e0       	ldi	r24, 0x00	; 0
    9a7c:	1a c0       	rjmp	.+52     	; 0x9ab2 <_ZN6String6concatEPKcj+0x4a>
    9a7e:	41 15       	cp	r20, r1
    9a80:	51 05       	cpc	r21, r1
    9a82:	b1 f0       	breq	.+44     	; 0x9ab0 <_ZN6String6concatEPKcj+0x48>
    9a84:	7b 01       	movw	r14, r22
    9a86:	ec 01       	movw	r28, r24
    9a88:	8c 81       	ldd	r24, Y+4	; 0x04
    9a8a:	9d 81       	ldd	r25, Y+5	; 0x05
    9a8c:	8a 01       	movw	r16, r20
    9a8e:	08 0f       	add	r16, r24
    9a90:	19 1f       	adc	r17, r25
    9a92:	b8 01       	movw	r22, r16
    9a94:	ce 01       	movw	r24, r28
    9a96:	fe de       	rcall	.-516    	; 0x9894 <_ZN6String7reserveEj>
    9a98:	88 23       	and	r24, r24
    9a9a:	79 f3       	breq	.-34     	; 0x9a7a <_ZN6String6concatEPKcj+0x12>
    9a9c:	28 81       	ld	r18, Y
    9a9e:	39 81       	ldd	r19, Y+1	; 0x01
    9aa0:	8c 81       	ldd	r24, Y+4	; 0x04
    9aa2:	9d 81       	ldd	r25, Y+5	; 0x05
    9aa4:	b7 01       	movw	r22, r14
    9aa6:	82 0f       	add	r24, r18
    9aa8:	93 1f       	adc	r25, r19
    9aaa:	79 d2       	rcall	.+1266   	; 0x9f9e <strcpy>
    9aac:	1d 83       	std	Y+5, r17	; 0x05
    9aae:	0c 83       	std	Y+4, r16	; 0x04
    9ab0:	81 e0       	ldi	r24, 0x01	; 1
    9ab2:	df 91       	pop	r29
    9ab4:	cf 91       	pop	r28
    9ab6:	1f 91       	pop	r17
    9ab8:	0f 91       	pop	r16
    9aba:	ff 90       	pop	r15
    9abc:	ef 90       	pop	r14
    9abe:	08 95       	ret

00009ac0 <_ZN6String6concatERKS_>:
    9ac0:	fb 01       	movw	r30, r22
    9ac2:	44 81       	ldd	r20, Z+4	; 0x04
    9ac4:	55 81       	ldd	r21, Z+5	; 0x05
    9ac6:	60 81       	ld	r22, Z
    9ac8:	71 81       	ldd	r23, Z+1	; 0x01
    9aca:	ce cf       	rjmp	.-100    	; 0x9a68 <_ZN6String6concatEPKcj>

00009acc <_ZplRK15StringSumHelperRK6String>:
/*********************************************/
/*  Concatenate                              */
/*********************************************/

StringSumHelper & operator + (const StringSumHelper &lhs, const String &rhs)
{
    9acc:	cf 93       	push	r28
    9ace:	df 93       	push	r29
    9ad0:	ec 01       	movw	r28, r24
	StringSumHelper &a = const_cast<StringSumHelper&>(lhs);
	if (!a.concat(rhs.buffer, rhs.len)) a.invalidate();
    9ad2:	fb 01       	movw	r30, r22
    9ad4:	44 81       	ldd	r20, Z+4	; 0x04
    9ad6:	55 81       	ldd	r21, Z+5	; 0x05
    9ad8:	60 81       	ld	r22, Z
    9ada:	71 81       	ldd	r23, Z+1	; 0x01
    9adc:	c5 df       	rcall	.-118    	; 0x9a68 <_ZN6String6concatEPKcj>
    9ade:	81 11       	cpse	r24, r1
    9ae0:	02 c0       	rjmp	.+4      	; 0x9ae6 <_ZplRK15StringSumHelperRK6String+0x1a>
    9ae2:	ce 01       	movw	r24, r28
    9ae4:	ad de       	rcall	.-678    	; 0x9840 <_ZN6String10invalidateEv>
	return a;
}
    9ae6:	ce 01       	movw	r24, r28
    9ae8:	df 91       	pop	r29
    9aea:	cf 91       	pop	r28
    9aec:	08 95       	ret

00009aee <__udivmodsi4>:
    9aee:	a1 e2       	ldi	r26, 0x21	; 33
    9af0:	1a 2e       	mov	r1, r26
    9af2:	aa 1b       	sub	r26, r26
    9af4:	bb 1b       	sub	r27, r27
    9af6:	fd 01       	movw	r30, r26
    9af8:	0d c0       	rjmp	.+26     	; 0x9b14 <__udivmodsi4_ep>

00009afa <__udivmodsi4_loop>:
    9afa:	aa 1f       	adc	r26, r26
    9afc:	bb 1f       	adc	r27, r27
    9afe:	ee 1f       	adc	r30, r30
    9b00:	ff 1f       	adc	r31, r31
    9b02:	a2 17       	cp	r26, r18
    9b04:	b3 07       	cpc	r27, r19
    9b06:	e4 07       	cpc	r30, r20
    9b08:	f5 07       	cpc	r31, r21
    9b0a:	20 f0       	brcs	.+8      	; 0x9b14 <__udivmodsi4_ep>
    9b0c:	a2 1b       	sub	r26, r18
    9b0e:	b3 0b       	sbc	r27, r19
    9b10:	e4 0b       	sbc	r30, r20
    9b12:	f5 0b       	sbc	r31, r21

00009b14 <__udivmodsi4_ep>:
    9b14:	66 1f       	adc	r22, r22
    9b16:	77 1f       	adc	r23, r23
    9b18:	88 1f       	adc	r24, r24
    9b1a:	99 1f       	adc	r25, r25
    9b1c:	1a 94       	dec	r1
    9b1e:	69 f7       	brne	.-38     	; 0x9afa <__udivmodsi4_loop>
    9b20:	60 95       	com	r22
    9b22:	70 95       	com	r23
    9b24:	80 95       	com	r24
    9b26:	90 95       	com	r25
    9b28:	9b 01       	movw	r18, r22
    9b2a:	ac 01       	movw	r20, r24
    9b2c:	bd 01       	movw	r22, r26
    9b2e:	cf 01       	movw	r24, r30
    9b30:	08 95       	ret

00009b32 <__tablejump2__>:
    9b32:	ee 0f       	add	r30, r30
    9b34:	ff 1f       	adc	r31, r31
    9b36:	88 1f       	adc	r24, r24
    9b38:	8b bf       	out	0x3b, r24	; 59
    9b3a:	07 90       	elpm	r0, Z+
    9b3c:	f6 91       	elpm	r31, Z
    9b3e:	e0 2d       	mov	r30, r0
    9b40:	19 94       	eijmp

00009b42 <__umulhisi3>:
    9b42:	a2 9f       	mul	r26, r18
    9b44:	b0 01       	movw	r22, r0
    9b46:	b3 9f       	mul	r27, r19
    9b48:	c0 01       	movw	r24, r0
    9b4a:	a3 9f       	mul	r26, r19
    9b4c:	70 0d       	add	r23, r0
    9b4e:	81 1d       	adc	r24, r1
    9b50:	11 24       	eor	r1, r1
    9b52:	91 1d       	adc	r25, r1
    9b54:	b2 9f       	mul	r27, r18
    9b56:	70 0d       	add	r23, r0
    9b58:	81 1d       	adc	r24, r1
    9b5a:	11 24       	eor	r1, r1
    9b5c:	91 1d       	adc	r25, r1
    9b5e:	08 95       	ret

00009b60 <__muluhisi3>:
    9b60:	f0 df       	rcall	.-32     	; 0x9b42 <__umulhisi3>
    9b62:	a5 9f       	mul	r26, r21
    9b64:	90 0d       	add	r25, r0
    9b66:	b4 9f       	mul	r27, r20
    9b68:	90 0d       	add	r25, r0
    9b6a:	a4 9f       	mul	r26, r20
    9b6c:	80 0d       	add	r24, r0
    9b6e:	91 1d       	adc	r25, r1
    9b70:	11 24       	eor	r1, r1
    9b72:	08 95       	ret

00009b74 <malloc>:
    9b74:	0f 93       	push	r16
    9b76:	1f 93       	push	r17
    9b78:	cf 93       	push	r28
    9b7a:	df 93       	push	r29
    9b7c:	82 30       	cpi	r24, 0x02	; 2
    9b7e:	91 05       	cpc	r25, r1
    9b80:	10 f4       	brcc	.+4      	; 0x9b86 <malloc+0x12>
    9b82:	82 e0       	ldi	r24, 0x02	; 2
    9b84:	90 e0       	ldi	r25, 0x00	; 0
    9b86:	e0 91 5f 05 	lds	r30, 0x055F	; 0x80055f <__flp>
    9b8a:	f0 91 60 05 	lds	r31, 0x0560	; 0x800560 <__flp+0x1>
    9b8e:	20 e0       	ldi	r18, 0x00	; 0
    9b90:	30 e0       	ldi	r19, 0x00	; 0
    9b92:	a0 e0       	ldi	r26, 0x00	; 0
    9b94:	b0 e0       	ldi	r27, 0x00	; 0
    9b96:	30 97       	sbiw	r30, 0x00	; 0
    9b98:	19 f1       	breq	.+70     	; 0x9be0 <malloc+0x6c>
    9b9a:	40 81       	ld	r20, Z
    9b9c:	51 81       	ldd	r21, Z+1	; 0x01
    9b9e:	02 81       	ldd	r16, Z+2	; 0x02
    9ba0:	13 81       	ldd	r17, Z+3	; 0x03
    9ba2:	48 17       	cp	r20, r24
    9ba4:	59 07       	cpc	r21, r25
    9ba6:	c8 f0       	brcs	.+50     	; 0x9bda <malloc+0x66>
    9ba8:	84 17       	cp	r24, r20
    9baa:	95 07       	cpc	r25, r21
    9bac:	69 f4       	brne	.+26     	; 0x9bc8 <malloc+0x54>
    9bae:	10 97       	sbiw	r26, 0x00	; 0
    9bb0:	31 f0       	breq	.+12     	; 0x9bbe <malloc+0x4a>
    9bb2:	12 96       	adiw	r26, 0x02	; 2
    9bb4:	0c 93       	st	X, r16
    9bb6:	12 97       	sbiw	r26, 0x02	; 2
    9bb8:	13 96       	adiw	r26, 0x03	; 3
    9bba:	1c 93       	st	X, r17
    9bbc:	27 c0       	rjmp	.+78     	; 0x9c0c <malloc+0x98>
    9bbe:	00 93 5f 05 	sts	0x055F, r16	; 0x80055f <__flp>
    9bc2:	10 93 60 05 	sts	0x0560, r17	; 0x800560 <__flp+0x1>
    9bc6:	22 c0       	rjmp	.+68     	; 0x9c0c <malloc+0x98>
    9bc8:	21 15       	cp	r18, r1
    9bca:	31 05       	cpc	r19, r1
    9bcc:	19 f0       	breq	.+6      	; 0x9bd4 <malloc+0x60>
    9bce:	42 17       	cp	r20, r18
    9bd0:	53 07       	cpc	r21, r19
    9bd2:	18 f4       	brcc	.+6      	; 0x9bda <malloc+0x66>
    9bd4:	9a 01       	movw	r18, r20
    9bd6:	bd 01       	movw	r22, r26
    9bd8:	ef 01       	movw	r28, r30
    9bda:	df 01       	movw	r26, r30
    9bdc:	f8 01       	movw	r30, r16
    9bde:	db cf       	rjmp	.-74     	; 0x9b96 <malloc+0x22>
    9be0:	21 15       	cp	r18, r1
    9be2:	31 05       	cpc	r19, r1
    9be4:	f9 f0       	breq	.+62     	; 0x9c24 <malloc+0xb0>
    9be6:	28 1b       	sub	r18, r24
    9be8:	39 0b       	sbc	r19, r25
    9bea:	24 30       	cpi	r18, 0x04	; 4
    9bec:	31 05       	cpc	r19, r1
    9bee:	80 f4       	brcc	.+32     	; 0x9c10 <malloc+0x9c>
    9bf0:	8a 81       	ldd	r24, Y+2	; 0x02
    9bf2:	9b 81       	ldd	r25, Y+3	; 0x03
    9bf4:	61 15       	cp	r22, r1
    9bf6:	71 05       	cpc	r23, r1
    9bf8:	21 f0       	breq	.+8      	; 0x9c02 <malloc+0x8e>
    9bfa:	fb 01       	movw	r30, r22
    9bfc:	93 83       	std	Z+3, r25	; 0x03
    9bfe:	82 83       	std	Z+2, r24	; 0x02
    9c00:	04 c0       	rjmp	.+8      	; 0x9c0a <malloc+0x96>
    9c02:	90 93 60 05 	sts	0x0560, r25	; 0x800560 <__flp+0x1>
    9c06:	80 93 5f 05 	sts	0x055F, r24	; 0x80055f <__flp>
    9c0a:	fe 01       	movw	r30, r28
    9c0c:	32 96       	adiw	r30, 0x02	; 2
    9c0e:	44 c0       	rjmp	.+136    	; 0x9c98 <malloc+0x124>
    9c10:	fe 01       	movw	r30, r28
    9c12:	e2 0f       	add	r30, r18
    9c14:	f3 1f       	adc	r31, r19
    9c16:	81 93       	st	Z+, r24
    9c18:	91 93       	st	Z+, r25
    9c1a:	22 50       	subi	r18, 0x02	; 2
    9c1c:	31 09       	sbc	r19, r1
    9c1e:	39 83       	std	Y+1, r19	; 0x01
    9c20:	28 83       	st	Y, r18
    9c22:	3a c0       	rjmp	.+116    	; 0x9c98 <malloc+0x124>
    9c24:	20 91 5d 05 	lds	r18, 0x055D	; 0x80055d <__brkval>
    9c28:	30 91 5e 05 	lds	r19, 0x055E	; 0x80055e <__brkval+0x1>
    9c2c:	23 2b       	or	r18, r19
    9c2e:	41 f4       	brne	.+16     	; 0x9c40 <malloc+0xcc>
    9c30:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    9c34:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    9c38:	30 93 5e 05 	sts	0x055E, r19	; 0x80055e <__brkval+0x1>
    9c3c:	20 93 5d 05 	sts	0x055D, r18	; 0x80055d <__brkval>
    9c40:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    9c44:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    9c48:	21 15       	cp	r18, r1
    9c4a:	31 05       	cpc	r19, r1
    9c4c:	41 f4       	brne	.+16     	; 0x9c5e <malloc+0xea>
    9c4e:	2d b7       	in	r18, 0x3d	; 61
    9c50:	3e b7       	in	r19, 0x3e	; 62
    9c52:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    9c56:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    9c5a:	24 1b       	sub	r18, r20
    9c5c:	35 0b       	sbc	r19, r21
    9c5e:	e0 91 5d 05 	lds	r30, 0x055D	; 0x80055d <__brkval>
    9c62:	f0 91 5e 05 	lds	r31, 0x055E	; 0x80055e <__brkval+0x1>
    9c66:	e2 17       	cp	r30, r18
    9c68:	f3 07       	cpc	r31, r19
    9c6a:	a0 f4       	brcc	.+40     	; 0x9c94 <malloc+0x120>
    9c6c:	2e 1b       	sub	r18, r30
    9c6e:	3f 0b       	sbc	r19, r31
    9c70:	28 17       	cp	r18, r24
    9c72:	39 07       	cpc	r19, r25
    9c74:	78 f0       	brcs	.+30     	; 0x9c94 <malloc+0x120>
    9c76:	ac 01       	movw	r20, r24
    9c78:	4e 5f       	subi	r20, 0xFE	; 254
    9c7a:	5f 4f       	sbci	r21, 0xFF	; 255
    9c7c:	24 17       	cp	r18, r20
    9c7e:	35 07       	cpc	r19, r21
    9c80:	48 f0       	brcs	.+18     	; 0x9c94 <malloc+0x120>
    9c82:	4e 0f       	add	r20, r30
    9c84:	5f 1f       	adc	r21, r31
    9c86:	50 93 5e 05 	sts	0x055E, r21	; 0x80055e <__brkval+0x1>
    9c8a:	40 93 5d 05 	sts	0x055D, r20	; 0x80055d <__brkval>
    9c8e:	81 93       	st	Z+, r24
    9c90:	91 93       	st	Z+, r25
    9c92:	02 c0       	rjmp	.+4      	; 0x9c98 <malloc+0x124>
    9c94:	e0 e0       	ldi	r30, 0x00	; 0
    9c96:	f0 e0       	ldi	r31, 0x00	; 0
    9c98:	cf 01       	movw	r24, r30
    9c9a:	df 91       	pop	r29
    9c9c:	cf 91       	pop	r28
    9c9e:	1f 91       	pop	r17
    9ca0:	0f 91       	pop	r16
    9ca2:	08 95       	ret

00009ca4 <free>:
    9ca4:	cf 93       	push	r28
    9ca6:	df 93       	push	r29
    9ca8:	00 97       	sbiw	r24, 0x00	; 0
    9caa:	09 f4       	brne	.+2      	; 0x9cae <free+0xa>
    9cac:	81 c0       	rjmp	.+258    	; 0x9db0 <free+0x10c>
    9cae:	fc 01       	movw	r30, r24
    9cb0:	32 97       	sbiw	r30, 0x02	; 2
    9cb2:	13 82       	std	Z+3, r1	; 0x03
    9cb4:	12 82       	std	Z+2, r1	; 0x02
    9cb6:	a0 91 5f 05 	lds	r26, 0x055F	; 0x80055f <__flp>
    9cba:	b0 91 60 05 	lds	r27, 0x0560	; 0x800560 <__flp+0x1>
    9cbe:	10 97       	sbiw	r26, 0x00	; 0
    9cc0:	81 f4       	brne	.+32     	; 0x9ce2 <free+0x3e>
    9cc2:	20 81       	ld	r18, Z
    9cc4:	31 81       	ldd	r19, Z+1	; 0x01
    9cc6:	82 0f       	add	r24, r18
    9cc8:	93 1f       	adc	r25, r19
    9cca:	20 91 5d 05 	lds	r18, 0x055D	; 0x80055d <__brkval>
    9cce:	30 91 5e 05 	lds	r19, 0x055E	; 0x80055e <__brkval+0x1>
    9cd2:	28 17       	cp	r18, r24
    9cd4:	39 07       	cpc	r19, r25
    9cd6:	51 f5       	brne	.+84     	; 0x9d2c <free+0x88>
    9cd8:	f0 93 5e 05 	sts	0x055E, r31	; 0x80055e <__brkval+0x1>
    9cdc:	e0 93 5d 05 	sts	0x055D, r30	; 0x80055d <__brkval>
    9ce0:	67 c0       	rjmp	.+206    	; 0x9db0 <free+0x10c>
    9ce2:	ed 01       	movw	r28, r26
    9ce4:	20 e0       	ldi	r18, 0x00	; 0
    9ce6:	30 e0       	ldi	r19, 0x00	; 0
    9ce8:	ce 17       	cp	r28, r30
    9cea:	df 07       	cpc	r29, r31
    9cec:	40 f4       	brcc	.+16     	; 0x9cfe <free+0x5a>
    9cee:	4a 81       	ldd	r20, Y+2	; 0x02
    9cf0:	5b 81       	ldd	r21, Y+3	; 0x03
    9cf2:	9e 01       	movw	r18, r28
    9cf4:	41 15       	cp	r20, r1
    9cf6:	51 05       	cpc	r21, r1
    9cf8:	f1 f0       	breq	.+60     	; 0x9d36 <free+0x92>
    9cfa:	ea 01       	movw	r28, r20
    9cfc:	f5 cf       	rjmp	.-22     	; 0x9ce8 <free+0x44>
    9cfe:	d3 83       	std	Z+3, r29	; 0x03
    9d00:	c2 83       	std	Z+2, r28	; 0x02
    9d02:	40 81       	ld	r20, Z
    9d04:	51 81       	ldd	r21, Z+1	; 0x01
    9d06:	84 0f       	add	r24, r20
    9d08:	95 1f       	adc	r25, r21
    9d0a:	c8 17       	cp	r28, r24
    9d0c:	d9 07       	cpc	r29, r25
    9d0e:	59 f4       	brne	.+22     	; 0x9d26 <free+0x82>
    9d10:	88 81       	ld	r24, Y
    9d12:	99 81       	ldd	r25, Y+1	; 0x01
    9d14:	84 0f       	add	r24, r20
    9d16:	95 1f       	adc	r25, r21
    9d18:	02 96       	adiw	r24, 0x02	; 2
    9d1a:	91 83       	std	Z+1, r25	; 0x01
    9d1c:	80 83       	st	Z, r24
    9d1e:	8a 81       	ldd	r24, Y+2	; 0x02
    9d20:	9b 81       	ldd	r25, Y+3	; 0x03
    9d22:	93 83       	std	Z+3, r25	; 0x03
    9d24:	82 83       	std	Z+2, r24	; 0x02
    9d26:	21 15       	cp	r18, r1
    9d28:	31 05       	cpc	r19, r1
    9d2a:	29 f4       	brne	.+10     	; 0x9d36 <free+0x92>
    9d2c:	f0 93 60 05 	sts	0x0560, r31	; 0x800560 <__flp+0x1>
    9d30:	e0 93 5f 05 	sts	0x055F, r30	; 0x80055f <__flp>
    9d34:	3d c0       	rjmp	.+122    	; 0x9db0 <free+0x10c>
    9d36:	e9 01       	movw	r28, r18
    9d38:	fb 83       	std	Y+3, r31	; 0x03
    9d3a:	ea 83       	std	Y+2, r30	; 0x02
    9d3c:	49 91       	ld	r20, Y+
    9d3e:	59 91       	ld	r21, Y+
    9d40:	c4 0f       	add	r28, r20
    9d42:	d5 1f       	adc	r29, r21
    9d44:	ec 17       	cp	r30, r28
    9d46:	fd 07       	cpc	r31, r29
    9d48:	61 f4       	brne	.+24     	; 0x9d62 <free+0xbe>
    9d4a:	80 81       	ld	r24, Z
    9d4c:	91 81       	ldd	r25, Z+1	; 0x01
    9d4e:	84 0f       	add	r24, r20
    9d50:	95 1f       	adc	r25, r21
    9d52:	02 96       	adiw	r24, 0x02	; 2
    9d54:	e9 01       	movw	r28, r18
    9d56:	99 83       	std	Y+1, r25	; 0x01
    9d58:	88 83       	st	Y, r24
    9d5a:	82 81       	ldd	r24, Z+2	; 0x02
    9d5c:	93 81       	ldd	r25, Z+3	; 0x03
    9d5e:	9b 83       	std	Y+3, r25	; 0x03
    9d60:	8a 83       	std	Y+2, r24	; 0x02
    9d62:	e0 e0       	ldi	r30, 0x00	; 0
    9d64:	f0 e0       	ldi	r31, 0x00	; 0
    9d66:	12 96       	adiw	r26, 0x02	; 2
    9d68:	8d 91       	ld	r24, X+
    9d6a:	9c 91       	ld	r25, X
    9d6c:	13 97       	sbiw	r26, 0x03	; 3
    9d6e:	00 97       	sbiw	r24, 0x00	; 0
    9d70:	19 f0       	breq	.+6      	; 0x9d78 <free+0xd4>
    9d72:	fd 01       	movw	r30, r26
    9d74:	dc 01       	movw	r26, r24
    9d76:	f7 cf       	rjmp	.-18     	; 0x9d66 <free+0xc2>
    9d78:	8d 91       	ld	r24, X+
    9d7a:	9c 91       	ld	r25, X
    9d7c:	11 97       	sbiw	r26, 0x01	; 1
    9d7e:	9d 01       	movw	r18, r26
    9d80:	2e 5f       	subi	r18, 0xFE	; 254
    9d82:	3f 4f       	sbci	r19, 0xFF	; 255
    9d84:	82 0f       	add	r24, r18
    9d86:	93 1f       	adc	r25, r19
    9d88:	20 91 5d 05 	lds	r18, 0x055D	; 0x80055d <__brkval>
    9d8c:	30 91 5e 05 	lds	r19, 0x055E	; 0x80055e <__brkval+0x1>
    9d90:	28 17       	cp	r18, r24
    9d92:	39 07       	cpc	r19, r25
    9d94:	69 f4       	brne	.+26     	; 0x9db0 <free+0x10c>
    9d96:	30 97       	sbiw	r30, 0x00	; 0
    9d98:	29 f4       	brne	.+10     	; 0x9da4 <free+0x100>
    9d9a:	10 92 60 05 	sts	0x0560, r1	; 0x800560 <__flp+0x1>
    9d9e:	10 92 5f 05 	sts	0x055F, r1	; 0x80055f <__flp>
    9da2:	02 c0       	rjmp	.+4      	; 0x9da8 <free+0x104>
    9da4:	13 82       	std	Z+3, r1	; 0x03
    9da6:	12 82       	std	Z+2, r1	; 0x02
    9da8:	b0 93 5e 05 	sts	0x055E, r27	; 0x80055e <__brkval+0x1>
    9dac:	a0 93 5d 05 	sts	0x055D, r26	; 0x80055d <__brkval>
    9db0:	df 91       	pop	r29
    9db2:	cf 91       	pop	r28
    9db4:	08 95       	ret

00009db6 <realloc>:
    9db6:	6f 92       	push	r6
    9db8:	7f 92       	push	r7
    9dba:	8f 92       	push	r8
    9dbc:	9f 92       	push	r9
    9dbe:	af 92       	push	r10
    9dc0:	bf 92       	push	r11
    9dc2:	cf 92       	push	r12
    9dc4:	df 92       	push	r13
    9dc6:	ef 92       	push	r14
    9dc8:	ff 92       	push	r15
    9dca:	0f 93       	push	r16
    9dcc:	1f 93       	push	r17
    9dce:	cf 93       	push	r28
    9dd0:	df 93       	push	r29
    9dd2:	00 97       	sbiw	r24, 0x00	; 0
    9dd4:	81 f4       	brne	.+32     	; 0x9df6 <realloc+0x40>
    9dd6:	cb 01       	movw	r24, r22
    9dd8:	df 91       	pop	r29
    9dda:	cf 91       	pop	r28
    9ddc:	1f 91       	pop	r17
    9dde:	0f 91       	pop	r16
    9de0:	ff 90       	pop	r15
    9de2:	ef 90       	pop	r14
    9de4:	df 90       	pop	r13
    9de6:	cf 90       	pop	r12
    9de8:	bf 90       	pop	r11
    9dea:	af 90       	pop	r10
    9dec:	9f 90       	pop	r9
    9dee:	8f 90       	pop	r8
    9df0:	7f 90       	pop	r7
    9df2:	6f 90       	pop	r6
    9df4:	bf ce       	rjmp	.-642    	; 0x9b74 <malloc>
    9df6:	fc 01       	movw	r30, r24
    9df8:	e6 0f       	add	r30, r22
    9dfa:	f7 1f       	adc	r31, r23
    9dfc:	9c 01       	movw	r18, r24
    9dfe:	22 50       	subi	r18, 0x02	; 2
    9e00:	31 09       	sbc	r19, r1
    9e02:	e2 17       	cp	r30, r18
    9e04:	f3 07       	cpc	r31, r19
    9e06:	08 f4       	brcc	.+2      	; 0x9e0a <realloc+0x54>
    9e08:	a5 c0       	rjmp	.+330    	; 0x9f54 <realloc+0x19e>
    9e0a:	ec 01       	movw	r28, r24
    9e0c:	d9 01       	movw	r26, r18
    9e0e:	0d 91       	ld	r16, X+
    9e10:	1c 91       	ld	r17, X
    9e12:	11 97       	sbiw	r26, 0x01	; 1
    9e14:	06 17       	cp	r16, r22
    9e16:	17 07       	cpc	r17, r23
    9e18:	a8 f0       	brcs	.+42     	; 0x9e44 <realloc+0x8e>
    9e1a:	05 30       	cpi	r16, 0x05	; 5
    9e1c:	11 05       	cpc	r17, r1
    9e1e:	08 f4       	brcc	.+2      	; 0x9e22 <realloc+0x6c>
    9e20:	97 c0       	rjmp	.+302    	; 0x9f50 <realloc+0x19a>
    9e22:	c8 01       	movw	r24, r16
    9e24:	04 97       	sbiw	r24, 0x04	; 4
    9e26:	86 17       	cp	r24, r22
    9e28:	97 07       	cpc	r25, r23
    9e2a:	08 f4       	brcc	.+2      	; 0x9e2e <realloc+0x78>
    9e2c:	91 c0       	rjmp	.+290    	; 0x9f50 <realloc+0x19a>
    9e2e:	02 50       	subi	r16, 0x02	; 2
    9e30:	11 09       	sbc	r17, r1
    9e32:	06 1b       	sub	r16, r22
    9e34:	17 0b       	sbc	r17, r23
    9e36:	01 93       	st	Z+, r16
    9e38:	11 93       	st	Z+, r17
    9e3a:	6d 93       	st	X+, r22
    9e3c:	7c 93       	st	X, r23
    9e3e:	cf 01       	movw	r24, r30
    9e40:	31 df       	rcall	.-414    	; 0x9ca4 <free>
    9e42:	86 c0       	rjmp	.+268    	; 0x9f50 <realloc+0x19a>
    9e44:	5b 01       	movw	r10, r22
    9e46:	a0 1a       	sub	r10, r16
    9e48:	b1 0a       	sbc	r11, r17
    9e4a:	4c 01       	movw	r8, r24
    9e4c:	80 0e       	add	r8, r16
    9e4e:	91 1e       	adc	r9, r17
    9e50:	a0 91 5f 05 	lds	r26, 0x055F	; 0x80055f <__flp>
    9e54:	b0 91 60 05 	lds	r27, 0x0560	; 0x800560 <__flp+0x1>
    9e58:	61 2c       	mov	r6, r1
    9e5a:	71 2c       	mov	r7, r1
    9e5c:	e1 2c       	mov	r14, r1
    9e5e:	f1 2c       	mov	r15, r1
    9e60:	10 97       	sbiw	r26, 0x00	; 0
    9e62:	09 f4       	brne	.+2      	; 0x9e66 <realloc+0xb0>
    9e64:	46 c0       	rjmp	.+140    	; 0x9ef2 <realloc+0x13c>
    9e66:	8d 91       	ld	r24, X+
    9e68:	9c 91       	ld	r25, X
    9e6a:	11 97       	sbiw	r26, 0x01	; 1
    9e6c:	a8 15       	cp	r26, r8
    9e6e:	b9 05       	cpc	r27, r9
    9e70:	b1 f5       	brne	.+108    	; 0x9ede <realloc+0x128>
    9e72:	6c 01       	movw	r12, r24
    9e74:	42 e0       	ldi	r20, 0x02	; 2
    9e76:	c4 0e       	add	r12, r20
    9e78:	d1 1c       	adc	r13, r1
    9e7a:	ca 14       	cp	r12, r10
    9e7c:	db 04       	cpc	r13, r11
    9e7e:	78 f1       	brcs	.+94     	; 0x9ede <realloc+0x128>
    9e80:	4c 01       	movw	r8, r24
    9e82:	8a 18       	sub	r8, r10
    9e84:	9b 08       	sbc	r9, r11
    9e86:	64 01       	movw	r12, r8
    9e88:	42 e0       	ldi	r20, 0x02	; 2
    9e8a:	c4 0e       	add	r12, r20
    9e8c:	d1 1c       	adc	r13, r1
    9e8e:	12 96       	adiw	r26, 0x02	; 2
    9e90:	bc 90       	ld	r11, X
    9e92:	12 97       	sbiw	r26, 0x02	; 2
    9e94:	13 96       	adiw	r26, 0x03	; 3
    9e96:	ac 91       	ld	r26, X
    9e98:	b5 e0       	ldi	r27, 0x05	; 5
    9e9a:	cb 16       	cp	r12, r27
    9e9c:	d1 04       	cpc	r13, r1
    9e9e:	40 f0       	brcs	.+16     	; 0x9eb0 <realloc+0xfa>
    9ea0:	b2 82       	std	Z+2, r11	; 0x02
    9ea2:	a3 83       	std	Z+3, r26	; 0x03
    9ea4:	91 82       	std	Z+1, r9	; 0x01
    9ea6:	80 82       	st	Z, r8
    9ea8:	d9 01       	movw	r26, r18
    9eaa:	6d 93       	st	X+, r22
    9eac:	7c 93       	st	X, r23
    9eae:	09 c0       	rjmp	.+18     	; 0x9ec2 <realloc+0x10c>
    9eb0:	0e 5f       	subi	r16, 0xFE	; 254
    9eb2:	1f 4f       	sbci	r17, 0xFF	; 255
    9eb4:	80 0f       	add	r24, r16
    9eb6:	91 1f       	adc	r25, r17
    9eb8:	f9 01       	movw	r30, r18
    9eba:	91 83       	std	Z+1, r25	; 0x01
    9ebc:	80 83       	st	Z, r24
    9ebe:	eb 2d       	mov	r30, r11
    9ec0:	fa 2f       	mov	r31, r26
    9ec2:	e1 14       	cp	r14, r1
    9ec4:	f1 04       	cpc	r15, r1
    9ec6:	31 f0       	breq	.+12     	; 0x9ed4 <realloc+0x11e>
    9ec8:	d7 01       	movw	r26, r14
    9eca:	13 96       	adiw	r26, 0x03	; 3
    9ecc:	fc 93       	st	X, r31
    9ece:	ee 93       	st	-X, r30
    9ed0:	12 97       	sbiw	r26, 0x02	; 2
    9ed2:	3e c0       	rjmp	.+124    	; 0x9f50 <realloc+0x19a>
    9ed4:	f0 93 60 05 	sts	0x0560, r31	; 0x800560 <__flp+0x1>
    9ed8:	e0 93 5f 05 	sts	0x055F, r30	; 0x80055f <__flp>
    9edc:	39 c0       	rjmp	.+114    	; 0x9f50 <realloc+0x19a>
    9ede:	68 16       	cp	r6, r24
    9ee0:	79 06       	cpc	r7, r25
    9ee2:	08 f4       	brcc	.+2      	; 0x9ee6 <realloc+0x130>
    9ee4:	3c 01       	movw	r6, r24
    9ee6:	7d 01       	movw	r14, r26
    9ee8:	12 96       	adiw	r26, 0x02	; 2
    9eea:	0d 90       	ld	r0, X+
    9eec:	bc 91       	ld	r27, X
    9eee:	a0 2d       	mov	r26, r0
    9ef0:	b7 cf       	rjmp	.-146    	; 0x9e60 <realloc+0xaa>
    9ef2:	80 91 5d 05 	lds	r24, 0x055D	; 0x80055d <__brkval>
    9ef6:	90 91 5e 05 	lds	r25, 0x055E	; 0x80055e <__brkval+0x1>
    9efa:	88 16       	cp	r8, r24
    9efc:	99 06       	cpc	r9, r25
    9efe:	e1 f4       	brne	.+56     	; 0x9f38 <realloc+0x182>
    9f00:	66 16       	cp	r6, r22
    9f02:	77 06       	cpc	r7, r23
    9f04:	c8 f4       	brcc	.+50     	; 0x9f38 <realloc+0x182>
    9f06:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    9f0a:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    9f0e:	00 97       	sbiw	r24, 0x00	; 0
    9f10:	41 f4       	brne	.+16     	; 0x9f22 <realloc+0x16c>
    9f12:	8d b7       	in	r24, 0x3d	; 61
    9f14:	9e b7       	in	r25, 0x3e	; 62
    9f16:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    9f1a:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    9f1e:	84 1b       	sub	r24, r20
    9f20:	95 0b       	sbc	r25, r21
    9f22:	e8 17       	cp	r30, r24
    9f24:	f9 07       	cpc	r31, r25
    9f26:	b0 f4       	brcc	.+44     	; 0x9f54 <realloc+0x19e>
    9f28:	f0 93 5e 05 	sts	0x055E, r31	; 0x80055e <__brkval+0x1>
    9f2c:	e0 93 5d 05 	sts	0x055D, r30	; 0x80055d <__brkval>
    9f30:	f9 01       	movw	r30, r18
    9f32:	71 83       	std	Z+1, r23	; 0x01
    9f34:	60 83       	st	Z, r22
    9f36:	0c c0       	rjmp	.+24     	; 0x9f50 <realloc+0x19a>
    9f38:	cb 01       	movw	r24, r22
    9f3a:	1c de       	rcall	.-968    	; 0x9b74 <malloc>
    9f3c:	7c 01       	movw	r14, r24
    9f3e:	00 97       	sbiw	r24, 0x00	; 0
    9f40:	49 f0       	breq	.+18     	; 0x9f54 <realloc+0x19e>
    9f42:	a8 01       	movw	r20, r16
    9f44:	be 01       	movw	r22, r28
    9f46:	1b d0       	rcall	.+54     	; 0x9f7e <memcpy>
    9f48:	ce 01       	movw	r24, r28
    9f4a:	ac de       	rcall	.-680    	; 0x9ca4 <free>
    9f4c:	c7 01       	movw	r24, r14
    9f4e:	04 c0       	rjmp	.+8      	; 0x9f58 <realloc+0x1a2>
    9f50:	ce 01       	movw	r24, r28
    9f52:	02 c0       	rjmp	.+4      	; 0x9f58 <realloc+0x1a2>
    9f54:	80 e0       	ldi	r24, 0x00	; 0
    9f56:	90 e0       	ldi	r25, 0x00	; 0
    9f58:	df 91       	pop	r29
    9f5a:	cf 91       	pop	r28
    9f5c:	1f 91       	pop	r17
    9f5e:	0f 91       	pop	r16
    9f60:	ff 90       	pop	r15
    9f62:	ef 90       	pop	r14
    9f64:	df 90       	pop	r13
    9f66:	cf 90       	pop	r12
    9f68:	bf 90       	pop	r11
    9f6a:	af 90       	pop	r10
    9f6c:	9f 90       	pop	r9
    9f6e:	8f 90       	pop	r8
    9f70:	7f 90       	pop	r7
    9f72:	6f 90       	pop	r6
    9f74:	08 95       	ret

00009f76 <abort>:
    9f76:	81 e0       	ldi	r24, 0x01	; 1
    9f78:	90 e0       	ldi	r25, 0x00	; 0
    9f7a:	f8 94       	cli
    9f7c:	54 c0       	rjmp	.+168    	; 0xa026 <__do_global_dtors>

00009f7e <memcpy>:
    9f7e:	fb 01       	movw	r30, r22
    9f80:	dc 01       	movw	r26, r24
    9f82:	02 c0       	rjmp	.+4      	; 0x9f88 <memcpy+0xa>
    9f84:	01 90       	ld	r0, Z+
    9f86:	0d 92       	st	X+, r0
    9f88:	41 50       	subi	r20, 0x01	; 1
    9f8a:	50 40       	sbci	r21, 0x00	; 0
    9f8c:	d8 f7       	brcc	.-10     	; 0x9f84 <memcpy+0x6>
    9f8e:	08 95       	ret

00009f90 <memset>:
    9f90:	dc 01       	movw	r26, r24
    9f92:	01 c0       	rjmp	.+2      	; 0x9f96 <memset+0x6>
    9f94:	6d 93       	st	X+, r22
    9f96:	41 50       	subi	r20, 0x01	; 1
    9f98:	50 40       	sbci	r21, 0x00	; 0
    9f9a:	e0 f7       	brcc	.-8      	; 0x9f94 <memset+0x4>
    9f9c:	08 95       	ret

00009f9e <strcpy>:
    9f9e:	fb 01       	movw	r30, r22
    9fa0:	dc 01       	movw	r26, r24
    9fa2:	01 90       	ld	r0, Z+
    9fa4:	0d 92       	st	X+, r0
    9fa6:	00 20       	and	r0, r0
    9fa8:	e1 f7       	brne	.-8      	; 0x9fa2 <strcpy+0x4>
    9faa:	08 95       	ret

00009fac <itoa>:
    9fac:	45 32       	cpi	r20, 0x25	; 37
    9fae:	51 05       	cpc	r21, r1
    9fb0:	18 f4       	brcc	.+6      	; 0x9fb8 <itoa+0xc>
    9fb2:	42 30       	cpi	r20, 0x02	; 2
    9fb4:	08 f0       	brcs	.+2      	; 0x9fb8 <itoa+0xc>
    9fb6:	04 c0       	rjmp	.+8      	; 0x9fc0 <__itoa_ncheck>
    9fb8:	fb 01       	movw	r30, r22
    9fba:	10 82       	st	Z, r1
    9fbc:	cb 01       	movw	r24, r22
    9fbe:	08 95       	ret

00009fc0 <__itoa_ncheck>:
    9fc0:	bb 27       	eor	r27, r27
    9fc2:	4a 30       	cpi	r20, 0x0A	; 10
    9fc4:	31 f4       	brne	.+12     	; 0x9fd2 <__itoa_ncheck+0x12>
    9fc6:	99 23       	and	r25, r25
    9fc8:	22 f4       	brpl	.+8      	; 0x9fd2 <__itoa_ncheck+0x12>
    9fca:	bd e2       	ldi	r27, 0x2D	; 45
    9fcc:	90 95       	com	r25
    9fce:	81 95       	neg	r24
    9fd0:	9f 4f       	sbci	r25, 0xFF	; 255
    9fd2:	01 c0       	rjmp	.+2      	; 0x9fd6 <__utoa_common>

00009fd4 <__utoa_ncheck>:
    9fd4:	bb 27       	eor	r27, r27

00009fd6 <__utoa_common>:
    9fd6:	fb 01       	movw	r30, r22
    9fd8:	55 27       	eor	r21, r21
    9fda:	aa 27       	eor	r26, r26
    9fdc:	88 0f       	add	r24, r24
    9fde:	99 1f       	adc	r25, r25
    9fe0:	aa 1f       	adc	r26, r26
    9fe2:	a4 17       	cp	r26, r20
    9fe4:	10 f0       	brcs	.+4      	; 0x9fea <__utoa_common+0x14>
    9fe6:	a4 1b       	sub	r26, r20
    9fe8:	83 95       	inc	r24
    9fea:	50 51       	subi	r21, 0x10	; 16
    9fec:	b9 f7       	brne	.-18     	; 0x9fdc <__utoa_common+0x6>
    9fee:	a0 5d       	subi	r26, 0xD0	; 208
    9ff0:	aa 33       	cpi	r26, 0x3A	; 58
    9ff2:	08 f0       	brcs	.+2      	; 0x9ff6 <__utoa_common+0x20>
    9ff4:	a9 5d       	subi	r26, 0xD9	; 217
    9ff6:	a1 93       	st	Z+, r26
    9ff8:	00 97       	sbiw	r24, 0x00	; 0
    9ffa:	79 f7       	brne	.-34     	; 0x9fda <__utoa_common+0x4>
    9ffc:	b1 11       	cpse	r27, r1
    9ffe:	b1 93       	st	Z+, r27
    a000:	11 92       	st	Z+, r1
    a002:	cb 01       	movw	r24, r22
    a004:	00 c0       	rjmp	.+0      	; 0xa006 <strrev>

0000a006 <strrev>:
    a006:	dc 01       	movw	r26, r24
    a008:	fc 01       	movw	r30, r24
    a00a:	67 2f       	mov	r22, r23
    a00c:	71 91       	ld	r23, Z+
    a00e:	77 23       	and	r23, r23
    a010:	e1 f7       	brne	.-8      	; 0xa00a <strrev+0x4>
    a012:	32 97       	sbiw	r30, 0x02	; 2
    a014:	04 c0       	rjmp	.+8      	; 0xa01e <strrev+0x18>
    a016:	7c 91       	ld	r23, X
    a018:	6d 93       	st	X+, r22
    a01a:	70 83       	st	Z, r23
    a01c:	62 91       	ld	r22, -Z
    a01e:	ae 17       	cp	r26, r30
    a020:	bf 07       	cpc	r27, r31
    a022:	c8 f3       	brcs	.-14     	; 0xa016 <strrev+0x10>
    a024:	08 95       	ret

0000a026 <__do_global_dtors>:
    a026:	17 e0       	ldi	r17, 0x07	; 7
    a028:	ca e8       	ldi	r28, 0x8A	; 138
    a02a:	d7 e0       	ldi	r29, 0x07	; 7
    a02c:	00 e0       	ldi	r16, 0x00	; 0
    a02e:	05 c0       	rjmp	.+10     	; 0xa03a <__do_global_dtors+0x14>
    a030:	80 2f       	mov	r24, r16
    a032:	fe 01       	movw	r30, r28
    a034:	7e dd       	rcall	.-1284   	; 0x9b32 <__tablejump2__>
    a036:	21 96       	adiw	r28, 0x01	; 1
    a038:	01 1d       	adc	r16, r1
    a03a:	cb 38       	cpi	r28, 0x8B	; 139
    a03c:	d1 07       	cpc	r29, r17
    a03e:	80 e0       	ldi	r24, 0x00	; 0
    a040:	08 07       	cpc	r16, r24
    a042:	b1 f7       	brne	.-20     	; 0xa030 <__do_global_dtors+0xa>
    a044:	f8 94       	cli

0000a046 <__stop_program>:
    a046:	ff cf       	rjmp	.-2      	; 0xa046 <__stop_program>
